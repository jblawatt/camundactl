{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"this is a community project and not owned by camunda!! Camunda Control (cctl) \u00b6 Camunda Control ( cctl ) is a command line interface to the camunda REST API. The majority of the direct camunda commands are generated from the openapi.json file provided by the camunda project. For more details have a look a their documentation . The aim of this tool is to create a quick way to interact with the API while using the speed and flexibility of command line tools over guis for experienced users. What it does \u00b6 $ cctl [ command ] [ resource ] [ args ] [ flags ] where command , operation/resource , args and flags are: command : Specifies the operation you want to perform on a resource. For example: get , delete , apply or describe . resource : Desribes the resource you want to apply the operation on. For example: processInstance , variableInstance , deployment , ... args : Arguments to specify the exact resource. For example: processInstanceId , variableInstanceId , ... flags : Extra arguments to be send to the REST API or specifing the output. Install \u00b6 Camunda Control can be installed via pip: $ pip install camundactl [ --user ] Examples \u00b6 List all process instances: $ cctl get processInstances id suspended ------------------------------------ ----------- 0027da48-0a61-11ec-bd5f-0242ac120014 False 003248e7-0b05-11ec-990f-0242ac12000d False ... Load all active process isntances and use the result in a jinja2 template $ cctl get processInstances -o template -oT '{{result|length}}' 1337 More Examples","title":"Overview"},{"location":"#camunda-control-cctl","text":"Camunda Control ( cctl ) is a command line interface to the camunda REST API. The majority of the direct camunda commands are generated from the openapi.json file provided by the camunda project. For more details have a look a their documentation . The aim of this tool is to create a quick way to interact with the API while using the speed and flexibility of command line tools over guis for experienced users.","title":"Camunda Control (cctl)"},{"location":"#what-it-does","text":"$ cctl [ command ] [ resource ] [ args ] [ flags ] where command , operation/resource , args and flags are: command : Specifies the operation you want to perform on a resource. For example: get , delete , apply or describe . resource : Desribes the resource you want to apply the operation on. For example: processInstance , variableInstance , deployment , ... args : Arguments to specify the exact resource. For example: processInstanceId , variableInstanceId , ... flags : Extra arguments to be send to the REST API or specifing the output.","title":"What it does"},{"location":"#install","text":"Camunda Control can be installed via pip: $ pip install camundactl [ --user ]","title":"Install"},{"location":"#examples","text":"List all process instances: $ cctl get processInstances id suspended ------------------------------------ ----------- 0027da48-0a61-11ec-bd5f-0242ac120014 False 003248e7-0b05-11ec-990f-0242ac12000d False ... Load all active process isntances and use the result in a jinja2 template $ cctl get processInstances -o template -oT '{{result|length}}' 1337 More Examples","title":"Examples"},{"location":"api_doc/","text":"camundactl config.py init .py utils.py main .py openapi init .py loader.py cache.py specs init .py client client.py test_client.py init .py base_client.py cmd context.py get.py config.py init .py info.py apply.py base.py helpers.py process_instance.py delete.py openapi schema.py init .py factory.py output table.py decorator.py template.py raw.py init .py jsonpath.py json.py base.py templates init .py","title":"API Doc"},{"location":"configuration/","text":"Configuration \u00b6 cctl uses a config file. The locations differ from os. If the configuration file does not it exists, it becomes created. MacOS: $HOME/Libarary/Application Support/camundactl/config.yml Linux: $HOME/.config/camundactl/config.yml Windows: $HOME/Appdata/Local/camundactl/config.yml Fileformat \u00b6 The configuration is stored in a yaml file. version : beta1 extra_paths : - module.to.my.plugin extra_template_paths : - /path/to/custom/templates current_engine : localhost log_level : DEBUG engines : - name : localhost url : http://localhost:8080/engine-rest auth : user : camunda password : camunda - name : client-a url : http://localhost:8080/engine-rest auth : user : camunda password : camunda - name : client-c url : https://localhost:8080/engine-rest verify : false auth : user : camunda password : camunda version defines the current config file version for later update purpose extra_paths is a list of python modules that can be autodiscovered in command discovering to add user defined commands or plugins extra_template_paths is a list of paths to secifiy additionals template locations for the template output current_engine is the currently selected engine to be used log_level defines the level for application logging. engine contains a list of engines within you can switch witch cctl config engines activate ANOTHER . name the engines display name url the urls of the camunda engine rest api auth is an object of user and password for basic authentication verify is a boolen that ignores ssl verification (default true ) Engines \u00b6 Add engine \u00b6 Add a camunda engine to the list of engines and directly select it. $ cctl config add-engine local http://localhost:8080/engine-rest --select List all engines \u00b6 List all engines that are configured. The * indicates the currently selected engine. $ cctl config get-engines local * client-a Activate engine \u00b6 Activates the client-a engine. $ cctl config activate-engine client-a Remove engine \u00b6 Removes the client-a engine. $ cctl config remove-engine client-a Logging \u00b6 There are two options to configure logging for Camunda Ctrl: Log Level via CLI/Config Configuring a global log_level in the configuration file. This also can be provided via -l/--log-level . The following values are possible: - DEBUG - INFO - WARNING - ERROR Complex configuration in config files The other option for logging configuration is to provide a key logging . The format has to follow the python configration for dictConfig logging: https://docs.python.org/3/library/logging.config.html#logging.config.dictConfig Extra Paths \u00b6 TODO Alias \u00b6 You can modify config file and add alias names for subcommand. alias : pi : processInstance pis : processInstances hpi : historicProcessInstance hpis : historicProcessInstances i : incident is : incidents deploy : deployment desc : describe g : get Alias are configured for your installation and become applied for all engines. Add alias \u00b6 You can add extra alias for long commands as follows: $ cctl config add-alias COMMAND ALIAS Remove alias \u00b6 To remove a alias you can use the following command: $ cctl config remove-alias ALIAS Remove alias \u00b6 To see which alias are configured $ cctl config get-alias Alias Command ------- ---------------- pi processInstance pis processInstances Templates \u00b6 The output handler template provides the functionality to render the returned output to a given template. The result and some other variables are provided in the template context. Details about the template output handler can be found in the separate documentation . The option extra_template_paths gives you the option to extend the loader context and provide custom templates. Templates are searched in the following order: Defaults provided by dictionary ( default , result-length ) confg.extra_template_paths $CONFIG_DIR/templates","title":"Configuration"},{"location":"configuration/#configuration","text":"cctl uses a config file. The locations differ from os. If the configuration file does not it exists, it becomes created. MacOS: $HOME/Libarary/Application Support/camundactl/config.yml Linux: $HOME/.config/camundactl/config.yml Windows: $HOME/Appdata/Local/camundactl/config.yml","title":"Configuration"},{"location":"configuration/#fileformat","text":"The configuration is stored in a yaml file. version : beta1 extra_paths : - module.to.my.plugin extra_template_paths : - /path/to/custom/templates current_engine : localhost log_level : DEBUG engines : - name : localhost url : http://localhost:8080/engine-rest auth : user : camunda password : camunda - name : client-a url : http://localhost:8080/engine-rest auth : user : camunda password : camunda - name : client-c url : https://localhost:8080/engine-rest verify : false auth : user : camunda password : camunda version defines the current config file version for later update purpose extra_paths is a list of python modules that can be autodiscovered in command discovering to add user defined commands or plugins extra_template_paths is a list of paths to secifiy additionals template locations for the template output current_engine is the currently selected engine to be used log_level defines the level for application logging. engine contains a list of engines within you can switch witch cctl config engines activate ANOTHER . name the engines display name url the urls of the camunda engine rest api auth is an object of user and password for basic authentication verify is a boolen that ignores ssl verification (default true )","title":"Fileformat"},{"location":"configuration/#engines","text":"","title":"Engines"},{"location":"configuration/#add-engine","text":"Add a camunda engine to the list of engines and directly select it. $ cctl config add-engine local http://localhost:8080/engine-rest --select","title":"Add engine"},{"location":"configuration/#list-all-engines","text":"List all engines that are configured. The * indicates the currently selected engine. $ cctl config get-engines local * client-a","title":"List all engines"},{"location":"configuration/#activate-engine","text":"Activates the client-a engine. $ cctl config activate-engine client-a","title":"Activate engine"},{"location":"configuration/#remove-engine","text":"Removes the client-a engine. $ cctl config remove-engine client-a","title":"Remove engine"},{"location":"configuration/#logging","text":"There are two options to configure logging for Camunda Ctrl: Log Level via CLI/Config Configuring a global log_level in the configuration file. This also can be provided via -l/--log-level . The following values are possible: - DEBUG - INFO - WARNING - ERROR Complex configuration in config files The other option for logging configuration is to provide a key logging . The format has to follow the python configration for dictConfig logging: https://docs.python.org/3/library/logging.config.html#logging.config.dictConfig","title":"Logging"},{"location":"configuration/#extra-paths","text":"TODO","title":"Extra Paths"},{"location":"configuration/#alias","text":"You can modify config file and add alias names for subcommand. alias : pi : processInstance pis : processInstances hpi : historicProcessInstance hpis : historicProcessInstances i : incident is : incidents deploy : deployment desc : describe g : get Alias are configured for your installation and become applied for all engines.","title":"Alias"},{"location":"configuration/#add-alias","text":"You can add extra alias for long commands as follows: $ cctl config add-alias COMMAND ALIAS","title":"Add alias"},{"location":"configuration/#remove-alias","text":"To remove a alias you can use the following command: $ cctl config remove-alias ALIAS","title":"Remove alias"},{"location":"configuration/#remove-alias_1","text":"To see which alias are configured $ cctl config get-alias Alias Command ------- ---------------- pi processInstance pis processInstances","title":"Remove alias"},{"location":"configuration/#templates","text":"The output handler template provides the functionality to render the returned output to a given template. The result and some other variables are provided in the template context. Details about the template output handler can be found in the separate documentation . The option extra_template_paths gives you the option to extend the loader context and provide custom templates. Templates are searched in the following order: Defaults provided by dictionary ( default , result-length ) confg.extra_template_paths $CONFIG_DIR/templates","title":"Templates"},{"location":"examples/","text":"Examples \u00b6 Get all active process instances \u00b6 The easiest way to get all active process instances is to use the following command: $ cctl get processInstances Get all active process instances of a specific process definition \u00b6 To filter the result, each command provides all REST API filter options for the command line. So you can specify the processDefintionId to search for. $ cctl get processInstances --process-definition-id f87b25ce-0577-11ec-8801-0242ac12000a Limit resultset \u00b6 Sometimes get prints to much information for a single result. Per default all keys of the server json become printed. If you would like limt the output you can use -o table ensuring table output, combinted with the -oT/--output-headers option and provide the columns. Beside that, most endpoints provide a --max-limit and --first-result option to paginate or limit the result set. $ cctl get processInstances --max-results 2 -o table -oH id,suspended id suspended ------------------------------------ ----------- 0027da48-0a61-11ec-bd5f-0242ac120014 False 003248e7-0b05-11ec-990f-0242ac12000d False Use template output to print result count \u00b6 The --ouput/-o template option gives you the option to provide a output Template (jinja2) which gets the resultset as context variable. All jinja2 builtins can be used. Here we just output the result length. $ cctl get processInstances -o template -oT '{{result|length}}' 1337 Get processInstanceIds only with jsonpath \u00b6 Sometime you just need the processInstanceId i.e. to pipe it into another command. The can be reached with a -o/--ouput jsonpath option and providing a jsonpath query which will be applied on the resultset. (For jsonpath whe utilize jsonpath-ng under the hood.) $ cctl get processInstances -o jsonpath -oJ '$.[*].id' --max-results 5 0027da48-0a61-11ec-bd5f-0242ac120014 003248e7-0b05-11ec-990f-0242ac12000d 005ec7db-0a6c-11ec-bd5f-0242ac120014 00957ceb-0b18-11ec-990f-0242ac12000d 00f522c0-0b10-11ec-990f-0242ac12000d Limited JSON output \u00b6 Load only one active process instance and ouput as json. $ cctl get processInstances -o json --max-results 1 [ { \"links\" : [], \"id\" : \"0027da48-0a61-11ec-bd5f-0242ac120014\" , \"definitionId\" : \"f87b25ce-0577-11ec-8801-0242ac12000a\" , \"businessKey\" : null , \"caseInstanceId\" : null , \"ended\" : false , \"suspended\" : false , \"tenantId\" : null } ] Piping commands \u00b6 Pipe commands together. Get all active process instances by process defintion and delete them: $ cctl get processInstances --process-definition-id f87b25ce-0577-11ec-8801-0242ac12000a -o jsonpath -oJ \" $ .[*].id\" | xargs -n 1 cctl delete processInstance -o template -oT \"Ok\" Ok Ok Ok ...","title":"Examples"},{"location":"examples/#examples","text":"","title":"Examples"},{"location":"examples/#get-all-active-process-instances","text":"The easiest way to get all active process instances is to use the following command: $ cctl get processInstances","title":"Get all active process instances"},{"location":"examples/#get-all-active-process-instances-of-a-specific-process-definition","text":"To filter the result, each command provides all REST API filter options for the command line. So you can specify the processDefintionId to search for. $ cctl get processInstances --process-definition-id f87b25ce-0577-11ec-8801-0242ac12000a","title":"Get all active process instances of a specific process definition"},{"location":"examples/#limit-resultset","text":"Sometimes get prints to much information for a single result. Per default all keys of the server json become printed. If you would like limt the output you can use -o table ensuring table output, combinted with the -oT/--output-headers option and provide the columns. Beside that, most endpoints provide a --max-limit and --first-result option to paginate or limit the result set. $ cctl get processInstances --max-results 2 -o table -oH id,suspended id suspended ------------------------------------ ----------- 0027da48-0a61-11ec-bd5f-0242ac120014 False 003248e7-0b05-11ec-990f-0242ac12000d False","title":"Limit resultset"},{"location":"examples/#use-template-output-to-print-result-count","text":"The --ouput/-o template option gives you the option to provide a output Template (jinja2) which gets the resultset as context variable. All jinja2 builtins can be used. Here we just output the result length. $ cctl get processInstances -o template -oT '{{result|length}}' 1337","title":"Use template output to print result count"},{"location":"examples/#get-processinstanceids-only-with-jsonpath","text":"Sometime you just need the processInstanceId i.e. to pipe it into another command. The can be reached with a -o/--ouput jsonpath option and providing a jsonpath query which will be applied on the resultset. (For jsonpath whe utilize jsonpath-ng under the hood.) $ cctl get processInstances -o jsonpath -oJ '$.[*].id' --max-results 5 0027da48-0a61-11ec-bd5f-0242ac120014 003248e7-0b05-11ec-990f-0242ac12000d 005ec7db-0a6c-11ec-bd5f-0242ac120014 00957ceb-0b18-11ec-990f-0242ac12000d 00f522c0-0b10-11ec-990f-0242ac12000d","title":"Get processInstanceIds only with jsonpath"},{"location":"examples/#limited-json-output","text":"Load only one active process instance and ouput as json. $ cctl get processInstances -o json --max-results 1 [ { \"links\" : [], \"id\" : \"0027da48-0a61-11ec-bd5f-0242ac120014\" , \"definitionId\" : \"f87b25ce-0577-11ec-8801-0242ac12000a\" , \"businessKey\" : null , \"caseInstanceId\" : null , \"ended\" : false , \"suspended\" : false , \"tenantId\" : null } ]","title":"Limited JSON output"},{"location":"examples/#piping-commands","text":"Pipe commands together. Get all active process instances by process defintion and delete them: $ cctl get processInstances --process-definition-id f87b25ce-0577-11ec-8801-0242ac12000a -o jsonpath -oJ \" $ .[*].id\" | xargs -n 1 cctl delete processInstance -o template -oT \"Ok\" Ok Ok Ok ...","title":"Piping commands"},{"location":"output/","text":"Output \u00b6 output Option \u00b6 The -o/--output option defines the output format. The default ist table . All other options are described in the following. Table Output \u00b6 The camunda responses are nearly all of type application/json . If the response is of type array a table will be printed. If it's an object a table with key and value headers are used. Options -o table -oH , --output-headers gives the possibility to select the columns to show -oCL , --output-cell-length cell values of type string are limited to 40 characters. Example $ cctl get processInstances -o table -oH id,suspended JSON Output \u00b6 Prints the json API response with end indent of 2. Options -o json JSON-Path Output \u00b6 -o jsonpath activates a jsonpath output. With -oJ you can apply the jsonpath filter which will be applied. For this jsonpath-ng is used. There you can find further information about the filter format. Template Output \u00b6 TODO Raw Output \u00b6 TODO","title":"Output"},{"location":"output/#output","text":"","title":"Output"},{"location":"output/#output-option","text":"The -o/--output option defines the output format. The default ist table . All other options are described in the following.","title":"output Option"},{"location":"output/#table-output","text":"The camunda responses are nearly all of type application/json . If the response is of type array a table will be printed. If it's an object a table with key and value headers are used. Options -o table -oH , --output-headers gives the possibility to select the columns to show -oCL , --output-cell-length cell values of type string are limited to 40 characters. Example $ cctl get processInstances -o table -oH id,suspended","title":"Table Output"},{"location":"output/#json-output","text":"Prints the json API response with end indent of 2. Options -o json","title":"JSON Output"},{"location":"output/#json-path-output","text":"-o jsonpath activates a jsonpath output. With -oJ you can apply the jsonpath filter which will be applied. For this jsonpath-ng is used. There you can find further information about the filter format.","title":"JSON-Path Output"},{"location":"output/#template-output","text":"TODO","title":"Template Output"},{"location":"output/#raw-output","text":"TODO","title":"Raw Output"},{"location":"usage/","text":"Usage \u00b6 get Resource Information \u00b6 Get commands provides the ability to request ressource information from a given engine. It contains all OpenAPI Operations of the Verb get . delete Resource Information \u00b6 Delete commands provide the ability to delete specific ressources in the camunda engine. apply Resource Information \u00b6 Apply commands provide the ability to apply changes to the camunda engine. They combine the functionality of put and post verbs and these operations. As kubectl you can use apply in combination with files that contains the payload. You can use JSON or YAML payloads. $ cat EOF>> value: hello-world type: String EOF >> variable.yaml $ cctl apply processInstanceVariable foobar 0027da48-0a61-11ec-bd5f-0242ac120014 -y variable.yml Schema validation If provided, the given payload becomes validated against the openapi schema. The openapi documentation sometimes does not fully match the api. (e.g. while updating variables. The values is describes as object but values of primitive variables are also allowed.) To skip this use the option --skip-validation . describe Resource Information \u00b6 not quite implemented . It's planned to use this commands to collect and output complex informationations about a given ressoure including combining multiple endpoints (e.g. process instances with all occured incidents and variable information.) Autocomplete \u00b6 cctl uses click which brings a buildin autocomplte feature. Have a look at their shell completion documentation . zsh Example \\_ CCTL_COMPLETE = zsh_source cctl Others \u00b6 Info \u00b6 Version \u00b6","title":"Usage"},{"location":"usage/#usage","text":"","title":"Usage"},{"location":"usage/#get-resource-information","text":"Get commands provides the ability to request ressource information from a given engine. It contains all OpenAPI Operations of the Verb get .","title":"get Resource Information"},{"location":"usage/#delete-resource-information","text":"Delete commands provide the ability to delete specific ressources in the camunda engine.","title":"delete Resource Information"},{"location":"usage/#apply-resource-information","text":"Apply commands provide the ability to apply changes to the camunda engine. They combine the functionality of put and post verbs and these operations. As kubectl you can use apply in combination with files that contains the payload. You can use JSON or YAML payloads. $ cat EOF>> value: hello-world type: String EOF >> variable.yaml $ cctl apply processInstanceVariable foobar 0027da48-0a61-11ec-bd5f-0242ac120014 -y variable.yml Schema validation If provided, the given payload becomes validated against the openapi schema. The openapi documentation sometimes does not fully match the api. (e.g. while updating variables. The values is describes as object but values of primitive variables are also allowed.) To skip this use the option --skip-validation .","title":"apply Resource Information"},{"location":"usage/#describe-resource-information","text":"not quite implemented . It's planned to use this commands to collect and output complex informationations about a given ressoure including combining multiple endpoints (e.g. process instances with all occured incidents and variable information.)","title":"describe Resource Information"},{"location":"usage/#autocomplete","text":"cctl uses click which brings a buildin autocomplte feature. Have a look at their shell completion documentation . zsh Example \\_ CCTL_COMPLETE = zsh_source cctl","title":"Autocomplete"},{"location":"usage/#others","text":"","title":"Others"},{"location":"usage/#info","text":"","title":"Info"},{"location":"usage/#version","text":"","title":"Version"},{"location":"api_doc/__init__/","text":"camundactl.__init__","title":"  init  "},{"location":"api_doc/__main__/","text":"camundactl.__main__","title":"  main  "},{"location":"api_doc/config/","text":"camundactl.config activate_engine() add_engine() activate_engine ( name ) \u00b6 Activates the given engine as current_engine in the config file. Source code in camundactl/config.py def activate_engine ( name : str ) -> None : \"\"\" Activates the given engine as current_engine in the config file. \"\"\" config = load_config () engine_names = list ( pluck ( \"name\" , config [ \"engines\" ])) if name not in engine_names : raise EngineDoesNotExists ( \"invalid engine name ' %s '. choose one of %s .\" % ( name , \", \" . join ( engine_names )) ) config [ \"current_engine\" ] = name _write_config ( config ) add_engine ( engine , select = False ) \u00b6 Adds a new engine to the config file. Selects it as current engine if selected or if it is the first one. Source code in camundactl/config.py def add_engine ( engine : EngineDict , select : bool = False ) -> None : \"\"\" Adds a new engine to the config file. Selects it as current engine if `selected` or if it is the first one. \"\"\" config = load_config () engines = list ( pluck ( \"name\" , config [ \"engines\" ])) if engine [ \"name\" ] in engines : raise EngineAlreadyExistsError ( engine [ \"name\" ]) config [ \"engines\" ] . append ( engine ) # activate if this is the first engine added if len ( config [ \"engines\" ]) == 1 : logging . debug ( \"configuring the first engine. overruling the \" \"selection parameter and selecting it by default.\" ) select = True if select : config [ \"current_engine\" ] = engine [ \"name\" ] _write_config ( config )","title":"Config"},{"location":"api_doc/config/#camundactl.config.activate_engine","text":"Activates the given engine as current_engine in the config file. Source code in camundactl/config.py def activate_engine ( name : str ) -> None : \"\"\" Activates the given engine as current_engine in the config file. \"\"\" config = load_config () engine_names = list ( pluck ( \"name\" , config [ \"engines\" ])) if name not in engine_names : raise EngineDoesNotExists ( \"invalid engine name ' %s '. choose one of %s .\" % ( name , \", \" . join ( engine_names )) ) config [ \"current_engine\" ] = name _write_config ( config )","title":"activate_engine()"},{"location":"api_doc/config/#camundactl.config.add_engine","text":"Adds a new engine to the config file. Selects it as current engine if selected or if it is the first one. Source code in camundactl/config.py def add_engine ( engine : EngineDict , select : bool = False ) -> None : \"\"\" Adds a new engine to the config file. Selects it as current engine if `selected` or if it is the first one. \"\"\" config = load_config () engines = list ( pluck ( \"name\" , config [ \"engines\" ])) if engine [ \"name\" ] in engines : raise EngineAlreadyExistsError ( engine [ \"name\" ]) config [ \"engines\" ] . append ( engine ) # activate if this is the first engine added if len ( config [ \"engines\" ]) == 1 : logging . debug ( \"configuring the first engine. overruling the \" \"selection parameter and selecting it by default.\" ) select = True if select : config [ \"current_engine\" ] = engine [ \"name\" ] _write_config ( config )","title":"add_engine()"},{"location":"api_doc/utils/","text":"camundactl.utils LazyObject new_method_proxy() LazyObject \u00b6 new_method_proxy ( func ) \u00b6 Util function to help us route functions to the nested object. Source code in camundactl/utils.py def new_method_proxy ( func ): \"\"\" Util function to help us route functions to the nested object. \"\"\" def inner ( self , * args ): if not self . _is_init : self . _setup () return func ( self . _wrapped , * args ) return inner","title":"Utils"},{"location":"api_doc/utils/#camundactl.utils.LazyObject","text":"","title":"LazyObject"},{"location":"api_doc/utils/#camundactl.utils.LazyObject.new_method_proxy","text":"Util function to help us route functions to the nested object. Source code in camundactl/utils.py def new_method_proxy ( func ): \"\"\" Util function to help us route functions to the nested object. \"\"\" def inner ( self , * args ): if not self . _is_init : self . _setup () return func ( self . _wrapped , * args ) return inner","title":"new_method_proxy()"},{"location":"api_doc/client/__init__/","text":"camundactl.client.__init__","title":"  init  "},{"location":"api_doc/client/base_client/","text":"camundactl.client.base_client","title":"Base client"},{"location":"api_doc/client/client/","text":"camundactl.client.client","title":"Client"},{"location":"api_doc/client/test_client/","text":"camundactl.client.test_client","title":"Test client"},{"location":"api_doc/cmd/__init__/","text":"camundactl.cmd.__init__","title":"  init  "},{"location":"api_doc/cmd/apply/","text":"camundactl.cmd.apply ApplyMultiCommand get_command() list_commands() ApplyMultiCommand ( OpenAPIMulitCommandBase ) \u00b6 get_command ( self , ctx , name ) \u00b6 returns the command object by the given name. if the operation based on the given name could not be found, this method returns none. Parameters: Name Type Description Default ctx Context the click context. required name str the commands name. required Source code in camundactl/cmd/apply.py def get_command ( self , ctx : click . Context , name : str ) -> Optional [ click . Command ]: for verb in self . verbs : self . verb = verb if cmd := super () . get_command ( ctx , name ): return cmd return None list_commands ( self , ctx ) \u00b6 returns a list of commands based on the operation ids the verb for this class. Parameters: Name Type Description Default ctx Context the click context. required Source code in camundactl/cmd/apply.py def list_commands ( self , ctx : click . Context ) -> List [ str ]: result = [] for verb in self . verbs : self . verb = verb result += super () . list_commands ( ctx ) self . verb = None return result","title":"Apply"},{"location":"api_doc/cmd/apply/#camundactl.cmd.apply.ApplyMultiCommand","text":"","title":"ApplyMultiCommand"},{"location":"api_doc/cmd/apply/#camundactl.cmd.apply.ApplyMultiCommand.get_command","text":"returns the command object by the given name. if the operation based on the given name could not be found, this method returns none. Parameters: Name Type Description Default ctx Context the click context. required name str the commands name. required Source code in camundactl/cmd/apply.py def get_command ( self , ctx : click . Context , name : str ) -> Optional [ click . Command ]: for verb in self . verbs : self . verb = verb if cmd := super () . get_command ( ctx , name ): return cmd return None","title":"get_command()"},{"location":"api_doc/cmd/apply/#camundactl.cmd.apply.ApplyMultiCommand.list_commands","text":"returns a list of commands based on the operation ids the verb for this class. Parameters: Name Type Description Default ctx Context the click context. required Source code in camundactl/cmd/apply.py def list_commands ( self , ctx : click . Context ) -> List [ str ]: result = [] for verb in self . verbs : self . verb = verb result += super () . list_commands ( ctx ) self . verb = None return result","title":"list_commands()"},{"location":"api_doc/cmd/base/","text":"camundactl.cmd.base AliasGroup get_command() AliasGroup ( Group ) \u00b6 get_command ( self , ctx , cmd_name ) \u00b6 override default with the functionalitity to lookup for aliases Source code in camundactl/cmd/base.py def get_command ( self , ctx : click . Context , cmd_name : str ) -> Optional [ click . Command ]: \"\"\" override default with the functionalitity to lookup for aliases \"\"\" if cmd := super () . get_command ( ctx , cmd_name ): return cmd alias_lookup = self . get_alias_lookup () if alias_name := alias_lookup . get ( cmd_name ): if cmd := super () . get_command ( ctx , alias_name ): return cmd for cmd_other_name in self . list_commands ( ctx ): cmd = super () . get_command ( ctx , cmd_other_name ) if alias := getattr ( cmd , \"alias\" , None ): if isinstance ( alias , list ) and cmd_name in alias : return cmd if isinstance ( alias , str ) and cmd_name == alias : return cmd return None","title":"Base"},{"location":"api_doc/cmd/base/#camundactl.cmd.base.AliasGroup","text":"","title":"AliasGroup"},{"location":"api_doc/cmd/base/#camundactl.cmd.base.AliasGroup.get_command","text":"override default with the functionalitity to lookup for aliases Source code in camundactl/cmd/base.py def get_command ( self , ctx : click . Context , cmd_name : str ) -> Optional [ click . Command ]: \"\"\" override default with the functionalitity to lookup for aliases \"\"\" if cmd := super () . get_command ( ctx , cmd_name ): return cmd alias_lookup = self . get_alias_lookup () if alias_name := alias_lookup . get ( cmd_name ): if cmd := super () . get_command ( ctx , alias_name ): return cmd for cmd_other_name in self . list_commands ( ctx ): cmd = super () . get_command ( ctx , cmd_other_name ) if alias := getattr ( cmd , \"alias\" , None ): if isinstance ( alias , list ) and cmd_name in alias : return cmd if isinstance ( alias , str ) and cmd_name == alias : return cmd return None","title":"get_command()"},{"location":"api_doc/cmd/config/","text":"camundactl.cmd.config","title":"Config"},{"location":"api_doc/cmd/context/","text":"camundactl.cmd.context ContextObject resolve_alias() ensure_object() ContextObject \u00b6 resolve_alias ( self , name ) \u00b6 tries to resolve the given alias if not found returns none Source code in camundactl/cmd/context.py def resolve_alias ( self , name : str ) -> Optional [ str ]: \"\"\" tries to resolve the given alias if not found returns none \"\"\" config = self . get_config () try : return config [ \"alias\" ][ name ] except KeyError : return None ensure_object () \u00b6 a command decorator which ensures the context object to be created Source code in camundactl/cmd/context.py def ensure_object (): \"\"\" a command decorator which ensures the context object to be created \"\"\" def inner ( func ): if _is_bound_method ( func ): @wraps ( func ) def wrapper_bound ( self_or_cls , ctx : click . Context , * args , ** kwargs ): ctx . ensure_object ( ContextObject ) return func ( self_or_cls , ctx , * args , ** kwargs ) return wrapper_bound @wraps ( func ) def wrapper ( ctx : click . Context , * args , ** kwargs ): ctx . ensure_object ( ContextObject ) return func ( ctx , * args , ** kwargs ) return wrapper return inner","title":"Context"},{"location":"api_doc/cmd/context/#camundactl.cmd.context.ContextObject","text":"","title":"ContextObject"},{"location":"api_doc/cmd/context/#camundactl.cmd.context.ContextObject.resolve_alias","text":"tries to resolve the given alias if not found returns none Source code in camundactl/cmd/context.py def resolve_alias ( self , name : str ) -> Optional [ str ]: \"\"\" tries to resolve the given alias if not found returns none \"\"\" config = self . get_config () try : return config [ \"alias\" ][ name ] except KeyError : return None","title":"resolve_alias()"},{"location":"api_doc/cmd/context/#camundactl.cmd.context.ensure_object","text":"a command decorator which ensures the context object to be created Source code in camundactl/cmd/context.py def ensure_object (): \"\"\" a command decorator which ensures the context object to be created \"\"\" def inner ( func ): if _is_bound_method ( func ): @wraps ( func ) def wrapper_bound ( self_or_cls , ctx : click . Context , * args , ** kwargs ): ctx . ensure_object ( ContextObject ) return func ( self_or_cls , ctx , * args , ** kwargs ) return wrapper_bound @wraps ( func ) def wrapper ( ctx : click . Context , * args , ** kwargs ): ctx . ensure_object ( ContextObject ) return func ( ctx , * args , ** kwargs ) return wrapper return inner","title":"ensure_object()"},{"location":"api_doc/cmd/delete/","text":"camundactl.cmd.delete","title":"Delete"},{"location":"api_doc/cmd/get/","text":"camundactl.cmd.get OpenAPIMulitCommandBase get_command() list_commands() OpenAPIMulitCommandBase ( MultiCommand ) \u00b6 get_command ( self , ctx , name ) \u00b6 returns the command object by the given name. if the operation based on the given name could not be found, this method returns none. Parameters: Name Type Description Default ctx Context the click context. required name str the commands name. required Source code in camundactl/cmd/get.py @ensure_object () def get_command ( self , ctx : click . Context , name : str ) -> Optional [ click . Command ]: \"\"\" returns the command object by the given name. if the operation based on the given name could not be found, this method returns none. Args: ctx: the click context. name: the commands name. \"\"\" spec = ctx . obj . get_spec () cache : OpenAPISpecCache = ctx . obj . get_spec_cache () if alias := ctx . obj . resolve_alias ( name ): name = alias operation_id : str = cast ( str , from_command_name ( name , prefix = self . verb )) if not cache . has_operation_id ( operation_id ): if not cache . has_operation_id ( name ): return None operation_id = name factory = self . _get_or_create_factory ( spec , cache ) method = self . get_factory_method ( factory ) return method ( operation_id = operation_id ) list_commands ( self , ctx ) \u00b6 returns a list of commands based on the operation ids the verb for this class. Parameters: Name Type Description Default ctx Context the click context. required Source code in camundactl/cmd/get.py @ensure_object () def list_commands ( self , ctx : click . Context ) -> List [ str ]: \"\"\" returns a list of commands based on the operation ids the verb for this class. Args: ctx: the click context. \"\"\" cache : OpenAPISpecCache = ctx . obj . get_spec_cache () op_ids = cache . get_operation_ids_by_verb ( self . verb ) command_names = list ( map ( to_command_name ( prefix = self . verb ), op_ids )) return sorted ( command_names )","title":"Get"},{"location":"api_doc/cmd/get/#camundactl.cmd.get.OpenAPIMulitCommandBase","text":"","title":"OpenAPIMulitCommandBase"},{"location":"api_doc/cmd/get/#camundactl.cmd.get.OpenAPIMulitCommandBase.get_command","text":"returns the command object by the given name. if the operation based on the given name could not be found, this method returns none. Parameters: Name Type Description Default ctx Context the click context. required name str the commands name. required Source code in camundactl/cmd/get.py @ensure_object () def get_command ( self , ctx : click . Context , name : str ) -> Optional [ click . Command ]: \"\"\" returns the command object by the given name. if the operation based on the given name could not be found, this method returns none. Args: ctx: the click context. name: the commands name. \"\"\" spec = ctx . obj . get_spec () cache : OpenAPISpecCache = ctx . obj . get_spec_cache () if alias := ctx . obj . resolve_alias ( name ): name = alias operation_id : str = cast ( str , from_command_name ( name , prefix = self . verb )) if not cache . has_operation_id ( operation_id ): if not cache . has_operation_id ( name ): return None operation_id = name factory = self . _get_or_create_factory ( spec , cache ) method = self . get_factory_method ( factory ) return method ( operation_id = operation_id )","title":"get_command()"},{"location":"api_doc/cmd/get/#camundactl.cmd.get.OpenAPIMulitCommandBase.list_commands","text":"returns a list of commands based on the operation ids the verb for this class. Parameters: Name Type Description Default ctx Context the click context. required Source code in camundactl/cmd/get.py @ensure_object () def list_commands ( self , ctx : click . Context ) -> List [ str ]: \"\"\" returns a list of commands based on the operation ids the verb for this class. Args: ctx: the click context. \"\"\" cache : OpenAPISpecCache = ctx . obj . get_spec_cache () op_ids = cache . get_operation_ids_by_verb ( self . verb ) command_names = list ( map ( to_command_name ( prefix = self . verb ), op_ids )) return sorted ( command_names )","title":"list_commands()"},{"location":"api_doc/cmd/helpers/","text":"camundactl.cmd.helpers ArgumentTuple __getnewargs__() __new__() __repr__() OptionTuple __getnewargs__() __new__() __repr__() ArgumentTuple ( tuple ) \u00b6 ArgumentTuple(name, help, autocomplete) __getnewargs__ ( self ) special \u00b6 Return self as a plain tuple. Used by copy and pickle. Source code in camundactl/cmd/helpers.py def __getnewargs__ ( self ): 'Return self as a plain tuple. Used by copy and pickle.' return _tuple ( self ) __new__ ( _cls , name , help , autocomplete ) special staticmethod \u00b6 Create new instance of ArgumentTuple(name, help, autocomplete) __repr__ ( self ) special \u00b6 Return a nicely formatted representation string Source code in camundactl/cmd/helpers.py def __repr__ ( self ): 'Return a nicely formatted representation string' return self . __class__ . __name__ + repr_fmt % self OptionTuple ( tuple ) \u00b6 OptionTuple(name, help, multiple, type_, autocomplete) __getnewargs__ ( self ) special \u00b6 Return self as a plain tuple. Used by copy and pickle. Source code in camundactl/cmd/helpers.py def __getnewargs__ ( self ): 'Return self as a plain tuple. Used by copy and pickle.' return _tuple ( self ) __new__ ( _cls , name , help , multiple , type_ , autocomplete ) special staticmethod \u00b6 Create new instance of OptionTuple(name, help, multiple, type_, autocomplete) __repr__ ( self ) special \u00b6 Return a nicely formatted representation string Source code in camundactl/cmd/helpers.py def __repr__ ( self ): 'Return a nicely formatted representation string' return self . __class__ . __name__ + repr_fmt % self","title":"Helpers"},{"location":"api_doc/cmd/helpers/#camundactl.cmd.helpers.ArgumentTuple","text":"ArgumentTuple(name, help, autocomplete)","title":"ArgumentTuple"},{"location":"api_doc/cmd/helpers/#camundactl.cmd.helpers.ArgumentTuple.__getnewargs__","text":"Return self as a plain tuple. Used by copy and pickle. Source code in camundactl/cmd/helpers.py def __getnewargs__ ( self ): 'Return self as a plain tuple. Used by copy and pickle.' return _tuple ( self )","title":"__getnewargs__()"},{"location":"api_doc/cmd/helpers/#camundactl.cmd.helpers.ArgumentTuple.__new__","text":"Create new instance of ArgumentTuple(name, help, autocomplete)","title":"__new__()"},{"location":"api_doc/cmd/helpers/#camundactl.cmd.helpers.ArgumentTuple.__repr__","text":"Return a nicely formatted representation string Source code in camundactl/cmd/helpers.py def __repr__ ( self ): 'Return a nicely formatted representation string' return self . __class__ . __name__ + repr_fmt % self","title":"__repr__()"},{"location":"api_doc/cmd/helpers/#camundactl.cmd.helpers.OptionTuple","text":"OptionTuple(name, help, multiple, type_, autocomplete)","title":"OptionTuple"},{"location":"api_doc/cmd/helpers/#camundactl.cmd.helpers.OptionTuple.__getnewargs__","text":"Return self as a plain tuple. Used by copy and pickle. Source code in camundactl/cmd/helpers.py def __getnewargs__ ( self ): 'Return self as a plain tuple. Used by copy and pickle.' return _tuple ( self )","title":"__getnewargs__()"},{"location":"api_doc/cmd/helpers/#camundactl.cmd.helpers.OptionTuple.__new__","text":"Create new instance of OptionTuple(name, help, multiple, type_, autocomplete)","title":"__new__()"},{"location":"api_doc/cmd/helpers/#camundactl.cmd.helpers.OptionTuple.__repr__","text":"Return a nicely formatted representation string Source code in camundactl/cmd/helpers.py def __repr__ ( self ): 'Return a nicely formatted representation string' return self . __class__ . __name__ + repr_fmt % self","title":"__repr__()"},{"location":"api_doc/cmd/info/","text":"camundactl.cmd.info","title":"Info"},{"location":"api_doc/cmd/process_instance/","text":"camundactl.cmd.process_instance","title":"Process instance"},{"location":"api_doc/cmd/openapi/__init__/","text":"camundactl.cmd.openapi.__init__","title":"  init  "},{"location":"api_doc/cmd/openapi/factory/","text":"camundactl.cmd.openapi.factory","title":"Factory"},{"location":"api_doc/cmd/openapi/schema/","text":"camundactl.cmd.openapi.schema","title":"Schema"},{"location":"api_doc/openapi/__init__/","text":"camundactl.openapi.__init__","title":"  init  "},{"location":"api_doc/openapi/cache/","text":"camundactl.openapi.cache","title":"Cache"},{"location":"api_doc/openapi/loader/","text":"camundactl.openapi.loader","title":"Loader"},{"location":"api_doc/openapi/specs/__init__/","text":"camundactl.openapi.specs.__init__","title":"  init  "},{"location":"api_doc/output/__init__/","text":"camundactl.output.__init__","title":"  init  "},{"location":"api_doc/output/base/","text":"camundactl.output.base OutputHandler apply() OutputHandler \u00b6 apply ( self , func ) \u00b6 applies the output options to the call funcs and returns a call wrapper which handles the output if it is activated. Source code in camundactl/output/base.py def apply ( self , func : Callable ) -> Callable : \"\"\" applies the output options to the call funcs and returns a call wrapper which handles the output if it is activated. \"\"\" for option in self . options . values (): func = option ( func ) @functools . wraps ( func ) def wrapper ( * args , ** kwargs ): handle_kwargs = {} for name in self . options . keys (): handle_kwargs [ name ] = kwargs . pop ( name ) self . ctx = self . _extract_context ( func , args , kwargs ) result = func ( * args , ** kwargs ) if self . current_output == self . name : self . handle ( result , ** handle_kwargs ) return result return wrapper","title":"Base"},{"location":"api_doc/output/base/#camundactl.output.base.OutputHandler","text":"","title":"OutputHandler"},{"location":"api_doc/output/base/#camundactl.output.base.OutputHandler.apply","text":"applies the output options to the call funcs and returns a call wrapper which handles the output if it is activated. Source code in camundactl/output/base.py def apply ( self , func : Callable ) -> Callable : \"\"\" applies the output options to the call funcs and returns a call wrapper which handles the output if it is activated. \"\"\" for option in self . options . values (): func = option ( func ) @functools . wraps ( func ) def wrapper ( * args , ** kwargs ): handle_kwargs = {} for name in self . options . keys (): handle_kwargs [ name ] = kwargs . pop ( name ) self . ctx = self . _extract_context ( func , args , kwargs ) result = func ( * args , ** kwargs ) if self . current_output == self . name : self . handle ( result , ** handle_kwargs ) return result return wrapper","title":"apply()"},{"location":"api_doc/output/decorator/","text":"camundactl.output.decorator","title":"Decorator"},{"location":"api_doc/output/json/","text":"camundactl.output.json","title":"Json"},{"location":"api_doc/output/jsonpath/","text":"camundactl.output.jsonpath","title":"Jsonpath"},{"location":"api_doc/output/raw/","text":"camundactl.output.raw","title":"Raw"},{"location":"api_doc/output/table/","text":"camundactl.output.table","title":"Table"},{"location":"api_doc/output/template/","text":"camundactl.output.template TemplateOutputHandler TemplateOutputHandler ( OutputHandler ) \u00b6 Output handler for template output. Loads the template based on different rules and provied the api result and some other information as template context.","title":"Template"},{"location":"api_doc/output/template/#camundactl.output.template.TemplateOutputHandler","text":"Output handler for template output. Loads the template based on different rules and provied the api result and some other information as template context.","title":"TemplateOutputHandler"},{"location":"api_doc/output/templates/__init__/","text":"camundactl.output.templates.__init__","title":"  init  "},{"location":"commands/apply/","text":"CLI Reference ( apply ) \u00b6 All apply commands. cctl apply \u00b6 apply changes to the engine Usage: cctl&nbsp;apply [OPTIONS] COMMAND [ARGS]... Options: Name Type Description Default -e , --engine text N/A None --help boolean Show this message and exit. False cctl apply addAttachment \u00b6 Create Creates an attachment for a task. URL: /task/{id}/attachment/create Schema: - Usage: cctl&nbsp;apply addAttachment [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply addIdentityLink \u00b6 Add Adds an identity link to a task by id. Can be used to link any user or group to a task and specify a relation. URL: /task/{id}/identity-links Schema: {'type': 'object', 'required': ['type'], 'properties': {'userId': {'type': 'string', 'nullable': True, 'description': 'The id of the user participating in this link. Either userId or groupId is set.'}, 'groupId': {'type': 'string', 'nullable': True, 'description': 'The id of the group participating in this link. Either groupId or userId is set.'}, 'type': {'type': 'string', 'nullable': True, 'description': 'The type of the identity link. The value of the this property can be user-defined. The Process Engine\\nprovides three pre-defined Identity Link type s:\\n\\n* candidate \\n* assignee - reserved for the task assignee\\n* owner - reserved for the task owner\\n\\n**Note**: When adding or removing an Identity Link, the type property must be defined.'}}} Usage: cctl&nbsp;apply addIdentityLink [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply annotationUserOperationLog \u00b6 Set Annotation to an User Operation Log (Historic) Set an annotation for auditing reasons. URL: /history/user-operation/{operationId}/set-annotation Schema: {'type': 'object', 'properties': {'annotation': {'type': 'string', 'nullable': True, 'description': 'The annotation value to put.'}}} Usage: cctl&nbsp;apply annotationUserOperationLog [OPTIONS] OPERATIONID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply assignee \u00b6 Set Assignee Changes the assignee of a task to a specific user. Note: The difference with the Claim Task method is that this method does not check if the task already has a user assigned to it. URL: /task/{id}/assignee Schema: {'type': 'object', 'properties': {'userId': {'type': 'string', 'nullable': True, 'description': 'The id of the user that the current action refers to.'}}} Usage: cctl&nbsp;apply assignee [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply async \u00b6 Delete Async (POST) Delete multiple historic decision instances asynchronously (batch). At least historicDecisionInstanceIds or historicDecisionInstanceQuery has to be provided. If both are provided then all instances matching query criterion and instances from the list will be deleted. URL: /history/decision-instance/delete Schema: {'type': 'object', 'properties': {'historicDecisionInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of historic decision instance ids to delete.'}, 'historicDecisionInstanceQuery': {'$ref': '#/components/schemas/HistoricDecisionInstanceQueryDto'}, 'deleteReason': {'type': 'string', 'nullable': True, 'description': 'A string with delete reason.'}}} Usage: cctl&nbsp;apply async [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply asyncHistoricQueryBased \u00b6 Delete Async Historic Query Based (POST) Deletes a set of process instances asynchronously (batch) based on a historic process instance query. URL: /process-instance/delete-historic-query-based Schema: {'type': 'object', 'properties': {'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list process instance ids to delete.'}, 'deleteReason': {'type': 'string', 'nullable': True, 'description': 'A string with delete reason.'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started or ended as part of this request.'}, 'skipSubprocesses': {'type': 'boolean', 'nullable': True, 'description': 'Skip deletion of the subprocesses related to deleted processes as part of this request.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}}} Usage: cctl&nbsp;apply asyncHistoricQueryBased [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply authorization \u00b6 Update an Authorization Updates an authorization by id. URL: /authorization/{id} Schema: {'type': 'object', 'properties': {'permissions': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'An array of Strings holding the permissions provided by this authorization.'}, 'userId': {'type': 'string', 'nullable': True, 'description': 'The id of the user this authorization has been created for. The value \\nrepresents a global authorization ranging over all users.'}, 'groupId': {'type': 'string', 'nullable': True, 'description': 'The id of the group this authorization has been created for.'}, 'resourceType': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'An integer representing the resource type. See the\\n[User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/authorization-service/#resources)\\nfor a list of integer representations of resource types.'}, 'resourceId': {'type': 'string', 'nullable': True, 'description': 'The resource Id. The value represents an authorization ranging over all\\ninstances of a resource.'}}} Usage: cctl&nbsp;apply authorization [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply batchSuspensionState \u00b6 Activate/Suspend Activates or suspends a batch by id. URL: /batch/{id}/suspended Schema: {'type': 'object', 'properties': {'suspended': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend a given instance \\n(e.g. process instance, job, job definition, or batch). When the value is set to true, \\nthe given instance will be suspended and when the value is set to false, \\nthe given instance will be activated.'}}} Usage: cctl&nbsp;apply batchSuspensionState [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply binaryTaskLocalVariable \u00b6 Update Local Task Variable (Binary) Sets the serialized value for a binary variable or the binary value for a file variable. URL: /task/{id}/localVariables/{varName}/data Schema: - Usage: cctl&nbsp;apply binaryTaskLocalVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply binaryTaskVariable \u00b6 Update Task Variable (Binary) Sets the serialized value for a binary variable or the binary value for a file variable visible from the task. A variable is visible from the task if it is a local task variable or declared in a parent scope of the task. See documentation on visiblity of variables . URL: /task/{id}/variables/{varName}/data Schema: - Usage: cctl&nbsp;apply binaryTaskVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply checkPassword \u00b6 Validate Password A password policy consists of a list of rules that new passwords must follow to be policy compliant. A password can be checked for compliancy via this end point. More information on password policies in Camunda can be found in the password policy user guide and in the security instructions . URL: /identity/password-policy Schema: {'type': 'object', 'properties': {'password': {'type': 'string', 'nullable': True, 'description': 'The candidate password to be check against the password policy.'}, 'profile': {'$ref': '#/components/schemas/UserProfileDto'}}} Usage: cctl&nbsp;apply checkPassword [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply claim \u00b6 Claim Claims a task for a specific user. Note: The difference with the Set Assignee method is that here a check is performed to see if the task already has a user assigned to it. URL: /task/{id}/claim Schema: {'type': 'object', 'properties': {'userId': {'type': 'string', 'nullable': True, 'description': 'The id of the user that the current action refers to.'}}} Usage: cctl&nbsp;apply claim [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply cleanupAsync \u00b6 Clean up history (POST) Schedules asynchronous history cleanup (See History cleanup ). Note: This endpoint will return at most a single history cleanup job. Since version 7.9.0 it is possible to configure multiple parallel history cleanup jobs . Use GET /history/cleanup/jobs to find all the available history cleanup jobs. URL: /history/cleanup Schema: - Usage: cctl&nbsp;apply cleanupAsync [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --immediately-due / --not-immediately-due boolean When true the job will be scheduled for nearest future. When false , the job will be scheduled for next batch window start time. Default is true . None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply clearAnnotationUserOperationLog \u00b6 Clear Annotation of an User Operation Log (Historic) Clear the annotation which was previously set for auditing reasons. URL: /history/user-operation/{operationId}/clear-annotation Schema: - Usage: cctl&nbsp;apply clearAnnotationUserOperationLog [OPTIONS] OPERATIONID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply complete \u00b6 Complete Completes a task and updates process variables. URL: /task/{id}/complete Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs.'}, 'withVariablesInReturn': {'type': 'boolean', 'nullable': True, 'default': False, 'description': \"Indicates whether the response should contain the process variables or not. The\\ndefault is false with a response code of 204 . If set to true the response\\ncontains the process variables and has a response code of 200 . If the task is not\\nassociated with a process instance (e.g. if it's part of a case instance) no\\nvariables will be returned.\"}}} Usage: cctl&nbsp;apply complete [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply completeExternalTaskResource \u00b6 Complete Completes an external task by id and updates process variables. URL: /external-task/{id}/complete Schema: {'allOf': [{'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs. Each key is a variable name and each value a JSON variable value object with the following properties:'}, 'localVariables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing local variable key-value pairs. Local variables are set only in the scope of external task. Each key is a variable name and each value a JSON variable value object with the following properties:'}}}, {'$ref': '#/components/schemas/HandleExternalTaskDto'}]} Usage: cctl&nbsp;apply completeExternalTaskResource [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply configureTelemetry \u00b6 Configure Telemetry Configures whether Camunda receives data collection of the process engine setup and usage. URL: /telemetry/configuration Schema: {'type': 'object', 'properties': {'enableTelemetry': {'type': 'boolean', 'nullable': True, 'description': 'Specifies if the telemetry data should be sent or not.'}}} Usage: cctl&nbsp;apply configureTelemetry [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply correlateMessageAsyncOperation \u00b6 Correlate Message Async (POST) Correlates a message asynchronously to executions that are waiting for this message. Messages will not be correlated to process definition-level start message events to start process instances. URL: /process-instance/message-async Schema: {'type': 'object', 'properties': {'messageName': {'type': 'string', 'nullable': True, 'description': \"The name of the message to correlate. Corresponds to the 'name' element of the message defined in BPMN 2.0 XML. Can be null to correlate by other criteria only.\"}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids that define a group of process instances\\nto which the operation will correlate a message.\\n\\nPlease note that if processInstanceIds , processInstanceQuery and historicProcessInstanceQuery \\nare defined, the resulting operation will be performed on the union of these sets.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'All variables the operation will set in the root scope of the process instances the message is correlated to.'}}} Usage: cctl&nbsp;apply correlateMessageAsyncOperation [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply createAuthorization \u00b6 Create a New Authorization Creates a new authorization. URL: /authorization/create Schema: {'type': 'object', 'properties': {'type': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'The type of the authorization (0=global, 1=grant, 2=revoke). See the\\n[User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/authorization-service.md#authorization-type)\\nfor more information about authorization types.'}, 'permissions': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'An array of Strings holding the permissions provided by this authorization.'}, 'userId': {'type': 'string', 'nullable': True, 'description': 'The id of the user this authorization has been created for. The value \\nrepresents a global authorization ranging over all users.'}, 'groupId': {'type': 'string', 'nullable': True, 'description': 'The id of the group this authorization has been created for.'}, 'resourceType': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'An integer representing the resource type. See the\\n[User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/authorization-service/#resources)\\nfor a list of integer representations of resource types.'}, 'resourceId': {'type': 'string', 'nullable': True, 'description': 'The resource Id. The value represents an authorization ranging over all\\ninstances of a resource.'}}} Usage: cctl&nbsp;apply createAuthorization [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply createComment \u00b6 Create Creates a comment for a task by id. URL: /task/{id}/comment/create Schema: {'allOf': [{'type': 'object', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'The id of the task comment.'}, 'userId': {'type': 'string', 'nullable': True, 'description': 'The id of the user who created the comment.'}, 'taskId': {'type': 'string', 'nullable': True, 'description': 'The id of the task to which the comment belongs.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'The id of the process instance the comment is related to.'}, 'time': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The time when the comment was created.\\n[Default format]($(docsUrl)/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ .\"}, 'message': {'type': 'string', 'nullable': True, 'description': 'The content of the comment.'}, 'removalTime': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The time after which the comment should be removed by the History Cleanup job.\\n[Default format]($(docsUrl)/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ .\"}, 'rootProcessInstanceId': {'type': 'string', 'nullable': True, 'description': 'The process instance id of the root process instance that initiated the process\\ncontaining the task.'}}}, {'$ref': '#/components/schemas/LinkableDto'}]} Usage: cctl&nbsp;apply createComment [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply createDeployment \u00b6 Create Creates a deployment. Security Consideration Deployments can contain custom code in form of scripts or EL expressions to customize process behavior. This may be abused for remote execution of arbitrary code. URL: /deployment/create Schema: - Usage: cctl&nbsp;apply createDeployment [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply createFilter \u00b6 Create Filter Creates a new filter. URL: /filter/create Schema: {'type': 'object', 'properties': {'resourceType': {'type': 'string', 'nullable': True, 'description': 'The resource type of the filter.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'The name of the filter.'}, 'owner': {'type': 'string', 'nullable': True, 'description': 'The user id of the owner of the filter.'}, 'query': {'type': 'object', 'description': 'The query of the filter as a JSON object.'}, 'properties': {'type': 'object', 'description': 'The properties of a filter as a JSON object.'}}} Usage: cctl&nbsp;apply createFilter [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply createGroup \u00b6 Create Group Creates a new group. URL: /group/create Schema: {'type': 'object', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'The id of the group.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'The name of the group.'}, 'type': {'type': 'string', 'nullable': True, 'description': 'The type of the group.'}}} Usage: cctl&nbsp;apply createGroup [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply createGroupMember \u00b6 Create Group Member Adds a member to a group. URL: /group/{id}/members/{userId} Schema: - Usage: cctl&nbsp;apply createGroupMember [OPTIONS] USERID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply createGroupMembership \u00b6 Create Tenant Group Membership Creates a membership between a tenant and a group. URL: /tenant/{id}/group-members/{groupId} Schema: - Usage: cctl&nbsp;apply createGroupMembership [OPTIONS] GROUPID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply createIncident \u00b6 Create Incident Creates a custom incident with given properties. URL: /execution/{id}/create-incident Schema: {'type': 'object', 'properties': {'incidentType': {'type': 'string', 'nullable': True, 'description': 'A type of the new incident.'}, 'configuration': {'type': 'string', 'nullable': True, 'description': 'A configuration for the new incident.'}, 'message': {'type': 'string', 'nullable': True, 'description': 'A message for the new incident.'}}} Usage: cctl&nbsp;apply createIncident [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply createTask \u00b6 Create Creates a new task. URL: /task/create Schema: {'type': 'object', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'The task id.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'The task name.'}, 'assignee': {'type': 'string', 'nullable': True, 'description': \"The assignee's id.\"}, 'owner': {'type': 'string', 'nullable': True, 'description': \"The owner's id.\"}, 'created': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The date the task was created on.\\n[Default format](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ .\"}, 'due': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The task's due date.\\n[Default format](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ .\"}, 'followUp': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The follow-up date for the task.\\n[Default format](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ .\"}, 'delegationState': {'type': 'string', 'nullable': True, 'enum': ['PENDING', 'RESOLVED'], 'description': \"The task's delegation state. Possible values are PENDING and RESOLVED .\"}, 'description': {'type': 'string', 'nullable': True, 'description': \"The task's description.\"}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'The id of the execution the task belongs to.'}, 'parentTaskId': {'type': 'string', 'nullable': True, 'description': 'The id the parent task, if this task is a subtask.'}, 'priority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': \"The task's priority.\"}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the process definition the task belongs to.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'The id of the process instance the task belongs to.'}, 'caseExecutionId': {'type': 'string', 'nullable': True, 'description': 'The id of the case execution the task belongs to.'}, 'caseDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the case definition the task belongs to.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'The id of the case instance the task belongs to.'}, 'taskDefinitionKey': {'type': 'string', 'nullable': True, 'description': \"The task's key.\"}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Whether the task belongs to a process instance that is suspended.'}, 'formKey': {'type': 'string', 'nullable': True, 'description': 'If not null , the form key for the task.'}, 'camundaFormRef': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/CamundaFormRef'}, 'description': 'A reference to a specific version of a Camunda Form.'}, 'tenantId': {'type': 'string', 'nullable': True, 'description': 'If not null , the tenant id of the task.'}}} Usage: cctl&nbsp;apply createTask [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply createTenant \u00b6 Create Tenant Create a new tenant. URL: /tenant/create Schema: {'type': 'object', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'The id of the tenant.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'The name of the tenant.'}}} Usage: cctl&nbsp;apply createTenant [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply createUser \u00b6 Create Create a new user. URL: /user/create Schema: {'type': 'object', 'properties': {'profile': {'$ref': '#/components/schemas/UserProfileDto'}, 'credentials': {'$ref': '#/components/schemas/UserCredentialsDto'}}} Usage: cctl&nbsp;apply createUser [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply createUserMembership \u00b6 Create Tenant User Membership Creates a membership between a tenant and an user. URL: /tenant/{id}/user-members/{userId} Schema: - Usage: cctl&nbsp;apply createUserMembership [OPTIONS] USERID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply credentials \u00b6 Update Credentials Updates a user's credentials (password) URL: /user/{id}/credentials Schema: {'type': 'object', 'properties': {'password': {'type': 'string', 'nullable': True, 'description': 'The users new password.'}, 'authenticatedUserPassword': {'type': 'string', 'nullable': True, 'description': 'The password of the authenticated user who changes the password of the user\\n(i.e., the user with passed id as path parameter).'}}} Usage: cctl&nbsp;apply credentials [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply delegateTask \u00b6 Delegate Delegates a task to another user. URL: /task/{id}/delegate Schema: {'type': 'object', 'properties': {'userId': {'type': 'string', 'nullable': True, 'description': 'The id of the user that the current action refers to.'}}} Usage: cctl&nbsp;apply delegateTask [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply deliverMessage \u00b6 Correlate Correlates a message to the process engine to either trigger a message start event or an intermediate message catching event. Internally this maps to the engine's message correlation builder methods MessageCorrelationBuilder#correlateWithResult() and MessageCorrelationBuilder#correlateAllWithResult() . For more information about the correlation behavior, see the Message Events section of the BPMN 2.0 Implementation Reference . URL: /message Schema: {'type': 'object', 'properties': {'messageName': {'type': 'string', 'nullable': True, 'description': 'The name of the message to deliver.'}, 'businessKey': {'type': 'string', 'nullable': True, 'description': 'Used for correlation of process instances that wait for incoming messages.\\nWill only correlate to executions that belong to a process instance with the provided business key.'}, 'tenantId': {'type': 'string', 'nullable': True, 'description': 'Used to correlate the message for a tenant with the given id.\\nWill only correlate to executions and process definitions which belong to the tenant.\\nMust not be supplied in conjunction with a withoutTenantId .'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'A Boolean value that indicates whether the message should only be correlated to executions\\nand process definitions which belong to no tenant or not. Value may only be true , as false \\nis the default behavior.\\nMust not be supplied in conjunction with a tenantId .'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Used to correlate the message to the process instance with the given id.'}, 'correlationKeys': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'Used for correlation of process instances that wait for incoming messages.\\nHas to be a JSON object containing key-value pairs that are matched against process instance variables\\nduring correlation. Each key is a variable name and each value a JSON variable value object with the\\nfollowing properties.'}, 'localCorrelationKeys': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'Local variables used for correlation of executions (process instances) that wait for incoming messages.\\nHas to be a JSON object containing key-value pairs that are matched against local variables during correlation.\\nEach key is a variable name and each value a JSON variable value object with the following properties.'}, 'processVariables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A map of variables that is injected into the triggered execution or process instance after the message\\nhas been delivered. Each key is a variable name and each value a JSON variable value object with\\nthe following properties.'}, 'processVariablesLocal': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A map of local variables that is injected into the triggered execution or process instance after the\\nmessage has been delivered. Each key is a variable name and each value a JSON variable value object\\nwith the following properties.'}, 'all': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'A Boolean value that indicates whether the message should be correlated to exactly one entity or multiple entities.\\nIf the value is set to false , the message will be correlated to exactly one entity (execution or process definition).\\nIf the value is set to true , the message will be correlated to multiple executions and a process definition that\\ncan be instantiated by this message in one go.'}, 'resultEnabled': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'A Boolean value that indicates whether the result of the correlation should be returned or not.\\nIf this property is set to true , there will be returned a list of message correlation result objects. Depending on the\\nall property, there will be either one ore more returned results in the list.\\n\\nThe default value is false , which means no result will be returned.'}, 'variablesInResultEnabled': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'A Boolean value that indicates whether the result of the correlation should contain process variables or not.\\nThe parameter resultEnabled should be set to true in order to use this it.\\n\\nThe default value is false , which means the variables will not be returned.'}}} Usage: cctl&nbsp;apply deliverMessage [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply evaluateCondition \u00b6 Evaluate Triggers evaluation of conditions for conditional start event(s). Internally this maps to the engines condition evaluation builder method ConditionEvaluationBuilder#evaluateStartConditions(). For more information see the Conditional Start Events section of the BPMN 2.0 Implementation Reference . URL: /condition Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A map of variables which are used for evaluation of the conditions and are injected into the process instances which have been triggered.\\nEach key is a variable name and each value a JSON variable value object with the following properties.'}, 'businessKey': {'type': 'string', 'nullable': True, 'description': 'Used for the process instances that have been triggered after the evaluation.'}, 'tenantId': {'type': 'string', 'nullable': True, 'description': 'Used to evaluate a condition for a tenant with the given id.\\nWill only evaluate conditions of process definitions which belong to the tenant.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value that indicates whether the conditions should only be evaluated of process definitions which belong to no tenant or not.\\nValue may only be true, as false is the default behavior.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Used to evaluate conditions of the process definition with the given id.'}}} Usage: cctl&nbsp;apply evaluateCondition [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply evaluateDecisionById \u00b6 Evaluate By Id Evaluates a given decision and returns the result. The input values of the decision have to be supplied in the request body. URL: /decision-definition/{id}/evaluate Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': ''}}} Usage: cctl&nbsp;apply evaluateDecisionById [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply evaluateDecisionByKey \u00b6 Evaluate By Key Evaluates the latest version of the decision definition which belongs to no tenant. The input values of the decision have to be supplied in the request body. URL: /decision-definition/key/{key}/evaluate Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': ''}}} Usage: cctl&nbsp;apply evaluateDecisionByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply evaluateDecisionByKeyAndTenant \u00b6 Evaluate By Key And Tenant Evaluates the latest version of the decision definition for tenant. The input values of the decision have to be supplied in the request body. URL: /decision-definition/key/{key}/tenant-id/{tenant-id}/evaluate Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': ''}}} Usage: cctl&nbsp;apply evaluateDecisionByKeyAndTenant [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply executeJob \u00b6 Execute Job Executes a job by id. Note: The execution of the job happens synchronously in the same thread. URL: /job/{id}/execute Schema: - Usage: cctl&nbsp;apply executeJob [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply executeMigrationPlan \u00b6 Execute Migration Plan Executes a migration plan synchronously for multiple process instances. To execute a migration plan asynchronously, use the Execute Migration Plan Async(Batch) method. For more information about the difference between synchronous and asynchronous execution of a migration plan, please refer to the related section of the user guide . URL: /migration/execute Schema: {'type': 'object', 'properties': {'migrationPlan': {'$ref': '#/components/schemas/MigrationPlanDto'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids to migrate.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'A boolean value to control whether execution listeners should be invoked during\\nmigration.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'A boolean value to control whether input/output mappings should be executed during\\nmigration.'}}} Usage: cctl&nbsp;apply executeMigrationPlan [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply executeMigrationPlanAsync \u00b6 Execute Migration Plan Async (Batch) Executes a migration plan asynchronously (batch) for multiple process instances. To execute a migration plan synchronously, use the Execute MigrationPlan method. For more information about the difference between synchronous and asynchronous execution of a migration plan, please refer to the related section of the user guide . URL: /migration/executeAsync Schema: {'type': 'object', 'properties': {'migrationPlan': {'$ref': '#/components/schemas/MigrationPlanDto'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids to migrate.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'A boolean value to control whether execution listeners should be invoked during\\nmigration.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'A boolean value to control whether input/output mappings should be executed during\\nmigration.'}}} Usage: cctl&nbsp;apply executeMigrationPlanAsync [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply executeModification \u00b6 Execute Modification Executes a modification synchronously for multiple process instances. To modify a single process instance, use the Modify Process Instance Execution State method. To execute a modification asynchronously, use the Execute Modification Async (Batch) method. For more information about the difference between synchronous and asynchronous execution of a modification, please refer to the related section of the user guide . URL: /modification/execute Schema: {'type': 'object', 'properties': {'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the process definition for the modification'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started or ended as part\\nof this request.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution of [input/output variable mappings](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#input-output-variable-mapping) for\\nactivities that are started or ended as part of this request.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids to modify.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'instructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/MultipleProcessInstanceModificationInstructionDto'}, 'description': 'An array of modification instructions. The instructions are executed in the order they are in. '}, 'annotation': {'type': 'string', 'nullable': True, 'description': 'An arbitrary text annotation set by a user for auditing reasons.'}}} Usage: cctl&nbsp;apply executeModification [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply executeModificationAsync \u00b6 Execute Modification Async (Batch) Executes a modification asynchronously for multiple process instances. To execute a modification synchronously, use the Execute Modification method. For more information about the difference between synchronous and asynchronous execution of a modification, please refer to the related section of the user guide . URL: /modification/executeAsync Schema: {'type': 'object', 'properties': {'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the process definition for the modification'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started or ended as part\\nof this request.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution of [input/output variable mappings](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#input-output-variable-mapping) for\\nactivities that are started or ended as part of this request.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids to modify.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'instructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/MultipleProcessInstanceModificationInstructionDto'}, 'description': 'An array of modification instructions. The instructions are executed in the order they are in. '}, 'annotation': {'type': 'string', 'nullable': True, 'description': 'An arbitrary text annotation set by a user for auditing reasons.'}}} Usage: cctl&nbsp;apply executeModificationAsync [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply extendLock \u00b6 Extend Lock Extends the timeout of the lock by a given amount of time. URL: /external-task/{id}/extendLock Schema: {'allOf': [{'type': 'object', 'properties': {'newDuration': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'An amount of time (in milliseconds). This is the new lock duration starting from the\\ncurrent moment.'}}}, {'$ref': '#/components/schemas/HandleExternalTaskDto'}]} Usage: cctl&nbsp;apply extendLock [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply externalTaskResourcePriority \u00b6 Set Priority Sets the priority of an existing external task by id. The default value of a priority is 0. URL: /external-task/{id}/priority Schema: {'type': 'object', 'properties': {'priority': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'The priority of the resource.'}}} Usage: cctl&nbsp;apply externalTaskResourcePriority [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply externalTaskResourceRetries \u00b6 Set Retries Sets the number of retries left to execute an external task by id. If retries are set to 0, an incident is created. URL: /external-task/{id}/retries Schema: {'type': 'object', 'properties': {'retries': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'The number of retries to set for the resource. Must be >= 0. If this is 0, an incident is created\\nand the task, or job, cannot be fetched, or acquired anymore unless the retries are increased again.\\nCan not be null.'}}} Usage: cctl&nbsp;apply externalTaskResourceRetries [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply externalTaskRetries \u00b6 Set Retries Sync Sets the number of retries left to execute external tasks by id synchronously. If retries are set to 0, an incident is created. URL: /external-task/retries Schema: {'type': 'object', 'properties': {'retries': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'The number of retries to set for the external task. Must be >= 0. If this is 0, an incident is created\\nand the task cannot be fetched anymore unless the retries are increased again. Can not be null.'}, 'externalTaskIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'The ids of the external tasks to set the number of retries for.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'The ids of process instances containing the tasks to set the number of retries for.'}, 'externalTaskQuery': {'$ref': '#/components/schemas/ExternalTaskQueryDto'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}}} Usage: cctl&nbsp;apply externalTaskRetries [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply externalTaskRetriesAsyncOperation \u00b6 Set Retries Async Sets the number of retries left to execute external tasks by id asynchronously. If retries are set to 0, an incident is created. URL: /external-task/retries-async Schema: {'type': 'object', 'properties': {'retries': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'The number of retries to set for the external task. Must be >= 0. If this is 0, an incident is created\\nand the task cannot be fetched anymore unless the retries are increased again. Can not be null.'}, 'externalTaskIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'The ids of the external tasks to set the number of retries for.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'The ids of process instances containing the tasks to set the number of retries for.'}, 'externalTaskQuery': {'$ref': '#/components/schemas/ExternalTaskQueryDto'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}}} Usage: cctl&nbsp;apply externalTaskRetriesAsyncOperation [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply fetchAndLock \u00b6 Fetch and Lock Fetches and locks a specific number of external tasks for execution by a worker. Query can be restricted to specific task topics and for each task topic an individual lock time can be provided. URL: /external-task/fetchAndLock Schema: {'type': 'object', 'required': ['workerId', 'maxTasks'], 'properties': {'workerId': {'type': 'string', 'description': '**Mandatory.** The id of the worker on which behalf tasks are fetched. The returned tasks are locked for\\nthat worker and can only be completed when providing the same worker id.'}, 'maxTasks': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': '**Mandatory.** The maximum number of tasks to return.'}, 'usePriority': {'type': 'boolean', 'nullable': True, 'description': 'A boolean value, which indicates whether the task should be fetched based on its priority\\nor arbitrarily.'}, 'asyncResponseTimeout': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'The [Long Polling](https://docs.camunda.org/manual/latest/user-guide/process-engine/external-tasks/#long-polling-to-fetch-and-lock-external-tasks)\\ntimeout in milliseconds.\\n\\n**Note:** The value cannot be set larger than 1.800.000 milliseconds (corresponds to 30 minutes).'}, 'topics': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/FetchExternalTaskTopicDto'}, 'description': 'A JSON array of topic objects for which external tasks should be fetched. The returned tasks may be\\narbitrarily distributed among these topics. Each topic object has the following properties:'}}} Usage: cctl&nbsp;apply fetchAndLock [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply filter \u00b6 Update Filter Updates an existing filter. URL: /filter/{id} Schema: {'type': 'object', 'properties': {'resourceType': {'type': 'string', 'nullable': True, 'description': 'The resource type of the filter.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'The name of the filter.'}, 'owner': {'type': 'string', 'nullable': True, 'description': 'The user id of the owner of the filter.'}, 'query': {'type': 'object', 'description': 'The query of the filter as a JSON object.'}, 'properties': {'type': 'object', 'description': 'The properties of a filter as a JSON object.'}}} Usage: cctl&nbsp;apply filter [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply generateMigrationPlan \u00b6 Generate Migration Plan Generates a migration plan for two process definitions. The generated migration plan contains migration instructions which map equal activities between the two process definitions. URL: /migration/generate Schema: {'type': 'object', 'properties': {'sourceProcessDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the source process definition for the migration.'}, 'targetProcessDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the target process definition for the migration.'}, 'updateEventTriggers': {'type': 'boolean', 'nullable': True, 'description': 'A boolean flag indicating whether instructions between events should be configured\\nto update the event triggers.'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': \"A map of variables which will be set into the process instances' scope.\\nEach key is a variable name and each value a JSON variable value object.\"}}} Usage: cctl&nbsp;apply generateMigrationPlan [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply group \u00b6 Update Group Updates a given group by id. URL: /group/{id} Schema: {'type': 'object', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'The id of the group.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'The name of the group.'}, 'type': {'type': 'string', 'nullable': True, 'description': 'The type of the group.'}}} Usage: cctl&nbsp;apply group [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply handleBpmnError \u00b6 Handle BPMN Error Reports a business error in the context of a running task by id. The error code must be specified to identify the BPMN error handler. See the documentation for Reporting Bpmn Error in User Tasks. URL: /task/{id}/bpmnError Schema: {'type': 'object', 'properties': {'errorCode': {'type': 'string', 'nullable': True, 'description': 'An error code that indicates the predefined error. It is used to identify the BPMN\\nerror handler.'}, 'errorMessage': {'type': 'string', 'nullable': True, 'description': 'An error message that describes the error.'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs.'}}} Usage: cctl&nbsp;apply handleBpmnError [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply handleEscalation \u00b6 Handle BPMN Escalation Reports an escalation in the context of a running task by id. The escalation code must be specified to identify the escalation handler. See the documentation for Reporting Bpmn Escalation in User Tasks. URL: /task/{id}/bpmnEscalation Schema: {'type': 'object', 'properties': {'escalationCode': {'type': 'string', 'nullable': True, 'description': 'An escalation code that indicates the predefined escalation. It is used to identify\\nthe BPMN escalation handler.'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs.'}}} Usage: cctl&nbsp;apply handleEscalation [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply handleExternalTaskBpmnError \u00b6 Handle BPMN Error Reports a business error in the context of a running external task by id. The error code must be specified to identify the BPMN error handler. URL: /external-task/{id}/bpmnError Schema: {'allOf': [{'type': 'object', 'properties': {'workerId': {'type': 'string', 'nullable': True, 'description': 'The id of the worker that reports the failure. Must match the id of the worker who has most recently\\nlocked the task.'}}}, {'$ref': '#/components/schemas/TaskBpmnErrorDto'}]} Usage: cctl&nbsp;apply handleExternalTaskBpmnError [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply handleFailure \u00b6 Handle Failure Reports a failure to execute an external task by id. A number of retries and a timeout until the task can be retried can be specified. If retries are set to 0, an incident for this task is created. URL: /external-task/{id}/failure Schema: {'allOf': [{'type': 'object', 'properties': {'errorMessage': {'type': 'string', 'nullable': True, 'description': 'An message indicating the reason of the failure.'}, 'errorDetails': {'type': 'string', 'nullable': True, 'description': 'A detailed error description.'}, 'retries': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': \"A number of how often the task should be retried. Must be >= 0. If this is 0, an incident is created and\\nthe task cannot be fetched anymore unless the retries are increased again. The incident's message is set\\nto the errorMessage parameter.\"}, 'retryTimeout': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'A timeout in milliseconds before the external task becomes available again for fetching. Must be >= 0.'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs. Each key is a variable name and each value a JSON variable value object with the following properties:'}, 'localVariables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing local variable key-value pairs. Local variables are set only in the scope of external task. Each key is a variable name and each value a JSON variable value object with the following properties:'}}}, {'$ref': '#/components/schemas/HandleExternalTaskDto'}]} Usage: cctl&nbsp;apply handleFailure [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply historicProcessInstancesAsync \u00b6 Delete Async (POST) Delete multiple historic process instances asynchronously (batch). At least historicProcessInstanceIds or historicProcessInstanceQuery has to be provided. If both are provided then all instances matching query criterion and instances from the list will be deleted. URL: /history/process-instance/delete Schema: {'type': 'object', 'properties': {'historicProcessInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list historic process instance ids to delete.'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}, 'deleteReason': {'type': 'string', 'nullable': True, 'description': 'A string with delete reason.'}, 'failIfNotExists': {'type': 'boolean', 'nullable': True, 'description': 'If set to false , the request will still be successful if one ore more of the process ids are not found.'}}} Usage: cctl&nbsp;apply historicProcessInstancesAsync [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply historyTimeToLiveByDecisionDefinitionId \u00b6 Update History Time to Live Updates history time to live for decision definition. The field is used within History cleanup . URL: /decision-definition/{id}/history-time-to-live Schema: {'type': 'object', 'properties': {'historyTimeToLive': {'type': 'integer', 'format': 'int32', 'nullable': True, 'minimum': 0, 'description': 'New value for historyTimeToLive field of the definition.\\nCan be null . Can not be negative.'}}} Usage: cctl&nbsp;apply historyTimeToLiveByDecisionDefinitionId [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply historyTimeToLiveByDecisionDefinitionKey \u00b6 Update History Time to Live By Key Updates the latest version of the decision definition which belongs to no tenant. The field is used within History cleanup . URL: /decision-definition/key/{key}/history-time-to-live Schema: {'type': 'object', 'properties': {'historyTimeToLive': {'type': 'integer', 'format': 'int32', 'nullable': True, 'minimum': 0, 'description': 'New value for historyTimeToLive field of the definition.\\nCan be null . Can not be negative.'}}} Usage: cctl&nbsp;apply historyTimeToLiveByDecisionDefinitionKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply historyTimeToLiveByDecisionDefinitionKeyAndTenant \u00b6 Update History Time to Live By Key And Tenant Updates the latest version of the decision definition for tenant. The field is used within History cleanup . URL: /decision-definition/key/{key}/tenant-id/{tenant-id}/history-time-to-live Schema: {'type': 'object', 'properties': {'historyTimeToLive': {'type': 'integer', 'format': 'int32', 'nullable': True, 'minimum': 0, 'description': 'New value for historyTimeToLive field of the definition.\\nCan be null . Can not be negative.'}}} Usage: cctl&nbsp;apply historyTimeToLiveByDecisionDefinitionKeyAndTenant [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply historyTimeToLiveByProcessDefinitionId \u00b6 Update History Time to Live Updates history time to live for process definition. The field is used within History cleanup . URL: /process-definition/{id}/history-time-to-live Schema: {'type': 'object', 'properties': {'historyTimeToLive': {'type': 'integer', 'format': 'int32', 'nullable': True, 'minimum': 0, 'description': 'New value for historyTimeToLive field of the definition.\\nCan be null . Can not be negative.'}}} Usage: cctl&nbsp;apply historyTimeToLiveByProcessDefinitionId [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply historyTimeToLiveByProcessDefinitionKey \u00b6 Update History Time to Live Updates history time to live for the latest version of the process definition which belongs to no tenant. The field is used within History cleanup . URL: /process-definition/key/{key}/history-time-to-live Schema: {'type': 'object', 'properties': {'historyTimeToLive': {'type': 'integer', 'format': 'int32', 'nullable': True, 'minimum': 0, 'description': 'New value for historyTimeToLive field of the definition.\\nCan be null . Can not be negative.'}}} Usage: cctl&nbsp;apply historyTimeToLiveByProcessDefinitionKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply historyTimeToLiveByProcessDefinitionKeyAndTenantId \u00b6 Update History Time to Live Updates history time to live for the latest version of the process definition for a tenant. The field is used within History cleanup . URL: /process-definition/key/{key}/tenant-id/{tenant-id}/history-time-to-live Schema: {'type': 'object', 'properties': {'historyTimeToLive': {'type': 'integer', 'format': 'int32', 'nullable': True, 'minimum': 0, 'description': 'New value for historyTimeToLive field of the definition.\\nCan be null . Can not be negative.'}}} Usage: cctl&nbsp;apply historyTimeToLiveByProcessDefinitionKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply identityLink \u00b6 Delete Removes an identity link from a task by id URL: /task/{id}/identity-links/delete Schema: {'type': 'object', 'required': ['type'], 'properties': {'userId': {'type': 'string', 'nullable': True, 'description': 'The id of the user participating in this link. Either userId or groupId is set.'}, 'groupId': {'type': 'string', 'nullable': True, 'description': 'The id of the group participating in this link. Either groupId or userId is set.'}, 'type': {'type': 'string', 'nullable': True, 'description': 'The type of the identity link. The value of the this property can be user-defined. The Process Engine\\nprovides three pre-defined Identity Link type s:\\n\\n* candidate \\n* assignee - reserved for the task assignee\\n* owner - reserved for the task owner\\n\\n**Note**: When adding or removing an Identity Link, the type property must be defined.'}}} Usage: cctl&nbsp;apply identityLink [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply incidentAnnotation \u00b6 Set Incident Annotation Sets the annotation of an incident with given id. URL: /incident/{id}/annotation Schema: {'type': 'object', 'properties': {'annotation': {'type': 'string', 'nullable': True, 'description': 'The annotation value to put.'}}} Usage: cctl&nbsp;apply incidentAnnotation [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply jobDuedate \u00b6 Set Job Due Date Updates the due date of a job by id. URL: /job/{id}/duedate Schema: {'type': 'object', 'properties': {'duedate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': 'The date to set when the job has the next execution.'}, 'cascade': {'type': 'boolean', 'nullable': True, 'description': 'A boolean value to indicate if modifications to the due date should cascade to\\nsubsequent jobs. (e.g. Modify the due date of a timer by +15\\nminutes. This flag indicates if a +15 minutes should be applied to all\\nsubsequent timers.) This flag only affects timer jobs and only works if due date\\nis not null. Default: false '}}} Usage: cctl&nbsp;apply jobDuedate [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply jobPriority \u00b6 Set Job Priority Sets the execution priority of a job by id. URL: /job/{id}/priority Schema: {'type': 'object', 'properties': {'priority': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'The priority of the resource.'}}} Usage: cctl&nbsp;apply jobPriority [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply jobPriorityJobDefinition \u00b6 Set Job Definition Priority by Id Sets an overriding execution priority for jobs with the given definition id. Optionally, the priorities of all the definitions' existing jobs are updated accordingly. The priority can be reset by setting it to null , meaning that a new job's priority will not be determined based on its definition's priority any longer. See the user guide on job prioritization for details. URL: /job-definition/{id}/jobPriority Schema: {'type': 'object', 'properties': {'priority': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': \"The new execution priority number for jobs of the given definition. The\\ndefinition's priority can be reset by using the value null . In\\nthat case, the job definition's priority no longer applies but a new\\njob's priority is determined as specified in the process model.\"}, 'includeJobs': {'type': 'boolean', 'nullable': True, 'description': 'A boolean value indicating whether existing jobs of the given definition should\\nreceive the priority as well. Default value is false . Can only be\\n true when the __priority__ parameter is not null .'}}} Usage: cctl&nbsp;apply jobPriorityJobDefinition [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply jobRetries \u00b6 Set Job Retries Sets the retries of the job to the given number of retries by id. URL: /job/{id}/retries Schema: {'type': 'object', 'properties': {'retries': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'The number of retries to set for the resource. Must be >= 0. If this is 0, an incident is created\\nand the task, or job, cannot be fetched, or acquired anymore unless the retries are increased again.\\nCan not be null.'}}} Usage: cctl&nbsp;apply jobRetries [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply jobRetriesAsyncOperation \u00b6 Set Job Retries Async (POST) Create a batch to set retries of jobs asynchronously. URL: /job/retries Schema: {'type': 'object', 'description': 'Defines the number of retries for a selection of jobs.\\nPlease note that if both jobIds and jobQuery are provided,\\nthen retries will be set on the union of these sets.', 'properties': {'jobIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of job ids to set retries for.'}, 'jobQuery': {'$ref': '#/components/schemas/JobQueryDto'}, 'retries': {'type': 'integer', 'format': 'int32', 'nullable': True, 'minimum': 0, 'description': 'An integer representing the number of retries. Please note that the value cannot be\\nnegative or null.'}}} Usage: cctl&nbsp;apply jobRetriesAsyncOperation [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply jobRetriesJobDefinition \u00b6 Set Job Retries By Job Definition Id Sets the number of retries of all failed jobs associated with the given job definition id. URL: /job-definition/{id}/retries Schema: {'type': 'object', 'properties': {'retries': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'The number of retries to set for the resource. Must be >= 0. If this is 0, an incident is created\\nand the task, or job, cannot be fetched, or acquired anymore unless the retries are increased again.\\nCan not be null.'}}} Usage: cctl&nbsp;apply jobRetriesJobDefinition [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply jobSuspensionState \u00b6 Activate/Suspend Job By Id Activates or suspends a given job by id. URL: /job/{id}/suspended Schema: {'type': 'object', 'properties': {'suspended': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend a given instance \\n(e.g. process instance, job, job definition, or batch). When the value is set to true, \\nthe given instance will be suspended and when the value is set to false, \\nthe given instance will be activated.'}}} Usage: cctl&nbsp;apply jobSuspensionState [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply localExecutionVariableBinary \u00b6 Post Local Execution Variable (Binary) Sets the serialized value for a binary variable or the binary value for a file variable in the context of a given execution by id. URL: /execution/{id}/localVariables/{varName}/data Schema: - Usage: cctl&nbsp;apply localExecutionVariableBinary [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply lock \u00b6 Lock an external task by a given id for a specified worker and amount of time. URL: /external-task/{id}/lock Schema: {'allOf': [{'type': 'object', 'properties': {'lockDuration': {'type': 'integer', 'format': 'int64', 'description': 'The duration to lock the external task for in milliseconds.\\n**Note:** Attempting to lock an already locked external task with the same workerId \\nwill succeed and a new lock duration will be set, starting from the current moment.'}}}, {'$ref': '#/components/schemas/HandleExternalTaskDto'}]} Usage: cctl&nbsp;apply lock [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply modifyLocalExecutionVariables \u00b6 Update/Delete Local Execution Variables Updates or deletes the variables in the context of an execution by id. The updates do not propagate upwards in the execution hierarchy. Updates precede deletions. So, if a variable is updated AND deleted, the deletion overrides the update. URL: /execution/{id}/localVariables Schema: {'type': 'object', 'properties': {'modifications': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs.'}, 'deletions': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'An array of String keys of variables to be deleted.'}}} Usage: cctl&nbsp;apply modifyLocalExecutionVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply modifyProcessInstance \u00b6 Modify Process Instance Execution State Submits a list of modification instructions to change a process instance's execution state. A modification instruction is one of the following: Starting execution before an activity Starting execution after an activity on its single outgoing sequence flow Starting execution on a specific sequence flow Canceling an activity instance, transition instance, or all instances (activity or transition) for an activity Instructions are executed immediately and in the order they are provided in this request's body. Variables can be provided with every starting instruction. The exact semantics of modification can be read about in the User guide . URL: /process-instance/{id}/modification Schema: {'type': 'object', 'properties': {'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started or ended as part of this request.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution of [input/output variable mappings](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#input-output-variable-mapping)\\nfor activities that are started or ended as part of this request.'}, 'instructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/ProcessInstanceModificationInstructionDto'}, 'description': 'JSON array of modification instructions. The instructions are executed in the order they are in.'}, 'annotation': {'type': 'string', 'nullable': True, 'description': 'An arbitrary text annotation set by a user for auditing reasons.'}}} Usage: cctl&nbsp;apply modifyProcessInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply modifyProcessInstanceAsyncOperation \u00b6 Modify Process Instance Execution State Async Submits a list of modification instructions to change a process instance's execution state async. A modification instruction is one of the following: Starting execution before an activity Starting execution after an activity on its single outgoing sequence flow Starting execution on a specific sequence flow Cancelling an activity instance, transition instance, or all instances (activity or transition) for an activity Instructions are executed asynchronous and in the order they are provided in this request's body. Variables can be provided with every starting instruction. The exact semantics of modification can be read about in the User guide . URL: /process-instance/{id}/modification-async Schema: {'type': 'object', 'properties': {'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started or ended as part of this request.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution of [input/output variable mappings](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#input-output-variable-mapping)\\nfor activities that are started or ended as part of this request.'}, 'instructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/ProcessInstanceModificationInstructionDto'}, 'description': 'JSON array of modification instructions. The instructions are executed in the order they are in.'}, 'annotation': {'type': 'string', 'nullable': True, 'description': 'An arbitrary text annotation set by a user for auditing reasons.'}}} Usage: cctl&nbsp;apply modifyProcessInstanceAsyncOperation [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply modifyProcessInstanceVariables \u00b6 Update/Delete Process Variables Updates or deletes the variables of a process instance by id. Updates precede deletions. So, if a variable is updated AND deleted, the deletion overrides the update. URL: /process-instance/{id}/variables Schema: {'type': 'object', 'properties': {'modifications': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs.'}, 'deletions': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'An array of String keys of variables to be deleted.'}}} Usage: cctl&nbsp;apply modifyProcessInstanceVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply modifyTaskLocalVariables \u00b6 Update/Delete Local Task Variables Updates or deletes the variables in the context of a task. Updates precede deletions. So, if a variable is updated AND deleted, the deletion overrides the update. URL: /task/{id}/localVariables Schema: {'type': 'object', 'properties': {'modifications': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs.'}, 'deletions': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'An array of String keys of variables to be deleted.'}}} Usage: cctl&nbsp;apply modifyTaskLocalVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply modifyTaskVariables \u00b6 Update/Delete Task Variables Updates or deletes the variables visible from the task. Updates precede deletions. So, if a variable is updated AND deleted, the deletion overrides the update. A variable is visible from the task if it is a local task variable or declared in a parent scope of the task. See documentation on visiblity of variables . URL: /task/{id}/variables Schema: {'type': 'object', 'properties': {'modifications': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs.'}, 'deletions': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'An array of String keys of variables to be deleted.'}}} Usage: cctl&nbsp;apply modifyTaskVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply postExecuteFilterCount \u00b6 Execute Filter Count (POST) Executes the saved query of the filter by id and returns the count. This method is slightly more powerful then the Get Execute Filter Count method because it allows to extend the saved query of the filter. URL: /filter/{id}/count Schema: - Usage: cctl&nbsp;apply postExecuteFilterCount [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply postExecuteFilterList \u00b6 Execute Filter List (POST) Executes the saved query of the filter by id and returns the result list. This method is slightly more powerful then the Get Execute FilterList method because it allows to extend the saved query of the filter. URL: /filter/{id}/list Schema: - Usage: cctl&nbsp;apply postExecuteFilterList [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply postExecuteFilterSingleResult \u00b6 Execute Filter Single Result (POST) Executes the saved query of the filter by id and returns the single result. This method is slightly more powerful then the Get Execute Filter Single Result method because it allows to extend the saved query of the filter. URL: /filter/{id}/singleResult Schema: - Usage: cctl&nbsp;apply postExecuteFilterSingleResult [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply postQueryGroups \u00b6 Get List (POST) Queries for a list of groups using a list of parameters. The size of the result set can be retrieved by using the Get Group Count (POST) method. URL: /group Schema: {'type': 'object', 'description': 'A group instance query which defines a list of group instances', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the group.'}, 'idIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a JSON string array of group ids.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'Filter by the name of the group.'}, 'nameLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the name that the parameter is a substring of.'}, 'type': {'type': 'string', 'nullable': True, 'description': 'Filter by the type of the group.'}, 'member': {'type': 'string', 'nullable': True, 'description': 'Only retrieve groups where the given user id is a member of.'}, 'memberOfTenant': {'type': 'string', 'nullable': True, 'description': 'Only retrieve groups which are members of the given tenant.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['id', 'name', 'type'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply postQueryGroups [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply processDefinitionSuspensionState \u00b6 Activate/Suspend By Key Activates or suspends process definitions with the given process definition key. URL: /process-definition/suspended Schema: {'type': 'object', 'properties': {'suspended': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend all process definitions with the given key.\\nWhen the value is set to true , all process definitions with the given key will be suspended and\\nwhen the value is set to false , all process definitions with the given key will be activated.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the process definitions to activate or suspend.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'The key of the process definitions to activate or suspend.'}, 'includeProcessInstances': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend also all process instances of \\nthe process definitions with the given key.\\nWhen the value is set to true , all process instances of the process definitions with the given key\\nwill be activated or suspended and when the value is set to false , the suspension state of \\nall process instances of the process definitions with the given key will not be updated.'}, 'executionDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The date on which all process definitions with the given key will be activated or suspended.\\nIf null , the suspension state of all process definitions with the given key is updated immediately.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}}} Usage: cctl&nbsp;apply processDefinitionSuspensionState [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply processDefinitionSuspensionStateById \u00b6 Activate/Suspend By Id Activates or suspends a given process definition by id. URL: /process-definition/{id}/suspended Schema: {'type': 'object', 'properties': {'suspended': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend all process definitions with the given key.\\nWhen the value is set to true , all process definitions with the given key will be suspended and\\nwhen the value is set to false , all process definitions with the given key will be activated.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the process definitions to activate or suspend.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'The key of the process definitions to activate or suspend.'}, 'includeProcessInstances': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend also all process instances of \\nthe process definitions with the given key.\\nWhen the value is set to true , all process instances of the process definitions with the given key\\nwill be activated or suspended and when the value is set to false , the suspension state of \\nall process instances of the process definitions with the given key will not be updated.'}, 'executionDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The date on which all process definitions with the given key will be activated or suspended.\\nIf null , the suspension state of all process definitions with the given key is updated immediately.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}}} Usage: cctl&nbsp;apply processDefinitionSuspensionStateById [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply processDefinitionSuspensionStateByKey \u00b6 Activate/Suspend by Id Activates or suspends a given process definition by latest version of process definition key which belongs to no tenant. URL: /process-definition/key/{key}/suspended Schema: {'type': 'object', 'properties': {'suspended': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend all process definitions with the given key.\\nWhen the value is set to true , all process definitions with the given key will be suspended and\\nwhen the value is set to false , all process definitions with the given key will be activated.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the process definitions to activate or suspend.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'The key of the process definitions to activate or suspend.'}, 'includeProcessInstances': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend also all process instances of \\nthe process definitions with the given key.\\nWhen the value is set to true , all process instances of the process definitions with the given key\\nwill be activated or suspended and when the value is set to false , the suspension state of \\nall process instances of the process definitions with the given key will not be updated.'}, 'executionDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The date on which all process definitions with the given key will be activated or suspended.\\nIf null , the suspension state of all process definitions with the given key is updated immediately.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}}} Usage: cctl&nbsp;apply processDefinitionSuspensionStateByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply processDefinitionSuspensionStateByKeyAndTenantId \u00b6 Activate/Suspend by Id Activates or suspends a given process definition by the latest version of the process definition for tenant. URL: /process-definition/key/{key}/tenant-id/{tenant-id}/suspended Schema: {'type': 'object', 'properties': {'suspended': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend all process definitions with the given key.\\nWhen the value is set to true , all process definitions with the given key will be suspended and\\nwhen the value is set to false , all process definitions with the given key will be activated.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the process definitions to activate or suspend.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'The key of the process definitions to activate or suspend.'}, 'includeProcessInstances': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend also all process instances of \\nthe process definitions with the given key.\\nWhen the value is set to true , all process instances of the process definitions with the given key\\nwill be activated or suspended and when the value is set to false , the suspension state of \\nall process instances of the process definitions with the given key will not be updated.'}, 'executionDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The date on which all process definitions with the given key will be activated or suspended.\\nIf null , the suspension state of all process definitions with the given key is updated immediately.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}}} Usage: cctl&nbsp;apply processDefinitionSuspensionStateByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply processInstanceVariable \u00b6 Update Process Variable Sets a variable of a given process instance by id. URL: /process-instance/{id}/variables/{varName} Schema: {'type': 'object', 'properties': {'value': {'$ref': '#/components/schemas/AnyValue'}, 'type': {'type': 'string', 'nullable': True, 'description': 'The value type of the variable.'}, 'valueInfo': {'type': 'object', 'additionalProperties': True, 'description': \"A JSON object containing additional, value-type-dependent properties.\\nFor serialized variables of type Object, the following properties can be provided:\\n\\n* objectTypeName : A string representation of the object's type name.\\n* serializationDataFormat : The serialization format used to store the variable.\\n\\nFor serialized variables of type File, the following properties can be provided:\\n\\n* filename : The name of the file. This is not the variable name but the name that will be used when downloading the file again.\\n* mimetype : The MIME type of the file that is being uploaded.\\n* encoding : The encoding of the file that is being uploaded.\\n\\nThe following property can be provided for all value types:\\n\\n* transient : Indicates whether the variable should be transient or\\nnot. See [documentation](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables#transient-variables) for more informations.\\n(Not applicable for decision-definition , /process-instance/variables-async , and /migration/executeAsync endpoints)\"}}} Usage: cctl&nbsp;apply processInstanceVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply processInstanceVariableBinary \u00b6 Update Process Variable (Binary) Sets the serialized value for a binary variable or the binary value for a file variable. URL: /process-instance/{id}/variables/{varName}/data Schema: - Usage: cctl&nbsp;apply processInstanceVariableBinary [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply processInstancesAsyncOperation \u00b6 Delete Async (POST) Deletes multiple process instances asynchronously (batch). URL: /process-instance/delete Schema: {'type': 'object', 'properties': {'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list process instance ids to delete.'}, 'deleteReason': {'type': 'string', 'nullable': True, 'description': 'A string with delete reason.'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started or ended as part of this request.'}, 'skipSubprocesses': {'type': 'boolean', 'nullable': True, 'description': 'Skip deletion of the subprocesses related to deleted processes as part of this request.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}}} Usage: cctl&nbsp;apply processInstancesAsyncOperation [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply profile \u00b6 Update User Profile Updates the profile information of an already existing user. URL: /user/{id}/profile Schema: {'type': 'object', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'The id of the user.'}, 'firstName': {'type': 'string', 'nullable': True, 'description': 'The first name of the user.'}, 'lastName': {'type': 'string', 'nullable': True, 'description': 'The first name of the user.'}, 'email': {'type': 'string', 'nullable': True, 'description': 'The email of the user.'}}} Usage: cctl&nbsp;apply profile [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply putLocalExecutionVariable \u00b6 Put Local Execution Variable Sets a variable in the context of a given execution by id. Update does not propagate upwards in the execution hierarchy. URL: /execution/{id}/localVariables/{varName} Schema: {'type': 'object', 'properties': {'value': {'$ref': '#/components/schemas/AnyValue'}, 'type': {'type': 'string', 'nullable': True, 'description': 'The value type of the variable.'}, 'valueInfo': {'type': 'object', 'additionalProperties': True, 'description': \"A JSON object containing additional, value-type-dependent properties.\\nFor serialized variables of type Object, the following properties can be provided:\\n\\n* objectTypeName : A string representation of the object's type name.\\n* serializationDataFormat : The serialization format used to store the variable.\\n\\nFor serialized variables of type File, the following properties can be provided:\\n\\n* filename : The name of the file. This is not the variable name but the name that will be used when downloading the file again.\\n* mimetype : The MIME type of the file that is being uploaded.\\n* encoding : The encoding of the file that is being uploaded.\\n\\nThe following property can be provided for all value types:\\n\\n* transient : Indicates whether the variable should be transient or\\nnot. See [documentation](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables#transient-variables) for more informations.\\n(Not applicable for decision-definition , /process-instance/variables-async , and /migration/executeAsync endpoints)\"}}} Usage: cctl&nbsp;apply putLocalExecutionVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply putTaskLocalVariable \u00b6 Update Local Task Variable Sets a variable in the context of a given task. URL: /task/{id}/localVariables/{varName} Schema: {'type': 'object', 'properties': {'value': {'$ref': '#/components/schemas/AnyValue'}, 'type': {'type': 'string', 'nullable': True, 'description': 'The value type of the variable.'}, 'valueInfo': {'type': 'object', 'additionalProperties': True, 'description': \"A JSON object containing additional, value-type-dependent properties.\\nFor serialized variables of type Object, the following properties can be provided:\\n\\n* objectTypeName : A string representation of the object's type name.\\n* serializationDataFormat : The serialization format used to store the variable.\\n\\nFor serialized variables of type File, the following properties can be provided:\\n\\n* filename : The name of the file. This is not the variable name but the name that will be used when downloading the file again.\\n* mimetype : The MIME type of the file that is being uploaded.\\n* encoding : The encoding of the file that is being uploaded.\\n\\nThe following property can be provided for all value types:\\n\\n* transient : Indicates whether the variable should be transient or\\nnot. See [documentation](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables#transient-variables) for more informations.\\n(Not applicable for decision-definition , /process-instance/variables-async , and /migration/executeAsync endpoints)\"}}} Usage: cctl&nbsp;apply putTaskLocalVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply putTaskVariable \u00b6 Update Task Variable Updates a process variable that is visible from the Task scope. A variable is visible from the task if it is a local task variable, or declared in a parent scope of the task. See the documentation on variable scopes and visibility . Note : If a variable doesn't exist, the variable is created in the top-most scope visible from the task. URL: /task/{id}/variables/{varName} Schema: {'type': 'object', 'properties': {'value': {'$ref': '#/components/schemas/AnyValue'}, 'type': {'type': 'string', 'nullable': True, 'description': 'The value type of the variable.'}, 'valueInfo': {'type': 'object', 'additionalProperties': True, 'description': \"A JSON object containing additional, value-type-dependent properties.\\nFor serialized variables of type Object, the following properties can be provided:\\n\\n* objectTypeName : A string representation of the object's type name.\\n* serializationDataFormat : The serialization format used to store the variable.\\n\\nFor serialized variables of type File, the following properties can be provided:\\n\\n* filename : The name of the file. This is not the variable name but the name that will be used when downloading the file again.\\n* mimetype : The MIME type of the file that is being uploaded.\\n* encoding : The encoding of the file that is being uploaded.\\n\\nThe following property can be provided for all value types:\\n\\n* transient : Indicates whether the variable should be transient or\\nnot. See [documentation](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables#transient-variables) for more informations.\\n(Not applicable for decision-definition , /process-instance/variables-async , and /migration/executeAsync endpoints)\"}}} Usage: cctl&nbsp;apply putTaskVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryExecutions \u00b6 Get Executions (POST) Queries for executions that fulfill given parameters through a JSON object. This method is slightly more powerful than the Get Executions method because it allows to filter by multiple instance and execution variables of types String , Number or Boolean . URL: /execution Schema: {'type': 'object', 'description': 'A Execution instance query which defines a list of Execution instances', 'properties': {'businessKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the business key of the process instances the executions belong to.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process definition the executions run on.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the key of the process definition the executions run on.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the process instance the execution belongs to.'}, 'activityId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the activity the execution currently executes.'}, 'signalEventSubscriptionName': {'type': 'string', 'nullable': True, 'description': 'Select only those executions that expect a signal of the given name.'}, 'messageEventSubscriptionName': {'type': 'string', 'nullable': True, 'description': 'Select only those executions that expect a message of the given name.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active executions. Value may only be true , as false is the default\\nbehavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended executions. Value may only be true , as false is the default\\nbehavior.'}, 'incidentId': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident id.'}, 'incidentType': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident type. See the [User Guide](/manual/develop/user-guide/process-engine/incidents/#incident-types) for a list of incident types.'}, 'incidentMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message. Exact match.'}, 'incidentMessageLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message that the parameter is a substring of.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of tenant ids. An execution must have one of the given\\ntenant ids.'}, 'variables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'An array to only include executions that have variables with certain values.\\n\\nThe array consists of objects with the three properties name , operator \\nand value .\\n name (String) is the variable name, operator (String) is the comparison\\noperator to be used and value the variable value.\\n value may be String , Number or Boolean .\\n\\nValid operator values are: eq - equal to; neq - not equal to; gt -\\ngreater than;\\n gteq - greater than or equal to; lt - lower than; lteq - lower than or\\nequal to;\\n like .'}, 'processVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'An array to only include executions that belong to a process instance with variables\\nwith certain values.\\n\\nThe array consists of objects with the three properties name , operator \\nand value .\\n name (String) is the variable name, operator (String) is the comparison\\noperator to be used and value the variable value.\\n value may be String , Number or Boolean .\\n\\nValid operator values are: eq - equal to; neq - not equal to.'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable names provided in variables and processVariables case-\\ninsensitively. If set to true **variableName** and **variablename** are\\ntreated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable values provided in variables and processVariables case-\\ninsensitively. If set to true **variableValue** and **variablevalue** are\\ntreated as equal.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Has no effect for the /count endpoint', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'definitionKey', 'definitionId', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryExecutions [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryExecutionsCount \u00b6 Get Execution Count (POST) Queries for the number of executions that fulfill given parameters. This method takes the same message body as the Get Executions POST method and therefore it is slightly more powerful than the Get Execution Count method. URL: /execution/count Schema: {'type': 'object', 'description': 'A Execution instance query which defines a list of Execution instances', 'properties': {'businessKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the business key of the process instances the executions belong to.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process definition the executions run on.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the key of the process definition the executions run on.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the process instance the execution belongs to.'}, 'activityId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the activity the execution currently executes.'}, 'signalEventSubscriptionName': {'type': 'string', 'nullable': True, 'description': 'Select only those executions that expect a signal of the given name.'}, 'messageEventSubscriptionName': {'type': 'string', 'nullable': True, 'description': 'Select only those executions that expect a message of the given name.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active executions. Value may only be true , as false is the default\\nbehavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended executions. Value may only be true , as false is the default\\nbehavior.'}, 'incidentId': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident id.'}, 'incidentType': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident type. See the [User Guide](/manual/develop/user-guide/process-engine/incidents/#incident-types) for a list of incident types.'}, 'incidentMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message. Exact match.'}, 'incidentMessageLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message that the parameter is a substring of.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of tenant ids. An execution must have one of the given\\ntenant ids.'}, 'variables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'An array to only include executions that have variables with certain values.\\n\\nThe array consists of objects with the three properties name , operator \\nand value .\\n name (String) is the variable name, operator (String) is the comparison\\noperator to be used and value the variable value.\\n value may be String , Number or Boolean .\\n\\nValid operator values are: eq - equal to; neq - not equal to; gt -\\ngreater than;\\n gteq - greater than or equal to; lt - lower than; lteq - lower than or\\nequal to;\\n like .'}, 'processVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'An array to only include executions that belong to a process instance with variables\\nwith certain values.\\n\\nThe array consists of objects with the three properties name , operator \\nand value .\\n name (String) is the variable name, operator (String) is the comparison\\noperator to be used and value the variable value.\\n value may be String , Number or Boolean .\\n\\nValid operator values are: eq - equal to; neq - not equal to.'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable names provided in variables and processVariables case-\\ninsensitively. If set to true **variableName** and **variablename** are\\ntreated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable values provided in variables and processVariables case-\\ninsensitively. If set to true **variableValue** and **variablevalue** are\\ntreated as equal.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Has no effect for the /count endpoint', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'definitionKey', 'definitionId', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryExecutionsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryExternalTasks \u00b6 Get List (POST) Queries for external tasks that fulfill given parameters in the form of a JSON object. This method is slightly more powerful than the Get External Tasks method because it allows to specify a hierarchical result sorting. URL: /external-task Schema: {'title': 'ExternalTaskQueryDto', 'type': 'object', 'description': 'A JSON object with the following properties:', 'properties': {'externalTaskId': {'type': 'string', 'nullable': True, 'description': \"Filter by an external task's id.\"}, 'externalTaskIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by the comma-separated list of external task ids.'}, 'topicName': {'type': 'string', 'nullable': True, 'description': 'Filter by an external task topic.'}, 'workerId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the worker that the task was most recently locked by.'}, 'locked': {'type': 'boolean', 'nullable': True, 'description': 'Only include external tasks that are currently locked (i.e., they have a lock time and it has not expired).\\nValue may only be true , as false matches any external task.'}, 'notLocked': {'type': 'boolean', 'nullable': True, 'description': 'Only include external tasks that are currently not locked (i.e., they have no lock or it has expired).\\nValue may only be true , as false matches any external task.'}, 'withRetriesLeft': {'type': 'boolean', 'nullable': True, 'description': 'Only include external tasks that have a positive (&gt; 0) number of retries (or null ). Value may only be\\n true , as false matches any external task.'}, 'noRetriesLeft': {'type': 'boolean', 'nullable': True, 'description': 'Only include external tasks that have 0 retries. Value may only be true , as false matches any\\nexternal task.'}, 'lockExpirationAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to external tasks that have a lock that expires after a given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'lockExpirationBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to external tasks that have a lock that expires before a given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'activityId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the activity that an external task is created for.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by the comma-separated list of ids of the activities that an external task is created for.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the execution that an external task belongs to.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the process instance that an external task belongs to.'}, 'processInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a comma-separated list of process instance ids that an external task may belong to.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the process definition that an external task belongs to.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a comma-separated list of tenant ids.\\nAn external task must have one of the given tenant ids.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active tasks. Value may only be true , as false matches any external task.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended tasks. Value may only be true , as false matches any external task.'}, 'priorityHigherThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include jobs with a priority higher than or equal to the given value.\\nValue must be a valid long value.'}, 'priorityLowerThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include jobs with a priority lower than or equal to the given value.\\nValue must be a valid long value.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'A JSON array of criteria to sort the result by. Each element of the array is a JSON object that\\n specifies one ordering. The position in the array identifies the rank of an ordering, i.e., whether\\n it is primary, secondary, etc. The ordering objects have the following properties:\\n\\n **Note:** The sorting properties will not be applied to the External Task count query.', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['id', 'lockExpirationTime', 'processInstanceId', 'processDefinitionId', 'processDefinitionKey', 'taskPriority', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryExternalTasks [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryExternalTasksCount \u00b6 Get List Count (POST) Queries for the number of external tasks that fulfill given parameters. This method takes the same message body as the Get External Tasks (POST) method. URL: /external-task/count Schema: {'title': 'ExternalTaskQueryDto', 'type': 'object', 'description': 'A JSON object with the following properties:', 'properties': {'externalTaskId': {'type': 'string', 'nullable': True, 'description': \"Filter by an external task's id.\"}, 'externalTaskIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by the comma-separated list of external task ids.'}, 'topicName': {'type': 'string', 'nullable': True, 'description': 'Filter by an external task topic.'}, 'workerId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the worker that the task was most recently locked by.'}, 'locked': {'type': 'boolean', 'nullable': True, 'description': 'Only include external tasks that are currently locked (i.e., they have a lock time and it has not expired).\\nValue may only be true , as false matches any external task.'}, 'notLocked': {'type': 'boolean', 'nullable': True, 'description': 'Only include external tasks that are currently not locked (i.e., they have no lock or it has expired).\\nValue may only be true , as false matches any external task.'}, 'withRetriesLeft': {'type': 'boolean', 'nullable': True, 'description': 'Only include external tasks that have a positive (&gt; 0) number of retries (or null ). Value may only be\\n true , as false matches any external task.'}, 'noRetriesLeft': {'type': 'boolean', 'nullable': True, 'description': 'Only include external tasks that have 0 retries. Value may only be true , as false matches any\\nexternal task.'}, 'lockExpirationAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to external tasks that have a lock that expires after a given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'lockExpirationBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to external tasks that have a lock that expires before a given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'activityId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the activity that an external task is created for.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by the comma-separated list of ids of the activities that an external task is created for.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the execution that an external task belongs to.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the process instance that an external task belongs to.'}, 'processInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a comma-separated list of process instance ids that an external task may belong to.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the process definition that an external task belongs to.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a comma-separated list of tenant ids.\\nAn external task must have one of the given tenant ids.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active tasks. Value may only be true , as false matches any external task.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended tasks. Value may only be true , as false matches any external task.'}, 'priorityHigherThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include jobs with a priority higher than or equal to the given value.\\nValue must be a valid long value.'}, 'priorityLowerThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include jobs with a priority lower than or equal to the given value.\\nValue must be a valid long value.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'A JSON array of criteria to sort the result by. Each element of the array is a JSON object that\\n specifies one ordering. The position in the array identifies the rank of an ordering, i.e., whether\\n it is primary, secondary, etc. The ordering objects have the following properties:\\n\\n **Note:** The sorting properties will not be applied to the External Task count query.', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['id', 'lockExpirationTime', 'processInstanceId', 'processDefinitionId', 'processDefinitionKey', 'taskPriority', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryExternalTasksCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryGroupCount \u00b6 Get List Count (POST) Queries for groups using a list of parameters and retrieves the count. URL: /group/count Schema: {'type': 'object', 'description': 'A group instance query which defines a list of group instances', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the group.'}, 'idIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a JSON string array of group ids.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'Filter by the name of the group.'}, 'nameLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the name that the parameter is a substring of.'}, 'type': {'type': 'string', 'nullable': True, 'description': 'Filter by the type of the group.'}, 'member': {'type': 'string', 'nullable': True, 'description': 'Only retrieve groups where the given user id is a member of.'}, 'memberOfTenant': {'type': 'string', 'nullable': True, 'description': 'Only retrieve groups which are members of the given tenant.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['id', 'name', 'type'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryGroupCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryHistoricActivityInstances \u00b6 Get List (POST) Queries for historic activity instances that fulfill the given parameters. The size of the result set can be retrieved by using the Get Historic Activity Instance Count method. URL: /history/activity-instance Schema: {'type': 'object', 'description': 'A historic activity instance query which defines a group of historic activity instances', 'properties': {'activityInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by activity instance id.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition id.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the execution that executed the activity instance.'}, 'activityId': {'type': 'string', 'nullable': True, 'description': 'Filter by the activity id (according to BPMN 2.0 XML).'}, 'activityName': {'type': 'string', 'nullable': True, 'description': 'Filter by the activity name (according to BPMN 2.0 XML).'}, 'activityType': {'type': 'string', 'nullable': True, 'description': 'Filter by activity type.'}, 'taskAssignee': {'type': 'string', 'nullable': True, 'description': 'Only include activity instances that are user tasks and assigned to a given user.'}, 'finished': {'type': 'boolean', 'nullable': True, 'description': 'Only include finished activity instances.\\nValue may only be true , as false behaves the same as when the property is not set.'}, 'unfinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include unfinished activity instances.\\nValue may only be true , as false behaves the same as when the property is not set.'}, 'canceled': {'type': 'boolean', 'nullable': True, 'description': 'Only include canceled activity instances.\\nValue may only be true , as false behaves the same as when the property is not set.'}, 'completeScope': {'type': 'boolean', 'nullable': True, 'description': 'Only include activity instances which completed a scope.\\nValue may only be true , as false behaves the same as when the property is not set.'}, 'startedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were started before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were started after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were finished before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were finished after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Must be a JSON array of Strings. An activity instance must have one of the given tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic activity instances that belong to no tenant. Value may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['activityInstanceId', 'instanceId', 'executionId', 'activityId', 'activityName', 'activityType', 'startTime', 'endTime', 'duration', 'definitionId', 'occurrence', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryHistoricActivityInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryHistoricActivityInstancesCount \u00b6 Get List Count (POST) Queries for the number of historic activity instances that fulfill the given parameters. URL: /history/activity-instance/count Schema: {'type': 'object', 'description': 'A historic activity instance query which defines a group of historic activity instances', 'properties': {'activityInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by activity instance id.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition id.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the execution that executed the activity instance.'}, 'activityId': {'type': 'string', 'nullable': True, 'description': 'Filter by the activity id (according to BPMN 2.0 XML).'}, 'activityName': {'type': 'string', 'nullable': True, 'description': 'Filter by the activity name (according to BPMN 2.0 XML).'}, 'activityType': {'type': 'string', 'nullable': True, 'description': 'Filter by activity type.'}, 'taskAssignee': {'type': 'string', 'nullable': True, 'description': 'Only include activity instances that are user tasks and assigned to a given user.'}, 'finished': {'type': 'boolean', 'nullable': True, 'description': 'Only include finished activity instances.\\nValue may only be true , as false behaves the same as when the property is not set.'}, 'unfinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include unfinished activity instances.\\nValue may only be true , as false behaves the same as when the property is not set.'}, 'canceled': {'type': 'boolean', 'nullable': True, 'description': 'Only include canceled activity instances.\\nValue may only be true , as false behaves the same as when the property is not set.'}, 'completeScope': {'type': 'boolean', 'nullable': True, 'description': 'Only include activity instances which completed a scope.\\nValue may only be true , as false behaves the same as when the property is not set.'}, 'startedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were started before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were started after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were finished before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were finished after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Must be a JSON array of Strings. An activity instance must have one of the given tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic activity instances that belong to no tenant. Value may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['activityInstanceId', 'instanceId', 'executionId', 'activityId', 'activityName', 'activityType', 'startTime', 'endTime', 'duration', 'definitionId', 'occurrence', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryHistoricActivityInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryHistoricDetails \u00b6 Get Historic Details (POST) Queries for historic details that fulfill the given parameters. This method is slightly more powerful than the Get Historic Details method because it allows sorting by multiple parameters. The size of the result set can be retrieved by using the Get Historic Detail Count method. URL: /history/detail Schema: {'type': 'object', 'description': 'A historic detail query which defines a group of historic details.', 'properties': {'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic details which belong to one of the passed process instance ids.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Filter by execution id.'}, 'taskId': {'type': 'string', 'nullable': True, 'description': 'Filter by task id.'}, 'activityInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by activity instance id.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by case instance id.'}, 'caseExecutionId': {'type': 'string', 'nullable': True, 'description': 'Filter by case execution id.'}, 'variableInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by variable instance id.'}, 'variableTypeIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic details where the variable updates belong to one of the passed \\nlist of variable types. A list of all supported variable types can be found\\n[here](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#supported-variable-values).\\n**Note:** All non-primitive variables are associated with the type serializable .'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic details that belong to no tenant. Value may only be\\n true , as false is the default behavior.'}, 'userOperationId': {'type': 'string', 'nullable': True, 'description': 'Filter by a user operation id.'}, 'formFields': {'type': 'boolean', 'nullable': True, 'description': 'Only include HistoricFormFields . Value may only be true , as false is the default behavior.'}, 'variableUpdates': {'type': 'boolean', 'nullable': True, 'description': 'Only include HistoricVariableUpdates . Value may only be true , as false is the default behavior.'}, 'excludeTaskDetails': {'type': 'boolean', 'nullable': True, 'description': 'Excludes all task-related HistoricDetails , so only items which have no task id set will be selected.\\nWhen this parameter is used together with taskId , this call is ignored and task details are not excluded.\\nValue may only be true , as false is the default behavior.'}, 'initial': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to historic variable updates that contain only initial variable values.\\nValue may only be true , as false is the default behavior.'}, 'occurredBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to historic details that occured before the given date (including the date).\\nDefault [format](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200.\"}, 'occurredAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to historic details that occured after the given date (including the date).\\nDefault [format](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200.\"}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'A JSON array of criteria to sort the result by. Each element of the array is\\n a JSON object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Does not have an effect for the count endpoint.', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['processInstanceId', 'variableName', 'variableType', 'variableRevision', 'formPropertyId', 'time', 'occurrence', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryHistoricDetails [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --max-results | text | Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. | None | | --first-result | text | Pagination of results. Specifies the index of the first result to return. | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -o , --output | choice ( template ) | N/A | template | | --skip-validation | boolean | ignore validation | False | | -f , --file | filename | input as yaml | None | | --help | boolean | Show this message and exit. | False | cctl apply queryHistoricExternalTaskLogs \u00b6 Get External Task Logs (POST) Queries for historic external task logs that fulfill the given parameters. This method is slightly more powerful than the Get External Task Logs method because it allows filtering by historic external task logs values of the different types String , Number or Boolean . URL: /history/external-task-log Schema: {'type': 'object', 'description': 'A Historic External Task Log instance query which defines a list of Historic External Task Log instances', 'properties': {'logId': {'type': 'string', 'nullable': True, 'description': 'Filter by historic external task log id.'}, 'externalTaskId': {'type': 'string', 'nullable': True, 'description': 'Filter by external task id.'}, 'topicName': {'type': 'string', 'nullable': True, 'description': 'Filter by an external task topic.'}, 'workerId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the worker that the task was most recently locked by.'}, 'errorMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by external task exception message.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic external task logs which belong to one of the passed activity ids.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic external task logs which belong to one of the passed activity\\ninstance ids.'}, 'executionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic external task logs which belong to one of the passed execution ids.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition key.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic external task log entries which belong to one of the passed and\\ncomma-separated tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic external task log entries that belong to no tenant. Value may only\\nbe true , as false is the default behavior.'}, 'priorityLowerThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include logs for which the associated external task had a priority lower than or\\nequal to the given value. Value must be a valid long value.'}, 'priorityHigherThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include logs for which the associated external task had a priority higher than or\\nequal to the given value. Value must be a valid long value.'}, 'creationLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include creation logs. Value may only be true , as false is the default behavior.'}, 'failureLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include failure logs. Value may only be true , as false is the default behavior.'}, 'successLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include success logs. Value may only be true , as false is the default behavior.'}, 'deletionLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include deletion logs. Value may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints.', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['timestamp', 'externalTaskId', 'topicName', 'workerId', 'retries', 'priority', 'activityId', 'activityInstanceId', 'executionId', 'processInstanceId', 'processDefinitionId', 'processDefinitionKey', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryHistoricExternalTaskLogs [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryHistoricExternalTaskLogsCount \u00b6 Get External Task Log Count (POST) Queries for the number of historic external task logs that fulfill the given parameters. This method takes the same message body as the Get External Task Logs (POST) method and therefore it is slightly more powerful than the Get External Task Log Count method. URL: /history/external-task-log/count Schema: {'type': 'object', 'description': 'A Historic External Task Log instance query which defines a list of Historic External Task Log instances', 'properties': {'logId': {'type': 'string', 'nullable': True, 'description': 'Filter by historic external task log id.'}, 'externalTaskId': {'type': 'string', 'nullable': True, 'description': 'Filter by external task id.'}, 'topicName': {'type': 'string', 'nullable': True, 'description': 'Filter by an external task topic.'}, 'workerId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the worker that the task was most recently locked by.'}, 'errorMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by external task exception message.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic external task logs which belong to one of the passed activity ids.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic external task logs which belong to one of the passed activity\\ninstance ids.'}, 'executionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic external task logs which belong to one of the passed execution ids.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition key.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic external task log entries which belong to one of the passed and\\ncomma-separated tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic external task log entries that belong to no tenant. Value may only\\nbe true , as false is the default behavior.'}, 'priorityLowerThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include logs for which the associated external task had a priority lower than or\\nequal to the given value. Value must be a valid long value.'}, 'priorityHigherThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include logs for which the associated external task had a priority higher than or\\nequal to the given value. Value must be a valid long value.'}, 'creationLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include creation logs. Value may only be true , as false is the default behavior.'}, 'failureLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include failure logs. Value may only be true , as false is the default behavior.'}, 'successLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include success logs. Value may only be true , as false is the default behavior.'}, 'deletionLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include deletion logs. Value may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints.', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['timestamp', 'externalTaskId', 'topicName', 'workerId', 'retries', 'priority', 'activityId', 'activityInstanceId', 'executionId', 'processInstanceId', 'processDefinitionId', 'processDefinitionKey', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryHistoricExternalTaskLogsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryHistoricJobLogs \u00b6 Get Job Logs (POST) Queries for historic job logs that fulfill the given parameters. This method is slightly more powerful than the Get Job Logs method because it allows filtering by historic job logs values of the different types String , Number or Boolean . URL: /history/job-log Schema: {'type': 'object', 'description': 'A Historic Job Log instance query which defines a list of Historic Job Log instances', 'properties': {'logId': {'type': 'string', 'nullable': True, 'description': 'Filter by historic job log id.'}, 'jobId': {'type': 'string', 'nullable': True, 'description': 'Filter by job id.'}, 'jobExceptionMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by job exception message.'}, 'jobDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by job definition id.'}, 'jobDefinitionType': {'type': 'string', 'nullable': True, 'description': 'Filter by job definition type. See the\\n[User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/the-job-executor/#job-creation)\\nfor more information about job definition types.'}, 'jobDefinitionConfiguration': {'type': 'string', 'nullable': True, 'description': 'Filter by job definition configuration.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic job logs which belong to one of the passed activity ids.'}, 'failedActivityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic job logs which belong to failures of one of the passed activity ids.'}, 'executionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic job logs which belong to one of the passed execution ids.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition key.'}, 'deploymentId': {'type': 'string', 'nullable': True, 'description': 'Filter by deployment id.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic job log entries which belong to one of the passed and comma-\\nseparated tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic job log entries that belong to no tenant. Value may only be\\n true , as false is the default behavior.'}, 'hostname': {'type': 'string', 'nullable': True, 'description': 'Filter by hostname.'}, 'jobPriorityLowerThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include logs for which the associated job had a priority lower than or equal to the\\ngiven value. Value must be a valid long value.'}, 'jobPriorityHigherThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include logs for which the associated job had a priority higher than or equal to the\\ngiven value. Value must be a valid long value.'}, 'creationLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include creation logs. Value may only be true , as false is the default behavior.'}, 'failureLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include failure logs. Value may only be true , as false is the default behavior.'}, 'successLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include success logs. Value may only be true , as false is the default behavior.'}, 'deletionLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include deletion logs. Value may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['timestamp', 'jobId', 'jobDefinitionId', 'jobDueDate', 'jobRetries', 'jobPriority', 'activityId', 'executionId', 'processInstanceId', 'processDefinitionId', 'processDefinitionKey', 'deploymentId', 'hostname', 'occurrence', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryHistoricJobLogs [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryHistoricJobLogsCount \u00b6 Get Job Log Count (POST) Queries for the number of historic job logs that fulfill the given parameters. This method takes the same message body as the Get Job Logs (POST) method and therefore it is slightly more powerful than the Get Job Log Count method. URL: /history/job-log/count Schema: {'type': 'object', 'description': 'A Historic Job Log instance query which defines a list of Historic Job Log instances', 'properties': {'logId': {'type': 'string', 'nullable': True, 'description': 'Filter by historic job log id.'}, 'jobId': {'type': 'string', 'nullable': True, 'description': 'Filter by job id.'}, 'jobExceptionMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by job exception message.'}, 'jobDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by job definition id.'}, 'jobDefinitionType': {'type': 'string', 'nullable': True, 'description': 'Filter by job definition type. See the\\n[User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/the-job-executor/#job-creation)\\nfor more information about job definition types.'}, 'jobDefinitionConfiguration': {'type': 'string', 'nullable': True, 'description': 'Filter by job definition configuration.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic job logs which belong to one of the passed activity ids.'}, 'failedActivityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic job logs which belong to failures of one of the passed activity ids.'}, 'executionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic job logs which belong to one of the passed execution ids.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition key.'}, 'deploymentId': {'type': 'string', 'nullable': True, 'description': 'Filter by deployment id.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic job log entries which belong to one of the passed and comma-\\nseparated tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic job log entries that belong to no tenant. Value may only be\\n true , as false is the default behavior.'}, 'hostname': {'type': 'string', 'nullable': True, 'description': 'Filter by hostname.'}, 'jobPriorityLowerThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include logs for which the associated job had a priority lower than or equal to the\\ngiven value. Value must be a valid long value.'}, 'jobPriorityHigherThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include logs for which the associated job had a priority higher than or equal to the\\ngiven value. Value must be a valid long value.'}, 'creationLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include creation logs. Value may only be true , as false is the default behavior.'}, 'failureLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include failure logs. Value may only be true , as false is the default behavior.'}, 'successLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include success logs. Value may only be true , as false is the default behavior.'}, 'deletionLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include deletion logs. Value may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['timestamp', 'jobId', 'jobDefinitionId', 'jobDueDate', 'jobRetries', 'jobPriority', 'activityId', 'executionId', 'processInstanceId', 'processDefinitionId', 'processDefinitionKey', 'deploymentId', 'hostname', 'occurrence', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryHistoricJobLogsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryHistoricProcessInstances \u00b6 Get List (POST) Queries for historic process instances that fulfill the given parameters. This method is slightly more powerful than the Get Process Instance because it allows filtering by multiple process variables of types String , Number or Boolean . URL: /history/process-instance Schema: {'type': 'object', 'description': 'A historic process instance query which defines a group of historic process instances', 'properties': {'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by process instance ids. Must be a JSON array of Strings .'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process definition the instances run on.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the key of the process definition the instances run on.'}, 'processDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of process definition keys. A process instance must have one of the given process definition keys. Must be a JSON array of Strings .'}, 'processDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Filter by the name of the process definition the instances run on.'}, 'processDefinitionNameLike': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition names that the parameter is a substring of.'}, 'processDefinitionKeyNotIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Exclude instances that belong to a set of process definitions. Must be a JSON array of Strings .'}, 'processInstanceBusinessKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key.'}, 'processInstanceBusinessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key that the parameter is a substring of.'}, 'rootProcessInstances': {'type': 'boolean', 'nullable': True, 'description': 'Restrict the query to all process instances that are top level process instances.'}, 'finished': {'type': 'boolean', 'nullable': True, 'description': 'Only include finished process instances. This flag includes all process instances\\nthat are completed or terminated. Value may only be true , as false is the default behavior.'}, 'unfinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include unfinished process instances. Value may only be true , as false is the default behavior.'}, 'withIncidents': {'type': 'boolean', 'nullable': True, 'description': 'Only include process instances which have an incident. Value may only be true , as false is the default behavior.'}, 'withRootIncidents': {'type': 'boolean', 'nullable': True, 'description': 'Only include process instances which have a root incident. Value may only be true , as false is the default behavior.'}, 'incidentType': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident type. See the [User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/incidents/#incident-types) for a list of incident types.'}, 'incidentStatus': {'type': 'string', 'nullable': True, 'enum': ['open', 'resolved'], 'description': 'Only include process instances which have an incident in status either open or resolved. To get all process instances, use the query parameter withIncidents.'}, 'incidentMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message. Exact match.'}, 'incidentMessageLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message that the parameter is a substring of.'}, 'startedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were started before the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were started after the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were finished before the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were finished after the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'executedActivityAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that executed an activity after the given date (inclusive).\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'executedActivityBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that executed an activity before the given date (inclusive).\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'executedJobAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that executed an job after the given date (inclusive).\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'executedJobBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that executed an job before the given date (inclusive).\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedBy': {'type': 'string', 'nullable': True, 'description': 'Only include process instances that were started by the given user.'}, 'superProcessInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given process instance. Takes a process instance id.'}, 'subProcessInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to one process instance that has a sub process instance with the given id.'}, 'superCaseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id.'}, 'subCaseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to one process instance that has a sub case instance with the given id.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of tenant ids. A process instance must have one of the given tenant ids. Must be a JSON array of Strings '}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic process instances which belong to no tenant. Value may only be true , as false is the default behavior.'}, 'executedActivityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to instances that executed an activity with one of given ids. Must be a JSON array of Strings '}, 'activeActivityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to instances that have an active activity with one of given ids. Must be a JSON array of Strings '}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are active.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are suspended.'}, 'completed': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are completed.'}, 'externallyTerminated': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are externallyTerminated.'}, 'internallyTerminated': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are internallyTerminated.'}, 'variables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include process instances that have/had variables with certain values.\\nThe array consists of objects with the three properties name , operator and value . name ( String ) is the variable name,\\n operator ( String ) is the comparison operator to be used and value the variable value.\\n\\nValue may be String , Number or Boolean .\\n\\nValid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like .\\n'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable names provided in variables case-insensitively. If set to true variableName and variablename are treated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable values provided in variables case-insensitively. If set to true variableValue and variablevalue are treated as equal.'}, 'orQueries': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}, 'description': \"A JSON array of nested historic process instance queries with OR semantics.\\n\\nA process instance matches a nested query if it fulfills at least one of the query's predicates.\\n\\nWith multiple nested queries, a process instance must fulfill at least one predicate of each query\\n([Conjunctive Normal Form](https://en.wikipedia.org/wiki/Conjunctive_normal_form)).\\n\\nAll process instance query properties can be used except for: sorting \\n\\nSee the [User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/process-engine-api/#or-queries) for more information about OR queries.\"}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'definitionId', 'definitionKey', 'definitionName', 'definitionVersion', 'businessKey', 'startTime', 'endTime', 'duration', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryHistoricProcessInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryHistoricProcessInstancesCount \u00b6 Get List Count (POST) Queries for the number of historic process instances that fulfill the given parameters. This method takes the same message body as the Get Process Instances (POST) method and therefore it is slightly more powerful than the Get Process Instance Count method. URL: /history/process-instance/count Schema: {'type': 'object', 'description': 'A historic process instance query which defines a group of historic process instances', 'properties': {'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by process instance ids. Must be a JSON array of Strings .'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process definition the instances run on.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the key of the process definition the instances run on.'}, 'processDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of process definition keys. A process instance must have one of the given process definition keys. Must be a JSON array of Strings .'}, 'processDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Filter by the name of the process definition the instances run on.'}, 'processDefinitionNameLike': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition names that the parameter is a substring of.'}, 'processDefinitionKeyNotIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Exclude instances that belong to a set of process definitions. Must be a JSON array of Strings .'}, 'processInstanceBusinessKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key.'}, 'processInstanceBusinessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key that the parameter is a substring of.'}, 'rootProcessInstances': {'type': 'boolean', 'nullable': True, 'description': 'Restrict the query to all process instances that are top level process instances.'}, 'finished': {'type': 'boolean', 'nullable': True, 'description': 'Only include finished process instances. This flag includes all process instances\\nthat are completed or terminated. Value may only be true , as false is the default behavior.'}, 'unfinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include unfinished process instances. Value may only be true , as false is the default behavior.'}, 'withIncidents': {'type': 'boolean', 'nullable': True, 'description': 'Only include process instances which have an incident. Value may only be true , as false is the default behavior.'}, 'withRootIncidents': {'type': 'boolean', 'nullable': True, 'description': 'Only include process instances which have a root incident. Value may only be true , as false is the default behavior.'}, 'incidentType': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident type. See the [User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/incidents/#incident-types) for a list of incident types.'}, 'incidentStatus': {'type': 'string', 'nullable': True, 'enum': ['open', 'resolved'], 'description': 'Only include process instances which have an incident in status either open or resolved. To get all process instances, use the query parameter withIncidents.'}, 'incidentMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message. Exact match.'}, 'incidentMessageLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message that the parameter is a substring of.'}, 'startedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were started before the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were started after the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were finished before the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were finished after the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'executedActivityAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that executed an activity after the given date (inclusive).\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'executedActivityBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that executed an activity before the given date (inclusive).\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'executedJobAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that executed an job after the given date (inclusive).\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'executedJobBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that executed an job before the given date (inclusive).\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedBy': {'type': 'string', 'nullable': True, 'description': 'Only include process instances that were started by the given user.'}, 'superProcessInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given process instance. Takes a process instance id.'}, 'subProcessInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to one process instance that has a sub process instance with the given id.'}, 'superCaseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id.'}, 'subCaseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to one process instance that has a sub case instance with the given id.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of tenant ids. A process instance must have one of the given tenant ids. Must be a JSON array of Strings '}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic process instances which belong to no tenant. Value may only be true , as false is the default behavior.'}, 'executedActivityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to instances that executed an activity with one of given ids. Must be a JSON array of Strings '}, 'activeActivityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to instances that have an active activity with one of given ids. Must be a JSON array of Strings '}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are active.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are suspended.'}, 'completed': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are completed.'}, 'externallyTerminated': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are externallyTerminated.'}, 'internallyTerminated': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are internallyTerminated.'}, 'variables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include process instances that have/had variables with certain values.\\nThe array consists of objects with the three properties name , operator and value . name ( String ) is the variable name,\\n operator ( String ) is the comparison operator to be used and value the variable value.\\n\\nValue may be String , Number or Boolean .\\n\\nValid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like .\\n'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable names provided in variables case-insensitively. If set to true variableName and variablename are treated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable values provided in variables case-insensitively. If set to true variableValue and variablevalue are treated as equal.'}, 'orQueries': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}, 'description': \"A JSON array of nested historic process instance queries with OR semantics.\\n\\nA process instance matches a nested query if it fulfills at least one of the query's predicates.\\n\\nWith multiple nested queries, a process instance must fulfill at least one predicate of each query\\n([Conjunctive Normal Form](https://en.wikipedia.org/wiki/Conjunctive_normal_form)).\\n\\nAll process instance query properties can be used except for: sorting \\n\\nSee the [User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/process-engine-api/#or-queries) for more information about OR queries.\"}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'definitionId', 'definitionKey', 'definitionName', 'definitionVersion', 'businessKey', 'startTime', 'endTime', 'duration', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryHistoricProcessInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryHistoricTaskInstances \u00b6 Get Tasks (Historic) (POST) Queries for historic tasks that fulfill the given parameters. This method is slightly more powerful than the Get Tasks (Historic) method because it allows filtering by multiple process or task variables of types String , Number or Boolean . The size of the result set can be retrieved by using the Get Task Count (POST) method. URL: /history/task Schema: {'type': 'object', 'description': 'A Historic Task instance query which defines a list of Historic Task instances', 'properties': {'taskId': {'type': 'string', 'nullable': True, 'description': 'Filter by task id.'}, 'taskParentTaskId': {'type': 'string', 'nullable': True, 'description': 'Filter by parent task id.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processInstanceBusinessKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key.'}, 'processInstanceBusinessKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by process instances with one of the give business keys.\\nThe keys need to be in a comma-separated list.'}, 'processInstanceBusinessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key that has the parameter value as a substring.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the execution that executed the task.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given key.'}, 'processDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given name.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by case instance id.'}, 'caseExecutionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the case execution that executed the task.'}, 'caseDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by case definition id.'}, 'caseDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given key.'}, 'caseDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given name.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which belong to one of the passed activity instance ids.'}, 'taskName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given name.'}, 'taskNameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a name with the given parameter value as substring.'}, 'taskDescription': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given description.'}, 'taskDescriptionLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a description that has the parameter value as a substring.'}, 'taskDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given key.'}, 'taskDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that have one of the passed task definition keys.'}, 'taskDeleteReason': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given delete reason.'}, 'taskDeleteReasonLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a delete reason that has the parameter value as a substring.'}, 'taskAssignee': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the given user is assigned to.'}, 'taskAssigneeLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are assigned to users with the parameter value as a substring.'}, 'taskOwner': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the given user owns.'}, 'taskOwnerLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are owned by users with the parameter value as a substring.'}, 'taskPriority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'Restrict to tasks that have the given priority.'}, 'assigned': {'type': 'boolean', 'nullable': True, 'description': 'If set to true , restricts the query to all tasks that are assigned.'}, 'unassigned': {'type': 'boolean', 'nullable': True, 'description': 'If set to true , restricts the query to all tasks that are unassigned.'}, 'finished': {'type': 'boolean', 'nullable': True, 'description': 'Only include finished tasks. Value may only be true , as false is the default behavior.'}, 'unfinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include unfinished tasks. Value may only be true , as false is the default\\nbehavior.'}, 'processFinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks of finished processes. Value may only be true , as false is the\\ndefault behavior.'}, 'processUnfinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks of unfinished processes. Value may only be true , as false is the\\ndefault behavior.'}, 'taskDueDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due on the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'taskDueDateBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'taskDueDateAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'withoutTaskDueDate': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks which have no due date. Value may only be true , as false is the\\ndefault behavior.'}, 'taskFollowUpDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date on the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'taskFollowUpDateBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'taskFollowUpDateAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were started before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were started after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were finished before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were finished after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of tenant ids. A task instance must have one of the given\\ntenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic task instances that belong to no tenant. Value may only be\\n true , as false is the default behavior.'}, 'taskVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'Only include tasks that have variables with certain values. Variable filtering expressions are\\ncomma-separated and are structured as follows:\\n\\nA valid parameter value has the form key_operator_value .\\n key is the variable name, operator is the comparison operator to be used\\nand value the variable value.\\n**Note:** Values are always treated as String objects on server side.\\n\\n\\nValid operator values are:\\n* eq - equal to;\\n* neq - not equal to;\\n* gt - greater than;\\n* gteq - greater than or equal to;\\n* lt - lower than;\\n* lteq - lower than or equal to;\\n* like .\\n\\n key and value may not contain underscore or comma characters.'}, 'processVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'Only include tasks that belong to process instances that have variables with certain\\nvalues. Variable filtering expressions are comma-separated and are structured as\\nfollows:\\n\\nA valid parameter value has the form key_operator_value .\\n key is the variable name, operator is the comparison operator to be used\\nand value the variable value.\\n**Note:** Values are always treated as String objects on server side.\\n\\n\\nValid operator values are:\\n* eq - equal to;\\n* neq - not equal to;\\n* gt - greater than;\\n* gteq - greater than or equal to;\\n* lt - lower than;\\n* lteq - lower than or equal to;\\n* like ;\\n* notLike .\\n\\n key and value may not contain underscore or comma characters.'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match the variable name provided in taskVariables and processVariables case-\\ninsensitively. If set to true **variableName** and **variablename** are\\ntreated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match the variable value provided in taskVariables and processVariables case-\\ninsensitively. If set to true **variableValue** and **variablevalue** are\\ntreated as equal.'}, 'taskInvolvedUser': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks with a historic identity link to the given user.'}, 'taskInvolvedGroup': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks with a historic identity link to the given group.'}, 'taskHadCandidateUser': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks with a historic identity link to the given candidate user.'}, 'taskHadCandidateGroup': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks with a historic identity link to the given candidate group.'}, 'withCandidateGroups': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks which have a candidate group. Value may only be true ,\\nas false is the default behavior.'}, 'withoutCandidateGroups': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks which have no candidate group. Value may only be true ,\\nas false is the default behavior.'}, 'orQueries': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/HistoricTaskInstanceQueryDto'}, 'description': \"A JSON array of nested historic task instance queries with OR semantics.\\n\\nA task instance matches a nested query if it fulfills at least one of the query's predicates.\\n\\nWith multiple nested queries, a task instance must fulfill at least one predicate of each query\\n([Conjunctive Normal Form](https://en.wikipedia.org/wiki/Conjunctive_normal_form)).\\n\\nAll task instance query properties can be used except for: sorting , withCandidateGroups , withoutCandidateGroups .\\n\\nSee the [User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/process-engine-api/#or-queries) for more information about OR queries.\"}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['taskId', 'activityInstanceId', 'processDefinitionId', 'processInstanceId', 'executionId', 'duration', 'endTime', 'startTime', 'taskName', 'taskDescription', 'assignee', 'owner', 'dueDate', 'followUpDate', 'deleteReason', 'taskDefinitionKey', 'priority', 'caseDefinitionId', 'caseInstanceId', 'caseExecutionId', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryHistoricTaskInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryHistoricTaskInstancesCount \u00b6 Get Task Count (POST) Queries for the number of historic tasks that fulfill the given parameters. Takes the same parameters as the Get Tasks (Historic) method. Corresponds to the size of the result set of the Get Tasks (Historic) (POST) method and takes the same parameters. URL: /history/task/count Schema: {'type': 'object', 'description': 'A Historic Task instance query which defines a list of Historic Task instances', 'properties': {'taskId': {'type': 'string', 'nullable': True, 'description': 'Filter by task id.'}, 'taskParentTaskId': {'type': 'string', 'nullable': True, 'description': 'Filter by parent task id.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processInstanceBusinessKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key.'}, 'processInstanceBusinessKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by process instances with one of the give business keys.\\nThe keys need to be in a comma-separated list.'}, 'processInstanceBusinessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key that has the parameter value as a substring.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the execution that executed the task.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given key.'}, 'processDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given name.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by case instance id.'}, 'caseExecutionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the case execution that executed the task.'}, 'caseDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by case definition id.'}, 'caseDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given key.'}, 'caseDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given name.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which belong to one of the passed activity instance ids.'}, 'taskName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given name.'}, 'taskNameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a name with the given parameter value as substring.'}, 'taskDescription': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given description.'}, 'taskDescriptionLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a description that has the parameter value as a substring.'}, 'taskDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given key.'}, 'taskDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that have one of the passed task definition keys.'}, 'taskDeleteReason': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given delete reason.'}, 'taskDeleteReasonLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a delete reason that has the parameter value as a substring.'}, 'taskAssignee': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the given user is assigned to.'}, 'taskAssigneeLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are assigned to users with the parameter value as a substring.'}, 'taskOwner': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the given user owns.'}, 'taskOwnerLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are owned by users with the parameter value as a substring.'}, 'taskPriority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'Restrict to tasks that have the given priority.'}, 'assigned': {'type': 'boolean', 'nullable': True, 'description': 'If set to true , restricts the query to all tasks that are assigned.'}, 'unassigned': {'type': 'boolean', 'nullable': True, 'description': 'If set to true , restricts the query to all tasks that are unassigned.'}, 'finished': {'type': 'boolean', 'nullable': True, 'description': 'Only include finished tasks. Value may only be true , as false is the default behavior.'}, 'unfinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include unfinished tasks. Value may only be true , as false is the default\\nbehavior.'}, 'processFinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks of finished processes. Value may only be true , as false is the\\ndefault behavior.'}, 'processUnfinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks of unfinished processes. Value may only be true , as false is the\\ndefault behavior.'}, 'taskDueDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due on the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'taskDueDateBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'taskDueDateAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'withoutTaskDueDate': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks which have no due date. Value may only be true , as false is the\\ndefault behavior.'}, 'taskFollowUpDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date on the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'taskFollowUpDateBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'taskFollowUpDateAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were started before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were started after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were finished before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were finished after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of tenant ids. A task instance must have one of the given\\ntenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic task instances that belong to no tenant. Value may only be\\n true , as false is the default behavior.'}, 'taskVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'Only include tasks that have variables with certain values. Variable filtering expressions are\\ncomma-separated and are structured as follows:\\n\\nA valid parameter value has the form key_operator_value .\\n key is the variable name, operator is the comparison operator to be used\\nand value the variable value.\\n**Note:** Values are always treated as String objects on server side.\\n\\n\\nValid operator values are:\\n* eq - equal to;\\n* neq - not equal to;\\n* gt - greater than;\\n* gteq - greater than or equal to;\\n* lt - lower than;\\n* lteq - lower than or equal to;\\n* like .\\n\\n key and value may not contain underscore or comma characters.'}, 'processVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'Only include tasks that belong to process instances that have variables with certain\\nvalues. Variable filtering expressions are comma-separated and are structured as\\nfollows:\\n\\nA valid parameter value has the form key_operator_value .\\n key is the variable name, operator is the comparison operator to be used\\nand value the variable value.\\n**Note:** Values are always treated as String objects on server side.\\n\\n\\nValid operator values are:\\n* eq - equal to;\\n* neq - not equal to;\\n* gt - greater than;\\n* gteq - greater than or equal to;\\n* lt - lower than;\\n* lteq - lower than or equal to;\\n* like ;\\n* notLike .\\n\\n key and value may not contain underscore or comma characters.'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match the variable name provided in taskVariables and processVariables case-\\ninsensitively. If set to true **variableName** and **variablename** are\\ntreated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match the variable value provided in taskVariables and processVariables case-\\ninsensitively. If set to true **variableValue** and **variablevalue** are\\ntreated as equal.'}, 'taskInvolvedUser': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks with a historic identity link to the given user.'}, 'taskInvolvedGroup': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks with a historic identity link to the given group.'}, 'taskHadCandidateUser': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks with a historic identity link to the given candidate user.'}, 'taskHadCandidateGroup': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks with a historic identity link to the given candidate group.'}, 'withCandidateGroups': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks which have a candidate group. Value may only be true ,\\nas false is the default behavior.'}, 'withoutCandidateGroups': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks which have no candidate group. Value may only be true ,\\nas false is the default behavior.'}, 'orQueries': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/HistoricTaskInstanceQueryDto'}, 'description': \"A JSON array of nested historic task instance queries with OR semantics.\\n\\nA task instance matches a nested query if it fulfills at least one of the query's predicates.\\n\\nWith multiple nested queries, a task instance must fulfill at least one predicate of each query\\n([Conjunctive Normal Form](https://en.wikipedia.org/wiki/Conjunctive_normal_form)).\\n\\nAll task instance query properties can be used except for: sorting , withCandidateGroups , withoutCandidateGroups .\\n\\nSee the [User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/process-engine-api/#or-queries) for more information about OR queries.\"}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['taskId', 'activityInstanceId', 'processDefinitionId', 'processInstanceId', 'executionId', 'duration', 'endTime', 'startTime', 'taskName', 'taskDescription', 'assignee', 'owner', 'dueDate', 'followUpDate', 'deleteReason', 'taskDefinitionKey', 'priority', 'caseDefinitionId', 'caseInstanceId', 'caseExecutionId', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryHistoricTaskInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryHistoricVariableInstances \u00b6 Get Variable Instances (POST) Queries for historic variable instances that fulfill the given parameters. This method is slightly more powerful than the Get Variable Instances method because it allows filtering by variable values of the different types String , Number or Boolean . URL: /history/variable-instance Schema: {'type': 'object', 'description': 'A Historic Variable Instance instance query which defines a list of Historic Variable Instance instances', 'properties': {'variableName': {'type': 'string', 'nullable': True, 'description': 'Filter by variable name.'}, 'variableNameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to variables with a name like the parameter.'}, 'variableValue': {'type': 'object', 'description': 'Filter by variable value. May be String , Number or Boolean .'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match the variable name provided in variableName and variableNameLike case-\\ninsensitively. If set to true **variableName** and **variablename** are\\ntreated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match the variable value provided in variableValue case-insensitively. If set to true \\n**variableValue** and **variablevalue** are treated as equal.'}, 'variableTypeIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': \"Only include historic variable instances which belong to one of the passed and comma-\\nseparated variable types. A list of all supported variable types can be found\\n[here](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#supported-variable-values).\\n**Note:** All non-primitive variables are associated with the type\\n'serializable'.\"}, 'includeDeleted': {'type': 'boolean', 'nullable': True, 'description': 'Include variables that has already been deleted during the execution.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process instance the variable belongs to.'}, 'processInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed process instance ids.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process definition the variable belongs to.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by a key of the process definition the variable belongs to.'}, 'executionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and execution ids.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by the case instance the variable belongs to.'}, 'caseExecutionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and case execution ids.'}, 'caseActivityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and case activity ids.'}, 'taskIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and task ids.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and activity instance ids.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and comma-\\nseparated tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic variable instances that belong to no tenant. Value may only be\\n true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'variableName', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryHistoricVariableInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --max-results | text | Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. | None | | --first-result | text | Pagination of results. Specifies the index of the first result to return. | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -o , --output | choice ( template ) | N/A | template | | --skip-validation | boolean | ignore validation | False | | -f , --file | filename | input as yaml | None | | --help | boolean | Show this message and exit. | False | cctl apply queryHistoricVariableInstancesCount \u00b6 Get Variable Instance Count (POST) Queries for historic variable instances that fulfill the given parameters. This method takes the same message body as the Get Variable Instances (POST) method and therefore it is more powerful regarding variable values than the Get Variable Instance Count method. URL: /history/variable-instance/count Schema: {'type': 'object', 'description': 'A Historic Variable Instance instance query which defines a list of Historic Variable Instance instances', 'properties': {'variableName': {'type': 'string', 'nullable': True, 'description': 'Filter by variable name.'}, 'variableNameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to variables with a name like the parameter.'}, 'variableValue': {'type': 'object', 'description': 'Filter by variable value. May be String , Number or Boolean .'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match the variable name provided in variableName and variableNameLike case-\\ninsensitively. If set to true **variableName** and **variablename** are\\ntreated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match the variable value provided in variableValue case-insensitively. If set to true \\n**variableValue** and **variablevalue** are treated as equal.'}, 'variableTypeIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': \"Only include historic variable instances which belong to one of the passed and comma-\\nseparated variable types. A list of all supported variable types can be found\\n[here](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#supported-variable-values).\\n**Note:** All non-primitive variables are associated with the type\\n'serializable'.\"}, 'includeDeleted': {'type': 'boolean', 'nullable': True, 'description': 'Include variables that has already been deleted during the execution.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process instance the variable belongs to.'}, 'processInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed process instance ids.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process definition the variable belongs to.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by a key of the process definition the variable belongs to.'}, 'executionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and execution ids.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by the case instance the variable belongs to.'}, 'caseExecutionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and case execution ids.'}, 'caseActivityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and case activity ids.'}, 'taskIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and task ids.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and activity instance ids.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and comma-\\nseparated tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic variable instances that belong to no tenant. Value may only be\\n true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'variableName', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryHistoricVariableInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryJobDefinitions \u00b6 Get Job Definitions (POST) Queries for job definitions that fulfill given parameters. This method is slightly more powerful than the Get Job Definitions method because it allows filtering by multiple job definitions of types String , Number or Boolean . URL: /job-definition Schema: {'type': 'object', 'description': 'A Job definition query which defines a list of Job definitions', 'properties': {'jobDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by job definition id.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include job definitions which belong to one of the passed activity ids.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Only include job definitions which exist for the given process definition id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Only include job definitions which exist for the given process definition key.'}, 'jobType': {'type': 'string', 'nullable': True, 'description': 'Only include job definitions which exist for the given job type. See the\\n[User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/the-job-executor/#job-creation)\\nfor more information about job types.'}, 'jobConfiguration': {'type': 'string', 'nullable': True, 'description': 'Only include job definitions which exist for the given job configuration. For example: for\\ntimer jobs it is the timer configuration.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active job definitions. Value may only be true , as false is the default\\nbehavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended job definitions. Value may only be true , as false is the\\ndefault behavior.'}, 'withOverridingJobPriority': {'type': 'boolean', 'nullable': True, 'description': 'Only include job definitions that have an overriding job priority defined. The only\\neffective value is true . If set to false , this filter is not applied.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include job definitions which belong to one of the passed tenant\\nids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include job definitions which belong to no tenant. Value may only be true , as\\n false is the default behavior.'}, 'includeJobDefinitionsWithoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Include job definitions which belong to no tenant. Can be used in combination with\\n tenantIdIn . Value may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints.', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['jobDefinitionId', 'activityId', 'processDefinitionId', 'processDefinitionKey', 'jobType', 'jobConfiguration', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryJobDefinitions [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryJobDefinitionsCount \u00b6 Get Job Definition Count (POST) Queries for the number of job definitions that fulfill given parameters. This method takes the same message body as the Get Job Definitions (POST) method and therefore it is slightly more powerful than the Get Job Definition Count method. URL: /job-definition/count Schema: {'type': 'object', 'description': 'A Job definition query which defines a list of Job definitions', 'properties': {'jobDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by job definition id.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include job definitions which belong to one of the passed activity ids.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Only include job definitions which exist for the given process definition id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Only include job definitions which exist for the given process definition key.'}, 'jobType': {'type': 'string', 'nullable': True, 'description': 'Only include job definitions which exist for the given job type. See the\\n[User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/the-job-executor/#job-creation)\\nfor more information about job types.'}, 'jobConfiguration': {'type': 'string', 'nullable': True, 'description': 'Only include job definitions which exist for the given job configuration. For example: for\\ntimer jobs it is the timer configuration.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active job definitions. Value may only be true , as false is the default\\nbehavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended job definitions. Value may only be true , as false is the\\ndefault behavior.'}, 'withOverridingJobPriority': {'type': 'boolean', 'nullable': True, 'description': 'Only include job definitions that have an overriding job priority defined. The only\\neffective value is true . If set to false , this filter is not applied.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include job definitions which belong to one of the passed tenant\\nids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include job definitions which belong to no tenant. Value may only be true , as\\n false is the default behavior.'}, 'includeJobDefinitionsWithoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Include job definitions which belong to no tenant. Can be used in combination with\\n tenantIdIn . Value may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints.', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['jobDefinitionId', 'activityId', 'processDefinitionId', 'processDefinitionKey', 'jobType', 'jobConfiguration', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryJobDefinitionsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryJobs \u00b6 Get Jobs (POST) Queries for jobs that fulfill given parameters. This method is slightly more powerful than the Get Jobs method because it allows filtering by multiple jobs of types String , Number or Boolean . URL: /job Schema: {'type': 'object', 'description': 'A Job instance query which defines a list of Job instances', 'properties': {'jobId': {'type': 'string', 'nullable': True, 'description': 'Filter by job id.'}, 'jobIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of job ids.'}, 'jobDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs which exist for the given job definition.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs which exist for the given process instance.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only select jobs which exist for the given list of process instance ids.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs which exist for the given execution.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the process definition the jobs run on.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the key of the process definition the jobs run on.'}, 'activityId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs which exist for an activity with the given id.'}, 'withRetriesLeft': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs which have retries left. Value may only be true , as false is the\\ndefault behavior.'}, 'executable': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs which are executable, i.e., retries > 0 and due date is null or due\\ndate is in the past. Value may only be true , as false is the default\\nbehavior.'}, 'timers': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs that are timers. Cannot be used together with messages . Value may only\\nbe true , as false is the default behavior.'}, 'messages': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs that are messages. Cannot be used together with timers . Value may only\\nbe true , as false is the default behavior.'}, 'dueDates': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/JobConditionQueryParameterDto'}, 'description': 'Only select jobs where the due date is lower or higher than the given date.\\n'}, 'createTimes': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/JobConditionQueryParameterDto'}, 'description': 'Only select jobs created before or after the given date.\\n'}, 'withException': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs that failed due to an exception. Value may only be true , as false is\\nthe default behavior.'}, 'exceptionMessage': {'type': 'string', 'nullable': True, 'description': 'Only select jobs that failed due to an exception with the given message.'}, 'failedActivityId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs that failed due to an exception at an activity with the given id.'}, 'noRetriesLeft': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs which have no retries left. Value may only be true , as false is the\\ndefault behavior.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active jobs. Value may only be true , as false is the default behavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended jobs. Value may only be true , as false is the default behavior.'}, 'priorityLowerThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include jobs with a priority lower than or equal to the given value. Value must be a\\nvalid long value.'}, 'priorityHigherThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include jobs with a priority higher than or equal to the given value. Value must be a\\nvalid long value.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include jobs which belong to one of the passed tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include jobs which belong to no tenant. Value may only be true , as false is the\\ndefault behavior.'}, 'includeJobsWithoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Include jobs which belong to no tenant. Can be used in combination with tenantIdIn .\\nValue may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Does not have an effect for the count endpoint.', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['jobId', 'executionId', 'processInstanceId', 'processDefinitionId', 'processDefinitionKey', 'jobPriority', 'jobRetries', 'jobDueDate', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryJobs [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryJobsCount \u00b6 Get Job Count (POST) Queries for jobs that fulfill given parameters. This method takes the same message body as the Get Jobs POST method and therefore it is slightly more powerful than the Get Job Count method. URL: /job/count Schema: {'type': 'object', 'description': 'A Job instance query which defines a list of Job instances', 'properties': {'jobId': {'type': 'string', 'nullable': True, 'description': 'Filter by job id.'}, 'jobIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of job ids.'}, 'jobDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs which exist for the given job definition.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs which exist for the given process instance.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only select jobs which exist for the given list of process instance ids.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs which exist for the given execution.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the process definition the jobs run on.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the key of the process definition the jobs run on.'}, 'activityId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs which exist for an activity with the given id.'}, 'withRetriesLeft': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs which have retries left. Value may only be true , as false is the\\ndefault behavior.'}, 'executable': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs which are executable, i.e., retries > 0 and due date is null or due\\ndate is in the past. Value may only be true , as false is the default\\nbehavior.'}, 'timers': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs that are timers. Cannot be used together with messages . Value may only\\nbe true , as false is the default behavior.'}, 'messages': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs that are messages. Cannot be used together with timers . Value may only\\nbe true , as false is the default behavior.'}, 'dueDates': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/JobConditionQueryParameterDto'}, 'description': 'Only select jobs where the due date is lower or higher than the given date.\\n'}, 'createTimes': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/JobConditionQueryParameterDto'}, 'description': 'Only select jobs created before or after the given date.\\n'}, 'withException': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs that failed due to an exception. Value may only be true , as false is\\nthe default behavior.'}, 'exceptionMessage': {'type': 'string', 'nullable': True, 'description': 'Only select jobs that failed due to an exception with the given message.'}, 'failedActivityId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs that failed due to an exception at an activity with the given id.'}, 'noRetriesLeft': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs which have no retries left. Value may only be true , as false is the\\ndefault behavior.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active jobs. Value may only be true , as false is the default behavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended jobs. Value may only be true , as false is the default behavior.'}, 'priorityLowerThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include jobs with a priority lower than or equal to the given value. Value must be a\\nvalid long value.'}, 'priorityHigherThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include jobs with a priority higher than or equal to the given value. Value must be a\\nvalid long value.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include jobs which belong to one of the passed tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include jobs which belong to no tenant. Value may only be true , as false is the\\ndefault behavior.'}, 'includeJobsWithoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Include jobs which belong to no tenant. Can be used in combination with tenantIdIn .\\nValue may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Does not have an effect for the count endpoint.', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['jobId', 'executionId', 'processInstanceId', 'processDefinitionId', 'processDefinitionKey', 'jobPriority', 'jobRetries', 'jobDueDate', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryJobsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryProcessInstances \u00b6 Get List (POST) Queries for process instances that fulfill given parameters through a JSON object. This method is slightly more powerful than the Get Instances method because it allows filtering by multiple process variables of types string , number or boolean . URL: /process-instance Schema: {'type': 'object', 'description': 'A process instance query which defines a group of process instances', 'properties': {'deploymentId': {'type': 'string', 'nullable': True, 'description': 'Filter by the deployment the id belongs to.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process definition the instances run on.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the key of the process definition the instances run on.'}, 'processDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of process definition keys.\\nA process instance must have one of the given process definition keys. Must be a JSON array of Strings.'}, 'processDefinitionKeyNotIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Exclude instances by a list of process definition keys.\\nA process instance must not have one of the given process definition keys. Must be a JSON array of Strings.'}, 'businessKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key.'}, 'businessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key that the parameter is a substring of.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by case instance id.'}, 'superProcessInstance': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given process instance.\\nTakes a process instance id.'}, 'subProcessInstance': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that have the given process instance as a sub process instance.\\nTakes a process instance id.'}, 'superCaseInstance': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given case instance.\\nTakes a case instance id.'}, 'subCaseInstance': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that have the given case instance as a sub case instance.\\nTakes a case instance id.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active process instances. Value may only be true, as false is the default behavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended process instances. Value may only be true, as false is the default behavior.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of process instance ids. Must be a JSON array of Strings.'}, 'withIncident': {'type': 'boolean', 'nullable': True, 'description': 'Filter by presence of incidents. Selects only process instances that have an incident.'}, 'incidentId': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident id.'}, 'incidentType': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident type. See the User Guide for a list of incident types.'}, 'incidentMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message. Exact match.'}, 'incidentMessageLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message that the parameter is a substring of.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of tenant ids. A process instance must have one of the given tenant ids.\\nMust be a JSON array of Strings.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include process instances which belong to no tenant.\\nValue may only be true, as false is the default behavior.'}, 'processDefinitionWithoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include process instances which process definition has no tenant id.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of activity ids.\\nA process instance must currently wait in a leaf activity with one of the given activity ids.'}, 'rootProcessInstances': {'type': 'boolean', 'nullable': True, 'description': 'Restrict the query to all process instances that are top level process instances.'}, 'leafProcessInstances': {'type': 'boolean', 'nullable': True, 'description': \"Restrict the query to all process instances that are leaf instances. (i.e. don't have any sub instances)\"}, 'variables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include process instances that have variables with certain values.\\nThe array consists of objects with the three properties name , operator and value .\\n name (String) is the variable name,\\n operator (String) is the comparison operator to be used and value the variable value.\\nThe value may be String, Number or Boolean.\\n\\nValid operator values are: eq - equal to; neq - not equal to; gt - greater than;\\n gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like .'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable names in this query case-insensitively.\\nIf set to true variableName and variablename are treated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable values in this query case-insensitively.\\nIf set to true variableValue and variablevalue are treated as equal.'}, 'orQueries': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'description': \"A JSON array of nested process instance queries with OR semantics.\\nA process instance matches a nested query if it fulfills at least one of the query's predicates.\\nWith multiple nested queries, a process instance must fulfill at least one predicate of each query (Conjunctive Normal Form).\\nAll process instance query properties can be used except for: sorting \\nSee the [User guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/process-engine-api/#or-queries) for more information about OR queries.\"}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'definitionId', 'definitionKey', 'businessKey', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryProcessInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryProcessInstancesCount \u00b6 Get List Count (POST) Queries for the number of process instances that fulfill the given parameters. This method takes the same message body as the Get Instances (POST) method and therefore it is slightly more powerful than the Get Instance Count method. URL: /process-instance/count Schema: {'type': 'object', 'description': 'A process instance query which defines a group of process instances', 'properties': {'deploymentId': {'type': 'string', 'nullable': True, 'description': 'Filter by the deployment the id belongs to.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process definition the instances run on.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the key of the process definition the instances run on.'}, 'processDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of process definition keys.\\nA process instance must have one of the given process definition keys. Must be a JSON array of Strings.'}, 'processDefinitionKeyNotIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Exclude instances by a list of process definition keys.\\nA process instance must not have one of the given process definition keys. Must be a JSON array of Strings.'}, 'businessKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key.'}, 'businessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key that the parameter is a substring of.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by case instance id.'}, 'superProcessInstance': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given process instance.\\nTakes a process instance id.'}, 'subProcessInstance': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that have the given process instance as a sub process instance.\\nTakes a process instance id.'}, 'superCaseInstance': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given case instance.\\nTakes a case instance id.'}, 'subCaseInstance': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that have the given case instance as a sub case instance.\\nTakes a case instance id.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active process instances. Value may only be true, as false is the default behavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended process instances. Value may only be true, as false is the default behavior.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of process instance ids. Must be a JSON array of Strings.'}, 'withIncident': {'type': 'boolean', 'nullable': True, 'description': 'Filter by presence of incidents. Selects only process instances that have an incident.'}, 'incidentId': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident id.'}, 'incidentType': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident type. See the User Guide for a list of incident types.'}, 'incidentMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message. Exact match.'}, 'incidentMessageLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message that the parameter is a substring of.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of tenant ids. A process instance must have one of the given tenant ids.\\nMust be a JSON array of Strings.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include process instances which belong to no tenant.\\nValue may only be true, as false is the default behavior.'}, 'processDefinitionWithoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include process instances which process definition has no tenant id.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of activity ids.\\nA process instance must currently wait in a leaf activity with one of the given activity ids.'}, 'rootProcessInstances': {'type': 'boolean', 'nullable': True, 'description': 'Restrict the query to all process instances that are top level process instances.'}, 'leafProcessInstances': {'type': 'boolean', 'nullable': True, 'description': \"Restrict the query to all process instances that are leaf instances. (i.e. don't have any sub instances)\"}, 'variables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include process instances that have variables with certain values.\\nThe array consists of objects with the three properties name , operator and value .\\n name (String) is the variable name,\\n operator (String) is the comparison operator to be used and value the variable value.\\nThe value may be String, Number or Boolean.\\n\\nValid operator values are: eq - equal to; neq - not equal to; gt - greater than;\\n gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like .'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable names in this query case-insensitively.\\nIf set to true variableName and variablename are treated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable values in this query case-insensitively.\\nIf set to true variableValue and variablevalue are treated as equal.'}, 'orQueries': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'description': \"A JSON array of nested process instance queries with OR semantics.\\nA process instance matches a nested query if it fulfills at least one of the query's predicates.\\nWith multiple nested queries, a process instance must fulfill at least one predicate of each query (Conjunctive Normal Form).\\nAll process instance query properties can be used except for: sorting \\nSee the [User guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/process-engine-api/#or-queries) for more information about OR queries.\"}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'definitionId', 'definitionKey', 'businessKey', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryProcessInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply querySchemaLog \u00b6 Get List (POST) Queries for schema log entries that fulfill given parameters. URL: /schema/log Schema: {'type': 'object', 'properties': {'version': {'type': 'string', 'nullable': True, 'description': 'The version of the schema.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'A JSON array of criteria to sort the result by. Each element of the array is\\n a JSON object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. ', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['timestamp'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply querySchemaLog [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryTasks \u00b6 Get List (POST) Queries for tasks that fulfill a given filter. This method is slightly more powerful than the Get Tasks method because it allows filtering by multiple process or task variables of types String , Number or Boolean . The size of the result set can be retrieved by using the Get Task Count (POST) method. Security Consideration : There are several parameters (such as assigneeExpression ) for specifying an EL expression. These are disabled by default to prevent remote code execution. See the section on security considerations for custom code in the user guide for details. URL: /task Schema: {'type': 'object', 'description': 'A Task query which defines a group of Tasks.', 'properties': {'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to process instances with the given id.'}, 'processInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that belong to process instances with the given ids.'}, 'processInstanceBusinessKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to process instances with the given business key.'}, 'processInstanceBusinessKeyExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to process instances with the given business key which \\nis described by an expression. See the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions.'}, 'processInstanceBusinessKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that belong to process instances with one of the give business keys. \\nThe keys need to be in a comma-separated list.'}, 'processInstanceBusinessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a process instance business key that has the parameter \\nvalue as a substring.'}, 'processInstanceBusinessKeyLikeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a process instance business key that has the parameter \\nvalue as a substring and is described by an expression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given key.'}, 'processDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that belong to a process definition with one of the given keys. The \\nkeys need to be in a comma-separated list.'}, 'processDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given name.'}, 'processDefinitionNameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a process definition name that has the parameter value as \\na substring.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to an execution with the given id.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to case instances with the given id.'}, 'caseInstanceBusinessKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to case instances with the given business key.'}, 'caseInstanceBusinessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a case instance business key that has the parameter value \\nas a substring.'}, 'caseDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given id.'}, 'caseDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given key.'}, 'caseDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given name.'}, 'caseDefinitionNameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a case definition name that has the parameter value as a \\nsubstring.'}, 'caseExecutionId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case execution with the given id.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which belong to one of the passed and comma-separated activity \\ninstance ids.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which belong to one of the passed and comma-separated \\ntenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which belong to no tenant. Value may only be true , \\nas false is the default behavior.'}, 'assignee': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the given user is assigned to.'}, 'assigneeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the user described by the given expression is assigned to. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'assigneeLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have an assignee that has the parameter \\nvalue as a substring.'}, 'assigneeLikeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have an assignee that has the parameter value described by the \\ngiven expression as a substring. See the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'assigneeIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which are assigned to one of the passed and comma-separated user ids.'}, 'assigneeNotIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which are not assigned to one of the passed and comma-separated user ids.'}, 'owner': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the given user owns.'}, 'ownerExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the user described by the given expression owns. See the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'candidateGroup': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that are offered to the given group.'}, 'candidateGroupExpression': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that are offered to the group described by the given expression. \\nSee the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'candidateUser': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that are offered to the given user or to one of his groups.'}, 'candidateUserExpression': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that are offered to the user described by the given expression. \\nSee the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'includeAssignedTasks': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Also include tasks that are assigned to users in candidate queries. Default is to only \\ninclude tasks that are not assigned to any user if you query by candidate user or\\ngroup(s).'}, 'involvedUser': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that the given user is involved in. A user is involved in a task if \\nan identity link exists between task and user (e.g., the user is the assignee).'}, 'involvedUserExpression': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that the user described by the given expression is involved in.\\nA user is involved in a task if an identity link exists between task and user\\n(e.g., the user is the assignee). See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions.'}, 'assigned': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'If set to true , restricts the query to all tasks that are assigned.'}, 'unassigned': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'If set to true , restricts the query to all tasks that are unassigned.'}, 'taskDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given key.'}, 'taskDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that have one of the given keys. The keys need to be in a comma-separated list.'}, 'taskDefinitionKeyLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a key that has the parameter value as a substring.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given name.'}, 'nameNotEqual': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that do not have the given name.'}, 'nameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a name with the given parameter value as substring.'}, 'nameNotLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that do not have a name with the given parameter\\nvalue as substring.'}, 'description': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given description.'}, 'descriptionLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a description that has the parameter\\nvalue as a substring.'}, 'priority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'Restrict to tasks that have the given priority.'}, 'maxPriority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'Restrict to tasks that have a lower or equal priority.'}, 'minPriority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'Restrict to tasks that have a higher or equal priority.'}, 'dueDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due on the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.546+0200 .\"}, 'dueDateExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are due on the date described by the given expression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'dueAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due after the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.435+0200 .\"}, 'dueAfterExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are due after the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'dueBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due before the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.243+0200 .\"}, 'dueBeforeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are due before the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'withoutDueDate': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have no due date. Value may only be true , \\nas false is the default behavior.'}, 'followUpDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date on the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date\\nmust have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.342+0200 .\"}, 'followUpDateExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a followUp date on the date described by the given\\nexpression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'followUpAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date after the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.542+0200 .\"}, 'followUpAfterExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a followUp date after the date described by the given\\nexpression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'followUpBefore': {'type': 'string', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date before the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.234+0200 .\"}, 'followUpBeforeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a followUp date before the date described by the given\\nexpression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'followUpBeforeOrNotExistent': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have no followUp date or a followUp date before the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.432+0200 . The typical use case\\nis to query all active tasks for a user for a given date.\"}, 'followUpBeforeOrNotExistentExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have no followUp date or a followUp date before the date\\ndescribed by the given expression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'createdOn': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were created on the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.324+0200 .\"}, 'createdOnExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that were created on the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'createdAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were created after the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must\\nhave the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.342+0200 .\"}, 'createdAfterExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that were created after the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'createdBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were created before the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must\\nhave the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.332+0200 .\"}, 'createdBeforeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that were created before the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'delegationState': {'type': 'string', 'nullable': True, 'enum': ['PENDING', 'RESOLVED'], 'description': 'Restrict to tasks that are in the given delegation state. Valid values are\\n PENDING and RESOLVED .'}, 'candidateGroups': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that are offered to any of the given candidate groups. Takes a\\ncomma-separated list of group names, so for example\\n developers,support,sales .'}, 'candidateGroupsExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are offered to any of the candidate groups described by the\\ngiven expression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to\\n java.util.List of Strings.'}, 'withCandidateGroups': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have a candidate group. Value may only be true ,\\nas false is the default behavior.'}, 'withoutCandidateGroups': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have no candidate group. Value may only be true ,\\nas false is the default behavior.'}, 'withCandidateUsers': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have a candidate user. Value may only be true ,\\nas false is the default behavior.'}, 'withoutCandidateUsers': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have no candidate users. Value may only be true ,\\nas false is the default behavior.'}, 'active': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include active tasks. Value may only be true , as false \\nis the default behavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include suspended tasks. Value may only be true , as\\n false is the default behavior.'}, 'taskVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include tasks that have variables with certain values. The\\narray consists of JSON objects with three properties name , operator and value .\\n name is the variable name, operator is the comparison operator to be used and\\n value the variable value. value may be of type String , Number or Boolean .\\n\\nValid operator values are:\\n eq - equal to;\\n neq - not equal to;\\n gt - greater than;\\n gteq - greater than or equal to;\\n lt - lower than;\\n lteq - lower than or equal to;\\n like .\\n key and value may not contain underscore or comma characters.'}, 'processVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include tasks that belong to a process instance with variables\\nwith certain values. The array consists of JSON objects with three properties\\n name , operator and value . name is the variable name, operator is the\\ncomparison operator to be used and value the variable value. value may be of\\ntype String , Number or Boolean .\\n\\nValid operator values are:\\n eq - equal to;\\n neq - not equal to;\\n gt - greater than;\\n gteq - greater than or equal to;\\n lt - lower than;\\n lteq - lower than or equal to;\\n like ;\\n notLike .\\n key and value may not contain underscore or comma characters.'}, 'caseInstanceVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include tasks that belong to a case instance with variables\\nwith certain values. The array consists of JSON objects with three properties\\n name , operator and value . name is the variable name, operator is the\\ncomparison operator to be used and value the variable value. value may be of\\ntype String , Number or Boolean .\\n\\nValid operator values are:\\n eq - equal to;\\n neq - not equal to;\\n gt - greater than;\\n gteq - greater than or equal to;\\n lt - lower than;\\n lteq - lower than or equal to;\\n like .\\n key and value may not contain underscore or comma characters.'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Match all variable names in this query case-insensitively. If set\\n variableName and variablename are treated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Match all variable values in this query case-insensitively. If set\\n variableValue and variablevalue are treated as equal.'}, 'parentTaskId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all tasks that are sub tasks of the given task. Takes a task id.'}, 'orQueries': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/TaskQueryDto'}, 'description': \"A JSON array of nested task queries with OR semantics. A task matches a nested query if it fulfills\\n*at least one* of the query's predicates. With multiple nested queries, a task must fulfill at least one predicate of *each* query ([Conjunctive Normal Form](https://en.wikipedia.org/wiki/Conjunctive_normal_form)).\\n\\nAll task query properties can be used except for: sorting , withCandidateGroups ,\\n withoutCandidateGroups , withCandidateUsers , withoutCandidateUsers \\n\\nSee the [User guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/process-engine-api/#or-queries)\\nfor more information about OR queries.\"}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'caseInstanceId', 'dueDate', 'executionId', 'caseExecutionId', 'assignee', 'created', 'description', 'id', 'name', 'nameCaseInsensitive', 'priority', 'processVariable', 'executionVariable', 'taskVariable', 'caseExecutionVariable', 'caseInstanceVariable'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}, 'parameters': {'$ref': '#/components/schemas/SortTaskQueryParametersDto'}}}}}} Usage: cctl&nbsp;apply queryTasks [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryTasksCount \u00b6 Get List Count (POST) Retrieves the number of tasks that fulfill the given filter. Corresponds to the size of the result set of the Get Tasks (POST) method and takes the same parameters. Security Consideration : There are several parameters (such as assigneeExpression ) for specifying an EL expression. These are disabled by default to prevent remote code execution. See the section on security considerations for custom code in the user guide for details. URL: /task/count Schema: {'type': 'object', 'description': 'A Task query which defines a group of Tasks.', 'properties': {'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to process instances with the given id.'}, 'processInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that belong to process instances with the given ids.'}, 'processInstanceBusinessKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to process instances with the given business key.'}, 'processInstanceBusinessKeyExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to process instances with the given business key which \\nis described by an expression. See the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions.'}, 'processInstanceBusinessKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that belong to process instances with one of the give business keys. \\nThe keys need to be in a comma-separated list.'}, 'processInstanceBusinessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a process instance business key that has the parameter \\nvalue as a substring.'}, 'processInstanceBusinessKeyLikeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a process instance business key that has the parameter \\nvalue as a substring and is described by an expression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given key.'}, 'processDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that belong to a process definition with one of the given keys. The \\nkeys need to be in a comma-separated list.'}, 'processDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given name.'}, 'processDefinitionNameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a process definition name that has the parameter value as \\na substring.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to an execution with the given id.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to case instances with the given id.'}, 'caseInstanceBusinessKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to case instances with the given business key.'}, 'caseInstanceBusinessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a case instance business key that has the parameter value \\nas a substring.'}, 'caseDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given id.'}, 'caseDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given key.'}, 'caseDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given name.'}, 'caseDefinitionNameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a case definition name that has the parameter value as a \\nsubstring.'}, 'caseExecutionId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case execution with the given id.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which belong to one of the passed and comma-separated activity \\ninstance ids.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which belong to one of the passed and comma-separated \\ntenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which belong to no tenant. Value may only be true , \\nas false is the default behavior.'}, 'assignee': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the given user is assigned to.'}, 'assigneeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the user described by the given expression is assigned to. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'assigneeLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have an assignee that has the parameter \\nvalue as a substring.'}, 'assigneeLikeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have an assignee that has the parameter value described by the \\ngiven expression as a substring. See the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'assigneeIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which are assigned to one of the passed and comma-separated user ids.'}, 'assigneeNotIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which are not assigned to one of the passed and comma-separated user ids.'}, 'owner': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the given user owns.'}, 'ownerExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the user described by the given expression owns. See the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'candidateGroup': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that are offered to the given group.'}, 'candidateGroupExpression': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that are offered to the group described by the given expression. \\nSee the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'candidateUser': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that are offered to the given user or to one of his groups.'}, 'candidateUserExpression': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that are offered to the user described by the given expression. \\nSee the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'includeAssignedTasks': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Also include tasks that are assigned to users in candidate queries. Default is to only \\ninclude tasks that are not assigned to any user if you query by candidate user or\\ngroup(s).'}, 'involvedUser': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that the given user is involved in. A user is involved in a task if \\nan identity link exists between task and user (e.g., the user is the assignee).'}, 'involvedUserExpression': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that the user described by the given expression is involved in.\\nA user is involved in a task if an identity link exists between task and user\\n(e.g., the user is the assignee). See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions.'}, 'assigned': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'If set to true , restricts the query to all tasks that are assigned.'}, 'unassigned': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'If set to true , restricts the query to all tasks that are unassigned.'}, 'taskDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given key.'}, 'taskDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that have one of the given keys. The keys need to be in a comma-separated list.'}, 'taskDefinitionKeyLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a key that has the parameter value as a substring.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given name.'}, 'nameNotEqual': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that do not have the given name.'}, 'nameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a name with the given parameter value as substring.'}, 'nameNotLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that do not have a name with the given parameter\\nvalue as substring.'}, 'description': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given description.'}, 'descriptionLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a description that has the parameter\\nvalue as a substring.'}, 'priority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'Restrict to tasks that have the given priority.'}, 'maxPriority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'Restrict to tasks that have a lower or equal priority.'}, 'minPriority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'Restrict to tasks that have a higher or equal priority.'}, 'dueDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due on the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.546+0200 .\"}, 'dueDateExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are due on the date described by the given expression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'dueAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due after the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.435+0200 .\"}, 'dueAfterExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are due after the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'dueBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due before the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.243+0200 .\"}, 'dueBeforeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are due before the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'withoutDueDate': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have no due date. Value may only be true , \\nas false is the default behavior.'}, 'followUpDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date on the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date\\nmust have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.342+0200 .\"}, 'followUpDateExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a followUp date on the date described by the given\\nexpression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'followUpAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date after the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.542+0200 .\"}, 'followUpAfterExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a followUp date after the date described by the given\\nexpression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'followUpBefore': {'type': 'string', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date before the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.234+0200 .\"}, 'followUpBeforeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a followUp date before the date described by the given\\nexpression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'followUpBeforeOrNotExistent': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have no followUp date or a followUp date before the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.432+0200 . The typical use case\\nis to query all active tasks for a user for a given date.\"}, 'followUpBeforeOrNotExistentExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have no followUp date or a followUp date before the date\\ndescribed by the given expression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'createdOn': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were created on the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.324+0200 .\"}, 'createdOnExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that were created on the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'createdAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were created after the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must\\nhave the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.342+0200 .\"}, 'createdAfterExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that were created after the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'createdBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were created before the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must\\nhave the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.332+0200 .\"}, 'createdBeforeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that were created before the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'delegationState': {'type': 'string', 'nullable': True, 'enum': ['PENDING', 'RESOLVED'], 'description': 'Restrict to tasks that are in the given delegation state. Valid values are\\n PENDING and RESOLVED .'}, 'candidateGroups': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that are offered to any of the given candidate groups. Takes a\\ncomma-separated list of group names, so for example\\n developers,support,sales .'}, 'candidateGroupsExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are offered to any of the candidate groups described by the\\ngiven expression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to\\n java.util.List of Strings.'}, 'withCandidateGroups': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have a candidate group. Value may only be true ,\\nas false is the default behavior.'}, 'withoutCandidateGroups': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have no candidate group. Value may only be true ,\\nas false is the default behavior.'}, 'withCandidateUsers': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have a candidate user. Value may only be true ,\\nas false is the default behavior.'}, 'withoutCandidateUsers': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have no candidate users. Value may only be true ,\\nas false is the default behavior.'}, 'active': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include active tasks. Value may only be true , as false \\nis the default behavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include suspended tasks. Value may only be true , as\\n false is the default behavior.'}, 'taskVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include tasks that have variables with certain values. The\\narray consists of JSON objects with three properties name , operator and value .\\n name is the variable name, operator is the comparison operator to be used and\\n value the variable value. value may be of type String , Number or Boolean .\\n\\nValid operator values are:\\n eq - equal to;\\n neq - not equal to;\\n gt - greater than;\\n gteq - greater than or equal to;\\n lt - lower than;\\n lteq - lower than or equal to;\\n like .\\n key and value may not contain underscore or comma characters.'}, 'processVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include tasks that belong to a process instance with variables\\nwith certain values. The array consists of JSON objects with three properties\\n name , operator and value . name is the variable name, operator is the\\ncomparison operator to be used and value the variable value. value may be of\\ntype String , Number or Boolean .\\n\\nValid operator values are:\\n eq - equal to;\\n neq - not equal to;\\n gt - greater than;\\n gteq - greater than or equal to;\\n lt - lower than;\\n lteq - lower than or equal to;\\n like ;\\n notLike .\\n key and value may not contain underscore or comma characters.'}, 'caseInstanceVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include tasks that belong to a case instance with variables\\nwith certain values. The array consists of JSON objects with three properties\\n name , operator and value . name is the variable name, operator is the\\ncomparison operator to be used and value the variable value. value may be of\\ntype String , Number or Boolean .\\n\\nValid operator values are:\\n eq - equal to;\\n neq - not equal to;\\n gt - greater than;\\n gteq - greater than or equal to;\\n lt - lower than;\\n lteq - lower than or equal to;\\n like .\\n key and value may not contain underscore or comma characters.'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Match all variable names in this query case-insensitively. If set\\n variableName and variablename are treated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Match all variable values in this query case-insensitively. If set\\n variableValue and variablevalue are treated as equal.'}, 'parentTaskId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all tasks that are sub tasks of the given task. Takes a task id.'}, 'orQueries': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/TaskQueryDto'}, 'description': \"A JSON array of nested task queries with OR semantics. A task matches a nested query if it fulfills\\n*at least one* of the query's predicates. With multiple nested queries, a task must fulfill at least one predicate of *each* query ([Conjunctive Normal Form](https://en.wikipedia.org/wiki/Conjunctive_normal_form)).\\n\\nAll task query properties can be used except for: sorting , withCandidateGroups ,\\n withoutCandidateGroups , withCandidateUsers , withoutCandidateUsers \\n\\nSee the [User guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/process-engine-api/#or-queries)\\nfor more information about OR queries.\"}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'caseInstanceId', 'dueDate', 'executionId', 'caseExecutionId', 'assignee', 'created', 'description', 'id', 'name', 'nameCaseInsensitive', 'priority', 'processVariable', 'executionVariable', 'taskVariable', 'caseExecutionVariable', 'caseInstanceVariable'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}, 'parameters': {'$ref': '#/components/schemas/SortTaskQueryParametersDto'}}}}}} Usage: cctl&nbsp;apply queryTasksCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryVariableInstances \u00b6 Get Variable Instances (POST) Query for variable instances that fulfill given parameters through a JSON object. This method is slightly more powerful than the Get Variable Instances method because it allows filtering by multiple variable instances of types String , Number or Boolean . URL: /variable-instance Schema: {'type': 'object', 'description': 'A variable instance query which defines a list of variable instances', 'properties': {'variableName': {'type': 'string', 'nullable': True, 'description': 'Filter by variable instance name.'}, 'variableNameLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the variable instance name. The parameter can include the wildcard % to\\nexpress like-strategy such as: starts with ( % name), ends with (name % ) or\\ncontains ( % name % ).'}, 'processInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\nprocess instance ids.'}, 'executionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\nexecution ids.'}, 'caseInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed case instance ids.'}, 'caseExecutionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed case execution ids.'}, 'taskIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed task\\nids.'}, 'batchIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\nbatch ids.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\nactivity instance ids.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\ntenant ids.'}, 'variableValues': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'An array to only include variable instances that have the certain values.\\nThe array consists of objects with the three properties name , operator and value . name (String) is the\\nvariable name, operator (String) is the comparison operator to be used and value the variable value.\\n value may be String , Number or Boolean .\\n\\nValid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater\\nthan or equal to; lt - lower than; lteq - lower than or equal to; like '}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable names provided in variableValues case-insensitively. If set to true \\n**variableName** and **variablename** are treated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable values provided in variableValues case-insensitively. If set to\\n true **variableValue** and **variablevalue** are treated as equal.'}, 'variableScopeIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of passed scope ids.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is an object that specifies one ordering.\\n The position in the array identifies the rank of an ordering, i.e., whether it is primary, secondary, etc.\\n Sorting has no effect for count endpoints', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['variableName', 'variableType', 'activityInstanceId', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryVariableInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --max-results | text | Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. | None | | --first-result | text | Pagination of results. Specifies the index of the first result to return. | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -o , --output | choice ( template ) | N/A | template | | --skip-validation | boolean | ignore validation | False | | -f , --file | filename | input as yaml | None | | --help | boolean | Show this message and exit. | False | cctl apply queryVariableInstancesCount \u00b6 Get Variable Instance Count (POST) Query for the number of variable instances that fulfill given parameters. This method takes the same message body as the Get Variable Instances POST method and therefore it is slightly more powerful than the Get Variable Instance Count method. URL: /variable-instance/count Schema: {'type': 'object', 'description': 'A variable instance query which defines a list of variable instances', 'properties': {'variableName': {'type': 'string', 'nullable': True, 'description': 'Filter by variable instance name.'}, 'variableNameLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the variable instance name. The parameter can include the wildcard % to\\nexpress like-strategy such as: starts with ( % name), ends with (name % ) or\\ncontains ( % name % ).'}, 'processInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\nprocess instance ids.'}, 'executionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\nexecution ids.'}, 'caseInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed case instance ids.'}, 'caseExecutionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed case execution ids.'}, 'taskIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed task\\nids.'}, 'batchIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\nbatch ids.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\nactivity instance ids.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\ntenant ids.'}, 'variableValues': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'An array to only include variable instances that have the certain values.\\nThe array consists of objects with the three properties name , operator and value . name (String) is the\\nvariable name, operator (String) is the comparison operator to be used and value the variable value.\\n value may be String , Number or Boolean .\\n\\nValid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater\\nthan or equal to; lt - lower than; lteq - lower than or equal to; like '}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable names provided in variableValues case-insensitively. If set to true \\n**variableName** and **variablename** are treated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable values provided in variableValues case-insensitively. If set to\\n true **variableValue** and **variablevalue** are treated as equal.'}, 'variableScopeIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of passed scope ids.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is an object that specifies one ordering.\\n The position in the array identifies the rank of an ordering, i.e., whether it is primary, secondary, etc.\\n Sorting has no effect for count endpoints', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['variableName', 'variableType', 'activityInstanceId', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryVariableInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply recalculateDuedate \u00b6 Recalculate Job Due Date Recalculates the due date of a job by id. URL: /job/{id}/duedate/recalculate Schema: - Usage: cctl&nbsp;apply recalculateDuedate [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --creation-date-based / --not-creation-date-based boolean Recalculate the due date based on the creation date of the job or the current date. Value may only be false , as true is the default behavior. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply redeploy \u00b6 Redeploy Re-deploys an existing deployment. The deployment resources to re-deploy can be restricted by using the properties resourceIds or resourceNames . If no deployment resources to re-deploy are passed then all existing resources of the given deployment are re-deployed. Warning : Deployments can contain custom code in form of scripts or EL expressions to customize process behavior. This may be abused for remote execution of arbitrary code. See the section on security considerations for custom code in the user guide for details. URL: /deployment/{id}/redeploy Schema: {'title': 'RedeploymentDto', 'type': 'object', 'description': 'A JSON object with the following properties:', 'properties': {'resourceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of deployment resource ids to re-deploy.'}, 'resourceNames': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of deployment resource names to re-deploy.'}, 'source': {'type': 'string', 'nullable': True, 'description': 'Sets the source of the deployment.'}}} Usage: cctl&nbsp;apply redeploy [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply removalTimeAsync \u00b6 Set Removal Time Async (POST) Sets the removal time to multiple historic process instances asynchronously (batch). At least historicProcessInstanceIds or historicProcessInstanceQuery has to be provided. If both are provided, all instances matching query criterion and instances from the list will be updated with a removal time. URL: /history/process-instance/set-removal-time Schema: {'allOf': [{'type': 'object', 'properties': {'historicProcessInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'The id of the process instance.'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}, 'hierarchical': {'type': 'boolean', 'nullable': True, 'description': 'Sets the removal time to all historic process instances in the hierarchy.\\nValue may only be true , as false is the default behavior.'}}}, {'$ref': '#/components/schemas/AbstractSetRemovalTimeDto'}]} Usage: cctl&nbsp;apply removalTimeAsync [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply removalTimeAsyncHistoricBatch \u00b6 Set Removal Time Async (POST) Sets the removal time to multiple historic batches asynchronously (batch). At least historicBatchIds or historicBatchQuery has to be provided. If both are provided, all instances matching query criterion and instances from the list will be updated with a removal time. URL: /history/batch/set-removal-time Schema: {'allOf': [{'type': 'object', 'properties': {'historicBatchQuery': {'type': 'object', 'nullable': True, 'description': 'Query for the historic batches to set the removal time for.'}, 'historicBatchIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'The ids of the historic batches to set the removal time for.'}}}, {'$ref': '#/components/schemas/AbstractSetRemovalTimeDto'}]} Usage: cctl&nbsp;apply removalTimeAsyncHistoricBatch [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply removalTimeAsyncHistoricDecisionInstance \u00b6 Set Removal Time Async (POST) Sets the removal time to multiple historic decision instances asynchronously (batch). At least historicDecisionInstanceIds or historicDecisionInstanceQuery has to be provided. If both are provided, all instances matching query criterion and instances from the list will be updated with a removal time. URL: /history/decision-instance/set-removal-time Schema: {'allOf': [{'type': 'object', 'properties': {'hierarchical': {'type': 'boolean', 'nullable': True, 'description': 'Sets the removal time to all historic decision instances in the hierarchy.\\nValue may only be true , as false is the default behavior.'}, 'historicDecisionInstanceQuery': {'$ref': '#/components/schemas/HistoricDecisionInstanceQueryDto'}, 'historicDecisionInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'The ids of the historic decision instances to set the removal time for.'}}}, {'$ref': '#/components/schemas/AbstractSetRemovalTimeDto'}]} Usage: cctl&nbsp;apply removalTimeAsyncHistoricDecisionInstance [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply resolve \u00b6 Resolve Resolves a task and updates execution variables. Resolving a task marks that the assignee is done with the task delegated to them, and that it can be sent back to the owner. Can only be executed when the task has been delegated. The assignee will be set to the owner, who performed the delegation. URL: /task/{id}/resolve Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs.'}, 'withVariablesInReturn': {'type': 'boolean', 'nullable': True, 'default': False, 'description': \"Indicates whether the response should contain the process variables or not. The\\ndefault is false with a response code of 204 . If set to true the response\\ncontains the process variables and has a response code of 200 . If the task is not\\nassociated with a process instance (e.g. if it's part of a case instance) no\\nvariables will be returned.\"}}} Usage: cctl&nbsp;apply resolve [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply restartProcessInstance \u00b6 Restart Process Instance Restarts process instances that were canceled or terminated synchronously. Can also restart completed process instances. It will create a new instance using the original instance information. To execute the restart asynchronously, use the Restart Process Instance Async method. For more information about the difference between synchronous and asynchronous execution, please refer to the related section of the User Guide . URL: /process-definition/{id}/restart Schema: {'type': 'object', 'properties': {'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids to restart.'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started as part of this request.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution of\\n[input/output variable mappings](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#input-output-variable-mapping)\\nfor activities that are started as part of this request.'}, 'initialVariables': {'type': 'boolean', 'nullable': True, 'description': 'Set the initial set of variables during restart. By default, the last set of variables is used.'}, 'withoutBusinessKey': {'type': 'boolean', 'nullable': True, 'description': 'Do not take over the business key of the historic process instance.'}, 'instructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/RestartProcessInstanceModificationInstructionDto'}, 'description': '**Optional**. A JSON array of instructions that specify which activities to start the process instance at.\\nIf this property is omitted, the process instance starts at its default blank start event.'}}} Usage: cctl&nbsp;apply restartProcessInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply restartProcessInstanceAsyncOperation \u00b6 Restart Process Instance Async Restarts process instances that were canceled or terminated asynchronously. Can also restart completed process instances. It will create a new instance using the original instance information. To execute the restart asynchronously, use the Restart Process Instance method. For more information about the difference between synchronous and asynchronous execution, please refer to the related section of the User Guide . URL: /process-definition/{id}/restart-async Schema: {'type': 'object', 'properties': {'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids to restart.'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started as part of this request.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution of\\n[input/output variable mappings](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#input-output-variable-mapping)\\nfor activities that are started as part of this request.'}, 'initialVariables': {'type': 'boolean', 'nullable': True, 'description': 'Set the initial set of variables during restart. By default, the last set of variables is used.'}, 'withoutBusinessKey': {'type': 'boolean', 'nullable': True, 'description': 'Do not take over the business key of the historic process instance.'}, 'instructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/RestartProcessInstanceModificationInstructionDto'}, 'description': '**Optional**. A JSON array of instructions that specify which activities to start the process instance at.\\nIf this property is omitted, the process instance starts at its default blank start event.'}}} Usage: cctl&nbsp;apply restartProcessInstanceAsyncOperation [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply retriesByProcess \u00b6 Set Job Retries Async (POST) Create a batch to set retries of jobs associated with given processes asynchronously. URL: /process-instance/job-retries Schema: {'type': 'object', 'properties': {'processInstances': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids to fetch jobs, for which retries will be set.'}, 'retries': {'type': 'integer', 'format': 'int32', 'nullable': True, 'minimum': 0, 'description': 'An integer representing the number of retries. Please note that the value cannot be negative or null.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}}} Usage: cctl&nbsp;apply retriesByProcess [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply retriesByProcessHistoricQueryBased \u00b6 Set Job Retries Async Historic Query Based (POST) Create a batch to set retries of jobs asynchronously based on a historic process instance query. URL: /process-instance/job-retries-historic-query-based Schema: {'type': 'object', 'properties': {'processInstances': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids to fetch jobs, for which retries will be set.'}, 'retries': {'type': 'integer', 'format': 'int32', 'nullable': True, 'minimum': 0, 'description': 'An integer representing the number of retries. Please note that the value cannot be negative or null.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}}} Usage: cctl&nbsp;apply retriesByProcessHistoricQueryBased [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply signalExecution \u00b6 Trigger Execution Signals an execution by id. Can for example be used to explicitly skip user tasks or signal asynchronous continuations. URL: /execution/{id}/signal Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs. Each key is a variable name and\\neach value a JSON variable value object.'}}} Usage: cctl&nbsp;apply signalExecution [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply startProcessInstance \u00b6 Start Instance Instantiates a given process definition. Process variables and business key may be supplied in the request body. URL: /process-definition/{id}/start Schema: {'type': 'object', 'properties': {'businessKey': {'type': 'string', 'nullable': True, 'description': 'The business key of the process instance.'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': ''}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'The case instance id the process instance is to be initialized with.'}, 'startInstructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/ProcessInstanceModificationInstructionDto'}, 'description': '**Optional**. A JSON array of instructions that specify which activities to start the process instance at.\\nIf this property is omitted, the process instance starts at its default blank start event.'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started or ended as part of this request.\\n**Note**: This option is currently only respected when start instructions are submitted\\nvia the startInstructions property.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution of\\n[input/output variable mappings](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#input-output-variable-mapping)\\nfor activities that are started or ended as part of this request.\\n**Note**: This option is currently only respected when start instructions are submitted\\nvia the startInstructions property.'}, 'withVariablesInReturn': {'type': 'boolean', 'nullable': True, 'description': 'Indicates if the variables, which was used by the process instance during execution, should be returned.\\nDefault value: false '}}} Usage: cctl&nbsp;apply startProcessInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply startProcessInstanceByKey \u00b6 Start Instance Instantiates a given process definition, starts the latest version of the process definition which belongs to no tenant. Process variables and business key may be supplied in the request body. URL: /process-definition/key/{key}/start Schema: {'type': 'object', 'properties': {'businessKey': {'type': 'string', 'nullable': True, 'description': 'The business key of the process instance.'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': ''}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'The case instance id the process instance is to be initialized with.'}, 'startInstructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/ProcessInstanceModificationInstructionDto'}, 'description': '**Optional**. A JSON array of instructions that specify which activities to start the process instance at.\\nIf this property is omitted, the process instance starts at its default blank start event.'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started or ended as part of this request.\\n**Note**: This option is currently only respected when start instructions are submitted\\nvia the startInstructions property.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution of\\n[input/output variable mappings](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#input-output-variable-mapping)\\nfor activities that are started or ended as part of this request.\\n**Note**: This option is currently only respected when start instructions are submitted\\nvia the startInstructions property.'}, 'withVariablesInReturn': {'type': 'boolean', 'nullable': True, 'description': 'Indicates if the variables, which was used by the process instance during execution, should be returned.\\nDefault value: false '}}} Usage: cctl&nbsp;apply startProcessInstanceByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply startProcessInstanceByKeyAndTenantId \u00b6 Start Instance Instantiates a given process definition, starts the latest version of the process definition for tenant. Process variables and business key may be supplied in the request body. URL: /process-definition/key/{key}/tenant-id/{tenant-id}/start Schema: {'type': 'object', 'properties': {'businessKey': {'type': 'string', 'nullable': True, 'description': 'The business key of the process instance.'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': ''}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'The case instance id the process instance is to be initialized with.'}, 'startInstructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/ProcessInstanceModificationInstructionDto'}, 'description': '**Optional**. A JSON array of instructions that specify which activities to start the process instance at.\\nIf this property is omitted, the process instance starts at its default blank start event.'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started or ended as part of this request.\\n**Note**: This option is currently only respected when start instructions are submitted\\nvia the startInstructions property.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution of\\n[input/output variable mappings](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#input-output-variable-mapping)\\nfor activities that are started or ended as part of this request.\\n**Note**: This option is currently only respected when start instructions are submitted\\nvia the startInstructions property.'}, 'withVariablesInReturn': {'type': 'boolean', 'nullable': True, 'description': 'Indicates if the variables, which was used by the process instance during execution, should be returned.\\nDefault value: false '}}} Usage: cctl&nbsp;apply startProcessInstanceByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply submit \u00b6 Submit Form Completes a task and updates process variables using a form submit. There are two difference between this method and the complete method: If the task is in state PENDING - i.e., has been delegated before, it is not completed but resolved. Otherwise it will be completed. If the task has Form Field Metadata defined, the process engine will perform backend validation for any form fields which have validators defined. See the Generated Task Forms section of the User Guide for more information. URL: /task/{id}/submit-form Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs.'}, 'withVariablesInReturn': {'type': 'boolean', 'nullable': True, 'default': False, 'description': \"Indicates whether the response should contain the process variables or not. The\\ndefault is false with a response code of 204 . If set to true the response\\ncontains the process variables and has a response code of 200 . If the task is not\\nassociated with a process instance (e.g. if it's part of a case instance) no\\nvariables will be returned.\"}}} Usage: cctl&nbsp;apply submit [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply submitForm \u00b6 Submit Start Form Starts a process instance using a set of process variables and the business key. If the start event has Form Field Metadata defined, the process engine will perform backend validation for any form fields which have validators defined. See Documentation on Generated Task Forms . URL: /process-definition/{id}/submit-form Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': ''}, 'businessKey': {'type': 'string', 'nullable': True, 'description': 'The business key the process instance is to be initialized with.\\nThe business key uniquely identifies the process instance in the context of the given process definition.'}}} Usage: cctl&nbsp;apply submitForm [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply submitFormByKey \u00b6 Submit Start Form Starts the latest version of the process definition which belongs to no tenant using a set of process variables and the business key. If the start event has Form Field Metadata defined, the process engine will perform backend validation for any form fields which have validators defined. See Documentation on Generated Task Forms . URL: /process-definition/key/{key}/submit-form Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': ''}, 'businessKey': {'type': 'string', 'nullable': True, 'description': 'The business key the process instance is to be initialized with.\\nThe business key uniquely identifies the process instance in the context of the given process definition.'}}} Usage: cctl&nbsp;apply submitFormByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply submitFormByKeyAndTenantId \u00b6 Submit Start Form Starts the latest version of the process definition for a tenant using a set of process variables and the business key. If the start event has Form Field Metadata defined, the process engine will perform backend validation for any form fields which have validators defined. See Documentation on Generated Task Forms . URL: /process-definition/key/{key}/tenant-id/{tenant-id}/submit-form Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': ''}, 'businessKey': {'type': 'string', 'nullable': True, 'description': 'The business key the process instance is to be initialized with.\\nThe business key uniquely identifies the process instance in the context of the given process definition.'}}} Usage: cctl&nbsp;apply submitFormByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply suspensionState \u00b6 Activate/Suspend In Group Activates or suspends process instances by providing certain criteria: Activate/Suspend Process Instance By Process Definition Id \u00b6 suspend processDefinitionId Activate/Suspend Process Instance By Process Definition Key \u00b6 suspend processDefinitionKey processDefinitionTenantId processDefinitionWithoutTenantId Activate/Suspend Process Instance In Group \u00b6 suspend processInstanceIds processInstanceQuery historicProcessInstanceQuery URL: /process-instance/suspended Schema: {'allOf': [{'type': 'object', 'properties': {'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The process definition id of the process instances to activate or suspend.\\n\\n**Note**: This parameter can be used only with combination of suspended .'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'The process definition key of the process instances to activate or suspend.\\n\\n**Note**: This parameter can be used only with combination of suspended , processDefinitionTenantId , and processDefinitionWithoutTenantId .'}, 'processDefinitionTenantId': {'type': 'string', 'nullable': True, 'description': 'Only activate or suspend process instances of a process definition which belongs to a tenant with the given id.\\n\\n**Note**: This parameter can be used only with combination of suspended , processDefinitionKey , and processDefinitionWithoutTenantId .'}, 'processDefinitionWithoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only activate or suspend process instances of a process definition which belongs to no tenant.\\nValue may only be true, as false is the default behavior.\\n\\n**Note**: This parameter can be used only with combination of suspended , processDefinitionKey , and processDefinitionTenantId .'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids which defines a group of process instances\\nwhich will be activated or suspended by the operation.\\n\\n**Note**: This parameter can be used only with combination of suspended , processInstanceQuery , and historicProcessInstanceQuery .'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}}}, {'$ref': '#/components/schemas/SuspensionStateDto'}]} Usage: cctl&nbsp;apply suspensionState [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply suspensionStateAsyncOperation \u00b6 Activate/Suspend In Batch Activates or suspends process instances asynchronously with a list of process instance ids, a process instance query, and/or a historical process instance query. URL: /process-instance/suspended-async Schema: {'allOf': [{'type': 'object', 'properties': {'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids which defines a group of process instances\\nwhich will be activated or suspended by the operation.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}}}, {'$ref': '#/components/schemas/SuspensionStateDto'}]} Usage: cctl&nbsp;apply suspensionStateAsyncOperation [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply suspensionStateBy \u00b6 Activate/Suspend Jobs Activates or suspends jobs matching the given criterion. This can only be on of: * jobDefinitionId * processDefinitionId * processInstanceId * processDefinitionKey URL: /job/suspended Schema: {'allOf': [{'type': 'object', 'description': 'Defines by which selection criterion to activate or suspend jobs.\\nThis selection criterion are mutually exclusive and can only be on of:\\n* jobDefinitionId \\n* processDefinitionId \\n* processInstanceId \\n* processDefinitionKey ', 'properties': {'jobDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The job definition id of the jobs to activate or suspend.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The process definition id of the jobs to activate or suspend.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'The process instance id of the jobs to activate or suspend.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'The process definition key of the jobs to activate or suspend.'}, 'processDefinitionTenantId': {'type': 'string', 'nullable': True, 'description': 'Only activate or suspend jobs of a process definition which belongs to a tenant\\nwith the given id. Works only when selecting with processDefinitionKey .'}, 'processDefinitionWithoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only activate or suspend jobs of a process definition which belongs to no tenant.\\nValue may only be true , as false is the default behavior. Works only when selecting with processDefinitionKey .'}}}, {'$ref': '#/components/schemas/SuspensionStateDto'}]} Usage: cctl&nbsp;apply suspensionStateBy [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply suspensionStateById \u00b6 Activate/Suspend Process Instance By Id Activates or suspends a given process instance by id. URL: /process-instance/{id}/suspended Schema: {'type': 'object', 'properties': {'suspended': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend a given instance \\n(e.g. process instance, job, job definition, or batch). When the value is set to true, \\nthe given instance will be suspended and when the value is set to false, \\nthe given instance will be activated.'}}} Usage: cctl&nbsp;apply suspensionStateById [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply suspensionStateJobDefinition \u00b6 Activate/Suspend Job Definition By Id Activates or suspends a given job definition by id. URL: /job-definition/{id}/suspended Schema: {'allOf': [{'type': 'object', 'properties': {'includeJobs': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend also all jobs of\\nthe referenced job definitions. When the value is set to true , all jobs\\nof the provided job definitions will be activated or suspended and\\nwhen the value is set to false , the suspension state of all jobs\\nof the provided job definitions will not be updated.'}, 'executionDate': {'type': 'string', 'nullable': True, 'description': \"The date on which the referenced job definitions will be activated or suspended. If null,\\nthe suspension state of the given job definitions is updated\\nimmediately. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-\\ndd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}}}, {'$ref': '#/components/schemas/SuspensionStateDto'}]} Usage: cctl&nbsp;apply suspensionStateJobDefinition [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply suspensionStateJobDefinitions \u00b6 Activate/Suspend Job Definitions Activates or suspends job definitions with the given process definition id or process definition key. URL: /job-definition/suspended Schema: {'allOf': [{'type': 'object', 'description': 'Defines by which selection criterion to activate or suspend job definitions.\\nThe selection criteria are mutually exclusive and can only be one of:\\n* processDefinitionId \\n* processDefinitionKey ', 'properties': {'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The process definition id of the job definitions to activate or suspend.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'The process definition key of the job definitions to activate or suspend.'}, 'processDefinitionTenantId': {'type': 'string', 'nullable': True, 'description': 'Only activate or suspend job definitions of a process definition which belongs to a\\ntenant with the given id.\\n\\nNote that this parameter will only be considered \\nin combination with processDefinitionKey .'}, 'processDefinitionWithoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only activate or suspend job definitions of a process definition which belongs to\\nno tenant. Value may only be true , as false is the default\\nbehavior.\\n\\nNote that this parameter will only be considered \\nin combination with processDefinitionKey .'}}}, {'$ref': '#/components/schemas/JobDefinitionSuspensionStateDto'}]} Usage: cctl&nbsp;apply suspensionStateJobDefinitions [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply task \u00b6 Update Updates a task. URL: /task/{id} Schema: {'type': 'object', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'The task id.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'The task name.'}, 'assignee': {'type': 'string', 'nullable': True, 'description': \"The assignee's id.\"}, 'owner': {'type': 'string', 'nullable': True, 'description': \"The owner's id.\"}, 'created': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The date the task was created on.\\n[Default format](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ .\"}, 'due': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The task's due date.\\n[Default format](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ .\"}, 'followUp': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The follow-up date for the task.\\n[Default format](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ .\"}, 'delegationState': {'type': 'string', 'nullable': True, 'enum': ['PENDING', 'RESOLVED'], 'description': \"The task's delegation state. Possible values are PENDING and RESOLVED .\"}, 'description': {'type': 'string', 'nullable': True, 'description': \"The task's description.\"}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'The id of the execution the task belongs to.'}, 'parentTaskId': {'type': 'string', 'nullable': True, 'description': 'The id the parent task, if this task is a subtask.'}, 'priority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': \"The task's priority.\"}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the process definition the task belongs to.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'The id of the process instance the task belongs to.'}, 'caseExecutionId': {'type': 'string', 'nullable': True, 'description': 'The id of the case execution the task belongs to.'}, 'caseDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the case definition the task belongs to.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'The id of the case instance the task belongs to.'}, 'taskDefinitionKey': {'type': 'string', 'nullable': True, 'description': \"The task's key.\"}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Whether the task belongs to a process instance that is suspended.'}, 'formKey': {'type': 'string', 'nullable': True, 'description': 'If not null , the form key for the task.'}, 'camundaFormRef': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/CamundaFormRef'}, 'description': 'A reference to a specific version of a Camunda Form.'}, 'tenantId': {'type': 'string', 'nullable': True, 'description': 'If not null , the tenant id of the task.'}}} Usage: cctl&nbsp;apply task [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply tenant \u00b6 Update Tenant Updates a given tenant. URL: /tenant/{id} Schema: {'type': 'object', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'The id of the tenant.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'The name of the tenant.'}}} Usage: cctl&nbsp;apply tenant [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply throwSignal \u00b6 Event A signal is an event of global scope (broadcast semantics) and is delivered to all active handlers. Internally this maps to the engine's signal event received builder method RuntimeService#createSignalEvent() . For more information about the signal behavior, see the Signal Events section of the BPMN 2.0 Implementation Reference . URL: /signal Schema: {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of the signal to deliver.\\n\\n**Note**: This property is mandatory.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Optionally specifies a single execution which is notified by the signal.\\n\\n**Note**: If no execution id is defined the signal is broadcasted to all subscribed\\nhandlers. '}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs. Each key is a variable name and\\neach value a JSON variable value object.'}, 'tenantId': {'type': 'string', 'nullable': True, 'description': 'Specifies a tenant to deliver the signal. The signal can only be received on\\nexecutions or process definitions which belongs to the given tenant.\\n\\n**Note**: Cannot be used in combination with executionId.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'If true the signal can only be received on executions or process definitions which\\nbelongs to no tenant. Value may not be false as this is the default behavior.\\n\\n**Note**: Cannot be used in combination with executionId .'}}} Usage: cctl&nbsp;apply throwSignal [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply triggerEvent \u00b6 Trigger Message Event Subscription Delivers a message to a specific execution by id, to trigger an existing message event subscription. Inject process variables as the message's payload. URL: /execution/{id}/messageSubscriptions/{messageName}/trigger Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs. Each key is a variable name and\\neach value a JSON variable value object.'}}} Usage: cctl&nbsp;apply triggerEvent [OPTIONS] MESSAGENAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply unclaim \u00b6 Unclaim Resets a task's assignee. If successful, the task is not assigned to a user. URL: /task/{id}/unclaim Schema: - Usage: cctl&nbsp;apply unclaim [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply unlock \u00b6 Unlock Unlocks an external task by id. Clears the task's lock expiration time and worker id. URL: /external-task/{id}/unlock Schema: - Usage: cctl&nbsp;apply unlock [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply unlockUser \u00b6 Unlock User Unlocks a user by id. URL: /user/{id}/unlock Schema: - Usage: cctl&nbsp;apply unlockUser [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply validateMigrationPlan \u00b6 Validate Migration Plan Validates a migration plan statically without executing it. This corresponds to the creation time validation described in the user guide. URL: /migration/validate Schema: {'type': 'object', 'properties': {'sourceProcessDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the source process definition for the migration.'}, 'targetProcessDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the target process definition for the migration.'}, 'instructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/MigrationInstructionDto'}, 'description': 'A list of migration instructions which map equal activities. Each\\nmigration instruction is a JSON object with the following properties:'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': \"A map of variables which will be set into the process instances' scope.\\nEach key is a variable name and each value a JSON variable value object.\"}}} Usage: cctl&nbsp;apply validateMigrationPlan [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply variablesAsyncOperation \u00b6 Set Variables Async (POST) Update or create runtime process variables in the root scope of process instances. URL: /process-instance/variables-async Schema: {'type': 'object', 'properties': {'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids that define a group of process instances\\nto which the operation will set variables.\\n\\nPlease note that if processInstanceIds , processInstanceQuery and historicProcessInstanceQuery \\nare defined, the resulting operation will be performed on the union of these sets.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A variables the operation will set in the root scope of the process instances.'}}} Usage: cctl&nbsp;apply variablesAsyncOperation [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply verifyUser \u00b6 Verify User Verifies that user credentials are valid. URL: /identity/verify Schema: {'type': 'object', 'properties': {'username': {'type': 'string', 'nullable': True, 'description': 'The username of a user.'}, 'password': {'type': 'string', 'nullable': True, 'description': 'A password of a user.'}}} Usage: cctl&nbsp;apply verifyUser [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"apply Commands"},{"location":"commands/apply/#cli-reference-apply","text":"All apply commands.","title":"CLI Reference (apply)"},{"location":"commands/apply/#cctlnbspapply","text":"apply changes to the engine Usage: cctl&nbsp;apply [OPTIONS] COMMAND [ARGS]... Options: Name Type Description Default -e , --engine text N/A None --help boolean Show this message and exit. False","title":"cctl&nbsp;apply"},{"location":"commands/apply/#cctlnbspapply-addattachment","text":"Create Creates an attachment for a task. URL: /task/{id}/attachment/create Schema: - Usage: cctl&nbsp;apply addAttachment [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"addAttachment"},{"location":"commands/apply/#cctlnbspapply-addidentitylink","text":"Add Adds an identity link to a task by id. Can be used to link any user or group to a task and specify a relation. URL: /task/{id}/identity-links Schema: {'type': 'object', 'required': ['type'], 'properties': {'userId': {'type': 'string', 'nullable': True, 'description': 'The id of the user participating in this link. Either userId or groupId is set.'}, 'groupId': {'type': 'string', 'nullable': True, 'description': 'The id of the group participating in this link. Either groupId or userId is set.'}, 'type': {'type': 'string', 'nullable': True, 'description': 'The type of the identity link. The value of the this property can be user-defined. The Process Engine\\nprovides three pre-defined Identity Link type s:\\n\\n* candidate \\n* assignee - reserved for the task assignee\\n* owner - reserved for the task owner\\n\\n**Note**: When adding or removing an Identity Link, the type property must be defined.'}}} Usage: cctl&nbsp;apply addIdentityLink [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"addIdentityLink"},{"location":"commands/apply/#cctlnbspapply-annotationuseroperationlog","text":"Set Annotation to an User Operation Log (Historic) Set an annotation for auditing reasons. URL: /history/user-operation/{operationId}/set-annotation Schema: {'type': 'object', 'properties': {'annotation': {'type': 'string', 'nullable': True, 'description': 'The annotation value to put.'}}} Usage: cctl&nbsp;apply annotationUserOperationLog [OPTIONS] OPERATIONID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"annotationUserOperationLog"},{"location":"commands/apply/#cctlnbspapply-assignee","text":"Set Assignee Changes the assignee of a task to a specific user. Note: The difference with the Claim Task method is that this method does not check if the task already has a user assigned to it. URL: /task/{id}/assignee Schema: {'type': 'object', 'properties': {'userId': {'type': 'string', 'nullable': True, 'description': 'The id of the user that the current action refers to.'}}} Usage: cctl&nbsp;apply assignee [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"assignee"},{"location":"commands/apply/#cctlnbspapply-async","text":"Delete Async (POST) Delete multiple historic decision instances asynchronously (batch). At least historicDecisionInstanceIds or historicDecisionInstanceQuery has to be provided. If both are provided then all instances matching query criterion and instances from the list will be deleted. URL: /history/decision-instance/delete Schema: {'type': 'object', 'properties': {'historicDecisionInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of historic decision instance ids to delete.'}, 'historicDecisionInstanceQuery': {'$ref': '#/components/schemas/HistoricDecisionInstanceQueryDto'}, 'deleteReason': {'type': 'string', 'nullable': True, 'description': 'A string with delete reason.'}}} Usage: cctl&nbsp;apply async [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"async"},{"location":"commands/apply/#cctlnbspapply-asynchistoricquerybased","text":"Delete Async Historic Query Based (POST) Deletes a set of process instances asynchronously (batch) based on a historic process instance query. URL: /process-instance/delete-historic-query-based Schema: {'type': 'object', 'properties': {'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list process instance ids to delete.'}, 'deleteReason': {'type': 'string', 'nullable': True, 'description': 'A string with delete reason.'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started or ended as part of this request.'}, 'skipSubprocesses': {'type': 'boolean', 'nullable': True, 'description': 'Skip deletion of the subprocesses related to deleted processes as part of this request.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}}} Usage: cctl&nbsp;apply asyncHistoricQueryBased [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"asyncHistoricQueryBased"},{"location":"commands/apply/#cctlnbspapply-authorization","text":"Update an Authorization Updates an authorization by id. URL: /authorization/{id} Schema: {'type': 'object', 'properties': {'permissions': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'An array of Strings holding the permissions provided by this authorization.'}, 'userId': {'type': 'string', 'nullable': True, 'description': 'The id of the user this authorization has been created for. The value \\nrepresents a global authorization ranging over all users.'}, 'groupId': {'type': 'string', 'nullable': True, 'description': 'The id of the group this authorization has been created for.'}, 'resourceType': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'An integer representing the resource type. See the\\n[User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/authorization-service/#resources)\\nfor a list of integer representations of resource types.'}, 'resourceId': {'type': 'string', 'nullable': True, 'description': 'The resource Id. The value represents an authorization ranging over all\\ninstances of a resource.'}}} Usage: cctl&nbsp;apply authorization [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"authorization"},{"location":"commands/apply/#cctlnbspapply-batchsuspensionstate","text":"Activate/Suspend Activates or suspends a batch by id. URL: /batch/{id}/suspended Schema: {'type': 'object', 'properties': {'suspended': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend a given instance \\n(e.g. process instance, job, job definition, or batch). When the value is set to true, \\nthe given instance will be suspended and when the value is set to false, \\nthe given instance will be activated.'}}} Usage: cctl&nbsp;apply batchSuspensionState [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"batchSuspensionState"},{"location":"commands/apply/#cctlnbspapply-binarytasklocalvariable","text":"Update Local Task Variable (Binary) Sets the serialized value for a binary variable or the binary value for a file variable. URL: /task/{id}/localVariables/{varName}/data Schema: - Usage: cctl&nbsp;apply binaryTaskLocalVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"binaryTaskLocalVariable"},{"location":"commands/apply/#cctlnbspapply-binarytaskvariable","text":"Update Task Variable (Binary) Sets the serialized value for a binary variable or the binary value for a file variable visible from the task. A variable is visible from the task if it is a local task variable or declared in a parent scope of the task. See documentation on visiblity of variables . URL: /task/{id}/variables/{varName}/data Schema: - Usage: cctl&nbsp;apply binaryTaskVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"binaryTaskVariable"},{"location":"commands/apply/#cctlnbspapply-checkpassword","text":"Validate Password A password policy consists of a list of rules that new passwords must follow to be policy compliant. A password can be checked for compliancy via this end point. More information on password policies in Camunda can be found in the password policy user guide and in the security instructions . URL: /identity/password-policy Schema: {'type': 'object', 'properties': {'password': {'type': 'string', 'nullable': True, 'description': 'The candidate password to be check against the password policy.'}, 'profile': {'$ref': '#/components/schemas/UserProfileDto'}}} Usage: cctl&nbsp;apply checkPassword [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"checkPassword"},{"location":"commands/apply/#cctlnbspapply-claim","text":"Claim Claims a task for a specific user. Note: The difference with the Set Assignee method is that here a check is performed to see if the task already has a user assigned to it. URL: /task/{id}/claim Schema: {'type': 'object', 'properties': {'userId': {'type': 'string', 'nullable': True, 'description': 'The id of the user that the current action refers to.'}}} Usage: cctl&nbsp;apply claim [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"claim"},{"location":"commands/apply/#cctlnbspapply-cleanupasync","text":"Clean up history (POST) Schedules asynchronous history cleanup (See History cleanup ). Note: This endpoint will return at most a single history cleanup job. Since version 7.9.0 it is possible to configure multiple parallel history cleanup jobs . Use GET /history/cleanup/jobs to find all the available history cleanup jobs. URL: /history/cleanup Schema: - Usage: cctl&nbsp;apply cleanupAsync [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --immediately-due / --not-immediately-due boolean When true the job will be scheduled for nearest future. When false , the job will be scheduled for next batch window start time. Default is true . None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"cleanupAsync"},{"location":"commands/apply/#cctlnbspapply-clearannotationuseroperationlog","text":"Clear Annotation of an User Operation Log (Historic) Clear the annotation which was previously set for auditing reasons. URL: /history/user-operation/{operationId}/clear-annotation Schema: - Usage: cctl&nbsp;apply clearAnnotationUserOperationLog [OPTIONS] OPERATIONID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"clearAnnotationUserOperationLog"},{"location":"commands/apply/#cctlnbspapply-complete","text":"Complete Completes a task and updates process variables. URL: /task/{id}/complete Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs.'}, 'withVariablesInReturn': {'type': 'boolean', 'nullable': True, 'default': False, 'description': \"Indicates whether the response should contain the process variables or not. The\\ndefault is false with a response code of 204 . If set to true the response\\ncontains the process variables and has a response code of 200 . If the task is not\\nassociated with a process instance (e.g. if it's part of a case instance) no\\nvariables will be returned.\"}}} Usage: cctl&nbsp;apply complete [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"complete"},{"location":"commands/apply/#cctlnbspapply-completeexternaltaskresource","text":"Complete Completes an external task by id and updates process variables. URL: /external-task/{id}/complete Schema: {'allOf': [{'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs. Each key is a variable name and each value a JSON variable value object with the following properties:'}, 'localVariables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing local variable key-value pairs. Local variables are set only in the scope of external task. Each key is a variable name and each value a JSON variable value object with the following properties:'}}}, {'$ref': '#/components/schemas/HandleExternalTaskDto'}]} Usage: cctl&nbsp;apply completeExternalTaskResource [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"completeExternalTaskResource"},{"location":"commands/apply/#cctlnbspapply-configuretelemetry","text":"Configure Telemetry Configures whether Camunda receives data collection of the process engine setup and usage. URL: /telemetry/configuration Schema: {'type': 'object', 'properties': {'enableTelemetry': {'type': 'boolean', 'nullable': True, 'description': 'Specifies if the telemetry data should be sent or not.'}}} Usage: cctl&nbsp;apply configureTelemetry [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"configureTelemetry"},{"location":"commands/apply/#cctlnbspapply-correlatemessageasyncoperation","text":"Correlate Message Async (POST) Correlates a message asynchronously to executions that are waiting for this message. Messages will not be correlated to process definition-level start message events to start process instances. URL: /process-instance/message-async Schema: {'type': 'object', 'properties': {'messageName': {'type': 'string', 'nullable': True, 'description': \"The name of the message to correlate. Corresponds to the 'name' element of the message defined in BPMN 2.0 XML. Can be null to correlate by other criteria only.\"}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids that define a group of process instances\\nto which the operation will correlate a message.\\n\\nPlease note that if processInstanceIds , processInstanceQuery and historicProcessInstanceQuery \\nare defined, the resulting operation will be performed on the union of these sets.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'All variables the operation will set in the root scope of the process instances the message is correlated to.'}}} Usage: cctl&nbsp;apply correlateMessageAsyncOperation [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"correlateMessageAsyncOperation"},{"location":"commands/apply/#cctlnbspapply-createauthorization","text":"Create a New Authorization Creates a new authorization. URL: /authorization/create Schema: {'type': 'object', 'properties': {'type': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'The type of the authorization (0=global, 1=grant, 2=revoke). See the\\n[User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/authorization-service.md#authorization-type)\\nfor more information about authorization types.'}, 'permissions': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'An array of Strings holding the permissions provided by this authorization.'}, 'userId': {'type': 'string', 'nullable': True, 'description': 'The id of the user this authorization has been created for. The value \\nrepresents a global authorization ranging over all users.'}, 'groupId': {'type': 'string', 'nullable': True, 'description': 'The id of the group this authorization has been created for.'}, 'resourceType': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'An integer representing the resource type. See the\\n[User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/authorization-service/#resources)\\nfor a list of integer representations of resource types.'}, 'resourceId': {'type': 'string', 'nullable': True, 'description': 'The resource Id. The value represents an authorization ranging over all\\ninstances of a resource.'}}} Usage: cctl&nbsp;apply createAuthorization [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"createAuthorization"},{"location":"commands/apply/#cctlnbspapply-createcomment","text":"Create Creates a comment for a task by id. URL: /task/{id}/comment/create Schema: {'allOf': [{'type': 'object', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'The id of the task comment.'}, 'userId': {'type': 'string', 'nullable': True, 'description': 'The id of the user who created the comment.'}, 'taskId': {'type': 'string', 'nullable': True, 'description': 'The id of the task to which the comment belongs.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'The id of the process instance the comment is related to.'}, 'time': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The time when the comment was created.\\n[Default format]($(docsUrl)/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ .\"}, 'message': {'type': 'string', 'nullable': True, 'description': 'The content of the comment.'}, 'removalTime': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The time after which the comment should be removed by the History Cleanup job.\\n[Default format]($(docsUrl)/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ .\"}, 'rootProcessInstanceId': {'type': 'string', 'nullable': True, 'description': 'The process instance id of the root process instance that initiated the process\\ncontaining the task.'}}}, {'$ref': '#/components/schemas/LinkableDto'}]} Usage: cctl&nbsp;apply createComment [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"createComment"},{"location":"commands/apply/#cctlnbspapply-createdeployment","text":"Create Creates a deployment. Security Consideration Deployments can contain custom code in form of scripts or EL expressions to customize process behavior. This may be abused for remote execution of arbitrary code. URL: /deployment/create Schema: - Usage: cctl&nbsp;apply createDeployment [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"createDeployment"},{"location":"commands/apply/#cctlnbspapply-createfilter","text":"Create Filter Creates a new filter. URL: /filter/create Schema: {'type': 'object', 'properties': {'resourceType': {'type': 'string', 'nullable': True, 'description': 'The resource type of the filter.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'The name of the filter.'}, 'owner': {'type': 'string', 'nullable': True, 'description': 'The user id of the owner of the filter.'}, 'query': {'type': 'object', 'description': 'The query of the filter as a JSON object.'}, 'properties': {'type': 'object', 'description': 'The properties of a filter as a JSON object.'}}} Usage: cctl&nbsp;apply createFilter [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"createFilter"},{"location":"commands/apply/#cctlnbspapply-creategroup","text":"Create Group Creates a new group. URL: /group/create Schema: {'type': 'object', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'The id of the group.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'The name of the group.'}, 'type': {'type': 'string', 'nullable': True, 'description': 'The type of the group.'}}} Usage: cctl&nbsp;apply createGroup [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"createGroup"},{"location":"commands/apply/#cctlnbspapply-creategroupmember","text":"Create Group Member Adds a member to a group. URL: /group/{id}/members/{userId} Schema: - Usage: cctl&nbsp;apply createGroupMember [OPTIONS] USERID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"createGroupMember"},{"location":"commands/apply/#cctlnbspapply-creategroupmembership","text":"Create Tenant Group Membership Creates a membership between a tenant and a group. URL: /tenant/{id}/group-members/{groupId} Schema: - Usage: cctl&nbsp;apply createGroupMembership [OPTIONS] GROUPID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"createGroupMembership"},{"location":"commands/apply/#cctlnbspapply-createincident","text":"Create Incident Creates a custom incident with given properties. URL: /execution/{id}/create-incident Schema: {'type': 'object', 'properties': {'incidentType': {'type': 'string', 'nullable': True, 'description': 'A type of the new incident.'}, 'configuration': {'type': 'string', 'nullable': True, 'description': 'A configuration for the new incident.'}, 'message': {'type': 'string', 'nullable': True, 'description': 'A message for the new incident.'}}} Usage: cctl&nbsp;apply createIncident [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"createIncident"},{"location":"commands/apply/#cctlnbspapply-createtask","text":"Create Creates a new task. URL: /task/create Schema: {'type': 'object', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'The task id.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'The task name.'}, 'assignee': {'type': 'string', 'nullable': True, 'description': \"The assignee's id.\"}, 'owner': {'type': 'string', 'nullable': True, 'description': \"The owner's id.\"}, 'created': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The date the task was created on.\\n[Default format](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ .\"}, 'due': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The task's due date.\\n[Default format](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ .\"}, 'followUp': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The follow-up date for the task.\\n[Default format](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ .\"}, 'delegationState': {'type': 'string', 'nullable': True, 'enum': ['PENDING', 'RESOLVED'], 'description': \"The task's delegation state. Possible values are PENDING and RESOLVED .\"}, 'description': {'type': 'string', 'nullable': True, 'description': \"The task's description.\"}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'The id of the execution the task belongs to.'}, 'parentTaskId': {'type': 'string', 'nullable': True, 'description': 'The id the parent task, if this task is a subtask.'}, 'priority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': \"The task's priority.\"}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the process definition the task belongs to.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'The id of the process instance the task belongs to.'}, 'caseExecutionId': {'type': 'string', 'nullable': True, 'description': 'The id of the case execution the task belongs to.'}, 'caseDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the case definition the task belongs to.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'The id of the case instance the task belongs to.'}, 'taskDefinitionKey': {'type': 'string', 'nullable': True, 'description': \"The task's key.\"}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Whether the task belongs to a process instance that is suspended.'}, 'formKey': {'type': 'string', 'nullable': True, 'description': 'If not null , the form key for the task.'}, 'camundaFormRef': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/CamundaFormRef'}, 'description': 'A reference to a specific version of a Camunda Form.'}, 'tenantId': {'type': 'string', 'nullable': True, 'description': 'If not null , the tenant id of the task.'}}} Usage: cctl&nbsp;apply createTask [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"createTask"},{"location":"commands/apply/#cctlnbspapply-createtenant","text":"Create Tenant Create a new tenant. URL: /tenant/create Schema: {'type': 'object', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'The id of the tenant.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'The name of the tenant.'}}} Usage: cctl&nbsp;apply createTenant [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"createTenant"},{"location":"commands/apply/#cctlnbspapply-createuser","text":"Create Create a new user. URL: /user/create Schema: {'type': 'object', 'properties': {'profile': {'$ref': '#/components/schemas/UserProfileDto'}, 'credentials': {'$ref': '#/components/schemas/UserCredentialsDto'}}} Usage: cctl&nbsp;apply createUser [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"createUser"},{"location":"commands/apply/#cctlnbspapply-createusermembership","text":"Create Tenant User Membership Creates a membership between a tenant and an user. URL: /tenant/{id}/user-members/{userId} Schema: - Usage: cctl&nbsp;apply createUserMembership [OPTIONS] USERID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"createUserMembership"},{"location":"commands/apply/#cctlnbspapply-credentials","text":"Update Credentials Updates a user's credentials (password) URL: /user/{id}/credentials Schema: {'type': 'object', 'properties': {'password': {'type': 'string', 'nullable': True, 'description': 'The users new password.'}, 'authenticatedUserPassword': {'type': 'string', 'nullable': True, 'description': 'The password of the authenticated user who changes the password of the user\\n(i.e., the user with passed id as path parameter).'}}} Usage: cctl&nbsp;apply credentials [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"credentials"},{"location":"commands/apply/#cctlnbspapply-delegatetask","text":"Delegate Delegates a task to another user. URL: /task/{id}/delegate Schema: {'type': 'object', 'properties': {'userId': {'type': 'string', 'nullable': True, 'description': 'The id of the user that the current action refers to.'}}} Usage: cctl&nbsp;apply delegateTask [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"delegateTask"},{"location":"commands/apply/#cctlnbspapply-delivermessage","text":"Correlate Correlates a message to the process engine to either trigger a message start event or an intermediate message catching event. Internally this maps to the engine's message correlation builder methods MessageCorrelationBuilder#correlateWithResult() and MessageCorrelationBuilder#correlateAllWithResult() . For more information about the correlation behavior, see the Message Events section of the BPMN 2.0 Implementation Reference . URL: /message Schema: {'type': 'object', 'properties': {'messageName': {'type': 'string', 'nullable': True, 'description': 'The name of the message to deliver.'}, 'businessKey': {'type': 'string', 'nullable': True, 'description': 'Used for correlation of process instances that wait for incoming messages.\\nWill only correlate to executions that belong to a process instance with the provided business key.'}, 'tenantId': {'type': 'string', 'nullable': True, 'description': 'Used to correlate the message for a tenant with the given id.\\nWill only correlate to executions and process definitions which belong to the tenant.\\nMust not be supplied in conjunction with a withoutTenantId .'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'A Boolean value that indicates whether the message should only be correlated to executions\\nand process definitions which belong to no tenant or not. Value may only be true , as false \\nis the default behavior.\\nMust not be supplied in conjunction with a tenantId .'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Used to correlate the message to the process instance with the given id.'}, 'correlationKeys': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'Used for correlation of process instances that wait for incoming messages.\\nHas to be a JSON object containing key-value pairs that are matched against process instance variables\\nduring correlation. Each key is a variable name and each value a JSON variable value object with the\\nfollowing properties.'}, 'localCorrelationKeys': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'Local variables used for correlation of executions (process instances) that wait for incoming messages.\\nHas to be a JSON object containing key-value pairs that are matched against local variables during correlation.\\nEach key is a variable name and each value a JSON variable value object with the following properties.'}, 'processVariables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A map of variables that is injected into the triggered execution or process instance after the message\\nhas been delivered. Each key is a variable name and each value a JSON variable value object with\\nthe following properties.'}, 'processVariablesLocal': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A map of local variables that is injected into the triggered execution or process instance after the\\nmessage has been delivered. Each key is a variable name and each value a JSON variable value object\\nwith the following properties.'}, 'all': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'A Boolean value that indicates whether the message should be correlated to exactly one entity or multiple entities.\\nIf the value is set to false , the message will be correlated to exactly one entity (execution or process definition).\\nIf the value is set to true , the message will be correlated to multiple executions and a process definition that\\ncan be instantiated by this message in one go.'}, 'resultEnabled': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'A Boolean value that indicates whether the result of the correlation should be returned or not.\\nIf this property is set to true , there will be returned a list of message correlation result objects. Depending on the\\nall property, there will be either one ore more returned results in the list.\\n\\nThe default value is false , which means no result will be returned.'}, 'variablesInResultEnabled': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'A Boolean value that indicates whether the result of the correlation should contain process variables or not.\\nThe parameter resultEnabled should be set to true in order to use this it.\\n\\nThe default value is false , which means the variables will not be returned.'}}} Usage: cctl&nbsp;apply deliverMessage [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"deliverMessage"},{"location":"commands/apply/#cctlnbspapply-evaluatecondition","text":"Evaluate Triggers evaluation of conditions for conditional start event(s). Internally this maps to the engines condition evaluation builder method ConditionEvaluationBuilder#evaluateStartConditions(). For more information see the Conditional Start Events section of the BPMN 2.0 Implementation Reference . URL: /condition Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A map of variables which are used for evaluation of the conditions and are injected into the process instances which have been triggered.\\nEach key is a variable name and each value a JSON variable value object with the following properties.'}, 'businessKey': {'type': 'string', 'nullable': True, 'description': 'Used for the process instances that have been triggered after the evaluation.'}, 'tenantId': {'type': 'string', 'nullable': True, 'description': 'Used to evaluate a condition for a tenant with the given id.\\nWill only evaluate conditions of process definitions which belong to the tenant.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value that indicates whether the conditions should only be evaluated of process definitions which belong to no tenant or not.\\nValue may only be true, as false is the default behavior.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Used to evaluate conditions of the process definition with the given id.'}}} Usage: cctl&nbsp;apply evaluateCondition [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"evaluateCondition"},{"location":"commands/apply/#cctlnbspapply-evaluatedecisionbyid","text":"Evaluate By Id Evaluates a given decision and returns the result. The input values of the decision have to be supplied in the request body. URL: /decision-definition/{id}/evaluate Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': ''}}} Usage: cctl&nbsp;apply evaluateDecisionById [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"evaluateDecisionById"},{"location":"commands/apply/#cctlnbspapply-evaluatedecisionbykey","text":"Evaluate By Key Evaluates the latest version of the decision definition which belongs to no tenant. The input values of the decision have to be supplied in the request body. URL: /decision-definition/key/{key}/evaluate Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': ''}}} Usage: cctl&nbsp;apply evaluateDecisionByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"evaluateDecisionByKey"},{"location":"commands/apply/#cctlnbspapply-evaluatedecisionbykeyandtenant","text":"Evaluate By Key And Tenant Evaluates the latest version of the decision definition for tenant. The input values of the decision have to be supplied in the request body. URL: /decision-definition/key/{key}/tenant-id/{tenant-id}/evaluate Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': ''}}} Usage: cctl&nbsp;apply evaluateDecisionByKeyAndTenant [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"evaluateDecisionByKeyAndTenant"},{"location":"commands/apply/#cctlnbspapply-executejob","text":"Execute Job Executes a job by id. Note: The execution of the job happens synchronously in the same thread. URL: /job/{id}/execute Schema: - Usage: cctl&nbsp;apply executeJob [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"executeJob"},{"location":"commands/apply/#cctlnbspapply-executemigrationplan","text":"Execute Migration Plan Executes a migration plan synchronously for multiple process instances. To execute a migration plan asynchronously, use the Execute Migration Plan Async(Batch) method. For more information about the difference between synchronous and asynchronous execution of a migration plan, please refer to the related section of the user guide . URL: /migration/execute Schema: {'type': 'object', 'properties': {'migrationPlan': {'$ref': '#/components/schemas/MigrationPlanDto'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids to migrate.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'A boolean value to control whether execution listeners should be invoked during\\nmigration.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'A boolean value to control whether input/output mappings should be executed during\\nmigration.'}}} Usage: cctl&nbsp;apply executeMigrationPlan [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"executeMigrationPlan"},{"location":"commands/apply/#cctlnbspapply-executemigrationplanasync","text":"Execute Migration Plan Async (Batch) Executes a migration plan asynchronously (batch) for multiple process instances. To execute a migration plan synchronously, use the Execute MigrationPlan method. For more information about the difference between synchronous and asynchronous execution of a migration plan, please refer to the related section of the user guide . URL: /migration/executeAsync Schema: {'type': 'object', 'properties': {'migrationPlan': {'$ref': '#/components/schemas/MigrationPlanDto'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids to migrate.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'A boolean value to control whether execution listeners should be invoked during\\nmigration.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'A boolean value to control whether input/output mappings should be executed during\\nmigration.'}}} Usage: cctl&nbsp;apply executeMigrationPlanAsync [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"executeMigrationPlanAsync"},{"location":"commands/apply/#cctlnbspapply-executemodification","text":"Execute Modification Executes a modification synchronously for multiple process instances. To modify a single process instance, use the Modify Process Instance Execution State method. To execute a modification asynchronously, use the Execute Modification Async (Batch) method. For more information about the difference between synchronous and asynchronous execution of a modification, please refer to the related section of the user guide . URL: /modification/execute Schema: {'type': 'object', 'properties': {'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the process definition for the modification'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started or ended as part\\nof this request.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution of [input/output variable mappings](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#input-output-variable-mapping) for\\nactivities that are started or ended as part of this request.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids to modify.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'instructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/MultipleProcessInstanceModificationInstructionDto'}, 'description': 'An array of modification instructions. The instructions are executed in the order they are in. '}, 'annotation': {'type': 'string', 'nullable': True, 'description': 'An arbitrary text annotation set by a user for auditing reasons.'}}} Usage: cctl&nbsp;apply executeModification [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"executeModification"},{"location":"commands/apply/#cctlnbspapply-executemodificationasync","text":"Execute Modification Async (Batch) Executes a modification asynchronously for multiple process instances. To execute a modification synchronously, use the Execute Modification method. For more information about the difference between synchronous and asynchronous execution of a modification, please refer to the related section of the user guide . URL: /modification/executeAsync Schema: {'type': 'object', 'properties': {'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the process definition for the modification'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started or ended as part\\nof this request.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution of [input/output variable mappings](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#input-output-variable-mapping) for\\nactivities that are started or ended as part of this request.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids to modify.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'instructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/MultipleProcessInstanceModificationInstructionDto'}, 'description': 'An array of modification instructions. The instructions are executed in the order they are in. '}, 'annotation': {'type': 'string', 'nullable': True, 'description': 'An arbitrary text annotation set by a user for auditing reasons.'}}} Usage: cctl&nbsp;apply executeModificationAsync [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"executeModificationAsync"},{"location":"commands/apply/#cctlnbspapply-extendlock","text":"Extend Lock Extends the timeout of the lock by a given amount of time. URL: /external-task/{id}/extendLock Schema: {'allOf': [{'type': 'object', 'properties': {'newDuration': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'An amount of time (in milliseconds). This is the new lock duration starting from the\\ncurrent moment.'}}}, {'$ref': '#/components/schemas/HandleExternalTaskDto'}]} Usage: cctl&nbsp;apply extendLock [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"extendLock"},{"location":"commands/apply/#cctlnbspapply-externaltaskresourcepriority","text":"Set Priority Sets the priority of an existing external task by id. The default value of a priority is 0. URL: /external-task/{id}/priority Schema: {'type': 'object', 'properties': {'priority': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'The priority of the resource.'}}} Usage: cctl&nbsp;apply externalTaskResourcePriority [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"externalTaskResourcePriority"},{"location":"commands/apply/#cctlnbspapply-externaltaskresourceretries","text":"Set Retries Sets the number of retries left to execute an external task by id. If retries are set to 0, an incident is created. URL: /external-task/{id}/retries Schema: {'type': 'object', 'properties': {'retries': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'The number of retries to set for the resource. Must be >= 0. If this is 0, an incident is created\\nand the task, or job, cannot be fetched, or acquired anymore unless the retries are increased again.\\nCan not be null.'}}} Usage: cctl&nbsp;apply externalTaskResourceRetries [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"externalTaskResourceRetries"},{"location":"commands/apply/#cctlnbspapply-externaltaskretries","text":"Set Retries Sync Sets the number of retries left to execute external tasks by id synchronously. If retries are set to 0, an incident is created. URL: /external-task/retries Schema: {'type': 'object', 'properties': {'retries': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'The number of retries to set for the external task. Must be >= 0. If this is 0, an incident is created\\nand the task cannot be fetched anymore unless the retries are increased again. Can not be null.'}, 'externalTaskIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'The ids of the external tasks to set the number of retries for.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'The ids of process instances containing the tasks to set the number of retries for.'}, 'externalTaskQuery': {'$ref': '#/components/schemas/ExternalTaskQueryDto'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}}} Usage: cctl&nbsp;apply externalTaskRetries [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"externalTaskRetries"},{"location":"commands/apply/#cctlnbspapply-externaltaskretriesasyncoperation","text":"Set Retries Async Sets the number of retries left to execute external tasks by id asynchronously. If retries are set to 0, an incident is created. URL: /external-task/retries-async Schema: {'type': 'object', 'properties': {'retries': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'The number of retries to set for the external task. Must be >= 0. If this is 0, an incident is created\\nand the task cannot be fetched anymore unless the retries are increased again. Can not be null.'}, 'externalTaskIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'The ids of the external tasks to set the number of retries for.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'The ids of process instances containing the tasks to set the number of retries for.'}, 'externalTaskQuery': {'$ref': '#/components/schemas/ExternalTaskQueryDto'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}}} Usage: cctl&nbsp;apply externalTaskRetriesAsyncOperation [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"externalTaskRetriesAsyncOperation"},{"location":"commands/apply/#cctlnbspapply-fetchandlock","text":"Fetch and Lock Fetches and locks a specific number of external tasks for execution by a worker. Query can be restricted to specific task topics and for each task topic an individual lock time can be provided. URL: /external-task/fetchAndLock Schema: {'type': 'object', 'required': ['workerId', 'maxTasks'], 'properties': {'workerId': {'type': 'string', 'description': '**Mandatory.** The id of the worker on which behalf tasks are fetched. The returned tasks are locked for\\nthat worker and can only be completed when providing the same worker id.'}, 'maxTasks': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': '**Mandatory.** The maximum number of tasks to return.'}, 'usePriority': {'type': 'boolean', 'nullable': True, 'description': 'A boolean value, which indicates whether the task should be fetched based on its priority\\nor arbitrarily.'}, 'asyncResponseTimeout': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'The [Long Polling](https://docs.camunda.org/manual/latest/user-guide/process-engine/external-tasks/#long-polling-to-fetch-and-lock-external-tasks)\\ntimeout in milliseconds.\\n\\n**Note:** The value cannot be set larger than 1.800.000 milliseconds (corresponds to 30 minutes).'}, 'topics': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/FetchExternalTaskTopicDto'}, 'description': 'A JSON array of topic objects for which external tasks should be fetched. The returned tasks may be\\narbitrarily distributed among these topics. Each topic object has the following properties:'}}} Usage: cctl&nbsp;apply fetchAndLock [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"fetchAndLock"},{"location":"commands/apply/#cctlnbspapply-filter","text":"Update Filter Updates an existing filter. URL: /filter/{id} Schema: {'type': 'object', 'properties': {'resourceType': {'type': 'string', 'nullable': True, 'description': 'The resource type of the filter.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'The name of the filter.'}, 'owner': {'type': 'string', 'nullable': True, 'description': 'The user id of the owner of the filter.'}, 'query': {'type': 'object', 'description': 'The query of the filter as a JSON object.'}, 'properties': {'type': 'object', 'description': 'The properties of a filter as a JSON object.'}}} Usage: cctl&nbsp;apply filter [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"filter"},{"location":"commands/apply/#cctlnbspapply-generatemigrationplan","text":"Generate Migration Plan Generates a migration plan for two process definitions. The generated migration plan contains migration instructions which map equal activities between the two process definitions. URL: /migration/generate Schema: {'type': 'object', 'properties': {'sourceProcessDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the source process definition for the migration.'}, 'targetProcessDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the target process definition for the migration.'}, 'updateEventTriggers': {'type': 'boolean', 'nullable': True, 'description': 'A boolean flag indicating whether instructions between events should be configured\\nto update the event triggers.'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': \"A map of variables which will be set into the process instances' scope.\\nEach key is a variable name and each value a JSON variable value object.\"}}} Usage: cctl&nbsp;apply generateMigrationPlan [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"generateMigrationPlan"},{"location":"commands/apply/#cctlnbspapply-group","text":"Update Group Updates a given group by id. URL: /group/{id} Schema: {'type': 'object', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'The id of the group.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'The name of the group.'}, 'type': {'type': 'string', 'nullable': True, 'description': 'The type of the group.'}}} Usage: cctl&nbsp;apply group [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"group"},{"location":"commands/apply/#cctlnbspapply-handlebpmnerror","text":"Handle BPMN Error Reports a business error in the context of a running task by id. The error code must be specified to identify the BPMN error handler. See the documentation for Reporting Bpmn Error in User Tasks. URL: /task/{id}/bpmnError Schema: {'type': 'object', 'properties': {'errorCode': {'type': 'string', 'nullable': True, 'description': 'An error code that indicates the predefined error. It is used to identify the BPMN\\nerror handler.'}, 'errorMessage': {'type': 'string', 'nullable': True, 'description': 'An error message that describes the error.'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs.'}}} Usage: cctl&nbsp;apply handleBpmnError [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"handleBpmnError"},{"location":"commands/apply/#cctlnbspapply-handleescalation","text":"Handle BPMN Escalation Reports an escalation in the context of a running task by id. The escalation code must be specified to identify the escalation handler. See the documentation for Reporting Bpmn Escalation in User Tasks. URL: /task/{id}/bpmnEscalation Schema: {'type': 'object', 'properties': {'escalationCode': {'type': 'string', 'nullable': True, 'description': 'An escalation code that indicates the predefined escalation. It is used to identify\\nthe BPMN escalation handler.'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs.'}}} Usage: cctl&nbsp;apply handleEscalation [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"handleEscalation"},{"location":"commands/apply/#cctlnbspapply-handleexternaltaskbpmnerror","text":"Handle BPMN Error Reports a business error in the context of a running external task by id. The error code must be specified to identify the BPMN error handler. URL: /external-task/{id}/bpmnError Schema: {'allOf': [{'type': 'object', 'properties': {'workerId': {'type': 'string', 'nullable': True, 'description': 'The id of the worker that reports the failure. Must match the id of the worker who has most recently\\nlocked the task.'}}}, {'$ref': '#/components/schemas/TaskBpmnErrorDto'}]} Usage: cctl&nbsp;apply handleExternalTaskBpmnError [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"handleExternalTaskBpmnError"},{"location":"commands/apply/#cctlnbspapply-handlefailure","text":"Handle Failure Reports a failure to execute an external task by id. A number of retries and a timeout until the task can be retried can be specified. If retries are set to 0, an incident for this task is created. URL: /external-task/{id}/failure Schema: {'allOf': [{'type': 'object', 'properties': {'errorMessage': {'type': 'string', 'nullable': True, 'description': 'An message indicating the reason of the failure.'}, 'errorDetails': {'type': 'string', 'nullable': True, 'description': 'A detailed error description.'}, 'retries': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': \"A number of how often the task should be retried. Must be >= 0. If this is 0, an incident is created and\\nthe task cannot be fetched anymore unless the retries are increased again. The incident's message is set\\nto the errorMessage parameter.\"}, 'retryTimeout': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'A timeout in milliseconds before the external task becomes available again for fetching. Must be >= 0.'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs. Each key is a variable name and each value a JSON variable value object with the following properties:'}, 'localVariables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing local variable key-value pairs. Local variables are set only in the scope of external task. Each key is a variable name and each value a JSON variable value object with the following properties:'}}}, {'$ref': '#/components/schemas/HandleExternalTaskDto'}]} Usage: cctl&nbsp;apply handleFailure [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"handleFailure"},{"location":"commands/apply/#cctlnbspapply-historicprocessinstancesasync","text":"Delete Async (POST) Delete multiple historic process instances asynchronously (batch). At least historicProcessInstanceIds or historicProcessInstanceQuery has to be provided. If both are provided then all instances matching query criterion and instances from the list will be deleted. URL: /history/process-instance/delete Schema: {'type': 'object', 'properties': {'historicProcessInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list historic process instance ids to delete.'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}, 'deleteReason': {'type': 'string', 'nullable': True, 'description': 'A string with delete reason.'}, 'failIfNotExists': {'type': 'boolean', 'nullable': True, 'description': 'If set to false , the request will still be successful if one ore more of the process ids are not found.'}}} Usage: cctl&nbsp;apply historicProcessInstancesAsync [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"historicProcessInstancesAsync"},{"location":"commands/apply/#cctlnbspapply-historytimetolivebydecisiondefinitionid","text":"Update History Time to Live Updates history time to live for decision definition. The field is used within History cleanup . URL: /decision-definition/{id}/history-time-to-live Schema: {'type': 'object', 'properties': {'historyTimeToLive': {'type': 'integer', 'format': 'int32', 'nullable': True, 'minimum': 0, 'description': 'New value for historyTimeToLive field of the definition.\\nCan be null . Can not be negative.'}}} Usage: cctl&nbsp;apply historyTimeToLiveByDecisionDefinitionId [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"historyTimeToLiveByDecisionDefinitionId"},{"location":"commands/apply/#cctlnbspapply-historytimetolivebydecisiondefinitionkey","text":"Update History Time to Live By Key Updates the latest version of the decision definition which belongs to no tenant. The field is used within History cleanup . URL: /decision-definition/key/{key}/history-time-to-live Schema: {'type': 'object', 'properties': {'historyTimeToLive': {'type': 'integer', 'format': 'int32', 'nullable': True, 'minimum': 0, 'description': 'New value for historyTimeToLive field of the definition.\\nCan be null . Can not be negative.'}}} Usage: cctl&nbsp;apply historyTimeToLiveByDecisionDefinitionKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"historyTimeToLiveByDecisionDefinitionKey"},{"location":"commands/apply/#cctlnbspapply-historytimetolivebydecisiondefinitionkeyandtenant","text":"Update History Time to Live By Key And Tenant Updates the latest version of the decision definition for tenant. The field is used within History cleanup . URL: /decision-definition/key/{key}/tenant-id/{tenant-id}/history-time-to-live Schema: {'type': 'object', 'properties': {'historyTimeToLive': {'type': 'integer', 'format': 'int32', 'nullable': True, 'minimum': 0, 'description': 'New value for historyTimeToLive field of the definition.\\nCan be null . Can not be negative.'}}} Usage: cctl&nbsp;apply historyTimeToLiveByDecisionDefinitionKeyAndTenant [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"historyTimeToLiveByDecisionDefinitionKeyAndTenant"},{"location":"commands/apply/#cctlnbspapply-historytimetolivebyprocessdefinitionid","text":"Update History Time to Live Updates history time to live for process definition. The field is used within History cleanup . URL: /process-definition/{id}/history-time-to-live Schema: {'type': 'object', 'properties': {'historyTimeToLive': {'type': 'integer', 'format': 'int32', 'nullable': True, 'minimum': 0, 'description': 'New value for historyTimeToLive field of the definition.\\nCan be null . Can not be negative.'}}} Usage: cctl&nbsp;apply historyTimeToLiveByProcessDefinitionId [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"historyTimeToLiveByProcessDefinitionId"},{"location":"commands/apply/#cctlnbspapply-historytimetolivebyprocessdefinitionkey","text":"Update History Time to Live Updates history time to live for the latest version of the process definition which belongs to no tenant. The field is used within History cleanup . URL: /process-definition/key/{key}/history-time-to-live Schema: {'type': 'object', 'properties': {'historyTimeToLive': {'type': 'integer', 'format': 'int32', 'nullable': True, 'minimum': 0, 'description': 'New value for historyTimeToLive field of the definition.\\nCan be null . Can not be negative.'}}} Usage: cctl&nbsp;apply historyTimeToLiveByProcessDefinitionKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"historyTimeToLiveByProcessDefinitionKey"},{"location":"commands/apply/#cctlnbspapply-historytimetolivebyprocessdefinitionkeyandtenantid","text":"Update History Time to Live Updates history time to live for the latest version of the process definition for a tenant. The field is used within History cleanup . URL: /process-definition/key/{key}/tenant-id/{tenant-id}/history-time-to-live Schema: {'type': 'object', 'properties': {'historyTimeToLive': {'type': 'integer', 'format': 'int32', 'nullable': True, 'minimum': 0, 'description': 'New value for historyTimeToLive field of the definition.\\nCan be null . Can not be negative.'}}} Usage: cctl&nbsp;apply historyTimeToLiveByProcessDefinitionKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"historyTimeToLiveByProcessDefinitionKeyAndTenantId"},{"location":"commands/apply/#cctlnbspapply-identitylink","text":"Delete Removes an identity link from a task by id URL: /task/{id}/identity-links/delete Schema: {'type': 'object', 'required': ['type'], 'properties': {'userId': {'type': 'string', 'nullable': True, 'description': 'The id of the user participating in this link. Either userId or groupId is set.'}, 'groupId': {'type': 'string', 'nullable': True, 'description': 'The id of the group participating in this link. Either groupId or userId is set.'}, 'type': {'type': 'string', 'nullable': True, 'description': 'The type of the identity link. The value of the this property can be user-defined. The Process Engine\\nprovides three pre-defined Identity Link type s:\\n\\n* candidate \\n* assignee - reserved for the task assignee\\n* owner - reserved for the task owner\\n\\n**Note**: When adding or removing an Identity Link, the type property must be defined.'}}} Usage: cctl&nbsp;apply identityLink [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"identityLink"},{"location":"commands/apply/#cctlnbspapply-incidentannotation","text":"Set Incident Annotation Sets the annotation of an incident with given id. URL: /incident/{id}/annotation Schema: {'type': 'object', 'properties': {'annotation': {'type': 'string', 'nullable': True, 'description': 'The annotation value to put.'}}} Usage: cctl&nbsp;apply incidentAnnotation [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"incidentAnnotation"},{"location":"commands/apply/#cctlnbspapply-jobduedate","text":"Set Job Due Date Updates the due date of a job by id. URL: /job/{id}/duedate Schema: {'type': 'object', 'properties': {'duedate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': 'The date to set when the job has the next execution.'}, 'cascade': {'type': 'boolean', 'nullable': True, 'description': 'A boolean value to indicate if modifications to the due date should cascade to\\nsubsequent jobs. (e.g. Modify the due date of a timer by +15\\nminutes. This flag indicates if a +15 minutes should be applied to all\\nsubsequent timers.) This flag only affects timer jobs and only works if due date\\nis not null. Default: false '}}} Usage: cctl&nbsp;apply jobDuedate [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"jobDuedate"},{"location":"commands/apply/#cctlnbspapply-jobpriority","text":"Set Job Priority Sets the execution priority of a job by id. URL: /job/{id}/priority Schema: {'type': 'object', 'properties': {'priority': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'The priority of the resource.'}}} Usage: cctl&nbsp;apply jobPriority [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"jobPriority"},{"location":"commands/apply/#cctlnbspapply-jobpriorityjobdefinition","text":"Set Job Definition Priority by Id Sets an overriding execution priority for jobs with the given definition id. Optionally, the priorities of all the definitions' existing jobs are updated accordingly. The priority can be reset by setting it to null , meaning that a new job's priority will not be determined based on its definition's priority any longer. See the user guide on job prioritization for details. URL: /job-definition/{id}/jobPriority Schema: {'type': 'object', 'properties': {'priority': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': \"The new execution priority number for jobs of the given definition. The\\ndefinition's priority can be reset by using the value null . In\\nthat case, the job definition's priority no longer applies but a new\\njob's priority is determined as specified in the process model.\"}, 'includeJobs': {'type': 'boolean', 'nullable': True, 'description': 'A boolean value indicating whether existing jobs of the given definition should\\nreceive the priority as well. Default value is false . Can only be\\n true when the __priority__ parameter is not null .'}}} Usage: cctl&nbsp;apply jobPriorityJobDefinition [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"jobPriorityJobDefinition"},{"location":"commands/apply/#cctlnbspapply-jobretries","text":"Set Job Retries Sets the retries of the job to the given number of retries by id. URL: /job/{id}/retries Schema: {'type': 'object', 'properties': {'retries': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'The number of retries to set for the resource. Must be >= 0. If this is 0, an incident is created\\nand the task, or job, cannot be fetched, or acquired anymore unless the retries are increased again.\\nCan not be null.'}}} Usage: cctl&nbsp;apply jobRetries [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"jobRetries"},{"location":"commands/apply/#cctlnbspapply-jobretriesasyncoperation","text":"Set Job Retries Async (POST) Create a batch to set retries of jobs asynchronously. URL: /job/retries Schema: {'type': 'object', 'description': 'Defines the number of retries for a selection of jobs.\\nPlease note that if both jobIds and jobQuery are provided,\\nthen retries will be set on the union of these sets.', 'properties': {'jobIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of job ids to set retries for.'}, 'jobQuery': {'$ref': '#/components/schemas/JobQueryDto'}, 'retries': {'type': 'integer', 'format': 'int32', 'nullable': True, 'minimum': 0, 'description': 'An integer representing the number of retries. Please note that the value cannot be\\nnegative or null.'}}} Usage: cctl&nbsp;apply jobRetriesAsyncOperation [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"jobRetriesAsyncOperation"},{"location":"commands/apply/#cctlnbspapply-jobretriesjobdefinition","text":"Set Job Retries By Job Definition Id Sets the number of retries of all failed jobs associated with the given job definition id. URL: /job-definition/{id}/retries Schema: {'type': 'object', 'properties': {'retries': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'The number of retries to set for the resource. Must be >= 0. If this is 0, an incident is created\\nand the task, or job, cannot be fetched, or acquired anymore unless the retries are increased again.\\nCan not be null.'}}} Usage: cctl&nbsp;apply jobRetriesJobDefinition [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"jobRetriesJobDefinition"},{"location":"commands/apply/#cctlnbspapply-jobsuspensionstate","text":"Activate/Suspend Job By Id Activates or suspends a given job by id. URL: /job/{id}/suspended Schema: {'type': 'object', 'properties': {'suspended': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend a given instance \\n(e.g. process instance, job, job definition, or batch). When the value is set to true, \\nthe given instance will be suspended and when the value is set to false, \\nthe given instance will be activated.'}}} Usage: cctl&nbsp;apply jobSuspensionState [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"jobSuspensionState"},{"location":"commands/apply/#cctlnbspapply-localexecutionvariablebinary","text":"Post Local Execution Variable (Binary) Sets the serialized value for a binary variable or the binary value for a file variable in the context of a given execution by id. URL: /execution/{id}/localVariables/{varName}/data Schema: - Usage: cctl&nbsp;apply localExecutionVariableBinary [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"localExecutionVariableBinary"},{"location":"commands/apply/#cctlnbspapply-lock","text":"Lock an external task by a given id for a specified worker and amount of time. URL: /external-task/{id}/lock Schema: {'allOf': [{'type': 'object', 'properties': {'lockDuration': {'type': 'integer', 'format': 'int64', 'description': 'The duration to lock the external task for in milliseconds.\\n**Note:** Attempting to lock an already locked external task with the same workerId \\nwill succeed and a new lock duration will be set, starting from the current moment.'}}}, {'$ref': '#/components/schemas/HandleExternalTaskDto'}]} Usage: cctl&nbsp;apply lock [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"lock"},{"location":"commands/apply/#cctlnbspapply-modifylocalexecutionvariables","text":"Update/Delete Local Execution Variables Updates or deletes the variables in the context of an execution by id. The updates do not propagate upwards in the execution hierarchy. Updates precede deletions. So, if a variable is updated AND deleted, the deletion overrides the update. URL: /execution/{id}/localVariables Schema: {'type': 'object', 'properties': {'modifications': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs.'}, 'deletions': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'An array of String keys of variables to be deleted.'}}} Usage: cctl&nbsp;apply modifyLocalExecutionVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"modifyLocalExecutionVariables"},{"location":"commands/apply/#cctlnbspapply-modifyprocessinstance","text":"Modify Process Instance Execution State Submits a list of modification instructions to change a process instance's execution state. A modification instruction is one of the following: Starting execution before an activity Starting execution after an activity on its single outgoing sequence flow Starting execution on a specific sequence flow Canceling an activity instance, transition instance, or all instances (activity or transition) for an activity Instructions are executed immediately and in the order they are provided in this request's body. Variables can be provided with every starting instruction. The exact semantics of modification can be read about in the User guide . URL: /process-instance/{id}/modification Schema: {'type': 'object', 'properties': {'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started or ended as part of this request.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution of [input/output variable mappings](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#input-output-variable-mapping)\\nfor activities that are started or ended as part of this request.'}, 'instructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/ProcessInstanceModificationInstructionDto'}, 'description': 'JSON array of modification instructions. The instructions are executed in the order they are in.'}, 'annotation': {'type': 'string', 'nullable': True, 'description': 'An arbitrary text annotation set by a user for auditing reasons.'}}} Usage: cctl&nbsp;apply modifyProcessInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"modifyProcessInstance"},{"location":"commands/apply/#cctlnbspapply-modifyprocessinstanceasyncoperation","text":"Modify Process Instance Execution State Async Submits a list of modification instructions to change a process instance's execution state async. A modification instruction is one of the following: Starting execution before an activity Starting execution after an activity on its single outgoing sequence flow Starting execution on a specific sequence flow Cancelling an activity instance, transition instance, or all instances (activity or transition) for an activity Instructions are executed asynchronous and in the order they are provided in this request's body. Variables can be provided with every starting instruction. The exact semantics of modification can be read about in the User guide . URL: /process-instance/{id}/modification-async Schema: {'type': 'object', 'properties': {'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started or ended as part of this request.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution of [input/output variable mappings](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#input-output-variable-mapping)\\nfor activities that are started or ended as part of this request.'}, 'instructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/ProcessInstanceModificationInstructionDto'}, 'description': 'JSON array of modification instructions. The instructions are executed in the order they are in.'}, 'annotation': {'type': 'string', 'nullable': True, 'description': 'An arbitrary text annotation set by a user for auditing reasons.'}}} Usage: cctl&nbsp;apply modifyProcessInstanceAsyncOperation [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"modifyProcessInstanceAsyncOperation"},{"location":"commands/apply/#cctlnbspapply-modifyprocessinstancevariables","text":"Update/Delete Process Variables Updates or deletes the variables of a process instance by id. Updates precede deletions. So, if a variable is updated AND deleted, the deletion overrides the update. URL: /process-instance/{id}/variables Schema: {'type': 'object', 'properties': {'modifications': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs.'}, 'deletions': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'An array of String keys of variables to be deleted.'}}} Usage: cctl&nbsp;apply modifyProcessInstanceVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"modifyProcessInstanceVariables"},{"location":"commands/apply/#cctlnbspapply-modifytasklocalvariables","text":"Update/Delete Local Task Variables Updates or deletes the variables in the context of a task. Updates precede deletions. So, if a variable is updated AND deleted, the deletion overrides the update. URL: /task/{id}/localVariables Schema: {'type': 'object', 'properties': {'modifications': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs.'}, 'deletions': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'An array of String keys of variables to be deleted.'}}} Usage: cctl&nbsp;apply modifyTaskLocalVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"modifyTaskLocalVariables"},{"location":"commands/apply/#cctlnbspapply-modifytaskvariables","text":"Update/Delete Task Variables Updates or deletes the variables visible from the task. Updates precede deletions. So, if a variable is updated AND deleted, the deletion overrides the update. A variable is visible from the task if it is a local task variable or declared in a parent scope of the task. See documentation on visiblity of variables . URL: /task/{id}/variables Schema: {'type': 'object', 'properties': {'modifications': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs.'}, 'deletions': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'An array of String keys of variables to be deleted.'}}} Usage: cctl&nbsp;apply modifyTaskVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"modifyTaskVariables"},{"location":"commands/apply/#cctlnbspapply-postexecutefiltercount","text":"Execute Filter Count (POST) Executes the saved query of the filter by id and returns the count. This method is slightly more powerful then the Get Execute Filter Count method because it allows to extend the saved query of the filter. URL: /filter/{id}/count Schema: - Usage: cctl&nbsp;apply postExecuteFilterCount [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"postExecuteFilterCount"},{"location":"commands/apply/#cctlnbspapply-postexecutefilterlist","text":"Execute Filter List (POST) Executes the saved query of the filter by id and returns the result list. This method is slightly more powerful then the Get Execute FilterList method because it allows to extend the saved query of the filter. URL: /filter/{id}/list Schema: - Usage: cctl&nbsp;apply postExecuteFilterList [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"postExecuteFilterList"},{"location":"commands/apply/#cctlnbspapply-postexecutefiltersingleresult","text":"Execute Filter Single Result (POST) Executes the saved query of the filter by id and returns the single result. This method is slightly more powerful then the Get Execute Filter Single Result method because it allows to extend the saved query of the filter. URL: /filter/{id}/singleResult Schema: - Usage: cctl&nbsp;apply postExecuteFilterSingleResult [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"postExecuteFilterSingleResult"},{"location":"commands/apply/#cctlnbspapply-postquerygroups","text":"Get List (POST) Queries for a list of groups using a list of parameters. The size of the result set can be retrieved by using the Get Group Count (POST) method. URL: /group Schema: {'type': 'object', 'description': 'A group instance query which defines a list of group instances', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the group.'}, 'idIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a JSON string array of group ids.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'Filter by the name of the group.'}, 'nameLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the name that the parameter is a substring of.'}, 'type': {'type': 'string', 'nullable': True, 'description': 'Filter by the type of the group.'}, 'member': {'type': 'string', 'nullable': True, 'description': 'Only retrieve groups where the given user id is a member of.'}, 'memberOfTenant': {'type': 'string', 'nullable': True, 'description': 'Only retrieve groups which are members of the given tenant.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['id', 'name', 'type'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply postQueryGroups [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"postQueryGroups"},{"location":"commands/apply/#cctlnbspapply-processdefinitionsuspensionstate","text":"Activate/Suspend By Key Activates or suspends process definitions with the given process definition key. URL: /process-definition/suspended Schema: {'type': 'object', 'properties': {'suspended': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend all process definitions with the given key.\\nWhen the value is set to true , all process definitions with the given key will be suspended and\\nwhen the value is set to false , all process definitions with the given key will be activated.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the process definitions to activate or suspend.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'The key of the process definitions to activate or suspend.'}, 'includeProcessInstances': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend also all process instances of \\nthe process definitions with the given key.\\nWhen the value is set to true , all process instances of the process definitions with the given key\\nwill be activated or suspended and when the value is set to false , the suspension state of \\nall process instances of the process definitions with the given key will not be updated.'}, 'executionDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The date on which all process definitions with the given key will be activated or suspended.\\nIf null , the suspension state of all process definitions with the given key is updated immediately.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}}} Usage: cctl&nbsp;apply processDefinitionSuspensionState [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"processDefinitionSuspensionState"},{"location":"commands/apply/#cctlnbspapply-processdefinitionsuspensionstatebyid","text":"Activate/Suspend By Id Activates or suspends a given process definition by id. URL: /process-definition/{id}/suspended Schema: {'type': 'object', 'properties': {'suspended': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend all process definitions with the given key.\\nWhen the value is set to true , all process definitions with the given key will be suspended and\\nwhen the value is set to false , all process definitions with the given key will be activated.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the process definitions to activate or suspend.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'The key of the process definitions to activate or suspend.'}, 'includeProcessInstances': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend also all process instances of \\nthe process definitions with the given key.\\nWhen the value is set to true , all process instances of the process definitions with the given key\\nwill be activated or suspended and when the value is set to false , the suspension state of \\nall process instances of the process definitions with the given key will not be updated.'}, 'executionDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The date on which all process definitions with the given key will be activated or suspended.\\nIf null , the suspension state of all process definitions with the given key is updated immediately.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}}} Usage: cctl&nbsp;apply processDefinitionSuspensionStateById [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"processDefinitionSuspensionStateById"},{"location":"commands/apply/#cctlnbspapply-processdefinitionsuspensionstatebykey","text":"Activate/Suspend by Id Activates or suspends a given process definition by latest version of process definition key which belongs to no tenant. URL: /process-definition/key/{key}/suspended Schema: {'type': 'object', 'properties': {'suspended': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend all process definitions with the given key.\\nWhen the value is set to true , all process definitions with the given key will be suspended and\\nwhen the value is set to false , all process definitions with the given key will be activated.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the process definitions to activate or suspend.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'The key of the process definitions to activate or suspend.'}, 'includeProcessInstances': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend also all process instances of \\nthe process definitions with the given key.\\nWhen the value is set to true , all process instances of the process definitions with the given key\\nwill be activated or suspended and when the value is set to false , the suspension state of \\nall process instances of the process definitions with the given key will not be updated.'}, 'executionDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The date on which all process definitions with the given key will be activated or suspended.\\nIf null , the suspension state of all process definitions with the given key is updated immediately.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}}} Usage: cctl&nbsp;apply processDefinitionSuspensionStateByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"processDefinitionSuspensionStateByKey"},{"location":"commands/apply/#cctlnbspapply-processdefinitionsuspensionstatebykeyandtenantid","text":"Activate/Suspend by Id Activates or suspends a given process definition by the latest version of the process definition for tenant. URL: /process-definition/key/{key}/tenant-id/{tenant-id}/suspended Schema: {'type': 'object', 'properties': {'suspended': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend all process definitions with the given key.\\nWhen the value is set to true , all process definitions with the given key will be suspended and\\nwhen the value is set to false , all process definitions with the given key will be activated.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the process definitions to activate or suspend.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'The key of the process definitions to activate or suspend.'}, 'includeProcessInstances': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend also all process instances of \\nthe process definitions with the given key.\\nWhen the value is set to true , all process instances of the process definitions with the given key\\nwill be activated or suspended and when the value is set to false , the suspension state of \\nall process instances of the process definitions with the given key will not be updated.'}, 'executionDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The date on which all process definitions with the given key will be activated or suspended.\\nIf null , the suspension state of all process definitions with the given key is updated immediately.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}}} Usage: cctl&nbsp;apply processDefinitionSuspensionStateByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"processDefinitionSuspensionStateByKeyAndTenantId"},{"location":"commands/apply/#cctlnbspapply-processinstancevariable","text":"Update Process Variable Sets a variable of a given process instance by id. URL: /process-instance/{id}/variables/{varName} Schema: {'type': 'object', 'properties': {'value': {'$ref': '#/components/schemas/AnyValue'}, 'type': {'type': 'string', 'nullable': True, 'description': 'The value type of the variable.'}, 'valueInfo': {'type': 'object', 'additionalProperties': True, 'description': \"A JSON object containing additional, value-type-dependent properties.\\nFor serialized variables of type Object, the following properties can be provided:\\n\\n* objectTypeName : A string representation of the object's type name.\\n* serializationDataFormat : The serialization format used to store the variable.\\n\\nFor serialized variables of type File, the following properties can be provided:\\n\\n* filename : The name of the file. This is not the variable name but the name that will be used when downloading the file again.\\n* mimetype : The MIME type of the file that is being uploaded.\\n* encoding : The encoding of the file that is being uploaded.\\n\\nThe following property can be provided for all value types:\\n\\n* transient : Indicates whether the variable should be transient or\\nnot. See [documentation](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables#transient-variables) for more informations.\\n(Not applicable for decision-definition , /process-instance/variables-async , and /migration/executeAsync endpoints)\"}}} Usage: cctl&nbsp;apply processInstanceVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"processInstanceVariable"},{"location":"commands/apply/#cctlnbspapply-processinstancevariablebinary","text":"Update Process Variable (Binary) Sets the serialized value for a binary variable or the binary value for a file variable. URL: /process-instance/{id}/variables/{varName}/data Schema: - Usage: cctl&nbsp;apply processInstanceVariableBinary [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"processInstanceVariableBinary"},{"location":"commands/apply/#cctlnbspapply-processinstancesasyncoperation","text":"Delete Async (POST) Deletes multiple process instances asynchronously (batch). URL: /process-instance/delete Schema: {'type': 'object', 'properties': {'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list process instance ids to delete.'}, 'deleteReason': {'type': 'string', 'nullable': True, 'description': 'A string with delete reason.'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started or ended as part of this request.'}, 'skipSubprocesses': {'type': 'boolean', 'nullable': True, 'description': 'Skip deletion of the subprocesses related to deleted processes as part of this request.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}}} Usage: cctl&nbsp;apply processInstancesAsyncOperation [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"processInstancesAsyncOperation"},{"location":"commands/apply/#cctlnbspapply-profile","text":"Update User Profile Updates the profile information of an already existing user. URL: /user/{id}/profile Schema: {'type': 'object', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'The id of the user.'}, 'firstName': {'type': 'string', 'nullable': True, 'description': 'The first name of the user.'}, 'lastName': {'type': 'string', 'nullable': True, 'description': 'The first name of the user.'}, 'email': {'type': 'string', 'nullable': True, 'description': 'The email of the user.'}}} Usage: cctl&nbsp;apply profile [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"profile"},{"location":"commands/apply/#cctlnbspapply-putlocalexecutionvariable","text":"Put Local Execution Variable Sets a variable in the context of a given execution by id. Update does not propagate upwards in the execution hierarchy. URL: /execution/{id}/localVariables/{varName} Schema: {'type': 'object', 'properties': {'value': {'$ref': '#/components/schemas/AnyValue'}, 'type': {'type': 'string', 'nullable': True, 'description': 'The value type of the variable.'}, 'valueInfo': {'type': 'object', 'additionalProperties': True, 'description': \"A JSON object containing additional, value-type-dependent properties.\\nFor serialized variables of type Object, the following properties can be provided:\\n\\n* objectTypeName : A string representation of the object's type name.\\n* serializationDataFormat : The serialization format used to store the variable.\\n\\nFor serialized variables of type File, the following properties can be provided:\\n\\n* filename : The name of the file. This is not the variable name but the name that will be used when downloading the file again.\\n* mimetype : The MIME type of the file that is being uploaded.\\n* encoding : The encoding of the file that is being uploaded.\\n\\nThe following property can be provided for all value types:\\n\\n* transient : Indicates whether the variable should be transient or\\nnot. See [documentation](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables#transient-variables) for more informations.\\n(Not applicable for decision-definition , /process-instance/variables-async , and /migration/executeAsync endpoints)\"}}} Usage: cctl&nbsp;apply putLocalExecutionVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"putLocalExecutionVariable"},{"location":"commands/apply/#cctlnbspapply-puttasklocalvariable","text":"Update Local Task Variable Sets a variable in the context of a given task. URL: /task/{id}/localVariables/{varName} Schema: {'type': 'object', 'properties': {'value': {'$ref': '#/components/schemas/AnyValue'}, 'type': {'type': 'string', 'nullable': True, 'description': 'The value type of the variable.'}, 'valueInfo': {'type': 'object', 'additionalProperties': True, 'description': \"A JSON object containing additional, value-type-dependent properties.\\nFor serialized variables of type Object, the following properties can be provided:\\n\\n* objectTypeName : A string representation of the object's type name.\\n* serializationDataFormat : The serialization format used to store the variable.\\n\\nFor serialized variables of type File, the following properties can be provided:\\n\\n* filename : The name of the file. This is not the variable name but the name that will be used when downloading the file again.\\n* mimetype : The MIME type of the file that is being uploaded.\\n* encoding : The encoding of the file that is being uploaded.\\n\\nThe following property can be provided for all value types:\\n\\n* transient : Indicates whether the variable should be transient or\\nnot. See [documentation](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables#transient-variables) for more informations.\\n(Not applicable for decision-definition , /process-instance/variables-async , and /migration/executeAsync endpoints)\"}}} Usage: cctl&nbsp;apply putTaskLocalVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"putTaskLocalVariable"},{"location":"commands/apply/#cctlnbspapply-puttaskvariable","text":"Update Task Variable Updates a process variable that is visible from the Task scope. A variable is visible from the task if it is a local task variable, or declared in a parent scope of the task. See the documentation on variable scopes and visibility . Note : If a variable doesn't exist, the variable is created in the top-most scope visible from the task. URL: /task/{id}/variables/{varName} Schema: {'type': 'object', 'properties': {'value': {'$ref': '#/components/schemas/AnyValue'}, 'type': {'type': 'string', 'nullable': True, 'description': 'The value type of the variable.'}, 'valueInfo': {'type': 'object', 'additionalProperties': True, 'description': \"A JSON object containing additional, value-type-dependent properties.\\nFor serialized variables of type Object, the following properties can be provided:\\n\\n* objectTypeName : A string representation of the object's type name.\\n* serializationDataFormat : The serialization format used to store the variable.\\n\\nFor serialized variables of type File, the following properties can be provided:\\n\\n* filename : The name of the file. This is not the variable name but the name that will be used when downloading the file again.\\n* mimetype : The MIME type of the file that is being uploaded.\\n* encoding : The encoding of the file that is being uploaded.\\n\\nThe following property can be provided for all value types:\\n\\n* transient : Indicates whether the variable should be transient or\\nnot. See [documentation](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables#transient-variables) for more informations.\\n(Not applicable for decision-definition , /process-instance/variables-async , and /migration/executeAsync endpoints)\"}}} Usage: cctl&nbsp;apply putTaskVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"putTaskVariable"},{"location":"commands/apply/#cctlnbspapply-queryexecutions","text":"Get Executions (POST) Queries for executions that fulfill given parameters through a JSON object. This method is slightly more powerful than the Get Executions method because it allows to filter by multiple instance and execution variables of types String , Number or Boolean . URL: /execution Schema: {'type': 'object', 'description': 'A Execution instance query which defines a list of Execution instances', 'properties': {'businessKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the business key of the process instances the executions belong to.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process definition the executions run on.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the key of the process definition the executions run on.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the process instance the execution belongs to.'}, 'activityId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the activity the execution currently executes.'}, 'signalEventSubscriptionName': {'type': 'string', 'nullable': True, 'description': 'Select only those executions that expect a signal of the given name.'}, 'messageEventSubscriptionName': {'type': 'string', 'nullable': True, 'description': 'Select only those executions that expect a message of the given name.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active executions. Value may only be true , as false is the default\\nbehavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended executions. Value may only be true , as false is the default\\nbehavior.'}, 'incidentId': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident id.'}, 'incidentType': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident type. See the [User Guide](/manual/develop/user-guide/process-engine/incidents/#incident-types) for a list of incident types.'}, 'incidentMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message. Exact match.'}, 'incidentMessageLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message that the parameter is a substring of.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of tenant ids. An execution must have one of the given\\ntenant ids.'}, 'variables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'An array to only include executions that have variables with certain values.\\n\\nThe array consists of objects with the three properties name , operator \\nand value .\\n name (String) is the variable name, operator (String) is the comparison\\noperator to be used and value the variable value.\\n value may be String , Number or Boolean .\\n\\nValid operator values are: eq - equal to; neq - not equal to; gt -\\ngreater than;\\n gteq - greater than or equal to; lt - lower than; lteq - lower than or\\nequal to;\\n like .'}, 'processVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'An array to only include executions that belong to a process instance with variables\\nwith certain values.\\n\\nThe array consists of objects with the three properties name , operator \\nand value .\\n name (String) is the variable name, operator (String) is the comparison\\noperator to be used and value the variable value.\\n value may be String , Number or Boolean .\\n\\nValid operator values are: eq - equal to; neq - not equal to.'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable names provided in variables and processVariables case-\\ninsensitively. If set to true **variableName** and **variablename** are\\ntreated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable values provided in variables and processVariables case-\\ninsensitively. If set to true **variableValue** and **variablevalue** are\\ntreated as equal.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Has no effect for the /count endpoint', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'definitionKey', 'definitionId', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryExecutions [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryExecutions"},{"location":"commands/apply/#cctlnbspapply-queryexecutionscount","text":"Get Execution Count (POST) Queries for the number of executions that fulfill given parameters. This method takes the same message body as the Get Executions POST method and therefore it is slightly more powerful than the Get Execution Count method. URL: /execution/count Schema: {'type': 'object', 'description': 'A Execution instance query which defines a list of Execution instances', 'properties': {'businessKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the business key of the process instances the executions belong to.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process definition the executions run on.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the key of the process definition the executions run on.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the process instance the execution belongs to.'}, 'activityId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the activity the execution currently executes.'}, 'signalEventSubscriptionName': {'type': 'string', 'nullable': True, 'description': 'Select only those executions that expect a signal of the given name.'}, 'messageEventSubscriptionName': {'type': 'string', 'nullable': True, 'description': 'Select only those executions that expect a message of the given name.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active executions. Value may only be true , as false is the default\\nbehavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended executions. Value may only be true , as false is the default\\nbehavior.'}, 'incidentId': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident id.'}, 'incidentType': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident type. See the [User Guide](/manual/develop/user-guide/process-engine/incidents/#incident-types) for a list of incident types.'}, 'incidentMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message. Exact match.'}, 'incidentMessageLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message that the parameter is a substring of.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of tenant ids. An execution must have one of the given\\ntenant ids.'}, 'variables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'An array to only include executions that have variables with certain values.\\n\\nThe array consists of objects with the three properties name , operator \\nand value .\\n name (String) is the variable name, operator (String) is the comparison\\noperator to be used and value the variable value.\\n value may be String , Number or Boolean .\\n\\nValid operator values are: eq - equal to; neq - not equal to; gt -\\ngreater than;\\n gteq - greater than or equal to; lt - lower than; lteq - lower than or\\nequal to;\\n like .'}, 'processVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'An array to only include executions that belong to a process instance with variables\\nwith certain values.\\n\\nThe array consists of objects with the three properties name , operator \\nand value .\\n name (String) is the variable name, operator (String) is the comparison\\noperator to be used and value the variable value.\\n value may be String , Number or Boolean .\\n\\nValid operator values are: eq - equal to; neq - not equal to.'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable names provided in variables and processVariables case-\\ninsensitively. If set to true **variableName** and **variablename** are\\ntreated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable values provided in variables and processVariables case-\\ninsensitively. If set to true **variableValue** and **variablevalue** are\\ntreated as equal.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Has no effect for the /count endpoint', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'definitionKey', 'definitionId', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryExecutionsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryExecutionsCount"},{"location":"commands/apply/#cctlnbspapply-queryexternaltasks","text":"Get List (POST) Queries for external tasks that fulfill given parameters in the form of a JSON object. This method is slightly more powerful than the Get External Tasks method because it allows to specify a hierarchical result sorting. URL: /external-task Schema: {'title': 'ExternalTaskQueryDto', 'type': 'object', 'description': 'A JSON object with the following properties:', 'properties': {'externalTaskId': {'type': 'string', 'nullable': True, 'description': \"Filter by an external task's id.\"}, 'externalTaskIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by the comma-separated list of external task ids.'}, 'topicName': {'type': 'string', 'nullable': True, 'description': 'Filter by an external task topic.'}, 'workerId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the worker that the task was most recently locked by.'}, 'locked': {'type': 'boolean', 'nullable': True, 'description': 'Only include external tasks that are currently locked (i.e., they have a lock time and it has not expired).\\nValue may only be true , as false matches any external task.'}, 'notLocked': {'type': 'boolean', 'nullable': True, 'description': 'Only include external tasks that are currently not locked (i.e., they have no lock or it has expired).\\nValue may only be true , as false matches any external task.'}, 'withRetriesLeft': {'type': 'boolean', 'nullable': True, 'description': 'Only include external tasks that have a positive (&gt; 0) number of retries (or null ). Value may only be\\n true , as false matches any external task.'}, 'noRetriesLeft': {'type': 'boolean', 'nullable': True, 'description': 'Only include external tasks that have 0 retries. Value may only be true , as false matches any\\nexternal task.'}, 'lockExpirationAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to external tasks that have a lock that expires after a given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'lockExpirationBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to external tasks that have a lock that expires before a given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'activityId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the activity that an external task is created for.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by the comma-separated list of ids of the activities that an external task is created for.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the execution that an external task belongs to.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the process instance that an external task belongs to.'}, 'processInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a comma-separated list of process instance ids that an external task may belong to.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the process definition that an external task belongs to.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a comma-separated list of tenant ids.\\nAn external task must have one of the given tenant ids.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active tasks. Value may only be true , as false matches any external task.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended tasks. Value may only be true , as false matches any external task.'}, 'priorityHigherThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include jobs with a priority higher than or equal to the given value.\\nValue must be a valid long value.'}, 'priorityLowerThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include jobs with a priority lower than or equal to the given value.\\nValue must be a valid long value.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'A JSON array of criteria to sort the result by. Each element of the array is a JSON object that\\n specifies one ordering. The position in the array identifies the rank of an ordering, i.e., whether\\n it is primary, secondary, etc. The ordering objects have the following properties:\\n\\n **Note:** The sorting properties will not be applied to the External Task count query.', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['id', 'lockExpirationTime', 'processInstanceId', 'processDefinitionId', 'processDefinitionKey', 'taskPriority', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryExternalTasks [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryExternalTasks"},{"location":"commands/apply/#cctlnbspapply-queryexternaltaskscount","text":"Get List Count (POST) Queries for the number of external tasks that fulfill given parameters. This method takes the same message body as the Get External Tasks (POST) method. URL: /external-task/count Schema: {'title': 'ExternalTaskQueryDto', 'type': 'object', 'description': 'A JSON object with the following properties:', 'properties': {'externalTaskId': {'type': 'string', 'nullable': True, 'description': \"Filter by an external task's id.\"}, 'externalTaskIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by the comma-separated list of external task ids.'}, 'topicName': {'type': 'string', 'nullable': True, 'description': 'Filter by an external task topic.'}, 'workerId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the worker that the task was most recently locked by.'}, 'locked': {'type': 'boolean', 'nullable': True, 'description': 'Only include external tasks that are currently locked (i.e., they have a lock time and it has not expired).\\nValue may only be true , as false matches any external task.'}, 'notLocked': {'type': 'boolean', 'nullable': True, 'description': 'Only include external tasks that are currently not locked (i.e., they have no lock or it has expired).\\nValue may only be true , as false matches any external task.'}, 'withRetriesLeft': {'type': 'boolean', 'nullable': True, 'description': 'Only include external tasks that have a positive (&gt; 0) number of retries (or null ). Value may only be\\n true , as false matches any external task.'}, 'noRetriesLeft': {'type': 'boolean', 'nullable': True, 'description': 'Only include external tasks that have 0 retries. Value may only be true , as false matches any\\nexternal task.'}, 'lockExpirationAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to external tasks that have a lock that expires after a given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'lockExpirationBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to external tasks that have a lock that expires before a given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'activityId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the activity that an external task is created for.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by the comma-separated list of ids of the activities that an external task is created for.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the execution that an external task belongs to.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the process instance that an external task belongs to.'}, 'processInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a comma-separated list of process instance ids that an external task may belong to.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the process definition that an external task belongs to.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a comma-separated list of tenant ids.\\nAn external task must have one of the given tenant ids.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active tasks. Value may only be true , as false matches any external task.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended tasks. Value may only be true , as false matches any external task.'}, 'priorityHigherThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include jobs with a priority higher than or equal to the given value.\\nValue must be a valid long value.'}, 'priorityLowerThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include jobs with a priority lower than or equal to the given value.\\nValue must be a valid long value.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'A JSON array of criteria to sort the result by. Each element of the array is a JSON object that\\n specifies one ordering. The position in the array identifies the rank of an ordering, i.e., whether\\n it is primary, secondary, etc. The ordering objects have the following properties:\\n\\n **Note:** The sorting properties will not be applied to the External Task count query.', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['id', 'lockExpirationTime', 'processInstanceId', 'processDefinitionId', 'processDefinitionKey', 'taskPriority', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryExternalTasksCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryExternalTasksCount"},{"location":"commands/apply/#cctlnbspapply-querygroupcount","text":"Get List Count (POST) Queries for groups using a list of parameters and retrieves the count. URL: /group/count Schema: {'type': 'object', 'description': 'A group instance query which defines a list of group instances', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the group.'}, 'idIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a JSON string array of group ids.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'Filter by the name of the group.'}, 'nameLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the name that the parameter is a substring of.'}, 'type': {'type': 'string', 'nullable': True, 'description': 'Filter by the type of the group.'}, 'member': {'type': 'string', 'nullable': True, 'description': 'Only retrieve groups where the given user id is a member of.'}, 'memberOfTenant': {'type': 'string', 'nullable': True, 'description': 'Only retrieve groups which are members of the given tenant.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['id', 'name', 'type'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryGroupCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryGroupCount"},{"location":"commands/apply/#cctlnbspapply-queryhistoricactivityinstances","text":"Get List (POST) Queries for historic activity instances that fulfill the given parameters. The size of the result set can be retrieved by using the Get Historic Activity Instance Count method. URL: /history/activity-instance Schema: {'type': 'object', 'description': 'A historic activity instance query which defines a group of historic activity instances', 'properties': {'activityInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by activity instance id.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition id.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the execution that executed the activity instance.'}, 'activityId': {'type': 'string', 'nullable': True, 'description': 'Filter by the activity id (according to BPMN 2.0 XML).'}, 'activityName': {'type': 'string', 'nullable': True, 'description': 'Filter by the activity name (according to BPMN 2.0 XML).'}, 'activityType': {'type': 'string', 'nullable': True, 'description': 'Filter by activity type.'}, 'taskAssignee': {'type': 'string', 'nullable': True, 'description': 'Only include activity instances that are user tasks and assigned to a given user.'}, 'finished': {'type': 'boolean', 'nullable': True, 'description': 'Only include finished activity instances.\\nValue may only be true , as false behaves the same as when the property is not set.'}, 'unfinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include unfinished activity instances.\\nValue may only be true , as false behaves the same as when the property is not set.'}, 'canceled': {'type': 'boolean', 'nullable': True, 'description': 'Only include canceled activity instances.\\nValue may only be true , as false behaves the same as when the property is not set.'}, 'completeScope': {'type': 'boolean', 'nullable': True, 'description': 'Only include activity instances which completed a scope.\\nValue may only be true , as false behaves the same as when the property is not set.'}, 'startedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were started before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were started after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were finished before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were finished after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Must be a JSON array of Strings. An activity instance must have one of the given tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic activity instances that belong to no tenant. Value may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['activityInstanceId', 'instanceId', 'executionId', 'activityId', 'activityName', 'activityType', 'startTime', 'endTime', 'duration', 'definitionId', 'occurrence', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryHistoricActivityInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryHistoricActivityInstances"},{"location":"commands/apply/#cctlnbspapply-queryhistoricactivityinstancescount","text":"Get List Count (POST) Queries for the number of historic activity instances that fulfill the given parameters. URL: /history/activity-instance/count Schema: {'type': 'object', 'description': 'A historic activity instance query which defines a group of historic activity instances', 'properties': {'activityInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by activity instance id.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition id.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the execution that executed the activity instance.'}, 'activityId': {'type': 'string', 'nullable': True, 'description': 'Filter by the activity id (according to BPMN 2.0 XML).'}, 'activityName': {'type': 'string', 'nullable': True, 'description': 'Filter by the activity name (according to BPMN 2.0 XML).'}, 'activityType': {'type': 'string', 'nullable': True, 'description': 'Filter by activity type.'}, 'taskAssignee': {'type': 'string', 'nullable': True, 'description': 'Only include activity instances that are user tasks and assigned to a given user.'}, 'finished': {'type': 'boolean', 'nullable': True, 'description': 'Only include finished activity instances.\\nValue may only be true , as false behaves the same as when the property is not set.'}, 'unfinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include unfinished activity instances.\\nValue may only be true , as false behaves the same as when the property is not set.'}, 'canceled': {'type': 'boolean', 'nullable': True, 'description': 'Only include canceled activity instances.\\nValue may only be true , as false behaves the same as when the property is not set.'}, 'completeScope': {'type': 'boolean', 'nullable': True, 'description': 'Only include activity instances which completed a scope.\\nValue may only be true , as false behaves the same as when the property is not set.'}, 'startedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were started before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were started after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were finished before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were finished after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Must be a JSON array of Strings. An activity instance must have one of the given tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic activity instances that belong to no tenant. Value may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['activityInstanceId', 'instanceId', 'executionId', 'activityId', 'activityName', 'activityType', 'startTime', 'endTime', 'duration', 'definitionId', 'occurrence', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryHistoricActivityInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryHistoricActivityInstancesCount"},{"location":"commands/apply/#cctlnbspapply-queryhistoricdetails","text":"Get Historic Details (POST) Queries for historic details that fulfill the given parameters. This method is slightly more powerful than the Get Historic Details method because it allows sorting by multiple parameters. The size of the result set can be retrieved by using the Get Historic Detail Count method. URL: /history/detail Schema: {'type': 'object', 'description': 'A historic detail query which defines a group of historic details.', 'properties': {'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic details which belong to one of the passed process instance ids.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Filter by execution id.'}, 'taskId': {'type': 'string', 'nullable': True, 'description': 'Filter by task id.'}, 'activityInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by activity instance id.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by case instance id.'}, 'caseExecutionId': {'type': 'string', 'nullable': True, 'description': 'Filter by case execution id.'}, 'variableInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by variable instance id.'}, 'variableTypeIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic details where the variable updates belong to one of the passed \\nlist of variable types. A list of all supported variable types can be found\\n[here](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#supported-variable-values).\\n**Note:** All non-primitive variables are associated with the type serializable .'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic details that belong to no tenant. Value may only be\\n true , as false is the default behavior.'}, 'userOperationId': {'type': 'string', 'nullable': True, 'description': 'Filter by a user operation id.'}, 'formFields': {'type': 'boolean', 'nullable': True, 'description': 'Only include HistoricFormFields . Value may only be true , as false is the default behavior.'}, 'variableUpdates': {'type': 'boolean', 'nullable': True, 'description': 'Only include HistoricVariableUpdates . Value may only be true , as false is the default behavior.'}, 'excludeTaskDetails': {'type': 'boolean', 'nullable': True, 'description': 'Excludes all task-related HistoricDetails , so only items which have no task id set will be selected.\\nWhen this parameter is used together with taskId , this call is ignored and task details are not excluded.\\nValue may only be true , as false is the default behavior.'}, 'initial': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to historic variable updates that contain only initial variable values.\\nValue may only be true , as false is the default behavior.'}, 'occurredBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to historic details that occured before the given date (including the date).\\nDefault [format](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200.\"}, 'occurredAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to historic details that occured after the given date (including the date).\\nDefault [format](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200.\"}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'A JSON array of criteria to sort the result by. Each element of the array is\\n a JSON object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Does not have an effect for the count endpoint.', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['processInstanceId', 'variableName', 'variableType', 'variableRevision', 'formPropertyId', 'time', 'occurrence', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryHistoricDetails [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --max-results | text | Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. | None | | --first-result | text | Pagination of results. Specifies the index of the first result to return. | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -o , --output | choice ( template ) | N/A | template | | --skip-validation | boolean | ignore validation | False | | -f , --file | filename | input as yaml | None | | --help | boolean | Show this message and exit. | False |","title":"queryHistoricDetails"},{"location":"commands/apply/#cctlnbspapply-queryhistoricexternaltasklogs","text":"Get External Task Logs (POST) Queries for historic external task logs that fulfill the given parameters. This method is slightly more powerful than the Get External Task Logs method because it allows filtering by historic external task logs values of the different types String , Number or Boolean . URL: /history/external-task-log Schema: {'type': 'object', 'description': 'A Historic External Task Log instance query which defines a list of Historic External Task Log instances', 'properties': {'logId': {'type': 'string', 'nullable': True, 'description': 'Filter by historic external task log id.'}, 'externalTaskId': {'type': 'string', 'nullable': True, 'description': 'Filter by external task id.'}, 'topicName': {'type': 'string', 'nullable': True, 'description': 'Filter by an external task topic.'}, 'workerId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the worker that the task was most recently locked by.'}, 'errorMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by external task exception message.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic external task logs which belong to one of the passed activity ids.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic external task logs which belong to one of the passed activity\\ninstance ids.'}, 'executionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic external task logs which belong to one of the passed execution ids.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition key.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic external task log entries which belong to one of the passed and\\ncomma-separated tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic external task log entries that belong to no tenant. Value may only\\nbe true , as false is the default behavior.'}, 'priorityLowerThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include logs for which the associated external task had a priority lower than or\\nequal to the given value. Value must be a valid long value.'}, 'priorityHigherThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include logs for which the associated external task had a priority higher than or\\nequal to the given value. Value must be a valid long value.'}, 'creationLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include creation logs. Value may only be true , as false is the default behavior.'}, 'failureLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include failure logs. Value may only be true , as false is the default behavior.'}, 'successLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include success logs. Value may only be true , as false is the default behavior.'}, 'deletionLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include deletion logs. Value may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints.', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['timestamp', 'externalTaskId', 'topicName', 'workerId', 'retries', 'priority', 'activityId', 'activityInstanceId', 'executionId', 'processInstanceId', 'processDefinitionId', 'processDefinitionKey', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryHistoricExternalTaskLogs [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryHistoricExternalTaskLogs"},{"location":"commands/apply/#cctlnbspapply-queryhistoricexternaltasklogscount","text":"Get External Task Log Count (POST) Queries for the number of historic external task logs that fulfill the given parameters. This method takes the same message body as the Get External Task Logs (POST) method and therefore it is slightly more powerful than the Get External Task Log Count method. URL: /history/external-task-log/count Schema: {'type': 'object', 'description': 'A Historic External Task Log instance query which defines a list of Historic External Task Log instances', 'properties': {'logId': {'type': 'string', 'nullable': True, 'description': 'Filter by historic external task log id.'}, 'externalTaskId': {'type': 'string', 'nullable': True, 'description': 'Filter by external task id.'}, 'topicName': {'type': 'string', 'nullable': True, 'description': 'Filter by an external task topic.'}, 'workerId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the worker that the task was most recently locked by.'}, 'errorMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by external task exception message.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic external task logs which belong to one of the passed activity ids.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic external task logs which belong to one of the passed activity\\ninstance ids.'}, 'executionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic external task logs which belong to one of the passed execution ids.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition key.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic external task log entries which belong to one of the passed and\\ncomma-separated tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic external task log entries that belong to no tenant. Value may only\\nbe true , as false is the default behavior.'}, 'priorityLowerThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include logs for which the associated external task had a priority lower than or\\nequal to the given value. Value must be a valid long value.'}, 'priorityHigherThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include logs for which the associated external task had a priority higher than or\\nequal to the given value. Value must be a valid long value.'}, 'creationLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include creation logs. Value may only be true , as false is the default behavior.'}, 'failureLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include failure logs. Value may only be true , as false is the default behavior.'}, 'successLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include success logs. Value may only be true , as false is the default behavior.'}, 'deletionLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include deletion logs. Value may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints.', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['timestamp', 'externalTaskId', 'topicName', 'workerId', 'retries', 'priority', 'activityId', 'activityInstanceId', 'executionId', 'processInstanceId', 'processDefinitionId', 'processDefinitionKey', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryHistoricExternalTaskLogsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryHistoricExternalTaskLogsCount"},{"location":"commands/apply/#cctlnbspapply-queryhistoricjoblogs","text":"Get Job Logs (POST) Queries for historic job logs that fulfill the given parameters. This method is slightly more powerful than the Get Job Logs method because it allows filtering by historic job logs values of the different types String , Number or Boolean . URL: /history/job-log Schema: {'type': 'object', 'description': 'A Historic Job Log instance query which defines a list of Historic Job Log instances', 'properties': {'logId': {'type': 'string', 'nullable': True, 'description': 'Filter by historic job log id.'}, 'jobId': {'type': 'string', 'nullable': True, 'description': 'Filter by job id.'}, 'jobExceptionMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by job exception message.'}, 'jobDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by job definition id.'}, 'jobDefinitionType': {'type': 'string', 'nullable': True, 'description': 'Filter by job definition type. See the\\n[User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/the-job-executor/#job-creation)\\nfor more information about job definition types.'}, 'jobDefinitionConfiguration': {'type': 'string', 'nullable': True, 'description': 'Filter by job definition configuration.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic job logs which belong to one of the passed activity ids.'}, 'failedActivityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic job logs which belong to failures of one of the passed activity ids.'}, 'executionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic job logs which belong to one of the passed execution ids.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition key.'}, 'deploymentId': {'type': 'string', 'nullable': True, 'description': 'Filter by deployment id.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic job log entries which belong to one of the passed and comma-\\nseparated tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic job log entries that belong to no tenant. Value may only be\\n true , as false is the default behavior.'}, 'hostname': {'type': 'string', 'nullable': True, 'description': 'Filter by hostname.'}, 'jobPriorityLowerThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include logs for which the associated job had a priority lower than or equal to the\\ngiven value. Value must be a valid long value.'}, 'jobPriorityHigherThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include logs for which the associated job had a priority higher than or equal to the\\ngiven value. Value must be a valid long value.'}, 'creationLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include creation logs. Value may only be true , as false is the default behavior.'}, 'failureLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include failure logs. Value may only be true , as false is the default behavior.'}, 'successLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include success logs. Value may only be true , as false is the default behavior.'}, 'deletionLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include deletion logs. Value may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['timestamp', 'jobId', 'jobDefinitionId', 'jobDueDate', 'jobRetries', 'jobPriority', 'activityId', 'executionId', 'processInstanceId', 'processDefinitionId', 'processDefinitionKey', 'deploymentId', 'hostname', 'occurrence', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryHistoricJobLogs [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryHistoricJobLogs"},{"location":"commands/apply/#cctlnbspapply-queryhistoricjoblogscount","text":"Get Job Log Count (POST) Queries for the number of historic job logs that fulfill the given parameters. This method takes the same message body as the Get Job Logs (POST) method and therefore it is slightly more powerful than the Get Job Log Count method. URL: /history/job-log/count Schema: {'type': 'object', 'description': 'A Historic Job Log instance query which defines a list of Historic Job Log instances', 'properties': {'logId': {'type': 'string', 'nullable': True, 'description': 'Filter by historic job log id.'}, 'jobId': {'type': 'string', 'nullable': True, 'description': 'Filter by job id.'}, 'jobExceptionMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by job exception message.'}, 'jobDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by job definition id.'}, 'jobDefinitionType': {'type': 'string', 'nullable': True, 'description': 'Filter by job definition type. See the\\n[User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/the-job-executor/#job-creation)\\nfor more information about job definition types.'}, 'jobDefinitionConfiguration': {'type': 'string', 'nullable': True, 'description': 'Filter by job definition configuration.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic job logs which belong to one of the passed activity ids.'}, 'failedActivityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic job logs which belong to failures of one of the passed activity ids.'}, 'executionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic job logs which belong to one of the passed execution ids.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition key.'}, 'deploymentId': {'type': 'string', 'nullable': True, 'description': 'Filter by deployment id.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic job log entries which belong to one of the passed and comma-\\nseparated tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic job log entries that belong to no tenant. Value may only be\\n true , as false is the default behavior.'}, 'hostname': {'type': 'string', 'nullable': True, 'description': 'Filter by hostname.'}, 'jobPriorityLowerThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include logs for which the associated job had a priority lower than or equal to the\\ngiven value. Value must be a valid long value.'}, 'jobPriorityHigherThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include logs for which the associated job had a priority higher than or equal to the\\ngiven value. Value must be a valid long value.'}, 'creationLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include creation logs. Value may only be true , as false is the default behavior.'}, 'failureLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include failure logs. Value may only be true , as false is the default behavior.'}, 'successLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include success logs. Value may only be true , as false is the default behavior.'}, 'deletionLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include deletion logs. Value may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['timestamp', 'jobId', 'jobDefinitionId', 'jobDueDate', 'jobRetries', 'jobPriority', 'activityId', 'executionId', 'processInstanceId', 'processDefinitionId', 'processDefinitionKey', 'deploymentId', 'hostname', 'occurrence', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryHistoricJobLogsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryHistoricJobLogsCount"},{"location":"commands/apply/#cctlnbspapply-queryhistoricprocessinstances","text":"Get List (POST) Queries for historic process instances that fulfill the given parameters. This method is slightly more powerful than the Get Process Instance because it allows filtering by multiple process variables of types String , Number or Boolean . URL: /history/process-instance Schema: {'type': 'object', 'description': 'A historic process instance query which defines a group of historic process instances', 'properties': {'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by process instance ids. Must be a JSON array of Strings .'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process definition the instances run on.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the key of the process definition the instances run on.'}, 'processDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of process definition keys. A process instance must have one of the given process definition keys. Must be a JSON array of Strings .'}, 'processDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Filter by the name of the process definition the instances run on.'}, 'processDefinitionNameLike': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition names that the parameter is a substring of.'}, 'processDefinitionKeyNotIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Exclude instances that belong to a set of process definitions. Must be a JSON array of Strings .'}, 'processInstanceBusinessKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key.'}, 'processInstanceBusinessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key that the parameter is a substring of.'}, 'rootProcessInstances': {'type': 'boolean', 'nullable': True, 'description': 'Restrict the query to all process instances that are top level process instances.'}, 'finished': {'type': 'boolean', 'nullable': True, 'description': 'Only include finished process instances. This flag includes all process instances\\nthat are completed or terminated. Value may only be true , as false is the default behavior.'}, 'unfinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include unfinished process instances. Value may only be true , as false is the default behavior.'}, 'withIncidents': {'type': 'boolean', 'nullable': True, 'description': 'Only include process instances which have an incident. Value may only be true , as false is the default behavior.'}, 'withRootIncidents': {'type': 'boolean', 'nullable': True, 'description': 'Only include process instances which have a root incident. Value may only be true , as false is the default behavior.'}, 'incidentType': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident type. See the [User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/incidents/#incident-types) for a list of incident types.'}, 'incidentStatus': {'type': 'string', 'nullable': True, 'enum': ['open', 'resolved'], 'description': 'Only include process instances which have an incident in status either open or resolved. To get all process instances, use the query parameter withIncidents.'}, 'incidentMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message. Exact match.'}, 'incidentMessageLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message that the parameter is a substring of.'}, 'startedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were started before the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were started after the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were finished before the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were finished after the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'executedActivityAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that executed an activity after the given date (inclusive).\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'executedActivityBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that executed an activity before the given date (inclusive).\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'executedJobAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that executed an job after the given date (inclusive).\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'executedJobBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that executed an job before the given date (inclusive).\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedBy': {'type': 'string', 'nullable': True, 'description': 'Only include process instances that were started by the given user.'}, 'superProcessInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given process instance. Takes a process instance id.'}, 'subProcessInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to one process instance that has a sub process instance with the given id.'}, 'superCaseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id.'}, 'subCaseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to one process instance that has a sub case instance with the given id.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of tenant ids. A process instance must have one of the given tenant ids. Must be a JSON array of Strings '}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic process instances which belong to no tenant. Value may only be true , as false is the default behavior.'}, 'executedActivityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to instances that executed an activity with one of given ids. Must be a JSON array of Strings '}, 'activeActivityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to instances that have an active activity with one of given ids. Must be a JSON array of Strings '}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are active.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are suspended.'}, 'completed': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are completed.'}, 'externallyTerminated': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are externallyTerminated.'}, 'internallyTerminated': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are internallyTerminated.'}, 'variables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include process instances that have/had variables with certain values.\\nThe array consists of objects with the three properties name , operator and value . name ( String ) is the variable name,\\n operator ( String ) is the comparison operator to be used and value the variable value.\\n\\nValue may be String , Number or Boolean .\\n\\nValid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like .\\n'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable names provided in variables case-insensitively. If set to true variableName and variablename are treated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable values provided in variables case-insensitively. If set to true variableValue and variablevalue are treated as equal.'}, 'orQueries': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}, 'description': \"A JSON array of nested historic process instance queries with OR semantics.\\n\\nA process instance matches a nested query if it fulfills at least one of the query's predicates.\\n\\nWith multiple nested queries, a process instance must fulfill at least one predicate of each query\\n([Conjunctive Normal Form](https://en.wikipedia.org/wiki/Conjunctive_normal_form)).\\n\\nAll process instance query properties can be used except for: sorting \\n\\nSee the [User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/process-engine-api/#or-queries) for more information about OR queries.\"}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'definitionId', 'definitionKey', 'definitionName', 'definitionVersion', 'businessKey', 'startTime', 'endTime', 'duration', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryHistoricProcessInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryHistoricProcessInstances"},{"location":"commands/apply/#cctlnbspapply-queryhistoricprocessinstancescount","text":"Get List Count (POST) Queries for the number of historic process instances that fulfill the given parameters. This method takes the same message body as the Get Process Instances (POST) method and therefore it is slightly more powerful than the Get Process Instance Count method. URL: /history/process-instance/count Schema: {'type': 'object', 'description': 'A historic process instance query which defines a group of historic process instances', 'properties': {'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by process instance ids. Must be a JSON array of Strings .'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process definition the instances run on.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the key of the process definition the instances run on.'}, 'processDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of process definition keys. A process instance must have one of the given process definition keys. Must be a JSON array of Strings .'}, 'processDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Filter by the name of the process definition the instances run on.'}, 'processDefinitionNameLike': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition names that the parameter is a substring of.'}, 'processDefinitionKeyNotIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Exclude instances that belong to a set of process definitions. Must be a JSON array of Strings .'}, 'processInstanceBusinessKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key.'}, 'processInstanceBusinessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key that the parameter is a substring of.'}, 'rootProcessInstances': {'type': 'boolean', 'nullable': True, 'description': 'Restrict the query to all process instances that are top level process instances.'}, 'finished': {'type': 'boolean', 'nullable': True, 'description': 'Only include finished process instances. This flag includes all process instances\\nthat are completed or terminated. Value may only be true , as false is the default behavior.'}, 'unfinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include unfinished process instances. Value may only be true , as false is the default behavior.'}, 'withIncidents': {'type': 'boolean', 'nullable': True, 'description': 'Only include process instances which have an incident. Value may only be true , as false is the default behavior.'}, 'withRootIncidents': {'type': 'boolean', 'nullable': True, 'description': 'Only include process instances which have a root incident. Value may only be true , as false is the default behavior.'}, 'incidentType': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident type. See the [User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/incidents/#incident-types) for a list of incident types.'}, 'incidentStatus': {'type': 'string', 'nullable': True, 'enum': ['open', 'resolved'], 'description': 'Only include process instances which have an incident in status either open or resolved. To get all process instances, use the query parameter withIncidents.'}, 'incidentMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message. Exact match.'}, 'incidentMessageLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message that the parameter is a substring of.'}, 'startedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were started before the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were started after the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were finished before the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were finished after the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'executedActivityAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that executed an activity after the given date (inclusive).\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'executedActivityBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that executed an activity before the given date (inclusive).\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'executedJobAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that executed an job after the given date (inclusive).\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'executedJobBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that executed an job before the given date (inclusive).\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedBy': {'type': 'string', 'nullable': True, 'description': 'Only include process instances that were started by the given user.'}, 'superProcessInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given process instance. Takes a process instance id.'}, 'subProcessInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to one process instance that has a sub process instance with the given id.'}, 'superCaseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id.'}, 'subCaseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to one process instance that has a sub case instance with the given id.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of tenant ids. A process instance must have one of the given tenant ids. Must be a JSON array of Strings '}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic process instances which belong to no tenant. Value may only be true , as false is the default behavior.'}, 'executedActivityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to instances that executed an activity with one of given ids. Must be a JSON array of Strings '}, 'activeActivityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to instances that have an active activity with one of given ids. Must be a JSON array of Strings '}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are active.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are suspended.'}, 'completed': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are completed.'}, 'externallyTerminated': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are externallyTerminated.'}, 'internallyTerminated': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are internallyTerminated.'}, 'variables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include process instances that have/had variables with certain values.\\nThe array consists of objects with the three properties name , operator and value . name ( String ) is the variable name,\\n operator ( String ) is the comparison operator to be used and value the variable value.\\n\\nValue may be String , Number or Boolean .\\n\\nValid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like .\\n'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable names provided in variables case-insensitively. If set to true variableName and variablename are treated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable values provided in variables case-insensitively. If set to true variableValue and variablevalue are treated as equal.'}, 'orQueries': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}, 'description': \"A JSON array of nested historic process instance queries with OR semantics.\\n\\nA process instance matches a nested query if it fulfills at least one of the query's predicates.\\n\\nWith multiple nested queries, a process instance must fulfill at least one predicate of each query\\n([Conjunctive Normal Form](https://en.wikipedia.org/wiki/Conjunctive_normal_form)).\\n\\nAll process instance query properties can be used except for: sorting \\n\\nSee the [User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/process-engine-api/#or-queries) for more information about OR queries.\"}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'definitionId', 'definitionKey', 'definitionName', 'definitionVersion', 'businessKey', 'startTime', 'endTime', 'duration', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryHistoricProcessInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryHistoricProcessInstancesCount"},{"location":"commands/apply/#cctlnbspapply-queryhistorictaskinstances","text":"Get Tasks (Historic) (POST) Queries for historic tasks that fulfill the given parameters. This method is slightly more powerful than the Get Tasks (Historic) method because it allows filtering by multiple process or task variables of types String , Number or Boolean . The size of the result set can be retrieved by using the Get Task Count (POST) method. URL: /history/task Schema: {'type': 'object', 'description': 'A Historic Task instance query which defines a list of Historic Task instances', 'properties': {'taskId': {'type': 'string', 'nullable': True, 'description': 'Filter by task id.'}, 'taskParentTaskId': {'type': 'string', 'nullable': True, 'description': 'Filter by parent task id.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processInstanceBusinessKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key.'}, 'processInstanceBusinessKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by process instances with one of the give business keys.\\nThe keys need to be in a comma-separated list.'}, 'processInstanceBusinessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key that has the parameter value as a substring.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the execution that executed the task.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given key.'}, 'processDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given name.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by case instance id.'}, 'caseExecutionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the case execution that executed the task.'}, 'caseDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by case definition id.'}, 'caseDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given key.'}, 'caseDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given name.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which belong to one of the passed activity instance ids.'}, 'taskName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given name.'}, 'taskNameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a name with the given parameter value as substring.'}, 'taskDescription': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given description.'}, 'taskDescriptionLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a description that has the parameter value as a substring.'}, 'taskDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given key.'}, 'taskDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that have one of the passed task definition keys.'}, 'taskDeleteReason': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given delete reason.'}, 'taskDeleteReasonLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a delete reason that has the parameter value as a substring.'}, 'taskAssignee': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the given user is assigned to.'}, 'taskAssigneeLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are assigned to users with the parameter value as a substring.'}, 'taskOwner': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the given user owns.'}, 'taskOwnerLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are owned by users with the parameter value as a substring.'}, 'taskPriority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'Restrict to tasks that have the given priority.'}, 'assigned': {'type': 'boolean', 'nullable': True, 'description': 'If set to true , restricts the query to all tasks that are assigned.'}, 'unassigned': {'type': 'boolean', 'nullable': True, 'description': 'If set to true , restricts the query to all tasks that are unassigned.'}, 'finished': {'type': 'boolean', 'nullable': True, 'description': 'Only include finished tasks. Value may only be true , as false is the default behavior.'}, 'unfinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include unfinished tasks. Value may only be true , as false is the default\\nbehavior.'}, 'processFinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks of finished processes. Value may only be true , as false is the\\ndefault behavior.'}, 'processUnfinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks of unfinished processes. Value may only be true , as false is the\\ndefault behavior.'}, 'taskDueDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due on the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'taskDueDateBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'taskDueDateAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'withoutTaskDueDate': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks which have no due date. Value may only be true , as false is the\\ndefault behavior.'}, 'taskFollowUpDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date on the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'taskFollowUpDateBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'taskFollowUpDateAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were started before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were started after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were finished before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were finished after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of tenant ids. A task instance must have one of the given\\ntenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic task instances that belong to no tenant. Value may only be\\n true , as false is the default behavior.'}, 'taskVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'Only include tasks that have variables with certain values. Variable filtering expressions are\\ncomma-separated and are structured as follows:\\n\\nA valid parameter value has the form key_operator_value .\\n key is the variable name, operator is the comparison operator to be used\\nand value the variable value.\\n**Note:** Values are always treated as String objects on server side.\\n\\n\\nValid operator values are:\\n* eq - equal to;\\n* neq - not equal to;\\n* gt - greater than;\\n* gteq - greater than or equal to;\\n* lt - lower than;\\n* lteq - lower than or equal to;\\n* like .\\n\\n key and value may not contain underscore or comma characters.'}, 'processVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'Only include tasks that belong to process instances that have variables with certain\\nvalues. Variable filtering expressions are comma-separated and are structured as\\nfollows:\\n\\nA valid parameter value has the form key_operator_value .\\n key is the variable name, operator is the comparison operator to be used\\nand value the variable value.\\n**Note:** Values are always treated as String objects on server side.\\n\\n\\nValid operator values are:\\n* eq - equal to;\\n* neq - not equal to;\\n* gt - greater than;\\n* gteq - greater than or equal to;\\n* lt - lower than;\\n* lteq - lower than or equal to;\\n* like ;\\n* notLike .\\n\\n key and value may not contain underscore or comma characters.'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match the variable name provided in taskVariables and processVariables case-\\ninsensitively. If set to true **variableName** and **variablename** are\\ntreated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match the variable value provided in taskVariables and processVariables case-\\ninsensitively. If set to true **variableValue** and **variablevalue** are\\ntreated as equal.'}, 'taskInvolvedUser': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks with a historic identity link to the given user.'}, 'taskInvolvedGroup': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks with a historic identity link to the given group.'}, 'taskHadCandidateUser': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks with a historic identity link to the given candidate user.'}, 'taskHadCandidateGroup': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks with a historic identity link to the given candidate group.'}, 'withCandidateGroups': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks which have a candidate group. Value may only be true ,\\nas false is the default behavior.'}, 'withoutCandidateGroups': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks which have no candidate group. Value may only be true ,\\nas false is the default behavior.'}, 'orQueries': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/HistoricTaskInstanceQueryDto'}, 'description': \"A JSON array of nested historic task instance queries with OR semantics.\\n\\nA task instance matches a nested query if it fulfills at least one of the query's predicates.\\n\\nWith multiple nested queries, a task instance must fulfill at least one predicate of each query\\n([Conjunctive Normal Form](https://en.wikipedia.org/wiki/Conjunctive_normal_form)).\\n\\nAll task instance query properties can be used except for: sorting , withCandidateGroups , withoutCandidateGroups .\\n\\nSee the [User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/process-engine-api/#or-queries) for more information about OR queries.\"}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['taskId', 'activityInstanceId', 'processDefinitionId', 'processInstanceId', 'executionId', 'duration', 'endTime', 'startTime', 'taskName', 'taskDescription', 'assignee', 'owner', 'dueDate', 'followUpDate', 'deleteReason', 'taskDefinitionKey', 'priority', 'caseDefinitionId', 'caseInstanceId', 'caseExecutionId', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryHistoricTaskInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryHistoricTaskInstances"},{"location":"commands/apply/#cctlnbspapply-queryhistorictaskinstancescount","text":"Get Task Count (POST) Queries for the number of historic tasks that fulfill the given parameters. Takes the same parameters as the Get Tasks (Historic) method. Corresponds to the size of the result set of the Get Tasks (Historic) (POST) method and takes the same parameters. URL: /history/task/count Schema: {'type': 'object', 'description': 'A Historic Task instance query which defines a list of Historic Task instances', 'properties': {'taskId': {'type': 'string', 'nullable': True, 'description': 'Filter by task id.'}, 'taskParentTaskId': {'type': 'string', 'nullable': True, 'description': 'Filter by parent task id.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processInstanceBusinessKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key.'}, 'processInstanceBusinessKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by process instances with one of the give business keys.\\nThe keys need to be in a comma-separated list.'}, 'processInstanceBusinessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key that has the parameter value as a substring.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the execution that executed the task.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given key.'}, 'processDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given name.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by case instance id.'}, 'caseExecutionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the case execution that executed the task.'}, 'caseDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by case definition id.'}, 'caseDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given key.'}, 'caseDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given name.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which belong to one of the passed activity instance ids.'}, 'taskName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given name.'}, 'taskNameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a name with the given parameter value as substring.'}, 'taskDescription': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given description.'}, 'taskDescriptionLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a description that has the parameter value as a substring.'}, 'taskDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given key.'}, 'taskDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that have one of the passed task definition keys.'}, 'taskDeleteReason': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given delete reason.'}, 'taskDeleteReasonLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a delete reason that has the parameter value as a substring.'}, 'taskAssignee': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the given user is assigned to.'}, 'taskAssigneeLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are assigned to users with the parameter value as a substring.'}, 'taskOwner': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the given user owns.'}, 'taskOwnerLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are owned by users with the parameter value as a substring.'}, 'taskPriority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'Restrict to tasks that have the given priority.'}, 'assigned': {'type': 'boolean', 'nullable': True, 'description': 'If set to true , restricts the query to all tasks that are assigned.'}, 'unassigned': {'type': 'boolean', 'nullable': True, 'description': 'If set to true , restricts the query to all tasks that are unassigned.'}, 'finished': {'type': 'boolean', 'nullable': True, 'description': 'Only include finished tasks. Value may only be true , as false is the default behavior.'}, 'unfinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include unfinished tasks. Value may only be true , as false is the default\\nbehavior.'}, 'processFinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks of finished processes. Value may only be true , as false is the\\ndefault behavior.'}, 'processUnfinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks of unfinished processes. Value may only be true , as false is the\\ndefault behavior.'}, 'taskDueDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due on the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'taskDueDateBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'taskDueDateAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'withoutTaskDueDate': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks which have no due date. Value may only be true , as false is the\\ndefault behavior.'}, 'taskFollowUpDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date on the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'taskFollowUpDateBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'taskFollowUpDateAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were started before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were started after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were finished before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were finished after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of tenant ids. A task instance must have one of the given\\ntenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic task instances that belong to no tenant. Value may only be\\n true , as false is the default behavior.'}, 'taskVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'Only include tasks that have variables with certain values. Variable filtering expressions are\\ncomma-separated and are structured as follows:\\n\\nA valid parameter value has the form key_operator_value .\\n key is the variable name, operator is the comparison operator to be used\\nand value the variable value.\\n**Note:** Values are always treated as String objects on server side.\\n\\n\\nValid operator values are:\\n* eq - equal to;\\n* neq - not equal to;\\n* gt - greater than;\\n* gteq - greater than or equal to;\\n* lt - lower than;\\n* lteq - lower than or equal to;\\n* like .\\n\\n key and value may not contain underscore or comma characters.'}, 'processVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'Only include tasks that belong to process instances that have variables with certain\\nvalues. Variable filtering expressions are comma-separated and are structured as\\nfollows:\\n\\nA valid parameter value has the form key_operator_value .\\n key is the variable name, operator is the comparison operator to be used\\nand value the variable value.\\n**Note:** Values are always treated as String objects on server side.\\n\\n\\nValid operator values are:\\n* eq - equal to;\\n* neq - not equal to;\\n* gt - greater than;\\n* gteq - greater than or equal to;\\n* lt - lower than;\\n* lteq - lower than or equal to;\\n* like ;\\n* notLike .\\n\\n key and value may not contain underscore or comma characters.'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match the variable name provided in taskVariables and processVariables case-\\ninsensitively. If set to true **variableName** and **variablename** are\\ntreated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match the variable value provided in taskVariables and processVariables case-\\ninsensitively. If set to true **variableValue** and **variablevalue** are\\ntreated as equal.'}, 'taskInvolvedUser': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks with a historic identity link to the given user.'}, 'taskInvolvedGroup': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks with a historic identity link to the given group.'}, 'taskHadCandidateUser': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks with a historic identity link to the given candidate user.'}, 'taskHadCandidateGroup': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks with a historic identity link to the given candidate group.'}, 'withCandidateGroups': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks which have a candidate group. Value may only be true ,\\nas false is the default behavior.'}, 'withoutCandidateGroups': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks which have no candidate group. Value may only be true ,\\nas false is the default behavior.'}, 'orQueries': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/HistoricTaskInstanceQueryDto'}, 'description': \"A JSON array of nested historic task instance queries with OR semantics.\\n\\nA task instance matches a nested query if it fulfills at least one of the query's predicates.\\n\\nWith multiple nested queries, a task instance must fulfill at least one predicate of each query\\n([Conjunctive Normal Form](https://en.wikipedia.org/wiki/Conjunctive_normal_form)).\\n\\nAll task instance query properties can be used except for: sorting , withCandidateGroups , withoutCandidateGroups .\\n\\nSee the [User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/process-engine-api/#or-queries) for more information about OR queries.\"}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['taskId', 'activityInstanceId', 'processDefinitionId', 'processInstanceId', 'executionId', 'duration', 'endTime', 'startTime', 'taskName', 'taskDescription', 'assignee', 'owner', 'dueDate', 'followUpDate', 'deleteReason', 'taskDefinitionKey', 'priority', 'caseDefinitionId', 'caseInstanceId', 'caseExecutionId', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryHistoricTaskInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryHistoricTaskInstancesCount"},{"location":"commands/apply/#cctlnbspapply-queryhistoricvariableinstances","text":"Get Variable Instances (POST) Queries for historic variable instances that fulfill the given parameters. This method is slightly more powerful than the Get Variable Instances method because it allows filtering by variable values of the different types String , Number or Boolean . URL: /history/variable-instance Schema: {'type': 'object', 'description': 'A Historic Variable Instance instance query which defines a list of Historic Variable Instance instances', 'properties': {'variableName': {'type': 'string', 'nullable': True, 'description': 'Filter by variable name.'}, 'variableNameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to variables with a name like the parameter.'}, 'variableValue': {'type': 'object', 'description': 'Filter by variable value. May be String , Number or Boolean .'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match the variable name provided in variableName and variableNameLike case-\\ninsensitively. If set to true **variableName** and **variablename** are\\ntreated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match the variable value provided in variableValue case-insensitively. If set to true \\n**variableValue** and **variablevalue** are treated as equal.'}, 'variableTypeIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': \"Only include historic variable instances which belong to one of the passed and comma-\\nseparated variable types. A list of all supported variable types can be found\\n[here](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#supported-variable-values).\\n**Note:** All non-primitive variables are associated with the type\\n'serializable'.\"}, 'includeDeleted': {'type': 'boolean', 'nullable': True, 'description': 'Include variables that has already been deleted during the execution.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process instance the variable belongs to.'}, 'processInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed process instance ids.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process definition the variable belongs to.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by a key of the process definition the variable belongs to.'}, 'executionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and execution ids.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by the case instance the variable belongs to.'}, 'caseExecutionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and case execution ids.'}, 'caseActivityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and case activity ids.'}, 'taskIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and task ids.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and activity instance ids.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and comma-\\nseparated tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic variable instances that belong to no tenant. Value may only be\\n true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'variableName', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryHistoricVariableInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --max-results | text | Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. | None | | --first-result | text | Pagination of results. Specifies the index of the first result to return. | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -o , --output | choice ( template ) | N/A | template | | --skip-validation | boolean | ignore validation | False | | -f , --file | filename | input as yaml | None | | --help | boolean | Show this message and exit. | False |","title":"queryHistoricVariableInstances"},{"location":"commands/apply/#cctlnbspapply-queryhistoricvariableinstancescount","text":"Get Variable Instance Count (POST) Queries for historic variable instances that fulfill the given parameters. This method takes the same message body as the Get Variable Instances (POST) method and therefore it is more powerful regarding variable values than the Get Variable Instance Count method. URL: /history/variable-instance/count Schema: {'type': 'object', 'description': 'A Historic Variable Instance instance query which defines a list of Historic Variable Instance instances', 'properties': {'variableName': {'type': 'string', 'nullable': True, 'description': 'Filter by variable name.'}, 'variableNameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to variables with a name like the parameter.'}, 'variableValue': {'type': 'object', 'description': 'Filter by variable value. May be String , Number or Boolean .'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match the variable name provided in variableName and variableNameLike case-\\ninsensitively. If set to true **variableName** and **variablename** are\\ntreated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match the variable value provided in variableValue case-insensitively. If set to true \\n**variableValue** and **variablevalue** are treated as equal.'}, 'variableTypeIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': \"Only include historic variable instances which belong to one of the passed and comma-\\nseparated variable types. A list of all supported variable types can be found\\n[here](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#supported-variable-values).\\n**Note:** All non-primitive variables are associated with the type\\n'serializable'.\"}, 'includeDeleted': {'type': 'boolean', 'nullable': True, 'description': 'Include variables that has already been deleted during the execution.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process instance the variable belongs to.'}, 'processInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed process instance ids.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process definition the variable belongs to.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by a key of the process definition the variable belongs to.'}, 'executionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and execution ids.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by the case instance the variable belongs to.'}, 'caseExecutionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and case execution ids.'}, 'caseActivityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and case activity ids.'}, 'taskIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and task ids.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and activity instance ids.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and comma-\\nseparated tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic variable instances that belong to no tenant. Value may only be\\n true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'variableName', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryHistoricVariableInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryHistoricVariableInstancesCount"},{"location":"commands/apply/#cctlnbspapply-queryjobdefinitions","text":"Get Job Definitions (POST) Queries for job definitions that fulfill given parameters. This method is slightly more powerful than the Get Job Definitions method because it allows filtering by multiple job definitions of types String , Number or Boolean . URL: /job-definition Schema: {'type': 'object', 'description': 'A Job definition query which defines a list of Job definitions', 'properties': {'jobDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by job definition id.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include job definitions which belong to one of the passed activity ids.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Only include job definitions which exist for the given process definition id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Only include job definitions which exist for the given process definition key.'}, 'jobType': {'type': 'string', 'nullable': True, 'description': 'Only include job definitions which exist for the given job type. See the\\n[User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/the-job-executor/#job-creation)\\nfor more information about job types.'}, 'jobConfiguration': {'type': 'string', 'nullable': True, 'description': 'Only include job definitions which exist for the given job configuration. For example: for\\ntimer jobs it is the timer configuration.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active job definitions. Value may only be true , as false is the default\\nbehavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended job definitions. Value may only be true , as false is the\\ndefault behavior.'}, 'withOverridingJobPriority': {'type': 'boolean', 'nullable': True, 'description': 'Only include job definitions that have an overriding job priority defined. The only\\neffective value is true . If set to false , this filter is not applied.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include job definitions which belong to one of the passed tenant\\nids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include job definitions which belong to no tenant. Value may only be true , as\\n false is the default behavior.'}, 'includeJobDefinitionsWithoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Include job definitions which belong to no tenant. Can be used in combination with\\n tenantIdIn . Value may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints.', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['jobDefinitionId', 'activityId', 'processDefinitionId', 'processDefinitionKey', 'jobType', 'jobConfiguration', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryJobDefinitions [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryJobDefinitions"},{"location":"commands/apply/#cctlnbspapply-queryjobdefinitionscount","text":"Get Job Definition Count (POST) Queries for the number of job definitions that fulfill given parameters. This method takes the same message body as the Get Job Definitions (POST) method and therefore it is slightly more powerful than the Get Job Definition Count method. URL: /job-definition/count Schema: {'type': 'object', 'description': 'A Job definition query which defines a list of Job definitions', 'properties': {'jobDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by job definition id.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include job definitions which belong to one of the passed activity ids.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Only include job definitions which exist for the given process definition id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Only include job definitions which exist for the given process definition key.'}, 'jobType': {'type': 'string', 'nullable': True, 'description': 'Only include job definitions which exist for the given job type. See the\\n[User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/the-job-executor/#job-creation)\\nfor more information about job types.'}, 'jobConfiguration': {'type': 'string', 'nullable': True, 'description': 'Only include job definitions which exist for the given job configuration. For example: for\\ntimer jobs it is the timer configuration.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active job definitions. Value may only be true , as false is the default\\nbehavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended job definitions. Value may only be true , as false is the\\ndefault behavior.'}, 'withOverridingJobPriority': {'type': 'boolean', 'nullable': True, 'description': 'Only include job definitions that have an overriding job priority defined. The only\\neffective value is true . If set to false , this filter is not applied.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include job definitions which belong to one of the passed tenant\\nids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include job definitions which belong to no tenant. Value may only be true , as\\n false is the default behavior.'}, 'includeJobDefinitionsWithoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Include job definitions which belong to no tenant. Can be used in combination with\\n tenantIdIn . Value may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints.', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['jobDefinitionId', 'activityId', 'processDefinitionId', 'processDefinitionKey', 'jobType', 'jobConfiguration', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryJobDefinitionsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryJobDefinitionsCount"},{"location":"commands/apply/#cctlnbspapply-queryjobs","text":"Get Jobs (POST) Queries for jobs that fulfill given parameters. This method is slightly more powerful than the Get Jobs method because it allows filtering by multiple jobs of types String , Number or Boolean . URL: /job Schema: {'type': 'object', 'description': 'A Job instance query which defines a list of Job instances', 'properties': {'jobId': {'type': 'string', 'nullable': True, 'description': 'Filter by job id.'}, 'jobIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of job ids.'}, 'jobDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs which exist for the given job definition.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs which exist for the given process instance.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only select jobs which exist for the given list of process instance ids.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs which exist for the given execution.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the process definition the jobs run on.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the key of the process definition the jobs run on.'}, 'activityId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs which exist for an activity with the given id.'}, 'withRetriesLeft': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs which have retries left. Value may only be true , as false is the\\ndefault behavior.'}, 'executable': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs which are executable, i.e., retries > 0 and due date is null or due\\ndate is in the past. Value may only be true , as false is the default\\nbehavior.'}, 'timers': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs that are timers. Cannot be used together with messages . Value may only\\nbe true , as false is the default behavior.'}, 'messages': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs that are messages. Cannot be used together with timers . Value may only\\nbe true , as false is the default behavior.'}, 'dueDates': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/JobConditionQueryParameterDto'}, 'description': 'Only select jobs where the due date is lower or higher than the given date.\\n'}, 'createTimes': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/JobConditionQueryParameterDto'}, 'description': 'Only select jobs created before or after the given date.\\n'}, 'withException': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs that failed due to an exception. Value may only be true , as false is\\nthe default behavior.'}, 'exceptionMessage': {'type': 'string', 'nullable': True, 'description': 'Only select jobs that failed due to an exception with the given message.'}, 'failedActivityId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs that failed due to an exception at an activity with the given id.'}, 'noRetriesLeft': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs which have no retries left. Value may only be true , as false is the\\ndefault behavior.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active jobs. Value may only be true , as false is the default behavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended jobs. Value may only be true , as false is the default behavior.'}, 'priorityLowerThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include jobs with a priority lower than or equal to the given value. Value must be a\\nvalid long value.'}, 'priorityHigherThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include jobs with a priority higher than or equal to the given value. Value must be a\\nvalid long value.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include jobs which belong to one of the passed tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include jobs which belong to no tenant. Value may only be true , as false is the\\ndefault behavior.'}, 'includeJobsWithoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Include jobs which belong to no tenant. Can be used in combination with tenantIdIn .\\nValue may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Does not have an effect for the count endpoint.', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['jobId', 'executionId', 'processInstanceId', 'processDefinitionId', 'processDefinitionKey', 'jobPriority', 'jobRetries', 'jobDueDate', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryJobs [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryJobs"},{"location":"commands/apply/#cctlnbspapply-queryjobscount","text":"Get Job Count (POST) Queries for jobs that fulfill given parameters. This method takes the same message body as the Get Jobs POST method and therefore it is slightly more powerful than the Get Job Count method. URL: /job/count Schema: {'type': 'object', 'description': 'A Job instance query which defines a list of Job instances', 'properties': {'jobId': {'type': 'string', 'nullable': True, 'description': 'Filter by job id.'}, 'jobIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of job ids.'}, 'jobDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs which exist for the given job definition.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs which exist for the given process instance.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only select jobs which exist for the given list of process instance ids.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs which exist for the given execution.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the process definition the jobs run on.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the key of the process definition the jobs run on.'}, 'activityId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs which exist for an activity with the given id.'}, 'withRetriesLeft': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs which have retries left. Value may only be true , as false is the\\ndefault behavior.'}, 'executable': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs which are executable, i.e., retries > 0 and due date is null or due\\ndate is in the past. Value may only be true , as false is the default\\nbehavior.'}, 'timers': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs that are timers. Cannot be used together with messages . Value may only\\nbe true , as false is the default behavior.'}, 'messages': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs that are messages. Cannot be used together with timers . Value may only\\nbe true , as false is the default behavior.'}, 'dueDates': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/JobConditionQueryParameterDto'}, 'description': 'Only select jobs where the due date is lower or higher than the given date.\\n'}, 'createTimes': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/JobConditionQueryParameterDto'}, 'description': 'Only select jobs created before or after the given date.\\n'}, 'withException': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs that failed due to an exception. Value may only be true , as false is\\nthe default behavior.'}, 'exceptionMessage': {'type': 'string', 'nullable': True, 'description': 'Only select jobs that failed due to an exception with the given message.'}, 'failedActivityId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs that failed due to an exception at an activity with the given id.'}, 'noRetriesLeft': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs which have no retries left. Value may only be true , as false is the\\ndefault behavior.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active jobs. Value may only be true , as false is the default behavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended jobs. Value may only be true , as false is the default behavior.'}, 'priorityLowerThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include jobs with a priority lower than or equal to the given value. Value must be a\\nvalid long value.'}, 'priorityHigherThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include jobs with a priority higher than or equal to the given value. Value must be a\\nvalid long value.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include jobs which belong to one of the passed tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include jobs which belong to no tenant. Value may only be true , as false is the\\ndefault behavior.'}, 'includeJobsWithoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Include jobs which belong to no tenant. Can be used in combination with tenantIdIn .\\nValue may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Does not have an effect for the count endpoint.', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['jobId', 'executionId', 'processInstanceId', 'processDefinitionId', 'processDefinitionKey', 'jobPriority', 'jobRetries', 'jobDueDate', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryJobsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryJobsCount"},{"location":"commands/apply/#cctlnbspapply-queryprocessinstances","text":"Get List (POST) Queries for process instances that fulfill given parameters through a JSON object. This method is slightly more powerful than the Get Instances method because it allows filtering by multiple process variables of types string , number or boolean . URL: /process-instance Schema: {'type': 'object', 'description': 'A process instance query which defines a group of process instances', 'properties': {'deploymentId': {'type': 'string', 'nullable': True, 'description': 'Filter by the deployment the id belongs to.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process definition the instances run on.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the key of the process definition the instances run on.'}, 'processDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of process definition keys.\\nA process instance must have one of the given process definition keys. Must be a JSON array of Strings.'}, 'processDefinitionKeyNotIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Exclude instances by a list of process definition keys.\\nA process instance must not have one of the given process definition keys. Must be a JSON array of Strings.'}, 'businessKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key.'}, 'businessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key that the parameter is a substring of.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by case instance id.'}, 'superProcessInstance': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given process instance.\\nTakes a process instance id.'}, 'subProcessInstance': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that have the given process instance as a sub process instance.\\nTakes a process instance id.'}, 'superCaseInstance': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given case instance.\\nTakes a case instance id.'}, 'subCaseInstance': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that have the given case instance as a sub case instance.\\nTakes a case instance id.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active process instances. Value may only be true, as false is the default behavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended process instances. Value may only be true, as false is the default behavior.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of process instance ids. Must be a JSON array of Strings.'}, 'withIncident': {'type': 'boolean', 'nullable': True, 'description': 'Filter by presence of incidents. Selects only process instances that have an incident.'}, 'incidentId': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident id.'}, 'incidentType': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident type. See the User Guide for a list of incident types.'}, 'incidentMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message. Exact match.'}, 'incidentMessageLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message that the parameter is a substring of.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of tenant ids. A process instance must have one of the given tenant ids.\\nMust be a JSON array of Strings.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include process instances which belong to no tenant.\\nValue may only be true, as false is the default behavior.'}, 'processDefinitionWithoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include process instances which process definition has no tenant id.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of activity ids.\\nA process instance must currently wait in a leaf activity with one of the given activity ids.'}, 'rootProcessInstances': {'type': 'boolean', 'nullable': True, 'description': 'Restrict the query to all process instances that are top level process instances.'}, 'leafProcessInstances': {'type': 'boolean', 'nullable': True, 'description': \"Restrict the query to all process instances that are leaf instances. (i.e. don't have any sub instances)\"}, 'variables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include process instances that have variables with certain values.\\nThe array consists of objects with the three properties name , operator and value .\\n name (String) is the variable name,\\n operator (String) is the comparison operator to be used and value the variable value.\\nThe value may be String, Number or Boolean.\\n\\nValid operator values are: eq - equal to; neq - not equal to; gt - greater than;\\n gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like .'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable names in this query case-insensitively.\\nIf set to true variableName and variablename are treated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable values in this query case-insensitively.\\nIf set to true variableValue and variablevalue are treated as equal.'}, 'orQueries': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'description': \"A JSON array of nested process instance queries with OR semantics.\\nA process instance matches a nested query if it fulfills at least one of the query's predicates.\\nWith multiple nested queries, a process instance must fulfill at least one predicate of each query (Conjunctive Normal Form).\\nAll process instance query properties can be used except for: sorting \\nSee the [User guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/process-engine-api/#or-queries) for more information about OR queries.\"}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'definitionId', 'definitionKey', 'businessKey', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryProcessInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryProcessInstances"},{"location":"commands/apply/#cctlnbspapply-queryprocessinstancescount","text":"Get List Count (POST) Queries for the number of process instances that fulfill the given parameters. This method takes the same message body as the Get Instances (POST) method and therefore it is slightly more powerful than the Get Instance Count method. URL: /process-instance/count Schema: {'type': 'object', 'description': 'A process instance query which defines a group of process instances', 'properties': {'deploymentId': {'type': 'string', 'nullable': True, 'description': 'Filter by the deployment the id belongs to.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process definition the instances run on.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the key of the process definition the instances run on.'}, 'processDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of process definition keys.\\nA process instance must have one of the given process definition keys. Must be a JSON array of Strings.'}, 'processDefinitionKeyNotIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Exclude instances by a list of process definition keys.\\nA process instance must not have one of the given process definition keys. Must be a JSON array of Strings.'}, 'businessKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key.'}, 'businessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key that the parameter is a substring of.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by case instance id.'}, 'superProcessInstance': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given process instance.\\nTakes a process instance id.'}, 'subProcessInstance': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that have the given process instance as a sub process instance.\\nTakes a process instance id.'}, 'superCaseInstance': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given case instance.\\nTakes a case instance id.'}, 'subCaseInstance': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that have the given case instance as a sub case instance.\\nTakes a case instance id.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active process instances. Value may only be true, as false is the default behavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended process instances. Value may only be true, as false is the default behavior.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of process instance ids. Must be a JSON array of Strings.'}, 'withIncident': {'type': 'boolean', 'nullable': True, 'description': 'Filter by presence of incidents. Selects only process instances that have an incident.'}, 'incidentId': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident id.'}, 'incidentType': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident type. See the User Guide for a list of incident types.'}, 'incidentMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message. Exact match.'}, 'incidentMessageLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message that the parameter is a substring of.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of tenant ids. A process instance must have one of the given tenant ids.\\nMust be a JSON array of Strings.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include process instances which belong to no tenant.\\nValue may only be true, as false is the default behavior.'}, 'processDefinitionWithoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include process instances which process definition has no tenant id.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of activity ids.\\nA process instance must currently wait in a leaf activity with one of the given activity ids.'}, 'rootProcessInstances': {'type': 'boolean', 'nullable': True, 'description': 'Restrict the query to all process instances that are top level process instances.'}, 'leafProcessInstances': {'type': 'boolean', 'nullable': True, 'description': \"Restrict the query to all process instances that are leaf instances. (i.e. don't have any sub instances)\"}, 'variables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include process instances that have variables with certain values.\\nThe array consists of objects with the three properties name , operator and value .\\n name (String) is the variable name,\\n operator (String) is the comparison operator to be used and value the variable value.\\nThe value may be String, Number or Boolean.\\n\\nValid operator values are: eq - equal to; neq - not equal to; gt - greater than;\\n gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like .'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable names in this query case-insensitively.\\nIf set to true variableName and variablename are treated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable values in this query case-insensitively.\\nIf set to true variableValue and variablevalue are treated as equal.'}, 'orQueries': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'description': \"A JSON array of nested process instance queries with OR semantics.\\nA process instance matches a nested query if it fulfills at least one of the query's predicates.\\nWith multiple nested queries, a process instance must fulfill at least one predicate of each query (Conjunctive Normal Form).\\nAll process instance query properties can be used except for: sorting \\nSee the [User guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/process-engine-api/#or-queries) for more information about OR queries.\"}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'definitionId', 'definitionKey', 'businessKey', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryProcessInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryProcessInstancesCount"},{"location":"commands/apply/#cctlnbspapply-queryschemalog","text":"Get List (POST) Queries for schema log entries that fulfill given parameters. URL: /schema/log Schema: {'type': 'object', 'properties': {'version': {'type': 'string', 'nullable': True, 'description': 'The version of the schema.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'A JSON array of criteria to sort the result by. Each element of the array is\\n a JSON object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. ', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['timestamp'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply querySchemaLog [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"querySchemaLog"},{"location":"commands/apply/#cctlnbspapply-querytasks","text":"Get List (POST) Queries for tasks that fulfill a given filter. This method is slightly more powerful than the Get Tasks method because it allows filtering by multiple process or task variables of types String , Number or Boolean . The size of the result set can be retrieved by using the Get Task Count (POST) method. Security Consideration : There are several parameters (such as assigneeExpression ) for specifying an EL expression. These are disabled by default to prevent remote code execution. See the section on security considerations for custom code in the user guide for details. URL: /task Schema: {'type': 'object', 'description': 'A Task query which defines a group of Tasks.', 'properties': {'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to process instances with the given id.'}, 'processInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that belong to process instances with the given ids.'}, 'processInstanceBusinessKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to process instances with the given business key.'}, 'processInstanceBusinessKeyExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to process instances with the given business key which \\nis described by an expression. See the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions.'}, 'processInstanceBusinessKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that belong to process instances with one of the give business keys. \\nThe keys need to be in a comma-separated list.'}, 'processInstanceBusinessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a process instance business key that has the parameter \\nvalue as a substring.'}, 'processInstanceBusinessKeyLikeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a process instance business key that has the parameter \\nvalue as a substring and is described by an expression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given key.'}, 'processDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that belong to a process definition with one of the given keys. The \\nkeys need to be in a comma-separated list.'}, 'processDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given name.'}, 'processDefinitionNameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a process definition name that has the parameter value as \\na substring.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to an execution with the given id.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to case instances with the given id.'}, 'caseInstanceBusinessKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to case instances with the given business key.'}, 'caseInstanceBusinessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a case instance business key that has the parameter value \\nas a substring.'}, 'caseDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given id.'}, 'caseDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given key.'}, 'caseDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given name.'}, 'caseDefinitionNameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a case definition name that has the parameter value as a \\nsubstring.'}, 'caseExecutionId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case execution with the given id.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which belong to one of the passed and comma-separated activity \\ninstance ids.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which belong to one of the passed and comma-separated \\ntenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which belong to no tenant. Value may only be true , \\nas false is the default behavior.'}, 'assignee': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the given user is assigned to.'}, 'assigneeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the user described by the given expression is assigned to. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'assigneeLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have an assignee that has the parameter \\nvalue as a substring.'}, 'assigneeLikeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have an assignee that has the parameter value described by the \\ngiven expression as a substring. See the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'assigneeIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which are assigned to one of the passed and comma-separated user ids.'}, 'assigneeNotIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which are not assigned to one of the passed and comma-separated user ids.'}, 'owner': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the given user owns.'}, 'ownerExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the user described by the given expression owns. See the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'candidateGroup': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that are offered to the given group.'}, 'candidateGroupExpression': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that are offered to the group described by the given expression. \\nSee the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'candidateUser': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that are offered to the given user or to one of his groups.'}, 'candidateUserExpression': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that are offered to the user described by the given expression. \\nSee the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'includeAssignedTasks': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Also include tasks that are assigned to users in candidate queries. Default is to only \\ninclude tasks that are not assigned to any user if you query by candidate user or\\ngroup(s).'}, 'involvedUser': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that the given user is involved in. A user is involved in a task if \\nan identity link exists between task and user (e.g., the user is the assignee).'}, 'involvedUserExpression': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that the user described by the given expression is involved in.\\nA user is involved in a task if an identity link exists between task and user\\n(e.g., the user is the assignee). See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions.'}, 'assigned': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'If set to true , restricts the query to all tasks that are assigned.'}, 'unassigned': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'If set to true , restricts the query to all tasks that are unassigned.'}, 'taskDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given key.'}, 'taskDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that have one of the given keys. The keys need to be in a comma-separated list.'}, 'taskDefinitionKeyLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a key that has the parameter value as a substring.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given name.'}, 'nameNotEqual': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that do not have the given name.'}, 'nameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a name with the given parameter value as substring.'}, 'nameNotLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that do not have a name with the given parameter\\nvalue as substring.'}, 'description': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given description.'}, 'descriptionLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a description that has the parameter\\nvalue as a substring.'}, 'priority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'Restrict to tasks that have the given priority.'}, 'maxPriority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'Restrict to tasks that have a lower or equal priority.'}, 'minPriority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'Restrict to tasks that have a higher or equal priority.'}, 'dueDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due on the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.546+0200 .\"}, 'dueDateExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are due on the date described by the given expression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'dueAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due after the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.435+0200 .\"}, 'dueAfterExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are due after the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'dueBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due before the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.243+0200 .\"}, 'dueBeforeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are due before the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'withoutDueDate': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have no due date. Value may only be true , \\nas false is the default behavior.'}, 'followUpDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date on the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date\\nmust have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.342+0200 .\"}, 'followUpDateExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a followUp date on the date described by the given\\nexpression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'followUpAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date after the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.542+0200 .\"}, 'followUpAfterExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a followUp date after the date described by the given\\nexpression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'followUpBefore': {'type': 'string', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date before the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.234+0200 .\"}, 'followUpBeforeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a followUp date before the date described by the given\\nexpression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'followUpBeforeOrNotExistent': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have no followUp date or a followUp date before the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.432+0200 . The typical use case\\nis to query all active tasks for a user for a given date.\"}, 'followUpBeforeOrNotExistentExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have no followUp date or a followUp date before the date\\ndescribed by the given expression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'createdOn': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were created on the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.324+0200 .\"}, 'createdOnExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that were created on the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'createdAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were created after the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must\\nhave the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.342+0200 .\"}, 'createdAfterExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that were created after the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'createdBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were created before the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must\\nhave the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.332+0200 .\"}, 'createdBeforeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that were created before the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'delegationState': {'type': 'string', 'nullable': True, 'enum': ['PENDING', 'RESOLVED'], 'description': 'Restrict to tasks that are in the given delegation state. Valid values are\\n PENDING and RESOLVED .'}, 'candidateGroups': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that are offered to any of the given candidate groups. Takes a\\ncomma-separated list of group names, so for example\\n developers,support,sales .'}, 'candidateGroupsExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are offered to any of the candidate groups described by the\\ngiven expression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to\\n java.util.List of Strings.'}, 'withCandidateGroups': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have a candidate group. Value may only be true ,\\nas false is the default behavior.'}, 'withoutCandidateGroups': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have no candidate group. Value may only be true ,\\nas false is the default behavior.'}, 'withCandidateUsers': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have a candidate user. Value may only be true ,\\nas false is the default behavior.'}, 'withoutCandidateUsers': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have no candidate users. Value may only be true ,\\nas false is the default behavior.'}, 'active': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include active tasks. Value may only be true , as false \\nis the default behavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include suspended tasks. Value may only be true , as\\n false is the default behavior.'}, 'taskVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include tasks that have variables with certain values. The\\narray consists of JSON objects with three properties name , operator and value .\\n name is the variable name, operator is the comparison operator to be used and\\n value the variable value. value may be of type String , Number or Boolean .\\n\\nValid operator values are:\\n eq - equal to;\\n neq - not equal to;\\n gt - greater than;\\n gteq - greater than or equal to;\\n lt - lower than;\\n lteq - lower than or equal to;\\n like .\\n key and value may not contain underscore or comma characters.'}, 'processVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include tasks that belong to a process instance with variables\\nwith certain values. The array consists of JSON objects with three properties\\n name , operator and value . name is the variable name, operator is the\\ncomparison operator to be used and value the variable value. value may be of\\ntype String , Number or Boolean .\\n\\nValid operator values are:\\n eq - equal to;\\n neq - not equal to;\\n gt - greater than;\\n gteq - greater than or equal to;\\n lt - lower than;\\n lteq - lower than or equal to;\\n like ;\\n notLike .\\n key and value may not contain underscore or comma characters.'}, 'caseInstanceVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include tasks that belong to a case instance with variables\\nwith certain values. The array consists of JSON objects with three properties\\n name , operator and value . name is the variable name, operator is the\\ncomparison operator to be used and value the variable value. value may be of\\ntype String , Number or Boolean .\\n\\nValid operator values are:\\n eq - equal to;\\n neq - not equal to;\\n gt - greater than;\\n gteq - greater than or equal to;\\n lt - lower than;\\n lteq - lower than or equal to;\\n like .\\n key and value may not contain underscore or comma characters.'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Match all variable names in this query case-insensitively. If set\\n variableName and variablename are treated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Match all variable values in this query case-insensitively. If set\\n variableValue and variablevalue are treated as equal.'}, 'parentTaskId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all tasks that are sub tasks of the given task. Takes a task id.'}, 'orQueries': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/TaskQueryDto'}, 'description': \"A JSON array of nested task queries with OR semantics. A task matches a nested query if it fulfills\\n*at least one* of the query's predicates. With multiple nested queries, a task must fulfill at least one predicate of *each* query ([Conjunctive Normal Form](https://en.wikipedia.org/wiki/Conjunctive_normal_form)).\\n\\nAll task query properties can be used except for: sorting , withCandidateGroups ,\\n withoutCandidateGroups , withCandidateUsers , withoutCandidateUsers \\n\\nSee the [User guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/process-engine-api/#or-queries)\\nfor more information about OR queries.\"}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'caseInstanceId', 'dueDate', 'executionId', 'caseExecutionId', 'assignee', 'created', 'description', 'id', 'name', 'nameCaseInsensitive', 'priority', 'processVariable', 'executionVariable', 'taskVariable', 'caseExecutionVariable', 'caseInstanceVariable'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}, 'parameters': {'$ref': '#/components/schemas/SortTaskQueryParametersDto'}}}}}} Usage: cctl&nbsp;apply queryTasks [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryTasks"},{"location":"commands/apply/#cctlnbspapply-querytaskscount","text":"Get List Count (POST) Retrieves the number of tasks that fulfill the given filter. Corresponds to the size of the result set of the Get Tasks (POST) method and takes the same parameters. Security Consideration : There are several parameters (such as assigneeExpression ) for specifying an EL expression. These are disabled by default to prevent remote code execution. See the section on security considerations for custom code in the user guide for details. URL: /task/count Schema: {'type': 'object', 'description': 'A Task query which defines a group of Tasks.', 'properties': {'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to process instances with the given id.'}, 'processInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that belong to process instances with the given ids.'}, 'processInstanceBusinessKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to process instances with the given business key.'}, 'processInstanceBusinessKeyExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to process instances with the given business key which \\nis described by an expression. See the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions.'}, 'processInstanceBusinessKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that belong to process instances with one of the give business keys. \\nThe keys need to be in a comma-separated list.'}, 'processInstanceBusinessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a process instance business key that has the parameter \\nvalue as a substring.'}, 'processInstanceBusinessKeyLikeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a process instance business key that has the parameter \\nvalue as a substring and is described by an expression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given key.'}, 'processDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that belong to a process definition with one of the given keys. The \\nkeys need to be in a comma-separated list.'}, 'processDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given name.'}, 'processDefinitionNameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a process definition name that has the parameter value as \\na substring.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to an execution with the given id.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to case instances with the given id.'}, 'caseInstanceBusinessKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to case instances with the given business key.'}, 'caseInstanceBusinessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a case instance business key that has the parameter value \\nas a substring.'}, 'caseDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given id.'}, 'caseDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given key.'}, 'caseDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given name.'}, 'caseDefinitionNameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a case definition name that has the parameter value as a \\nsubstring.'}, 'caseExecutionId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case execution with the given id.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which belong to one of the passed and comma-separated activity \\ninstance ids.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which belong to one of the passed and comma-separated \\ntenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which belong to no tenant. Value may only be true , \\nas false is the default behavior.'}, 'assignee': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the given user is assigned to.'}, 'assigneeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the user described by the given expression is assigned to. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'assigneeLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have an assignee that has the parameter \\nvalue as a substring.'}, 'assigneeLikeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have an assignee that has the parameter value described by the \\ngiven expression as a substring. See the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'assigneeIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which are assigned to one of the passed and comma-separated user ids.'}, 'assigneeNotIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which are not assigned to one of the passed and comma-separated user ids.'}, 'owner': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the given user owns.'}, 'ownerExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the user described by the given expression owns. See the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'candidateGroup': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that are offered to the given group.'}, 'candidateGroupExpression': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that are offered to the group described by the given expression. \\nSee the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'candidateUser': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that are offered to the given user or to one of his groups.'}, 'candidateUserExpression': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that are offered to the user described by the given expression. \\nSee the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'includeAssignedTasks': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Also include tasks that are assigned to users in candidate queries. Default is to only \\ninclude tasks that are not assigned to any user if you query by candidate user or\\ngroup(s).'}, 'involvedUser': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that the given user is involved in. A user is involved in a task if \\nan identity link exists between task and user (e.g., the user is the assignee).'}, 'involvedUserExpression': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that the user described by the given expression is involved in.\\nA user is involved in a task if an identity link exists between task and user\\n(e.g., the user is the assignee). See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions.'}, 'assigned': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'If set to true , restricts the query to all tasks that are assigned.'}, 'unassigned': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'If set to true , restricts the query to all tasks that are unassigned.'}, 'taskDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given key.'}, 'taskDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that have one of the given keys. The keys need to be in a comma-separated list.'}, 'taskDefinitionKeyLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a key that has the parameter value as a substring.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given name.'}, 'nameNotEqual': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that do not have the given name.'}, 'nameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a name with the given parameter value as substring.'}, 'nameNotLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that do not have a name with the given parameter\\nvalue as substring.'}, 'description': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given description.'}, 'descriptionLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a description that has the parameter\\nvalue as a substring.'}, 'priority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'Restrict to tasks that have the given priority.'}, 'maxPriority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'Restrict to tasks that have a lower or equal priority.'}, 'minPriority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'Restrict to tasks that have a higher or equal priority.'}, 'dueDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due on the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.546+0200 .\"}, 'dueDateExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are due on the date described by the given expression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'dueAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due after the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.435+0200 .\"}, 'dueAfterExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are due after the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'dueBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due before the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.243+0200 .\"}, 'dueBeforeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are due before the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'withoutDueDate': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have no due date. Value may only be true , \\nas false is the default behavior.'}, 'followUpDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date on the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date\\nmust have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.342+0200 .\"}, 'followUpDateExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a followUp date on the date described by the given\\nexpression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'followUpAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date after the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.542+0200 .\"}, 'followUpAfterExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a followUp date after the date described by the given\\nexpression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'followUpBefore': {'type': 'string', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date before the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.234+0200 .\"}, 'followUpBeforeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a followUp date before the date described by the given\\nexpression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'followUpBeforeOrNotExistent': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have no followUp date or a followUp date before the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.432+0200 . The typical use case\\nis to query all active tasks for a user for a given date.\"}, 'followUpBeforeOrNotExistentExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have no followUp date or a followUp date before the date\\ndescribed by the given expression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'createdOn': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were created on the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.324+0200 .\"}, 'createdOnExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that were created on the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'createdAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were created after the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must\\nhave the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.342+0200 .\"}, 'createdAfterExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that were created after the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'createdBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were created before the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must\\nhave the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.332+0200 .\"}, 'createdBeforeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that were created before the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'delegationState': {'type': 'string', 'nullable': True, 'enum': ['PENDING', 'RESOLVED'], 'description': 'Restrict to tasks that are in the given delegation state. Valid values are\\n PENDING and RESOLVED .'}, 'candidateGroups': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that are offered to any of the given candidate groups. Takes a\\ncomma-separated list of group names, so for example\\n developers,support,sales .'}, 'candidateGroupsExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are offered to any of the candidate groups described by the\\ngiven expression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to\\n java.util.List of Strings.'}, 'withCandidateGroups': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have a candidate group. Value may only be true ,\\nas false is the default behavior.'}, 'withoutCandidateGroups': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have no candidate group. Value may only be true ,\\nas false is the default behavior.'}, 'withCandidateUsers': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have a candidate user. Value may only be true ,\\nas false is the default behavior.'}, 'withoutCandidateUsers': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have no candidate users. Value may only be true ,\\nas false is the default behavior.'}, 'active': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include active tasks. Value may only be true , as false \\nis the default behavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include suspended tasks. Value may only be true , as\\n false is the default behavior.'}, 'taskVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include tasks that have variables with certain values. The\\narray consists of JSON objects with three properties name , operator and value .\\n name is the variable name, operator is the comparison operator to be used and\\n value the variable value. value may be of type String , Number or Boolean .\\n\\nValid operator values are:\\n eq - equal to;\\n neq - not equal to;\\n gt - greater than;\\n gteq - greater than or equal to;\\n lt - lower than;\\n lteq - lower than or equal to;\\n like .\\n key and value may not contain underscore or comma characters.'}, 'processVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include tasks that belong to a process instance with variables\\nwith certain values. The array consists of JSON objects with three properties\\n name , operator and value . name is the variable name, operator is the\\ncomparison operator to be used and value the variable value. value may be of\\ntype String , Number or Boolean .\\n\\nValid operator values are:\\n eq - equal to;\\n neq - not equal to;\\n gt - greater than;\\n gteq - greater than or equal to;\\n lt - lower than;\\n lteq - lower than or equal to;\\n like ;\\n notLike .\\n key and value may not contain underscore or comma characters.'}, 'caseInstanceVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include tasks that belong to a case instance with variables\\nwith certain values. The array consists of JSON objects with three properties\\n name , operator and value . name is the variable name, operator is the\\ncomparison operator to be used and value the variable value. value may be of\\ntype String , Number or Boolean .\\n\\nValid operator values are:\\n eq - equal to;\\n neq - not equal to;\\n gt - greater than;\\n gteq - greater than or equal to;\\n lt - lower than;\\n lteq - lower than or equal to;\\n like .\\n key and value may not contain underscore or comma characters.'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Match all variable names in this query case-insensitively. If set\\n variableName and variablename are treated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Match all variable values in this query case-insensitively. If set\\n variableValue and variablevalue are treated as equal.'}, 'parentTaskId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all tasks that are sub tasks of the given task. Takes a task id.'}, 'orQueries': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/TaskQueryDto'}, 'description': \"A JSON array of nested task queries with OR semantics. A task matches a nested query if it fulfills\\n*at least one* of the query's predicates. With multiple nested queries, a task must fulfill at least one predicate of *each* query ([Conjunctive Normal Form](https://en.wikipedia.org/wiki/Conjunctive_normal_form)).\\n\\nAll task query properties can be used except for: sorting , withCandidateGroups ,\\n withoutCandidateGroups , withCandidateUsers , withoutCandidateUsers \\n\\nSee the [User guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/process-engine-api/#or-queries)\\nfor more information about OR queries.\"}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'caseInstanceId', 'dueDate', 'executionId', 'caseExecutionId', 'assignee', 'created', 'description', 'id', 'name', 'nameCaseInsensitive', 'priority', 'processVariable', 'executionVariable', 'taskVariable', 'caseExecutionVariable', 'caseInstanceVariable'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}, 'parameters': {'$ref': '#/components/schemas/SortTaskQueryParametersDto'}}}}}} Usage: cctl&nbsp;apply queryTasksCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryTasksCount"},{"location":"commands/apply/#cctlnbspapply-queryvariableinstances","text":"Get Variable Instances (POST) Query for variable instances that fulfill given parameters through a JSON object. This method is slightly more powerful than the Get Variable Instances method because it allows filtering by multiple variable instances of types String , Number or Boolean . URL: /variable-instance Schema: {'type': 'object', 'description': 'A variable instance query which defines a list of variable instances', 'properties': {'variableName': {'type': 'string', 'nullable': True, 'description': 'Filter by variable instance name.'}, 'variableNameLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the variable instance name. The parameter can include the wildcard % to\\nexpress like-strategy such as: starts with ( % name), ends with (name % ) or\\ncontains ( % name % ).'}, 'processInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\nprocess instance ids.'}, 'executionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\nexecution ids.'}, 'caseInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed case instance ids.'}, 'caseExecutionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed case execution ids.'}, 'taskIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed task\\nids.'}, 'batchIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\nbatch ids.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\nactivity instance ids.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\ntenant ids.'}, 'variableValues': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'An array to only include variable instances that have the certain values.\\nThe array consists of objects with the three properties name , operator and value . name (String) is the\\nvariable name, operator (String) is the comparison operator to be used and value the variable value.\\n value may be String , Number or Boolean .\\n\\nValid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater\\nthan or equal to; lt - lower than; lteq - lower than or equal to; like '}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable names provided in variableValues case-insensitively. If set to true \\n**variableName** and **variablename** are treated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable values provided in variableValues case-insensitively. If set to\\n true **variableValue** and **variablevalue** are treated as equal.'}, 'variableScopeIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of passed scope ids.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is an object that specifies one ordering.\\n The position in the array identifies the rank of an ordering, i.e., whether it is primary, secondary, etc.\\n Sorting has no effect for count endpoints', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['variableName', 'variableType', 'activityInstanceId', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryVariableInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --max-results | text | Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. | None | | --first-result | text | Pagination of results. Specifies the index of the first result to return. | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -o , --output | choice ( template ) | N/A | template | | --skip-validation | boolean | ignore validation | False | | -f , --file | filename | input as yaml | None | | --help | boolean | Show this message and exit. | False |","title":"queryVariableInstances"},{"location":"commands/apply/#cctlnbspapply-queryvariableinstancescount","text":"Get Variable Instance Count (POST) Query for the number of variable instances that fulfill given parameters. This method takes the same message body as the Get Variable Instances POST method and therefore it is slightly more powerful than the Get Variable Instance Count method. URL: /variable-instance/count Schema: {'type': 'object', 'description': 'A variable instance query which defines a list of variable instances', 'properties': {'variableName': {'type': 'string', 'nullable': True, 'description': 'Filter by variable instance name.'}, 'variableNameLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the variable instance name. The parameter can include the wildcard % to\\nexpress like-strategy such as: starts with ( % name), ends with (name % ) or\\ncontains ( % name % ).'}, 'processInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\nprocess instance ids.'}, 'executionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\nexecution ids.'}, 'caseInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed case instance ids.'}, 'caseExecutionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed case execution ids.'}, 'taskIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed task\\nids.'}, 'batchIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\nbatch ids.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\nactivity instance ids.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\ntenant ids.'}, 'variableValues': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'An array to only include variable instances that have the certain values.\\nThe array consists of objects with the three properties name , operator and value . name (String) is the\\nvariable name, operator (String) is the comparison operator to be used and value the variable value.\\n value may be String , Number or Boolean .\\n\\nValid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater\\nthan or equal to; lt - lower than; lteq - lower than or equal to; like '}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable names provided in variableValues case-insensitively. If set to true \\n**variableName** and **variablename** are treated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable values provided in variableValues case-insensitively. If set to\\n true **variableValue** and **variablevalue** are treated as equal.'}, 'variableScopeIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of passed scope ids.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is an object that specifies one ordering.\\n The position in the array identifies the rank of an ordering, i.e., whether it is primary, secondary, etc.\\n Sorting has no effect for count endpoints', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['variableName', 'variableType', 'activityInstanceId', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl&nbsp;apply queryVariableInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryVariableInstancesCount"},{"location":"commands/apply/#cctlnbspapply-recalculateduedate","text":"Recalculate Job Due Date Recalculates the due date of a job by id. URL: /job/{id}/duedate/recalculate Schema: - Usage: cctl&nbsp;apply recalculateDuedate [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --creation-date-based / --not-creation-date-based boolean Recalculate the due date based on the creation date of the job or the current date. Value may only be false , as true is the default behavior. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"recalculateDuedate"},{"location":"commands/apply/#cctlnbspapply-redeploy","text":"Redeploy Re-deploys an existing deployment. The deployment resources to re-deploy can be restricted by using the properties resourceIds or resourceNames . If no deployment resources to re-deploy are passed then all existing resources of the given deployment are re-deployed. Warning : Deployments can contain custom code in form of scripts or EL expressions to customize process behavior. This may be abused for remote execution of arbitrary code. See the section on security considerations for custom code in the user guide for details. URL: /deployment/{id}/redeploy Schema: {'title': 'RedeploymentDto', 'type': 'object', 'description': 'A JSON object with the following properties:', 'properties': {'resourceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of deployment resource ids to re-deploy.'}, 'resourceNames': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of deployment resource names to re-deploy.'}, 'source': {'type': 'string', 'nullable': True, 'description': 'Sets the source of the deployment.'}}} Usage: cctl&nbsp;apply redeploy [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"redeploy"},{"location":"commands/apply/#cctlnbspapply-removaltimeasync","text":"Set Removal Time Async (POST) Sets the removal time to multiple historic process instances asynchronously (batch). At least historicProcessInstanceIds or historicProcessInstanceQuery has to be provided. If both are provided, all instances matching query criterion and instances from the list will be updated with a removal time. URL: /history/process-instance/set-removal-time Schema: {'allOf': [{'type': 'object', 'properties': {'historicProcessInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'The id of the process instance.'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}, 'hierarchical': {'type': 'boolean', 'nullable': True, 'description': 'Sets the removal time to all historic process instances in the hierarchy.\\nValue may only be true , as false is the default behavior.'}}}, {'$ref': '#/components/schemas/AbstractSetRemovalTimeDto'}]} Usage: cctl&nbsp;apply removalTimeAsync [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"removalTimeAsync"},{"location":"commands/apply/#cctlnbspapply-removaltimeasynchistoricbatch","text":"Set Removal Time Async (POST) Sets the removal time to multiple historic batches asynchronously (batch). At least historicBatchIds or historicBatchQuery has to be provided. If both are provided, all instances matching query criterion and instances from the list will be updated with a removal time. URL: /history/batch/set-removal-time Schema: {'allOf': [{'type': 'object', 'properties': {'historicBatchQuery': {'type': 'object', 'nullable': True, 'description': 'Query for the historic batches to set the removal time for.'}, 'historicBatchIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'The ids of the historic batches to set the removal time for.'}}}, {'$ref': '#/components/schemas/AbstractSetRemovalTimeDto'}]} Usage: cctl&nbsp;apply removalTimeAsyncHistoricBatch [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"removalTimeAsyncHistoricBatch"},{"location":"commands/apply/#cctlnbspapply-removaltimeasynchistoricdecisioninstance","text":"Set Removal Time Async (POST) Sets the removal time to multiple historic decision instances asynchronously (batch). At least historicDecisionInstanceIds or historicDecisionInstanceQuery has to be provided. If both are provided, all instances matching query criterion and instances from the list will be updated with a removal time. URL: /history/decision-instance/set-removal-time Schema: {'allOf': [{'type': 'object', 'properties': {'hierarchical': {'type': 'boolean', 'nullable': True, 'description': 'Sets the removal time to all historic decision instances in the hierarchy.\\nValue may only be true , as false is the default behavior.'}, 'historicDecisionInstanceQuery': {'$ref': '#/components/schemas/HistoricDecisionInstanceQueryDto'}, 'historicDecisionInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'The ids of the historic decision instances to set the removal time for.'}}}, {'$ref': '#/components/schemas/AbstractSetRemovalTimeDto'}]} Usage: cctl&nbsp;apply removalTimeAsyncHistoricDecisionInstance [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"removalTimeAsyncHistoricDecisionInstance"},{"location":"commands/apply/#cctlnbspapply-resolve","text":"Resolve Resolves a task and updates execution variables. Resolving a task marks that the assignee is done with the task delegated to them, and that it can be sent back to the owner. Can only be executed when the task has been delegated. The assignee will be set to the owner, who performed the delegation. URL: /task/{id}/resolve Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs.'}, 'withVariablesInReturn': {'type': 'boolean', 'nullable': True, 'default': False, 'description': \"Indicates whether the response should contain the process variables or not. The\\ndefault is false with a response code of 204 . If set to true the response\\ncontains the process variables and has a response code of 200 . If the task is not\\nassociated with a process instance (e.g. if it's part of a case instance) no\\nvariables will be returned.\"}}} Usage: cctl&nbsp;apply resolve [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"resolve"},{"location":"commands/apply/#cctlnbspapply-restartprocessinstance","text":"Restart Process Instance Restarts process instances that were canceled or terminated synchronously. Can also restart completed process instances. It will create a new instance using the original instance information. To execute the restart asynchronously, use the Restart Process Instance Async method. For more information about the difference between synchronous and asynchronous execution, please refer to the related section of the User Guide . URL: /process-definition/{id}/restart Schema: {'type': 'object', 'properties': {'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids to restart.'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started as part of this request.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution of\\n[input/output variable mappings](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#input-output-variable-mapping)\\nfor activities that are started as part of this request.'}, 'initialVariables': {'type': 'boolean', 'nullable': True, 'description': 'Set the initial set of variables during restart. By default, the last set of variables is used.'}, 'withoutBusinessKey': {'type': 'boolean', 'nullable': True, 'description': 'Do not take over the business key of the historic process instance.'}, 'instructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/RestartProcessInstanceModificationInstructionDto'}, 'description': '**Optional**. A JSON array of instructions that specify which activities to start the process instance at.\\nIf this property is omitted, the process instance starts at its default blank start event.'}}} Usage: cctl&nbsp;apply restartProcessInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"restartProcessInstance"},{"location":"commands/apply/#cctlnbspapply-restartprocessinstanceasyncoperation","text":"Restart Process Instance Async Restarts process instances that were canceled or terminated asynchronously. Can also restart completed process instances. It will create a new instance using the original instance information. To execute the restart asynchronously, use the Restart Process Instance method. For more information about the difference between synchronous and asynchronous execution, please refer to the related section of the User Guide . URL: /process-definition/{id}/restart-async Schema: {'type': 'object', 'properties': {'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids to restart.'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started as part of this request.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution of\\n[input/output variable mappings](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#input-output-variable-mapping)\\nfor activities that are started as part of this request.'}, 'initialVariables': {'type': 'boolean', 'nullable': True, 'description': 'Set the initial set of variables during restart. By default, the last set of variables is used.'}, 'withoutBusinessKey': {'type': 'boolean', 'nullable': True, 'description': 'Do not take over the business key of the historic process instance.'}, 'instructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/RestartProcessInstanceModificationInstructionDto'}, 'description': '**Optional**. A JSON array of instructions that specify which activities to start the process instance at.\\nIf this property is omitted, the process instance starts at its default blank start event.'}}} Usage: cctl&nbsp;apply restartProcessInstanceAsyncOperation [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"restartProcessInstanceAsyncOperation"},{"location":"commands/apply/#cctlnbspapply-retriesbyprocess","text":"Set Job Retries Async (POST) Create a batch to set retries of jobs associated with given processes asynchronously. URL: /process-instance/job-retries Schema: {'type': 'object', 'properties': {'processInstances': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids to fetch jobs, for which retries will be set.'}, 'retries': {'type': 'integer', 'format': 'int32', 'nullable': True, 'minimum': 0, 'description': 'An integer representing the number of retries. Please note that the value cannot be negative or null.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}}} Usage: cctl&nbsp;apply retriesByProcess [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"retriesByProcess"},{"location":"commands/apply/#cctlnbspapply-retriesbyprocesshistoricquerybased","text":"Set Job Retries Async Historic Query Based (POST) Create a batch to set retries of jobs asynchronously based on a historic process instance query. URL: /process-instance/job-retries-historic-query-based Schema: {'type': 'object', 'properties': {'processInstances': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids to fetch jobs, for which retries will be set.'}, 'retries': {'type': 'integer', 'format': 'int32', 'nullable': True, 'minimum': 0, 'description': 'An integer representing the number of retries. Please note that the value cannot be negative or null.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}}} Usage: cctl&nbsp;apply retriesByProcessHistoricQueryBased [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"retriesByProcessHistoricQueryBased"},{"location":"commands/apply/#cctlnbspapply-signalexecution","text":"Trigger Execution Signals an execution by id. Can for example be used to explicitly skip user tasks or signal asynchronous continuations. URL: /execution/{id}/signal Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs. Each key is a variable name and\\neach value a JSON variable value object.'}}} Usage: cctl&nbsp;apply signalExecution [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"signalExecution"},{"location":"commands/apply/#cctlnbspapply-startprocessinstance","text":"Start Instance Instantiates a given process definition. Process variables and business key may be supplied in the request body. URL: /process-definition/{id}/start Schema: {'type': 'object', 'properties': {'businessKey': {'type': 'string', 'nullable': True, 'description': 'The business key of the process instance.'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': ''}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'The case instance id the process instance is to be initialized with.'}, 'startInstructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/ProcessInstanceModificationInstructionDto'}, 'description': '**Optional**. A JSON array of instructions that specify which activities to start the process instance at.\\nIf this property is omitted, the process instance starts at its default blank start event.'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started or ended as part of this request.\\n**Note**: This option is currently only respected when start instructions are submitted\\nvia the startInstructions property.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution of\\n[input/output variable mappings](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#input-output-variable-mapping)\\nfor activities that are started or ended as part of this request.\\n**Note**: This option is currently only respected when start instructions are submitted\\nvia the startInstructions property.'}, 'withVariablesInReturn': {'type': 'boolean', 'nullable': True, 'description': 'Indicates if the variables, which was used by the process instance during execution, should be returned.\\nDefault value: false '}}} Usage: cctl&nbsp;apply startProcessInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"startProcessInstance"},{"location":"commands/apply/#cctlnbspapply-startprocessinstancebykey","text":"Start Instance Instantiates a given process definition, starts the latest version of the process definition which belongs to no tenant. Process variables and business key may be supplied in the request body. URL: /process-definition/key/{key}/start Schema: {'type': 'object', 'properties': {'businessKey': {'type': 'string', 'nullable': True, 'description': 'The business key of the process instance.'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': ''}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'The case instance id the process instance is to be initialized with.'}, 'startInstructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/ProcessInstanceModificationInstructionDto'}, 'description': '**Optional**. A JSON array of instructions that specify which activities to start the process instance at.\\nIf this property is omitted, the process instance starts at its default blank start event.'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started or ended as part of this request.\\n**Note**: This option is currently only respected when start instructions are submitted\\nvia the startInstructions property.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution of\\n[input/output variable mappings](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#input-output-variable-mapping)\\nfor activities that are started or ended as part of this request.\\n**Note**: This option is currently only respected when start instructions are submitted\\nvia the startInstructions property.'}, 'withVariablesInReturn': {'type': 'boolean', 'nullable': True, 'description': 'Indicates if the variables, which was used by the process instance during execution, should be returned.\\nDefault value: false '}}} Usage: cctl&nbsp;apply startProcessInstanceByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"startProcessInstanceByKey"},{"location":"commands/apply/#cctlnbspapply-startprocessinstancebykeyandtenantid","text":"Start Instance Instantiates a given process definition, starts the latest version of the process definition for tenant. Process variables and business key may be supplied in the request body. URL: /process-definition/key/{key}/tenant-id/{tenant-id}/start Schema: {'type': 'object', 'properties': {'businessKey': {'type': 'string', 'nullable': True, 'description': 'The business key of the process instance.'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': ''}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'The case instance id the process instance is to be initialized with.'}, 'startInstructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/ProcessInstanceModificationInstructionDto'}, 'description': '**Optional**. A JSON array of instructions that specify which activities to start the process instance at.\\nIf this property is omitted, the process instance starts at its default blank start event.'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started or ended as part of this request.\\n**Note**: This option is currently only respected when start instructions are submitted\\nvia the startInstructions property.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution of\\n[input/output variable mappings](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#input-output-variable-mapping)\\nfor activities that are started or ended as part of this request.\\n**Note**: This option is currently only respected when start instructions are submitted\\nvia the startInstructions property.'}, 'withVariablesInReturn': {'type': 'boolean', 'nullable': True, 'description': 'Indicates if the variables, which was used by the process instance during execution, should be returned.\\nDefault value: false '}}} Usage: cctl&nbsp;apply startProcessInstanceByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"startProcessInstanceByKeyAndTenantId"},{"location":"commands/apply/#cctlnbspapply-submit","text":"Submit Form Completes a task and updates process variables using a form submit. There are two difference between this method and the complete method: If the task is in state PENDING - i.e., has been delegated before, it is not completed but resolved. Otherwise it will be completed. If the task has Form Field Metadata defined, the process engine will perform backend validation for any form fields which have validators defined. See the Generated Task Forms section of the User Guide for more information. URL: /task/{id}/submit-form Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs.'}, 'withVariablesInReturn': {'type': 'boolean', 'nullable': True, 'default': False, 'description': \"Indicates whether the response should contain the process variables or not. The\\ndefault is false with a response code of 204 . If set to true the response\\ncontains the process variables and has a response code of 200 . If the task is not\\nassociated with a process instance (e.g. if it's part of a case instance) no\\nvariables will be returned.\"}}} Usage: cctl&nbsp;apply submit [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"submit"},{"location":"commands/apply/#cctlnbspapply-submitform","text":"Submit Start Form Starts a process instance using a set of process variables and the business key. If the start event has Form Field Metadata defined, the process engine will perform backend validation for any form fields which have validators defined. See Documentation on Generated Task Forms . URL: /process-definition/{id}/submit-form Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': ''}, 'businessKey': {'type': 'string', 'nullable': True, 'description': 'The business key the process instance is to be initialized with.\\nThe business key uniquely identifies the process instance in the context of the given process definition.'}}} Usage: cctl&nbsp;apply submitForm [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"submitForm"},{"location":"commands/apply/#cctlnbspapply-submitformbykey","text":"Submit Start Form Starts the latest version of the process definition which belongs to no tenant using a set of process variables and the business key. If the start event has Form Field Metadata defined, the process engine will perform backend validation for any form fields which have validators defined. See Documentation on Generated Task Forms . URL: /process-definition/key/{key}/submit-form Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': ''}, 'businessKey': {'type': 'string', 'nullable': True, 'description': 'The business key the process instance is to be initialized with.\\nThe business key uniquely identifies the process instance in the context of the given process definition.'}}} Usage: cctl&nbsp;apply submitFormByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"submitFormByKey"},{"location":"commands/apply/#cctlnbspapply-submitformbykeyandtenantid","text":"Submit Start Form Starts the latest version of the process definition for a tenant using a set of process variables and the business key. If the start event has Form Field Metadata defined, the process engine will perform backend validation for any form fields which have validators defined. See Documentation on Generated Task Forms . URL: /process-definition/key/{key}/tenant-id/{tenant-id}/submit-form Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': ''}, 'businessKey': {'type': 'string', 'nullable': True, 'description': 'The business key the process instance is to be initialized with.\\nThe business key uniquely identifies the process instance in the context of the given process definition.'}}} Usage: cctl&nbsp;apply submitFormByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"submitFormByKeyAndTenantId"},{"location":"commands/apply/#cctlnbspapply-suspensionstate","text":"Activate/Suspend In Group Activates or suspends process instances by providing certain criteria:","title":"suspensionState"},{"location":"commands/apply/#activatesuspend-process-instance-by-process-definition-id","text":"suspend processDefinitionId","title":"Activate/Suspend Process Instance By Process Definition Id"},{"location":"commands/apply/#activatesuspend-process-instance-by-process-definition-key","text":"suspend processDefinitionKey processDefinitionTenantId processDefinitionWithoutTenantId","title":"Activate/Suspend Process Instance By Process Definition Key"},{"location":"commands/apply/#activatesuspend-process-instance-in-group","text":"suspend processInstanceIds processInstanceQuery historicProcessInstanceQuery URL: /process-instance/suspended Schema: {'allOf': [{'type': 'object', 'properties': {'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The process definition id of the process instances to activate or suspend.\\n\\n**Note**: This parameter can be used only with combination of suspended .'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'The process definition key of the process instances to activate or suspend.\\n\\n**Note**: This parameter can be used only with combination of suspended , processDefinitionTenantId , and processDefinitionWithoutTenantId .'}, 'processDefinitionTenantId': {'type': 'string', 'nullable': True, 'description': 'Only activate or suspend process instances of a process definition which belongs to a tenant with the given id.\\n\\n**Note**: This parameter can be used only with combination of suspended , processDefinitionKey , and processDefinitionWithoutTenantId .'}, 'processDefinitionWithoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only activate or suspend process instances of a process definition which belongs to no tenant.\\nValue may only be true, as false is the default behavior.\\n\\n**Note**: This parameter can be used only with combination of suspended , processDefinitionKey , and processDefinitionTenantId .'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids which defines a group of process instances\\nwhich will be activated or suspended by the operation.\\n\\n**Note**: This parameter can be used only with combination of suspended , processInstanceQuery , and historicProcessInstanceQuery .'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}}}, {'$ref': '#/components/schemas/SuspensionStateDto'}]} Usage: cctl&nbsp;apply suspensionState [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"Activate/Suspend Process Instance In Group"},{"location":"commands/apply/#cctlnbspapply-suspensionstateasyncoperation","text":"Activate/Suspend In Batch Activates or suspends process instances asynchronously with a list of process instance ids, a process instance query, and/or a historical process instance query. URL: /process-instance/suspended-async Schema: {'allOf': [{'type': 'object', 'properties': {'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids which defines a group of process instances\\nwhich will be activated or suspended by the operation.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}}}, {'$ref': '#/components/schemas/SuspensionStateDto'}]} Usage: cctl&nbsp;apply suspensionStateAsyncOperation [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"suspensionStateAsyncOperation"},{"location":"commands/apply/#cctlnbspapply-suspensionstateby","text":"Activate/Suspend Jobs Activates or suspends jobs matching the given criterion. This can only be on of: * jobDefinitionId * processDefinitionId * processInstanceId * processDefinitionKey URL: /job/suspended Schema: {'allOf': [{'type': 'object', 'description': 'Defines by which selection criterion to activate or suspend jobs.\\nThis selection criterion are mutually exclusive and can only be on of:\\n* jobDefinitionId \\n* processDefinitionId \\n* processInstanceId \\n* processDefinitionKey ', 'properties': {'jobDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The job definition id of the jobs to activate or suspend.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The process definition id of the jobs to activate or suspend.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'The process instance id of the jobs to activate or suspend.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'The process definition key of the jobs to activate or suspend.'}, 'processDefinitionTenantId': {'type': 'string', 'nullable': True, 'description': 'Only activate or suspend jobs of a process definition which belongs to a tenant\\nwith the given id. Works only when selecting with processDefinitionKey .'}, 'processDefinitionWithoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only activate or suspend jobs of a process definition which belongs to no tenant.\\nValue may only be true , as false is the default behavior. Works only when selecting with processDefinitionKey .'}}}, {'$ref': '#/components/schemas/SuspensionStateDto'}]} Usage: cctl&nbsp;apply suspensionStateBy [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"suspensionStateBy"},{"location":"commands/apply/#cctlnbspapply-suspensionstatebyid","text":"Activate/Suspend Process Instance By Id Activates or suspends a given process instance by id. URL: /process-instance/{id}/suspended Schema: {'type': 'object', 'properties': {'suspended': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend a given instance \\n(e.g. process instance, job, job definition, or batch). When the value is set to true, \\nthe given instance will be suspended and when the value is set to false, \\nthe given instance will be activated.'}}} Usage: cctl&nbsp;apply suspensionStateById [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"suspensionStateById"},{"location":"commands/apply/#cctlnbspapply-suspensionstatejobdefinition","text":"Activate/Suspend Job Definition By Id Activates or suspends a given job definition by id. URL: /job-definition/{id}/suspended Schema: {'allOf': [{'type': 'object', 'properties': {'includeJobs': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend also all jobs of\\nthe referenced job definitions. When the value is set to true , all jobs\\nof the provided job definitions will be activated or suspended and\\nwhen the value is set to false , the suspension state of all jobs\\nof the provided job definitions will not be updated.'}, 'executionDate': {'type': 'string', 'nullable': True, 'description': \"The date on which the referenced job definitions will be activated or suspended. If null,\\nthe suspension state of the given job definitions is updated\\nimmediately. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-\\ndd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}}}, {'$ref': '#/components/schemas/SuspensionStateDto'}]} Usage: cctl&nbsp;apply suspensionStateJobDefinition [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"suspensionStateJobDefinition"},{"location":"commands/apply/#cctlnbspapply-suspensionstatejobdefinitions","text":"Activate/Suspend Job Definitions Activates or suspends job definitions with the given process definition id or process definition key. URL: /job-definition/suspended Schema: {'allOf': [{'type': 'object', 'description': 'Defines by which selection criterion to activate or suspend job definitions.\\nThe selection criteria are mutually exclusive and can only be one of:\\n* processDefinitionId \\n* processDefinitionKey ', 'properties': {'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The process definition id of the job definitions to activate or suspend.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'The process definition key of the job definitions to activate or suspend.'}, 'processDefinitionTenantId': {'type': 'string', 'nullable': True, 'description': 'Only activate or suspend job definitions of a process definition which belongs to a\\ntenant with the given id.\\n\\nNote that this parameter will only be considered \\nin combination with processDefinitionKey .'}, 'processDefinitionWithoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only activate or suspend job definitions of a process definition which belongs to\\nno tenant. Value may only be true , as false is the default\\nbehavior.\\n\\nNote that this parameter will only be considered \\nin combination with processDefinitionKey .'}}}, {'$ref': '#/components/schemas/JobDefinitionSuspensionStateDto'}]} Usage: cctl&nbsp;apply suspensionStateJobDefinitions [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"suspensionStateJobDefinitions"},{"location":"commands/apply/#cctlnbspapply-task","text":"Update Updates a task. URL: /task/{id} Schema: {'type': 'object', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'The task id.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'The task name.'}, 'assignee': {'type': 'string', 'nullable': True, 'description': \"The assignee's id.\"}, 'owner': {'type': 'string', 'nullable': True, 'description': \"The owner's id.\"}, 'created': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The date the task was created on.\\n[Default format](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ .\"}, 'due': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The task's due date.\\n[Default format](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ .\"}, 'followUp': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The follow-up date for the task.\\n[Default format](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ .\"}, 'delegationState': {'type': 'string', 'nullable': True, 'enum': ['PENDING', 'RESOLVED'], 'description': \"The task's delegation state. Possible values are PENDING and RESOLVED .\"}, 'description': {'type': 'string', 'nullable': True, 'description': \"The task's description.\"}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'The id of the execution the task belongs to.'}, 'parentTaskId': {'type': 'string', 'nullable': True, 'description': 'The id the parent task, if this task is a subtask.'}, 'priority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': \"The task's priority.\"}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the process definition the task belongs to.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'The id of the process instance the task belongs to.'}, 'caseExecutionId': {'type': 'string', 'nullable': True, 'description': 'The id of the case execution the task belongs to.'}, 'caseDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the case definition the task belongs to.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'The id of the case instance the task belongs to.'}, 'taskDefinitionKey': {'type': 'string', 'nullable': True, 'description': \"The task's key.\"}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Whether the task belongs to a process instance that is suspended.'}, 'formKey': {'type': 'string', 'nullable': True, 'description': 'If not null , the form key for the task.'}, 'camundaFormRef': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/CamundaFormRef'}, 'description': 'A reference to a specific version of a Camunda Form.'}, 'tenantId': {'type': 'string', 'nullable': True, 'description': 'If not null , the tenant id of the task.'}}} Usage: cctl&nbsp;apply task [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"task"},{"location":"commands/apply/#cctlnbspapply-tenant","text":"Update Tenant Updates a given tenant. URL: /tenant/{id} Schema: {'type': 'object', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'The id of the tenant.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'The name of the tenant.'}}} Usage: cctl&nbsp;apply tenant [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"tenant"},{"location":"commands/apply/#cctlnbspapply-throwsignal","text":"Event A signal is an event of global scope (broadcast semantics) and is delivered to all active handlers. Internally this maps to the engine's signal event received builder method RuntimeService#createSignalEvent() . For more information about the signal behavior, see the Signal Events section of the BPMN 2.0 Implementation Reference . URL: /signal Schema: {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of the signal to deliver.\\n\\n**Note**: This property is mandatory.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Optionally specifies a single execution which is notified by the signal.\\n\\n**Note**: If no execution id is defined the signal is broadcasted to all subscribed\\nhandlers. '}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs. Each key is a variable name and\\neach value a JSON variable value object.'}, 'tenantId': {'type': 'string', 'nullable': True, 'description': 'Specifies a tenant to deliver the signal. The signal can only be received on\\nexecutions or process definitions which belongs to the given tenant.\\n\\n**Note**: Cannot be used in combination with executionId.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'If true the signal can only be received on executions or process definitions which\\nbelongs to no tenant. Value may not be false as this is the default behavior.\\n\\n**Note**: Cannot be used in combination with executionId .'}}} Usage: cctl&nbsp;apply throwSignal [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"throwSignal"},{"location":"commands/apply/#cctlnbspapply-triggerevent","text":"Trigger Message Event Subscription Delivers a message to a specific execution by id, to trigger an existing message event subscription. Inject process variables as the message's payload. URL: /execution/{id}/messageSubscriptions/{messageName}/trigger Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs. Each key is a variable name and\\neach value a JSON variable value object.'}}} Usage: cctl&nbsp;apply triggerEvent [OPTIONS] MESSAGENAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"triggerEvent"},{"location":"commands/apply/#cctlnbspapply-unclaim","text":"Unclaim Resets a task's assignee. If successful, the task is not assigned to a user. URL: /task/{id}/unclaim Schema: - Usage: cctl&nbsp;apply unclaim [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"unclaim"},{"location":"commands/apply/#cctlnbspapply-unlock","text":"Unlock Unlocks an external task by id. Clears the task's lock expiration time and worker id. URL: /external-task/{id}/unlock Schema: - Usage: cctl&nbsp;apply unlock [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"unlock"},{"location":"commands/apply/#cctlnbspapply-unlockuser","text":"Unlock User Unlocks a user by id. URL: /user/{id}/unlock Schema: - Usage: cctl&nbsp;apply unlockUser [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"unlockUser"},{"location":"commands/apply/#cctlnbspapply-validatemigrationplan","text":"Validate Migration Plan Validates a migration plan statically without executing it. This corresponds to the creation time validation described in the user guide. URL: /migration/validate Schema: {'type': 'object', 'properties': {'sourceProcessDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the source process definition for the migration.'}, 'targetProcessDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the target process definition for the migration.'}, 'instructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/MigrationInstructionDto'}, 'description': 'A list of migration instructions which map equal activities. Each\\nmigration instruction is a JSON object with the following properties:'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': \"A map of variables which will be set into the process instances' scope.\\nEach key is a variable name and each value a JSON variable value object.\"}}} Usage: cctl&nbsp;apply validateMigrationPlan [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"validateMigrationPlan"},{"location":"commands/apply/#cctlnbspapply-variablesasyncoperation","text":"Set Variables Async (POST) Update or create runtime process variables in the root scope of process instances. URL: /process-instance/variables-async Schema: {'type': 'object', 'properties': {'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids that define a group of process instances\\nto which the operation will set variables.\\n\\nPlease note that if processInstanceIds , processInstanceQuery and historicProcessInstanceQuery \\nare defined, the resulting operation will be performed on the union of these sets.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A variables the operation will set in the root scope of the process instances.'}}} Usage: cctl&nbsp;apply variablesAsyncOperation [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"variablesAsyncOperation"},{"location":"commands/apply/#cctlnbspapply-verifyuser","text":"Verify User Verifies that user credentials are valid. URL: /identity/verify Schema: {'type': 'object', 'properties': {'username': {'type': 'string', 'nullable': True, 'description': 'The username of a user.'}, 'password': {'type': 'string', 'nullable': True, 'description': 'A password of a user.'}}} Usage: cctl&nbsp;apply verifyUser [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"verifyUser"},{"location":"commands/delete/","text":"CLI Reference ( delete ) \u00b6 All delete commands. cctl delete \u00b6 delete ressources Usage: cctl&nbsp;delete [OPTIONS] COMMAND [ARGS]... Options: Name Type Description Default -e , --engine text N/A None --help boolean Show this message and exit. False cctl delete attachment \u00b6 Delete Removes an attachment from a task by id. URL: /task/{id}/attachment/{attachmentId} Schema: - Usage: cctl&nbsp;delete attachment [OPTIONS] ATTACHMENTID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete authorization \u00b6 Delete Authorization Deletes an authorization by id. URL: /authorization/{id} Schema: - Usage: cctl&nbsp;delete authorization [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete batch \u00b6 Delete Deletes a batch by id, including all related jobs and job definitions. Optionally also deletes the batch history. URL: /batch/{id} Schema: - Usage: cctl&nbsp;delete batch [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --cascade / --not-cascade boolean true , if the historic batch and historic job logs for this batch should also be deleted. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete clearIncidentAnnotation \u00b6 Clear Incident Annotation Clears the annotation of an incident with given id. URL: /incident/{id}/annotation Schema: - Usage: cctl&nbsp;delete clearIncidentAnnotation [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete deployment \u00b6 Delete Deletes a deployment by id. URL: /deployment/{id} Schema: - Usage: cctl&nbsp;delete deployment [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --skip-io-mappings / --not-skip-io-mappings boolean true , if all input/output mappings should not be invoked. None --skip-custom-listeners / --not-skip-custom-listeners boolean true , if only the built-in ExecutionListeners should be notified with the end event. None --cascade / --not-cascade boolean true , if all process instances, historic process instances and jobs for this deployment should be deleted. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete filter \u00b6 Delete Filter Deletes a filter by id. URL: /filter/{id} Schema: - Usage: cctl&nbsp;delete filter [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete group \u00b6 Delete Group Deletes a group by id. URL: /group/{id} Schema: - Usage: cctl&nbsp;delete group [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete groupMember \u00b6 Delete a Group Member Removes a member from a group. URL: /group/{id}/members/{userId} Schema: - Usage: cctl&nbsp;delete groupMember [OPTIONS] USERID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete groupMembership \u00b6 Create Tenant Group Membership Creates a membership between a tenant and a group. URL: /tenant/{id}/group-members/{groupId} Schema: - Usage: cctl&nbsp;delete groupMembership [OPTIONS] GROUPID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete historicBatch \u00b6 Delete Historic Batch Deletes a historic batch by id, including related historic job logs. URL: /history/batch/{id} Schema: - Usage: cctl&nbsp;delete historicBatch [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete historicProcessInstance \u00b6 Delete Deletes a process instance from the history by id. URL: /history/process-instance/{id} Schema: - Usage: cctl&nbsp;delete historicProcessInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --fail-if-not-exists / --not-fail-if-not-exists boolean If set to false , the request will still be successful if the process id is not found. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete historicVariableInstance \u00b6 Delete Variable Instance Deletes a historic variable instance by id. URL: /history/variable-instance/{id} Schema: - Usage: cctl&nbsp;delete historicVariableInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete historicVariableInstancesOfHistoricProcessInstance \u00b6 Delete Variable Instances Deletes all variables of a process instance from the history by id. URL: /history/process-instance/{id}/variable-instances Schema: - Usage: cctl&nbsp;delete historicVariableInstancesOfHistoricProcessInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete incident \u00b6 Resolve Incident Resolves an incident with given id. URL: /incident/{id} Schema: - Usage: cctl&nbsp;delete incident [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete localExecutionVariable \u00b6 Delete Local Execution Variable Deletes a variable in the context of a given execution by id. Deletion does not propagate upwards in the execution hierarchy. URL: /execution/{id}/localVariables/{varName} Schema: - Usage: cctl&nbsp;delete localExecutionVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete processDefinition \u00b6 Delete Deletes a running process instance by id. URL: /process-definition/{id} Schema: - Usage: cctl&nbsp;delete processDefinition [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --skip-io-mappings / --not-skip-io-mappings boolean A boolean value to control whether input/output mappings should be executed during deletion. true , if input/output mappings should not be invoked. None --skip-custom-listeners / --not-skip-custom-listeners boolean true , if only the built-in ExecutionListeners should be notified with the end event. None --cascade / --not-cascade boolean true , if all process instances, historic process instances and jobs for this process definition should be deleted. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete processDefinitionsByKey \u00b6 Delete By Key Deletes process definitions by a given key which belong to no tenant id. URL: /process-definition/key/{key} Schema: - Usage: cctl&nbsp;delete processDefinitionsByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --skip-io-mappings / --not-skip-io-mappings boolean A boolean value to control whether input/output mappings should be executed during deletion. true , if input/output mappings should not be invoked. None --skip-custom-listeners / --not-skip-custom-listeners boolean true , if only the built-in ExecutionListeners should be notified with the end event. None --cascade / --not-cascade boolean true , if all process instances, historic process instances and jobs for this process definition should be deleted. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete processDefinitionsByKeyAndTenantId \u00b6 Delete By Key Deletes process definitions by a given key and which belong to a tenant id. URL: /process-definition/key/{key}/tenant-id/{tenant-id} Schema: - Usage: cctl&nbsp;delete processDefinitionsByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --skip-io-mappings / --not-skip-io-mappings boolean A boolean value to control whether input/output mappings should be executed during deletion. true , if input/output mappings should not be invoked. None --skip-custom-listeners / --not-skip-custom-listeners boolean true , if only the built-in ExecutionListeners should be notified with the end event. None --cascade / --not-cascade boolean true , if all process instances, historic process instances and jobs for this process definition should be deleted. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete processInstance \u00b6 Delete Deletes a running process instance by id. URL: /process-instance/{id} Schema: - Usage: cctl&nbsp;delete processInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --fail-if-not-exists / --not-fail-if-not-exists boolean If set to false, the request will still be successful if the process id is not found. None --skip-subprocesses / --not-skip-subprocesses boolean If set to true, subprocesses related to deleted processes will be skipped. None --skip-io-mappings / --not-skip-io-mappings boolean If set to true, the input/output mappings will be skipped. None --skip-custom-listeners / --not-skip-custom-listeners boolean If set to true, the custom listeners will be skipped. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete processInstanceVariable \u00b6 Delete Process Variable Deletes a variable of a process instance by id. URL: /process-instance/{id}/variables/{varName} Schema: - Usage: cctl&nbsp;delete processInstanceVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete task \u00b6 Delete Removes a task by id. URL: /task/{id} Schema: - Usage: cctl&nbsp;delete task [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete taskLocalVariable \u00b6 Delete Local Task Variable Removes a local variable from a task by id. URL: /task/{id}/localVariables/{varName} Schema: - Usage: cctl&nbsp;delete taskLocalVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete taskMetrics \u00b6 Delete Task Worker Metrics Deletes all task worker metrics prior to the given date or all if no date is provided. URL: /metrics/task-worker Schema: - Usage: cctl&nbsp;delete taskMetrics [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --date text The date prior to which all task worker metrics should be deleted. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete taskVariable \u00b6 Delete Task Variable Removes a variable that is visible to a task. A variable is visible to a task if it is a local task variable or declared in a parent scope of the task. See documentation on visiblity of variables . URL: /task/{id}/variables/{varName} Schema: - Usage: cctl&nbsp;delete taskVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete tenant \u00b6 Delete Tenant Deletes a tenant by id. URL: /tenant/{id} Schema: - Usage: cctl&nbsp;delete tenant [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete user \u00b6 Delete Deletes a user by id. URL: /user/{id} Schema: - Usage: cctl&nbsp;delete user [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete userMembership \u00b6 Delete a Tenant User Membership Deletes a membership between a tenant and an user. URL: /tenant/{id}/user-members/{userId} Schema: - Usage: cctl&nbsp;delete userMembership [OPTIONS] USERID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"delete Commands"},{"location":"commands/delete/#cli-reference-delete","text":"All delete commands.","title":"CLI Reference (delete)"},{"location":"commands/delete/#cctlnbspdelete","text":"delete ressources Usage: cctl&nbsp;delete [OPTIONS] COMMAND [ARGS]... Options: Name Type Description Default -e , --engine text N/A None --help boolean Show this message and exit. False","title":"cctl&nbsp;delete"},{"location":"commands/delete/#cctlnbspdelete-attachment","text":"Delete Removes an attachment from a task by id. URL: /task/{id}/attachment/{attachmentId} Schema: - Usage: cctl&nbsp;delete attachment [OPTIONS] ATTACHMENTID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"attachment"},{"location":"commands/delete/#cctlnbspdelete-authorization","text":"Delete Authorization Deletes an authorization by id. URL: /authorization/{id} Schema: - Usage: cctl&nbsp;delete authorization [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"authorization"},{"location":"commands/delete/#cctlnbspdelete-batch","text":"Delete Deletes a batch by id, including all related jobs and job definitions. Optionally also deletes the batch history. URL: /batch/{id} Schema: - Usage: cctl&nbsp;delete batch [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --cascade / --not-cascade boolean true , if the historic batch and historic job logs for this batch should also be deleted. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"batch"},{"location":"commands/delete/#cctlnbspdelete-clearincidentannotation","text":"Clear Incident Annotation Clears the annotation of an incident with given id. URL: /incident/{id}/annotation Schema: - Usage: cctl&nbsp;delete clearIncidentAnnotation [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"clearIncidentAnnotation"},{"location":"commands/delete/#cctlnbspdelete-deployment","text":"Delete Deletes a deployment by id. URL: /deployment/{id} Schema: - Usage: cctl&nbsp;delete deployment [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --skip-io-mappings / --not-skip-io-mappings boolean true , if all input/output mappings should not be invoked. None --skip-custom-listeners / --not-skip-custom-listeners boolean true , if only the built-in ExecutionListeners should be notified with the end event. None --cascade / --not-cascade boolean true , if all process instances, historic process instances and jobs for this deployment should be deleted. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"deployment"},{"location":"commands/delete/#cctlnbspdelete-filter","text":"Delete Filter Deletes a filter by id. URL: /filter/{id} Schema: - Usage: cctl&nbsp;delete filter [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"filter"},{"location":"commands/delete/#cctlnbspdelete-group","text":"Delete Group Deletes a group by id. URL: /group/{id} Schema: - Usage: cctl&nbsp;delete group [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"group"},{"location":"commands/delete/#cctlnbspdelete-groupmember","text":"Delete a Group Member Removes a member from a group. URL: /group/{id}/members/{userId} Schema: - Usage: cctl&nbsp;delete groupMember [OPTIONS] USERID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"groupMember"},{"location":"commands/delete/#cctlnbspdelete-groupmembership","text":"Create Tenant Group Membership Creates a membership between a tenant and a group. URL: /tenant/{id}/group-members/{groupId} Schema: - Usage: cctl&nbsp;delete groupMembership [OPTIONS] GROUPID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"groupMembership"},{"location":"commands/delete/#cctlnbspdelete-historicbatch","text":"Delete Historic Batch Deletes a historic batch by id, including related historic job logs. URL: /history/batch/{id} Schema: - Usage: cctl&nbsp;delete historicBatch [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"historicBatch"},{"location":"commands/delete/#cctlnbspdelete-historicprocessinstance","text":"Delete Deletes a process instance from the history by id. URL: /history/process-instance/{id} Schema: - Usage: cctl&nbsp;delete historicProcessInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --fail-if-not-exists / --not-fail-if-not-exists boolean If set to false , the request will still be successful if the process id is not found. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"historicProcessInstance"},{"location":"commands/delete/#cctlnbspdelete-historicvariableinstance","text":"Delete Variable Instance Deletes a historic variable instance by id. URL: /history/variable-instance/{id} Schema: - Usage: cctl&nbsp;delete historicVariableInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"historicVariableInstance"},{"location":"commands/delete/#cctlnbspdelete-historicvariableinstancesofhistoricprocessinstance","text":"Delete Variable Instances Deletes all variables of a process instance from the history by id. URL: /history/process-instance/{id}/variable-instances Schema: - Usage: cctl&nbsp;delete historicVariableInstancesOfHistoricProcessInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"historicVariableInstancesOfHistoricProcessInstance"},{"location":"commands/delete/#cctlnbspdelete-incident","text":"Resolve Incident Resolves an incident with given id. URL: /incident/{id} Schema: - Usage: cctl&nbsp;delete incident [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"incident"},{"location":"commands/delete/#cctlnbspdelete-localexecutionvariable","text":"Delete Local Execution Variable Deletes a variable in the context of a given execution by id. Deletion does not propagate upwards in the execution hierarchy. URL: /execution/{id}/localVariables/{varName} Schema: - Usage: cctl&nbsp;delete localExecutionVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"localExecutionVariable"},{"location":"commands/delete/#cctlnbspdelete-processdefinition","text":"Delete Deletes a running process instance by id. URL: /process-definition/{id} Schema: - Usage: cctl&nbsp;delete processDefinition [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --skip-io-mappings / --not-skip-io-mappings boolean A boolean value to control whether input/output mappings should be executed during deletion. true , if input/output mappings should not be invoked. None --skip-custom-listeners / --not-skip-custom-listeners boolean true , if only the built-in ExecutionListeners should be notified with the end event. None --cascade / --not-cascade boolean true , if all process instances, historic process instances and jobs for this process definition should be deleted. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"processDefinition"},{"location":"commands/delete/#cctlnbspdelete-processdefinitionsbykey","text":"Delete By Key Deletes process definitions by a given key which belong to no tenant id. URL: /process-definition/key/{key} Schema: - Usage: cctl&nbsp;delete processDefinitionsByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --skip-io-mappings / --not-skip-io-mappings boolean A boolean value to control whether input/output mappings should be executed during deletion. true , if input/output mappings should not be invoked. None --skip-custom-listeners / --not-skip-custom-listeners boolean true , if only the built-in ExecutionListeners should be notified with the end event. None --cascade / --not-cascade boolean true , if all process instances, historic process instances and jobs for this process definition should be deleted. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"processDefinitionsByKey"},{"location":"commands/delete/#cctlnbspdelete-processdefinitionsbykeyandtenantid","text":"Delete By Key Deletes process definitions by a given key and which belong to a tenant id. URL: /process-definition/key/{key}/tenant-id/{tenant-id} Schema: - Usage: cctl&nbsp;delete processDefinitionsByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --skip-io-mappings / --not-skip-io-mappings boolean A boolean value to control whether input/output mappings should be executed during deletion. true , if input/output mappings should not be invoked. None --skip-custom-listeners / --not-skip-custom-listeners boolean true , if only the built-in ExecutionListeners should be notified with the end event. None --cascade / --not-cascade boolean true , if all process instances, historic process instances and jobs for this process definition should be deleted. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"processDefinitionsByKeyAndTenantId"},{"location":"commands/delete/#cctlnbspdelete-processinstance","text":"Delete Deletes a running process instance by id. URL: /process-instance/{id} Schema: - Usage: cctl&nbsp;delete processInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --fail-if-not-exists / --not-fail-if-not-exists boolean If set to false, the request will still be successful if the process id is not found. None --skip-subprocesses / --not-skip-subprocesses boolean If set to true, subprocesses related to deleted processes will be skipped. None --skip-io-mappings / --not-skip-io-mappings boolean If set to true, the input/output mappings will be skipped. None --skip-custom-listeners / --not-skip-custom-listeners boolean If set to true, the custom listeners will be skipped. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"processInstance"},{"location":"commands/delete/#cctlnbspdelete-processinstancevariable","text":"Delete Process Variable Deletes a variable of a process instance by id. URL: /process-instance/{id}/variables/{varName} Schema: - Usage: cctl&nbsp;delete processInstanceVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"processInstanceVariable"},{"location":"commands/delete/#cctlnbspdelete-task","text":"Delete Removes a task by id. URL: /task/{id} Schema: - Usage: cctl&nbsp;delete task [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"task"},{"location":"commands/delete/#cctlnbspdelete-tasklocalvariable","text":"Delete Local Task Variable Removes a local variable from a task by id. URL: /task/{id}/localVariables/{varName} Schema: - Usage: cctl&nbsp;delete taskLocalVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"taskLocalVariable"},{"location":"commands/delete/#cctlnbspdelete-taskmetrics","text":"Delete Task Worker Metrics Deletes all task worker metrics prior to the given date or all if no date is provided. URL: /metrics/task-worker Schema: - Usage: cctl&nbsp;delete taskMetrics [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --date text The date prior to which all task worker metrics should be deleted. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"taskMetrics"},{"location":"commands/delete/#cctlnbspdelete-taskvariable","text":"Delete Task Variable Removes a variable that is visible to a task. A variable is visible to a task if it is a local task variable or declared in a parent scope of the task. See documentation on visiblity of variables . URL: /task/{id}/variables/{varName} Schema: - Usage: cctl&nbsp;delete taskVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"taskVariable"},{"location":"commands/delete/#cctlnbspdelete-tenant","text":"Delete Tenant Deletes a tenant by id. URL: /tenant/{id} Schema: - Usage: cctl&nbsp;delete tenant [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"tenant"},{"location":"commands/delete/#cctlnbspdelete-user","text":"Delete Deletes a user by id. URL: /user/{id} Schema: - Usage: cctl&nbsp;delete user [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"user"},{"location":"commands/delete/#cctlnbspdelete-usermembership","text":"Delete a Tenant User Membership Deletes a membership between a tenant and an user. URL: /tenant/{id}/user-members/{userId} Schema: - Usage: cctl&nbsp;delete userMembership [OPTIONS] USERID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"userMembership"},{"location":"commands/describe/","text":"CLI Reference ( describe ) \u00b6 All describe commands. cctl describe \u00b6 get complex collected information about engine ressources Usage: cctl&nbsp;describe [OPTIONS] COMMAND [ARGS]... Options: Name Type Description Default -e , --engine text N/A None --help boolean Show this message and exit. False","title":"describe Commands"},{"location":"commands/describe/#cli-reference-describe","text":"All describe commands.","title":"CLI Reference (describe)"},{"location":"commands/describe/#cctlnbspdescribe","text":"get complex collected information about engine ressources Usage: cctl&nbsp;describe [OPTIONS] COMMAND [ARGS]... Options: Name Type Description Default -e , --engine text N/A None --help boolean Show this message and exit. False","title":"cctl&nbsp;describe"},{"location":"commands/full/","text":"CLI Reference \u00b6 This page provides documentation for our command line tools. cctl \u00b6 Usage: cctl [OPTIONS] COMMAND [ARGS]... Options: Name Type Description Default -l , --log-level choice ( DEBUG | WARNING | INFO | ERROR ) N/A None --help boolean Show this message and exit. False cctl api-resources \u00b6 Usage: cctl api-resources [OPTIONS] Options: Name Type Description Default -e , --engine text N/A None --help boolean Show this message and exit. False cctl apply \u00b6 apply changes to the engine Usage: cctl apply [OPTIONS] COMMAND [ARGS]... Options: Name Type Description Default -e , --engine text N/A None --help boolean Show this message and exit. False cctl apply addAttachment \u00b6 Create Creates an attachment for a task. URL: /task/{id}/attachment/create Schema: - Usage: cctl apply addAttachment [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply addIdentityLink \u00b6 Add Adds an identity link to a task by id. Can be used to link any user or group to a task and specify a relation. URL: /task/{id}/identity-links Schema: {'type': 'object', 'required': ['type'], 'properties': {'userId': {'type': 'string', 'nullable': True, 'description': 'The id of the user participating in this link. Either userId or groupId is set.'}, 'groupId': {'type': 'string', 'nullable': True, 'description': 'The id of the group participating in this link. Either groupId or userId is set.'}, 'type': {'type': 'string', 'nullable': True, 'description': 'The type of the identity link. The value of the this property can be user-defined. The Process Engine\\nprovides three pre-defined Identity Link type s:\\n\\n* candidate \\n* assignee - reserved for the task assignee\\n* owner - reserved for the task owner\\n\\n**Note**: When adding or removing an Identity Link, the type property must be defined.'}}} Usage: cctl apply addIdentityLink [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply annotationUserOperationLog \u00b6 Set Annotation to an User Operation Log (Historic) Set an annotation for auditing reasons. URL: /history/user-operation/{operationId}/set-annotation Schema: {'type': 'object', 'properties': {'annotation': {'type': 'string', 'nullable': True, 'description': 'The annotation value to put.'}}} Usage: cctl apply annotationUserOperationLog [OPTIONS] OPERATIONID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply assignee \u00b6 Set Assignee Changes the assignee of a task to a specific user. Note: The difference with the Claim Task method is that this method does not check if the task already has a user assigned to it. URL: /task/{id}/assignee Schema: {'type': 'object', 'properties': {'userId': {'type': 'string', 'nullable': True, 'description': 'The id of the user that the current action refers to.'}}} Usage: cctl apply assignee [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply async \u00b6 Delete Async (POST) Delete multiple historic decision instances asynchronously (batch). At least historicDecisionInstanceIds or historicDecisionInstanceQuery has to be provided. If both are provided then all instances matching query criterion and instances from the list will be deleted. URL: /history/decision-instance/delete Schema: {'type': 'object', 'properties': {'historicDecisionInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of historic decision instance ids to delete.'}, 'historicDecisionInstanceQuery': {'$ref': '#/components/schemas/HistoricDecisionInstanceQueryDto'}, 'deleteReason': {'type': 'string', 'nullable': True, 'description': 'A string with delete reason.'}}} Usage: cctl apply async [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply asyncHistoricQueryBased \u00b6 Delete Async Historic Query Based (POST) Deletes a set of process instances asynchronously (batch) based on a historic process instance query. URL: /process-instance/delete-historic-query-based Schema: {'type': 'object', 'properties': {'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list process instance ids to delete.'}, 'deleteReason': {'type': 'string', 'nullable': True, 'description': 'A string with delete reason.'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started or ended as part of this request.'}, 'skipSubprocesses': {'type': 'boolean', 'nullable': True, 'description': 'Skip deletion of the subprocesses related to deleted processes as part of this request.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}}} Usage: cctl apply asyncHistoricQueryBased [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply authorization \u00b6 Update an Authorization Updates an authorization by id. URL: /authorization/{id} Schema: {'type': 'object', 'properties': {'permissions': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'An array of Strings holding the permissions provided by this authorization.'}, 'userId': {'type': 'string', 'nullable': True, 'description': 'The id of the user this authorization has been created for. The value \\nrepresents a global authorization ranging over all users.'}, 'groupId': {'type': 'string', 'nullable': True, 'description': 'The id of the group this authorization has been created for.'}, 'resourceType': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'An integer representing the resource type. See the\\n[User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/authorization-service/#resources)\\nfor a list of integer representations of resource types.'}, 'resourceId': {'type': 'string', 'nullable': True, 'description': 'The resource Id. The value represents an authorization ranging over all\\ninstances of a resource.'}}} Usage: cctl apply authorization [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply batchSuspensionState \u00b6 Activate/Suspend Activates or suspends a batch by id. URL: /batch/{id}/suspended Schema: {'type': 'object', 'properties': {'suspended': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend a given instance \\n(e.g. process instance, job, job definition, or batch). When the value is set to true, \\nthe given instance will be suspended and when the value is set to false, \\nthe given instance will be activated.'}}} Usage: cctl apply batchSuspensionState [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply binaryTaskLocalVariable \u00b6 Update Local Task Variable (Binary) Sets the serialized value for a binary variable or the binary value for a file variable. URL: /task/{id}/localVariables/{varName}/data Schema: - Usage: cctl apply binaryTaskLocalVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply binaryTaskVariable \u00b6 Update Task Variable (Binary) Sets the serialized value for a binary variable or the binary value for a file variable visible from the task. A variable is visible from the task if it is a local task variable or declared in a parent scope of the task. See documentation on visiblity of variables . URL: /task/{id}/variables/{varName}/data Schema: - Usage: cctl apply binaryTaskVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply checkPassword \u00b6 Validate Password A password policy consists of a list of rules that new passwords must follow to be policy compliant. A password can be checked for compliancy via this end point. More information on password policies in Camunda can be found in the password policy user guide and in the security instructions . URL: /identity/password-policy Schema: {'type': 'object', 'properties': {'password': {'type': 'string', 'nullable': True, 'description': 'The candidate password to be check against the password policy.'}, 'profile': {'$ref': '#/components/schemas/UserProfileDto'}}} Usage: cctl apply checkPassword [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply claim \u00b6 Claim Claims a task for a specific user. Note: The difference with the Set Assignee method is that here a check is performed to see if the task already has a user assigned to it. URL: /task/{id}/claim Schema: {'type': 'object', 'properties': {'userId': {'type': 'string', 'nullable': True, 'description': 'The id of the user that the current action refers to.'}}} Usage: cctl apply claim [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply cleanupAsync \u00b6 Clean up history (POST) Schedules asynchronous history cleanup (See History cleanup ). Note: This endpoint will return at most a single history cleanup job. Since version 7.9.0 it is possible to configure multiple parallel history cleanup jobs . Use GET /history/cleanup/jobs to find all the available history cleanup jobs. URL: /history/cleanup Schema: - Usage: cctl apply cleanupAsync [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --immediately-due / --not-immediately-due boolean When true the job will be scheduled for nearest future. When false , the job will be scheduled for next batch window start time. Default is true . None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply clearAnnotationUserOperationLog \u00b6 Clear Annotation of an User Operation Log (Historic) Clear the annotation which was previously set for auditing reasons. URL: /history/user-operation/{operationId}/clear-annotation Schema: - Usage: cctl apply clearAnnotationUserOperationLog [OPTIONS] OPERATIONID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply complete \u00b6 Complete Completes a task and updates process variables. URL: /task/{id}/complete Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs.'}, 'withVariablesInReturn': {'type': 'boolean', 'nullable': True, 'default': False, 'description': \"Indicates whether the response should contain the process variables or not. The\\ndefault is false with a response code of 204 . If set to true the response\\ncontains the process variables and has a response code of 200 . If the task is not\\nassociated with a process instance (e.g. if it's part of a case instance) no\\nvariables will be returned.\"}}} Usage: cctl apply complete [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply completeExternalTaskResource \u00b6 Complete Completes an external task by id and updates process variables. URL: /external-task/{id}/complete Schema: {'allOf': [{'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs. Each key is a variable name and each value a JSON variable value object with the following properties:'}, 'localVariables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing local variable key-value pairs. Local variables are set only in the scope of external task. Each key is a variable name and each value a JSON variable value object with the following properties:'}}}, {'$ref': '#/components/schemas/HandleExternalTaskDto'}]} Usage: cctl apply completeExternalTaskResource [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply configureTelemetry \u00b6 Configure Telemetry Configures whether Camunda receives data collection of the process engine setup and usage. URL: /telemetry/configuration Schema: {'type': 'object', 'properties': {'enableTelemetry': {'type': 'boolean', 'nullable': True, 'description': 'Specifies if the telemetry data should be sent or not.'}}} Usage: cctl apply configureTelemetry [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply correlateMessageAsyncOperation \u00b6 Correlate Message Async (POST) Correlates a message asynchronously to executions that are waiting for this message. Messages will not be correlated to process definition-level start message events to start process instances. URL: /process-instance/message-async Schema: {'type': 'object', 'properties': {'messageName': {'type': 'string', 'nullable': True, 'description': \"The name of the message to correlate. Corresponds to the 'name' element of the message defined in BPMN 2.0 XML. Can be null to correlate by other criteria only.\"}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids that define a group of process instances\\nto which the operation will correlate a message.\\n\\nPlease note that if processInstanceIds , processInstanceQuery and historicProcessInstanceQuery \\nare defined, the resulting operation will be performed on the union of these sets.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'All variables the operation will set in the root scope of the process instances the message is correlated to.'}}} Usage: cctl apply correlateMessageAsyncOperation [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply createAuthorization \u00b6 Create a New Authorization Creates a new authorization. URL: /authorization/create Schema: {'type': 'object', 'properties': {'type': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'The type of the authorization (0=global, 1=grant, 2=revoke). See the\\n[User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/authorization-service.md#authorization-type)\\nfor more information about authorization types.'}, 'permissions': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'An array of Strings holding the permissions provided by this authorization.'}, 'userId': {'type': 'string', 'nullable': True, 'description': 'The id of the user this authorization has been created for. The value \\nrepresents a global authorization ranging over all users.'}, 'groupId': {'type': 'string', 'nullable': True, 'description': 'The id of the group this authorization has been created for.'}, 'resourceType': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'An integer representing the resource type. See the\\n[User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/authorization-service/#resources)\\nfor a list of integer representations of resource types.'}, 'resourceId': {'type': 'string', 'nullable': True, 'description': 'The resource Id. The value represents an authorization ranging over all\\ninstances of a resource.'}}} Usage: cctl apply createAuthorization [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply createComment \u00b6 Create Creates a comment for a task by id. URL: /task/{id}/comment/create Schema: {'allOf': [{'type': 'object', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'The id of the task comment.'}, 'userId': {'type': 'string', 'nullable': True, 'description': 'The id of the user who created the comment.'}, 'taskId': {'type': 'string', 'nullable': True, 'description': 'The id of the task to which the comment belongs.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'The id of the process instance the comment is related to.'}, 'time': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The time when the comment was created.\\n[Default format]($(docsUrl)/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ .\"}, 'message': {'type': 'string', 'nullable': True, 'description': 'The content of the comment.'}, 'removalTime': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The time after which the comment should be removed by the History Cleanup job.\\n[Default format]($(docsUrl)/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ .\"}, 'rootProcessInstanceId': {'type': 'string', 'nullable': True, 'description': 'The process instance id of the root process instance that initiated the process\\ncontaining the task.'}}}, {'$ref': '#/components/schemas/LinkableDto'}]} Usage: cctl apply createComment [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply createDeployment \u00b6 Create Creates a deployment. Security Consideration Deployments can contain custom code in form of scripts or EL expressions to customize process behavior. This may be abused for remote execution of arbitrary code. URL: /deployment/create Schema: - Usage: cctl apply createDeployment [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply createFilter \u00b6 Create Filter Creates a new filter. URL: /filter/create Schema: {'type': 'object', 'properties': {'resourceType': {'type': 'string', 'nullable': True, 'description': 'The resource type of the filter.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'The name of the filter.'}, 'owner': {'type': 'string', 'nullable': True, 'description': 'The user id of the owner of the filter.'}, 'query': {'type': 'object', 'description': 'The query of the filter as a JSON object.'}, 'properties': {'type': 'object', 'description': 'The properties of a filter as a JSON object.'}}} Usage: cctl apply createFilter [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply createGroup \u00b6 Create Group Creates a new group. URL: /group/create Schema: {'type': 'object', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'The id of the group.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'The name of the group.'}, 'type': {'type': 'string', 'nullable': True, 'description': 'The type of the group.'}}} Usage: cctl apply createGroup [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply createGroupMember \u00b6 Create Group Member Adds a member to a group. URL: /group/{id}/members/{userId} Schema: - Usage: cctl apply createGroupMember [OPTIONS] USERID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply createGroupMembership \u00b6 Create Tenant Group Membership Creates a membership between a tenant and a group. URL: /tenant/{id}/group-members/{groupId} Schema: - Usage: cctl apply createGroupMembership [OPTIONS] GROUPID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply createIncident \u00b6 Create Incident Creates a custom incident with given properties. URL: /execution/{id}/create-incident Schema: {'type': 'object', 'properties': {'incidentType': {'type': 'string', 'nullable': True, 'description': 'A type of the new incident.'}, 'configuration': {'type': 'string', 'nullable': True, 'description': 'A configuration for the new incident.'}, 'message': {'type': 'string', 'nullable': True, 'description': 'A message for the new incident.'}}} Usage: cctl apply createIncident [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply createTask \u00b6 Create Creates a new task. URL: /task/create Schema: {'type': 'object', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'The task id.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'The task name.'}, 'assignee': {'type': 'string', 'nullable': True, 'description': \"The assignee's id.\"}, 'owner': {'type': 'string', 'nullable': True, 'description': \"The owner's id.\"}, 'created': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The date the task was created on.\\n[Default format](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ .\"}, 'due': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The task's due date.\\n[Default format](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ .\"}, 'followUp': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The follow-up date for the task.\\n[Default format](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ .\"}, 'delegationState': {'type': 'string', 'nullable': True, 'enum': ['PENDING', 'RESOLVED'], 'description': \"The task's delegation state. Possible values are PENDING and RESOLVED .\"}, 'description': {'type': 'string', 'nullable': True, 'description': \"The task's description.\"}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'The id of the execution the task belongs to.'}, 'parentTaskId': {'type': 'string', 'nullable': True, 'description': 'The id the parent task, if this task is a subtask.'}, 'priority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': \"The task's priority.\"}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the process definition the task belongs to.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'The id of the process instance the task belongs to.'}, 'caseExecutionId': {'type': 'string', 'nullable': True, 'description': 'The id of the case execution the task belongs to.'}, 'caseDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the case definition the task belongs to.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'The id of the case instance the task belongs to.'}, 'taskDefinitionKey': {'type': 'string', 'nullable': True, 'description': \"The task's key.\"}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Whether the task belongs to a process instance that is suspended.'}, 'formKey': {'type': 'string', 'nullable': True, 'description': 'If not null , the form key for the task.'}, 'camundaFormRef': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/CamundaFormRef'}, 'description': 'A reference to a specific version of a Camunda Form.'}, 'tenantId': {'type': 'string', 'nullable': True, 'description': 'If not null , the tenant id of the task.'}}} Usage: cctl apply createTask [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply createTenant \u00b6 Create Tenant Create a new tenant. URL: /tenant/create Schema: {'type': 'object', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'The id of the tenant.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'The name of the tenant.'}}} Usage: cctl apply createTenant [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply createUser \u00b6 Create Create a new user. URL: /user/create Schema: {'type': 'object', 'properties': {'profile': {'$ref': '#/components/schemas/UserProfileDto'}, 'credentials': {'$ref': '#/components/schemas/UserCredentialsDto'}}} Usage: cctl apply createUser [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply createUserMembership \u00b6 Create Tenant User Membership Creates a membership between a tenant and an user. URL: /tenant/{id}/user-members/{userId} Schema: - Usage: cctl apply createUserMembership [OPTIONS] USERID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply credentials \u00b6 Update Credentials Updates a user's credentials (password) URL: /user/{id}/credentials Schema: {'type': 'object', 'properties': {'password': {'type': 'string', 'nullable': True, 'description': 'The users new password.'}, 'authenticatedUserPassword': {'type': 'string', 'nullable': True, 'description': 'The password of the authenticated user who changes the password of the user\\n(i.e., the user with passed id as path parameter).'}}} Usage: cctl apply credentials [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply delegateTask \u00b6 Delegate Delegates a task to another user. URL: /task/{id}/delegate Schema: {'type': 'object', 'properties': {'userId': {'type': 'string', 'nullable': True, 'description': 'The id of the user that the current action refers to.'}}} Usage: cctl apply delegateTask [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply deliverMessage \u00b6 Correlate Correlates a message to the process engine to either trigger a message start event or an intermediate message catching event. Internally this maps to the engine's message correlation builder methods MessageCorrelationBuilder#correlateWithResult() and MessageCorrelationBuilder#correlateAllWithResult() . For more information about the correlation behavior, see the Message Events section of the BPMN 2.0 Implementation Reference . URL: /message Schema: {'type': 'object', 'properties': {'messageName': {'type': 'string', 'nullable': True, 'description': 'The name of the message to deliver.'}, 'businessKey': {'type': 'string', 'nullable': True, 'description': 'Used for correlation of process instances that wait for incoming messages.\\nWill only correlate to executions that belong to a process instance with the provided business key.'}, 'tenantId': {'type': 'string', 'nullable': True, 'description': 'Used to correlate the message for a tenant with the given id.\\nWill only correlate to executions and process definitions which belong to the tenant.\\nMust not be supplied in conjunction with a withoutTenantId .'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'A Boolean value that indicates whether the message should only be correlated to executions\\nand process definitions which belong to no tenant or not. Value may only be true , as false \\nis the default behavior.\\nMust not be supplied in conjunction with a tenantId .'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Used to correlate the message to the process instance with the given id.'}, 'correlationKeys': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'Used for correlation of process instances that wait for incoming messages.\\nHas to be a JSON object containing key-value pairs that are matched against process instance variables\\nduring correlation. Each key is a variable name and each value a JSON variable value object with the\\nfollowing properties.'}, 'localCorrelationKeys': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'Local variables used for correlation of executions (process instances) that wait for incoming messages.\\nHas to be a JSON object containing key-value pairs that are matched against local variables during correlation.\\nEach key is a variable name and each value a JSON variable value object with the following properties.'}, 'processVariables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A map of variables that is injected into the triggered execution or process instance after the message\\nhas been delivered. Each key is a variable name and each value a JSON variable value object with\\nthe following properties.'}, 'processVariablesLocal': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A map of local variables that is injected into the triggered execution or process instance after the\\nmessage has been delivered. Each key is a variable name and each value a JSON variable value object\\nwith the following properties.'}, 'all': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'A Boolean value that indicates whether the message should be correlated to exactly one entity or multiple entities.\\nIf the value is set to false , the message will be correlated to exactly one entity (execution or process definition).\\nIf the value is set to true , the message will be correlated to multiple executions and a process definition that\\ncan be instantiated by this message in one go.'}, 'resultEnabled': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'A Boolean value that indicates whether the result of the correlation should be returned or not.\\nIf this property is set to true , there will be returned a list of message correlation result objects. Depending on the\\nall property, there will be either one ore more returned results in the list.\\n\\nThe default value is false , which means no result will be returned.'}, 'variablesInResultEnabled': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'A Boolean value that indicates whether the result of the correlation should contain process variables or not.\\nThe parameter resultEnabled should be set to true in order to use this it.\\n\\nThe default value is false , which means the variables will not be returned.'}}} Usage: cctl apply deliverMessage [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply evaluateCondition \u00b6 Evaluate Triggers evaluation of conditions for conditional start event(s). Internally this maps to the engines condition evaluation builder method ConditionEvaluationBuilder#evaluateStartConditions(). For more information see the Conditional Start Events section of the BPMN 2.0 Implementation Reference . URL: /condition Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A map of variables which are used for evaluation of the conditions and are injected into the process instances which have been triggered.\\nEach key is a variable name and each value a JSON variable value object with the following properties.'}, 'businessKey': {'type': 'string', 'nullable': True, 'description': 'Used for the process instances that have been triggered after the evaluation.'}, 'tenantId': {'type': 'string', 'nullable': True, 'description': 'Used to evaluate a condition for a tenant with the given id.\\nWill only evaluate conditions of process definitions which belong to the tenant.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value that indicates whether the conditions should only be evaluated of process definitions which belong to no tenant or not.\\nValue may only be true, as false is the default behavior.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Used to evaluate conditions of the process definition with the given id.'}}} Usage: cctl apply evaluateCondition [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply evaluateDecisionById \u00b6 Evaluate By Id Evaluates a given decision and returns the result. The input values of the decision have to be supplied in the request body. URL: /decision-definition/{id}/evaluate Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': ''}}} Usage: cctl apply evaluateDecisionById [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply evaluateDecisionByKey \u00b6 Evaluate By Key Evaluates the latest version of the decision definition which belongs to no tenant. The input values of the decision have to be supplied in the request body. URL: /decision-definition/key/{key}/evaluate Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': ''}}} Usage: cctl apply evaluateDecisionByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply evaluateDecisionByKeyAndTenant \u00b6 Evaluate By Key And Tenant Evaluates the latest version of the decision definition for tenant. The input values of the decision have to be supplied in the request body. URL: /decision-definition/key/{key}/tenant-id/{tenant-id}/evaluate Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': ''}}} Usage: cctl apply evaluateDecisionByKeyAndTenant [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply executeJob \u00b6 Execute Job Executes a job by id. Note: The execution of the job happens synchronously in the same thread. URL: /job/{id}/execute Schema: - Usage: cctl apply executeJob [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply executeMigrationPlan \u00b6 Execute Migration Plan Executes a migration plan synchronously for multiple process instances. To execute a migration plan asynchronously, use the Execute Migration Plan Async(Batch) method. For more information about the difference between synchronous and asynchronous execution of a migration plan, please refer to the related section of the user guide . URL: /migration/execute Schema: {'type': 'object', 'properties': {'migrationPlan': {'$ref': '#/components/schemas/MigrationPlanDto'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids to migrate.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'A boolean value to control whether execution listeners should be invoked during\\nmigration.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'A boolean value to control whether input/output mappings should be executed during\\nmigration.'}}} Usage: cctl apply executeMigrationPlan [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply executeMigrationPlanAsync \u00b6 Execute Migration Plan Async (Batch) Executes a migration plan asynchronously (batch) for multiple process instances. To execute a migration plan synchronously, use the Execute MigrationPlan method. For more information about the difference between synchronous and asynchronous execution of a migration plan, please refer to the related section of the user guide . URL: /migration/executeAsync Schema: {'type': 'object', 'properties': {'migrationPlan': {'$ref': '#/components/schemas/MigrationPlanDto'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids to migrate.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'A boolean value to control whether execution listeners should be invoked during\\nmigration.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'A boolean value to control whether input/output mappings should be executed during\\nmigration.'}}} Usage: cctl apply executeMigrationPlanAsync [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply executeModification \u00b6 Execute Modification Executes a modification synchronously for multiple process instances. To modify a single process instance, use the Modify Process Instance Execution State method. To execute a modification asynchronously, use the Execute Modification Async (Batch) method. For more information about the difference between synchronous and asynchronous execution of a modification, please refer to the related section of the user guide . URL: /modification/execute Schema: {'type': 'object', 'properties': {'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the process definition for the modification'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started or ended as part\\nof this request.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution of [input/output variable mappings](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#input-output-variable-mapping) for\\nactivities that are started or ended as part of this request.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids to modify.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'instructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/MultipleProcessInstanceModificationInstructionDto'}, 'description': 'An array of modification instructions. The instructions are executed in the order they are in. '}, 'annotation': {'type': 'string', 'nullable': True, 'description': 'An arbitrary text annotation set by a user for auditing reasons.'}}} Usage: cctl apply executeModification [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply executeModificationAsync \u00b6 Execute Modification Async (Batch) Executes a modification asynchronously for multiple process instances. To execute a modification synchronously, use the Execute Modification method. For more information about the difference between synchronous and asynchronous execution of a modification, please refer to the related section of the user guide . URL: /modification/executeAsync Schema: {'type': 'object', 'properties': {'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the process definition for the modification'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started or ended as part\\nof this request.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution of [input/output variable mappings](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#input-output-variable-mapping) for\\nactivities that are started or ended as part of this request.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids to modify.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'instructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/MultipleProcessInstanceModificationInstructionDto'}, 'description': 'An array of modification instructions. The instructions are executed in the order they are in. '}, 'annotation': {'type': 'string', 'nullable': True, 'description': 'An arbitrary text annotation set by a user for auditing reasons.'}}} Usage: cctl apply executeModificationAsync [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply extendLock \u00b6 Extend Lock Extends the timeout of the lock by a given amount of time. URL: /external-task/{id}/extendLock Schema: {'allOf': [{'type': 'object', 'properties': {'newDuration': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'An amount of time (in milliseconds). This is the new lock duration starting from the\\ncurrent moment.'}}}, {'$ref': '#/components/schemas/HandleExternalTaskDto'}]} Usage: cctl apply extendLock [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply externalTaskResourcePriority \u00b6 Set Priority Sets the priority of an existing external task by id. The default value of a priority is 0. URL: /external-task/{id}/priority Schema: {'type': 'object', 'properties': {'priority': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'The priority of the resource.'}}} Usage: cctl apply externalTaskResourcePriority [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply externalTaskResourceRetries \u00b6 Set Retries Sets the number of retries left to execute an external task by id. If retries are set to 0, an incident is created. URL: /external-task/{id}/retries Schema: {'type': 'object', 'properties': {'retries': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'The number of retries to set for the resource. Must be >= 0. If this is 0, an incident is created\\nand the task, or job, cannot be fetched, or acquired anymore unless the retries are increased again.\\nCan not be null.'}}} Usage: cctl apply externalTaskResourceRetries [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply externalTaskRetries \u00b6 Set Retries Sync Sets the number of retries left to execute external tasks by id synchronously. If retries are set to 0, an incident is created. URL: /external-task/retries Schema: {'type': 'object', 'properties': {'retries': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'The number of retries to set for the external task. Must be >= 0. If this is 0, an incident is created\\nand the task cannot be fetched anymore unless the retries are increased again. Can not be null.'}, 'externalTaskIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'The ids of the external tasks to set the number of retries for.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'The ids of process instances containing the tasks to set the number of retries for.'}, 'externalTaskQuery': {'$ref': '#/components/schemas/ExternalTaskQueryDto'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}}} Usage: cctl apply externalTaskRetries [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply externalTaskRetriesAsyncOperation \u00b6 Set Retries Async Sets the number of retries left to execute external tasks by id asynchronously. If retries are set to 0, an incident is created. URL: /external-task/retries-async Schema: {'type': 'object', 'properties': {'retries': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'The number of retries to set for the external task. Must be >= 0. If this is 0, an incident is created\\nand the task cannot be fetched anymore unless the retries are increased again. Can not be null.'}, 'externalTaskIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'The ids of the external tasks to set the number of retries for.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'The ids of process instances containing the tasks to set the number of retries for.'}, 'externalTaskQuery': {'$ref': '#/components/schemas/ExternalTaskQueryDto'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}}} Usage: cctl apply externalTaskRetriesAsyncOperation [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply fetchAndLock \u00b6 Fetch and Lock Fetches and locks a specific number of external tasks for execution by a worker. Query can be restricted to specific task topics and for each task topic an individual lock time can be provided. URL: /external-task/fetchAndLock Schema: {'type': 'object', 'required': ['workerId', 'maxTasks'], 'properties': {'workerId': {'type': 'string', 'description': '**Mandatory.** The id of the worker on which behalf tasks are fetched. The returned tasks are locked for\\nthat worker and can only be completed when providing the same worker id.'}, 'maxTasks': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': '**Mandatory.** The maximum number of tasks to return.'}, 'usePriority': {'type': 'boolean', 'nullable': True, 'description': 'A boolean value, which indicates whether the task should be fetched based on its priority\\nor arbitrarily.'}, 'asyncResponseTimeout': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'The [Long Polling](https://docs.camunda.org/manual/latest/user-guide/process-engine/external-tasks/#long-polling-to-fetch-and-lock-external-tasks)\\ntimeout in milliseconds.\\n\\n**Note:** The value cannot be set larger than 1.800.000 milliseconds (corresponds to 30 minutes).'}, 'topics': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/FetchExternalTaskTopicDto'}, 'description': 'A JSON array of topic objects for which external tasks should be fetched. The returned tasks may be\\narbitrarily distributed among these topics. Each topic object has the following properties:'}}} Usage: cctl apply fetchAndLock [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply filter \u00b6 Update Filter Updates an existing filter. URL: /filter/{id} Schema: {'type': 'object', 'properties': {'resourceType': {'type': 'string', 'nullable': True, 'description': 'The resource type of the filter.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'The name of the filter.'}, 'owner': {'type': 'string', 'nullable': True, 'description': 'The user id of the owner of the filter.'}, 'query': {'type': 'object', 'description': 'The query of the filter as a JSON object.'}, 'properties': {'type': 'object', 'description': 'The properties of a filter as a JSON object.'}}} Usage: cctl apply filter [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply generateMigrationPlan \u00b6 Generate Migration Plan Generates a migration plan for two process definitions. The generated migration plan contains migration instructions which map equal activities between the two process definitions. URL: /migration/generate Schema: {'type': 'object', 'properties': {'sourceProcessDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the source process definition for the migration.'}, 'targetProcessDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the target process definition for the migration.'}, 'updateEventTriggers': {'type': 'boolean', 'nullable': True, 'description': 'A boolean flag indicating whether instructions between events should be configured\\nto update the event triggers.'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': \"A map of variables which will be set into the process instances' scope.\\nEach key is a variable name and each value a JSON variable value object.\"}}} Usage: cctl apply generateMigrationPlan [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply group \u00b6 Update Group Updates a given group by id. URL: /group/{id} Schema: {'type': 'object', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'The id of the group.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'The name of the group.'}, 'type': {'type': 'string', 'nullable': True, 'description': 'The type of the group.'}}} Usage: cctl apply group [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply handleBpmnError \u00b6 Handle BPMN Error Reports a business error in the context of a running task by id. The error code must be specified to identify the BPMN error handler. See the documentation for Reporting Bpmn Error in User Tasks. URL: /task/{id}/bpmnError Schema: {'type': 'object', 'properties': {'errorCode': {'type': 'string', 'nullable': True, 'description': 'An error code that indicates the predefined error. It is used to identify the BPMN\\nerror handler.'}, 'errorMessage': {'type': 'string', 'nullable': True, 'description': 'An error message that describes the error.'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs.'}}} Usage: cctl apply handleBpmnError [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply handleEscalation \u00b6 Handle BPMN Escalation Reports an escalation in the context of a running task by id. The escalation code must be specified to identify the escalation handler. See the documentation for Reporting Bpmn Escalation in User Tasks. URL: /task/{id}/bpmnEscalation Schema: {'type': 'object', 'properties': {'escalationCode': {'type': 'string', 'nullable': True, 'description': 'An escalation code that indicates the predefined escalation. It is used to identify\\nthe BPMN escalation handler.'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs.'}}} Usage: cctl apply handleEscalation [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply handleExternalTaskBpmnError \u00b6 Handle BPMN Error Reports a business error in the context of a running external task by id. The error code must be specified to identify the BPMN error handler. URL: /external-task/{id}/bpmnError Schema: {'allOf': [{'type': 'object', 'properties': {'workerId': {'type': 'string', 'nullable': True, 'description': 'The id of the worker that reports the failure. Must match the id of the worker who has most recently\\nlocked the task.'}}}, {'$ref': '#/components/schemas/TaskBpmnErrorDto'}]} Usage: cctl apply handleExternalTaskBpmnError [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply handleFailure \u00b6 Handle Failure Reports a failure to execute an external task by id. A number of retries and a timeout until the task can be retried can be specified. If retries are set to 0, an incident for this task is created. URL: /external-task/{id}/failure Schema: {'allOf': [{'type': 'object', 'properties': {'errorMessage': {'type': 'string', 'nullable': True, 'description': 'An message indicating the reason of the failure.'}, 'errorDetails': {'type': 'string', 'nullable': True, 'description': 'A detailed error description.'}, 'retries': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': \"A number of how often the task should be retried. Must be >= 0. If this is 0, an incident is created and\\nthe task cannot be fetched anymore unless the retries are increased again. The incident's message is set\\nto the errorMessage parameter.\"}, 'retryTimeout': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'A timeout in milliseconds before the external task becomes available again for fetching. Must be >= 0.'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs. Each key is a variable name and each value a JSON variable value object with the following properties:'}, 'localVariables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing local variable key-value pairs. Local variables are set only in the scope of external task. Each key is a variable name and each value a JSON variable value object with the following properties:'}}}, {'$ref': '#/components/schemas/HandleExternalTaskDto'}]} Usage: cctl apply handleFailure [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply historicProcessInstancesAsync \u00b6 Delete Async (POST) Delete multiple historic process instances asynchronously (batch). At least historicProcessInstanceIds or historicProcessInstanceQuery has to be provided. If both are provided then all instances matching query criterion and instances from the list will be deleted. URL: /history/process-instance/delete Schema: {'type': 'object', 'properties': {'historicProcessInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list historic process instance ids to delete.'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}, 'deleteReason': {'type': 'string', 'nullable': True, 'description': 'A string with delete reason.'}, 'failIfNotExists': {'type': 'boolean', 'nullable': True, 'description': 'If set to false , the request will still be successful if one ore more of the process ids are not found.'}}} Usage: cctl apply historicProcessInstancesAsync [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply historyTimeToLiveByDecisionDefinitionId \u00b6 Update History Time to Live Updates history time to live for decision definition. The field is used within History cleanup . URL: /decision-definition/{id}/history-time-to-live Schema: {'type': 'object', 'properties': {'historyTimeToLive': {'type': 'integer', 'format': 'int32', 'nullable': True, 'minimum': 0, 'description': 'New value for historyTimeToLive field of the definition.\\nCan be null . Can not be negative.'}}} Usage: cctl apply historyTimeToLiveByDecisionDefinitionId [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply historyTimeToLiveByDecisionDefinitionKey \u00b6 Update History Time to Live By Key Updates the latest version of the decision definition which belongs to no tenant. The field is used within History cleanup . URL: /decision-definition/key/{key}/history-time-to-live Schema: {'type': 'object', 'properties': {'historyTimeToLive': {'type': 'integer', 'format': 'int32', 'nullable': True, 'minimum': 0, 'description': 'New value for historyTimeToLive field of the definition.\\nCan be null . Can not be negative.'}}} Usage: cctl apply historyTimeToLiveByDecisionDefinitionKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply historyTimeToLiveByDecisionDefinitionKeyAndTenant \u00b6 Update History Time to Live By Key And Tenant Updates the latest version of the decision definition for tenant. The field is used within History cleanup . URL: /decision-definition/key/{key}/tenant-id/{tenant-id}/history-time-to-live Schema: {'type': 'object', 'properties': {'historyTimeToLive': {'type': 'integer', 'format': 'int32', 'nullable': True, 'minimum': 0, 'description': 'New value for historyTimeToLive field of the definition.\\nCan be null . Can not be negative.'}}} Usage: cctl apply historyTimeToLiveByDecisionDefinitionKeyAndTenant [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply historyTimeToLiveByProcessDefinitionId \u00b6 Update History Time to Live Updates history time to live for process definition. The field is used within History cleanup . URL: /process-definition/{id}/history-time-to-live Schema: {'type': 'object', 'properties': {'historyTimeToLive': {'type': 'integer', 'format': 'int32', 'nullable': True, 'minimum': 0, 'description': 'New value for historyTimeToLive field of the definition.\\nCan be null . Can not be negative.'}}} Usage: cctl apply historyTimeToLiveByProcessDefinitionId [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply historyTimeToLiveByProcessDefinitionKey \u00b6 Update History Time to Live Updates history time to live for the latest version of the process definition which belongs to no tenant. The field is used within History cleanup . URL: /process-definition/key/{key}/history-time-to-live Schema: {'type': 'object', 'properties': {'historyTimeToLive': {'type': 'integer', 'format': 'int32', 'nullable': True, 'minimum': 0, 'description': 'New value for historyTimeToLive field of the definition.\\nCan be null . Can not be negative.'}}} Usage: cctl apply historyTimeToLiveByProcessDefinitionKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply historyTimeToLiveByProcessDefinitionKeyAndTenantId \u00b6 Update History Time to Live Updates history time to live for the latest version of the process definition for a tenant. The field is used within History cleanup . URL: /process-definition/key/{key}/tenant-id/{tenant-id}/history-time-to-live Schema: {'type': 'object', 'properties': {'historyTimeToLive': {'type': 'integer', 'format': 'int32', 'nullable': True, 'minimum': 0, 'description': 'New value for historyTimeToLive field of the definition.\\nCan be null . Can not be negative.'}}} Usage: cctl apply historyTimeToLiveByProcessDefinitionKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply identityLink \u00b6 Delete Removes an identity link from a task by id URL: /task/{id}/identity-links/delete Schema: {'type': 'object', 'required': ['type'], 'properties': {'userId': {'type': 'string', 'nullable': True, 'description': 'The id of the user participating in this link. Either userId or groupId is set.'}, 'groupId': {'type': 'string', 'nullable': True, 'description': 'The id of the group participating in this link. Either groupId or userId is set.'}, 'type': {'type': 'string', 'nullable': True, 'description': 'The type of the identity link. The value of the this property can be user-defined. The Process Engine\\nprovides three pre-defined Identity Link type s:\\n\\n* candidate \\n* assignee - reserved for the task assignee\\n* owner - reserved for the task owner\\n\\n**Note**: When adding or removing an Identity Link, the type property must be defined.'}}} Usage: cctl apply identityLink [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply incidentAnnotation \u00b6 Set Incident Annotation Sets the annotation of an incident with given id. URL: /incident/{id}/annotation Schema: {'type': 'object', 'properties': {'annotation': {'type': 'string', 'nullable': True, 'description': 'The annotation value to put.'}}} Usage: cctl apply incidentAnnotation [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply jobDuedate \u00b6 Set Job Due Date Updates the due date of a job by id. URL: /job/{id}/duedate Schema: {'type': 'object', 'properties': {'duedate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': 'The date to set when the job has the next execution.'}, 'cascade': {'type': 'boolean', 'nullable': True, 'description': 'A boolean value to indicate if modifications to the due date should cascade to\\nsubsequent jobs. (e.g. Modify the due date of a timer by +15\\nminutes. This flag indicates if a +15 minutes should be applied to all\\nsubsequent timers.) This flag only affects timer jobs and only works if due date\\nis not null. Default: false '}}} Usage: cctl apply jobDuedate [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply jobPriority \u00b6 Set Job Priority Sets the execution priority of a job by id. URL: /job/{id}/priority Schema: {'type': 'object', 'properties': {'priority': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'The priority of the resource.'}}} Usage: cctl apply jobPriority [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply jobPriorityJobDefinition \u00b6 Set Job Definition Priority by Id Sets an overriding execution priority for jobs with the given definition id. Optionally, the priorities of all the definitions' existing jobs are updated accordingly. The priority can be reset by setting it to null , meaning that a new job's priority will not be determined based on its definition's priority any longer. See the user guide on job prioritization for details. URL: /job-definition/{id}/jobPriority Schema: {'type': 'object', 'properties': {'priority': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': \"The new execution priority number for jobs of the given definition. The\\ndefinition's priority can be reset by using the value null . In\\nthat case, the job definition's priority no longer applies but a new\\njob's priority is determined as specified in the process model.\"}, 'includeJobs': {'type': 'boolean', 'nullable': True, 'description': 'A boolean value indicating whether existing jobs of the given definition should\\nreceive the priority as well. Default value is false . Can only be\\n true when the __priority__ parameter is not null .'}}} Usage: cctl apply jobPriorityJobDefinition [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply jobRetries \u00b6 Set Job Retries Sets the retries of the job to the given number of retries by id. URL: /job/{id}/retries Schema: {'type': 'object', 'properties': {'retries': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'The number of retries to set for the resource. Must be >= 0. If this is 0, an incident is created\\nand the task, or job, cannot be fetched, or acquired anymore unless the retries are increased again.\\nCan not be null.'}}} Usage: cctl apply jobRetries [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply jobRetriesAsyncOperation \u00b6 Set Job Retries Async (POST) Create a batch to set retries of jobs asynchronously. URL: /job/retries Schema: {'type': 'object', 'description': 'Defines the number of retries for a selection of jobs.\\nPlease note that if both jobIds and jobQuery are provided,\\nthen retries will be set on the union of these sets.', 'properties': {'jobIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of job ids to set retries for.'}, 'jobQuery': {'$ref': '#/components/schemas/JobQueryDto'}, 'retries': {'type': 'integer', 'format': 'int32', 'nullable': True, 'minimum': 0, 'description': 'An integer representing the number of retries. Please note that the value cannot be\\nnegative or null.'}}} Usage: cctl apply jobRetriesAsyncOperation [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply jobRetriesJobDefinition \u00b6 Set Job Retries By Job Definition Id Sets the number of retries of all failed jobs associated with the given job definition id. URL: /job-definition/{id}/retries Schema: {'type': 'object', 'properties': {'retries': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'The number of retries to set for the resource. Must be >= 0. If this is 0, an incident is created\\nand the task, or job, cannot be fetched, or acquired anymore unless the retries are increased again.\\nCan not be null.'}}} Usage: cctl apply jobRetriesJobDefinition [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply jobSuspensionState \u00b6 Activate/Suspend Job By Id Activates or suspends a given job by id. URL: /job/{id}/suspended Schema: {'type': 'object', 'properties': {'suspended': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend a given instance \\n(e.g. process instance, job, job definition, or batch). When the value is set to true, \\nthe given instance will be suspended and when the value is set to false, \\nthe given instance will be activated.'}}} Usage: cctl apply jobSuspensionState [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply localExecutionVariableBinary \u00b6 Post Local Execution Variable (Binary) Sets the serialized value for a binary variable or the binary value for a file variable in the context of a given execution by id. URL: /execution/{id}/localVariables/{varName}/data Schema: - Usage: cctl apply localExecutionVariableBinary [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply lock \u00b6 Lock an external task by a given id for a specified worker and amount of time. URL: /external-task/{id}/lock Schema: {'allOf': [{'type': 'object', 'properties': {'lockDuration': {'type': 'integer', 'format': 'int64', 'description': 'The duration to lock the external task for in milliseconds.\\n**Note:** Attempting to lock an already locked external task with the same workerId \\nwill succeed and a new lock duration will be set, starting from the current moment.'}}}, {'$ref': '#/components/schemas/HandleExternalTaskDto'}]} Usage: cctl apply lock [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply modifyLocalExecutionVariables \u00b6 Update/Delete Local Execution Variables Updates or deletes the variables in the context of an execution by id. The updates do not propagate upwards in the execution hierarchy. Updates precede deletions. So, if a variable is updated AND deleted, the deletion overrides the update. URL: /execution/{id}/localVariables Schema: {'type': 'object', 'properties': {'modifications': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs.'}, 'deletions': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'An array of String keys of variables to be deleted.'}}} Usage: cctl apply modifyLocalExecutionVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply modifyProcessInstance \u00b6 Modify Process Instance Execution State Submits a list of modification instructions to change a process instance's execution state. A modification instruction is one of the following: Starting execution before an activity Starting execution after an activity on its single outgoing sequence flow Starting execution on a specific sequence flow Canceling an activity instance, transition instance, or all instances (activity or transition) for an activity Instructions are executed immediately and in the order they are provided in this request's body. Variables can be provided with every starting instruction. The exact semantics of modification can be read about in the User guide . URL: /process-instance/{id}/modification Schema: {'type': 'object', 'properties': {'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started or ended as part of this request.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution of [input/output variable mappings](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#input-output-variable-mapping)\\nfor activities that are started or ended as part of this request.'}, 'instructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/ProcessInstanceModificationInstructionDto'}, 'description': 'JSON array of modification instructions. The instructions are executed in the order they are in.'}, 'annotation': {'type': 'string', 'nullable': True, 'description': 'An arbitrary text annotation set by a user for auditing reasons.'}}} Usage: cctl apply modifyProcessInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply modifyProcessInstanceAsyncOperation \u00b6 Modify Process Instance Execution State Async Submits a list of modification instructions to change a process instance's execution state async. A modification instruction is one of the following: Starting execution before an activity Starting execution after an activity on its single outgoing sequence flow Starting execution on a specific sequence flow Cancelling an activity instance, transition instance, or all instances (activity or transition) for an activity Instructions are executed asynchronous and in the order they are provided in this request's body. Variables can be provided with every starting instruction. The exact semantics of modification can be read about in the User guide . URL: /process-instance/{id}/modification-async Schema: {'type': 'object', 'properties': {'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started or ended as part of this request.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution of [input/output variable mappings](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#input-output-variable-mapping)\\nfor activities that are started or ended as part of this request.'}, 'instructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/ProcessInstanceModificationInstructionDto'}, 'description': 'JSON array of modification instructions. The instructions are executed in the order they are in.'}, 'annotation': {'type': 'string', 'nullable': True, 'description': 'An arbitrary text annotation set by a user for auditing reasons.'}}} Usage: cctl apply modifyProcessInstanceAsyncOperation [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply modifyProcessInstanceVariables \u00b6 Update/Delete Process Variables Updates or deletes the variables of a process instance by id. Updates precede deletions. So, if a variable is updated AND deleted, the deletion overrides the update. URL: /process-instance/{id}/variables Schema: {'type': 'object', 'properties': {'modifications': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs.'}, 'deletions': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'An array of String keys of variables to be deleted.'}}} Usage: cctl apply modifyProcessInstanceVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply modifyTaskLocalVariables \u00b6 Update/Delete Local Task Variables Updates or deletes the variables in the context of a task. Updates precede deletions. So, if a variable is updated AND deleted, the deletion overrides the update. URL: /task/{id}/localVariables Schema: {'type': 'object', 'properties': {'modifications': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs.'}, 'deletions': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'An array of String keys of variables to be deleted.'}}} Usage: cctl apply modifyTaskLocalVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply modifyTaskVariables \u00b6 Update/Delete Task Variables Updates or deletes the variables visible from the task. Updates precede deletions. So, if a variable is updated AND deleted, the deletion overrides the update. A variable is visible from the task if it is a local task variable or declared in a parent scope of the task. See documentation on visiblity of variables . URL: /task/{id}/variables Schema: {'type': 'object', 'properties': {'modifications': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs.'}, 'deletions': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'An array of String keys of variables to be deleted.'}}} Usage: cctl apply modifyTaskVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply postExecuteFilterCount \u00b6 Execute Filter Count (POST) Executes the saved query of the filter by id and returns the count. This method is slightly more powerful then the Get Execute Filter Count method because it allows to extend the saved query of the filter. URL: /filter/{id}/count Schema: - Usage: cctl apply postExecuteFilterCount [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply postExecuteFilterList \u00b6 Execute Filter List (POST) Executes the saved query of the filter by id and returns the result list. This method is slightly more powerful then the Get Execute FilterList method because it allows to extend the saved query of the filter. URL: /filter/{id}/list Schema: - Usage: cctl apply postExecuteFilterList [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply postExecuteFilterSingleResult \u00b6 Execute Filter Single Result (POST) Executes the saved query of the filter by id and returns the single result. This method is slightly more powerful then the Get Execute Filter Single Result method because it allows to extend the saved query of the filter. URL: /filter/{id}/singleResult Schema: - Usage: cctl apply postExecuteFilterSingleResult [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply postQueryGroups \u00b6 Get List (POST) Queries for a list of groups using a list of parameters. The size of the result set can be retrieved by using the Get Group Count (POST) method. URL: /group Schema: {'type': 'object', 'description': 'A group instance query which defines a list of group instances', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the group.'}, 'idIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a JSON string array of group ids.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'Filter by the name of the group.'}, 'nameLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the name that the parameter is a substring of.'}, 'type': {'type': 'string', 'nullable': True, 'description': 'Filter by the type of the group.'}, 'member': {'type': 'string', 'nullable': True, 'description': 'Only retrieve groups where the given user id is a member of.'}, 'memberOfTenant': {'type': 'string', 'nullable': True, 'description': 'Only retrieve groups which are members of the given tenant.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['id', 'name', 'type'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply postQueryGroups [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply processDefinitionSuspensionState \u00b6 Activate/Suspend By Key Activates or suspends process definitions with the given process definition key. URL: /process-definition/suspended Schema: {'type': 'object', 'properties': {'suspended': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend all process definitions with the given key.\\nWhen the value is set to true , all process definitions with the given key will be suspended and\\nwhen the value is set to false , all process definitions with the given key will be activated.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the process definitions to activate or suspend.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'The key of the process definitions to activate or suspend.'}, 'includeProcessInstances': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend also all process instances of \\nthe process definitions with the given key.\\nWhen the value is set to true , all process instances of the process definitions with the given key\\nwill be activated or suspended and when the value is set to false , the suspension state of \\nall process instances of the process definitions with the given key will not be updated.'}, 'executionDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The date on which all process definitions with the given key will be activated or suspended.\\nIf null , the suspension state of all process definitions with the given key is updated immediately.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}}} Usage: cctl apply processDefinitionSuspensionState [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply processDefinitionSuspensionStateById \u00b6 Activate/Suspend By Id Activates or suspends a given process definition by id. URL: /process-definition/{id}/suspended Schema: {'type': 'object', 'properties': {'suspended': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend all process definitions with the given key.\\nWhen the value is set to true , all process definitions with the given key will be suspended and\\nwhen the value is set to false , all process definitions with the given key will be activated.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the process definitions to activate or suspend.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'The key of the process definitions to activate or suspend.'}, 'includeProcessInstances': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend also all process instances of \\nthe process definitions with the given key.\\nWhen the value is set to true , all process instances of the process definitions with the given key\\nwill be activated or suspended and when the value is set to false , the suspension state of \\nall process instances of the process definitions with the given key will not be updated.'}, 'executionDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The date on which all process definitions with the given key will be activated or suspended.\\nIf null , the suspension state of all process definitions with the given key is updated immediately.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}}} Usage: cctl apply processDefinitionSuspensionStateById [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply processDefinitionSuspensionStateByKey \u00b6 Activate/Suspend by Id Activates or suspends a given process definition by latest version of process definition key which belongs to no tenant. URL: /process-definition/key/{key}/suspended Schema: {'type': 'object', 'properties': {'suspended': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend all process definitions with the given key.\\nWhen the value is set to true , all process definitions with the given key will be suspended and\\nwhen the value is set to false , all process definitions with the given key will be activated.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the process definitions to activate or suspend.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'The key of the process definitions to activate or suspend.'}, 'includeProcessInstances': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend also all process instances of \\nthe process definitions with the given key.\\nWhen the value is set to true , all process instances of the process definitions with the given key\\nwill be activated or suspended and when the value is set to false , the suspension state of \\nall process instances of the process definitions with the given key will not be updated.'}, 'executionDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The date on which all process definitions with the given key will be activated or suspended.\\nIf null , the suspension state of all process definitions with the given key is updated immediately.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}}} Usage: cctl apply processDefinitionSuspensionStateByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply processDefinitionSuspensionStateByKeyAndTenantId \u00b6 Activate/Suspend by Id Activates or suspends a given process definition by the latest version of the process definition for tenant. URL: /process-definition/key/{key}/tenant-id/{tenant-id}/suspended Schema: {'type': 'object', 'properties': {'suspended': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend all process definitions with the given key.\\nWhen the value is set to true , all process definitions with the given key will be suspended and\\nwhen the value is set to false , all process definitions with the given key will be activated.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the process definitions to activate or suspend.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'The key of the process definitions to activate or suspend.'}, 'includeProcessInstances': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend also all process instances of \\nthe process definitions with the given key.\\nWhen the value is set to true , all process instances of the process definitions with the given key\\nwill be activated or suspended and when the value is set to false , the suspension state of \\nall process instances of the process definitions with the given key will not be updated.'}, 'executionDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The date on which all process definitions with the given key will be activated or suspended.\\nIf null , the suspension state of all process definitions with the given key is updated immediately.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}}} Usage: cctl apply processDefinitionSuspensionStateByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply processInstanceVariable \u00b6 Update Process Variable Sets a variable of a given process instance by id. URL: /process-instance/{id}/variables/{varName} Schema: {'type': 'object', 'properties': {'value': {'$ref': '#/components/schemas/AnyValue'}, 'type': {'type': 'string', 'nullable': True, 'description': 'The value type of the variable.'}, 'valueInfo': {'type': 'object', 'additionalProperties': True, 'description': \"A JSON object containing additional, value-type-dependent properties.\\nFor serialized variables of type Object, the following properties can be provided:\\n\\n* objectTypeName : A string representation of the object's type name.\\n* serializationDataFormat : The serialization format used to store the variable.\\n\\nFor serialized variables of type File, the following properties can be provided:\\n\\n* filename : The name of the file. This is not the variable name but the name that will be used when downloading the file again.\\n* mimetype : The MIME type of the file that is being uploaded.\\n* encoding : The encoding of the file that is being uploaded.\\n\\nThe following property can be provided for all value types:\\n\\n* transient : Indicates whether the variable should be transient or\\nnot. See [documentation](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables#transient-variables) for more informations.\\n(Not applicable for decision-definition , /process-instance/variables-async , and /migration/executeAsync endpoints)\"}}} Usage: cctl apply processInstanceVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply processInstanceVariableBinary \u00b6 Update Process Variable (Binary) Sets the serialized value for a binary variable or the binary value for a file variable. URL: /process-instance/{id}/variables/{varName}/data Schema: - Usage: cctl apply processInstanceVariableBinary [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply processInstancesAsyncOperation \u00b6 Delete Async (POST) Deletes multiple process instances asynchronously (batch). URL: /process-instance/delete Schema: {'type': 'object', 'properties': {'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list process instance ids to delete.'}, 'deleteReason': {'type': 'string', 'nullable': True, 'description': 'A string with delete reason.'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started or ended as part of this request.'}, 'skipSubprocesses': {'type': 'boolean', 'nullable': True, 'description': 'Skip deletion of the subprocesses related to deleted processes as part of this request.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}}} Usage: cctl apply processInstancesAsyncOperation [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply profile \u00b6 Update User Profile Updates the profile information of an already existing user. URL: /user/{id}/profile Schema: {'type': 'object', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'The id of the user.'}, 'firstName': {'type': 'string', 'nullable': True, 'description': 'The first name of the user.'}, 'lastName': {'type': 'string', 'nullable': True, 'description': 'The first name of the user.'}, 'email': {'type': 'string', 'nullable': True, 'description': 'The email of the user.'}}} Usage: cctl apply profile [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply putLocalExecutionVariable \u00b6 Put Local Execution Variable Sets a variable in the context of a given execution by id. Update does not propagate upwards in the execution hierarchy. URL: /execution/{id}/localVariables/{varName} Schema: {'type': 'object', 'properties': {'value': {'$ref': '#/components/schemas/AnyValue'}, 'type': {'type': 'string', 'nullable': True, 'description': 'The value type of the variable.'}, 'valueInfo': {'type': 'object', 'additionalProperties': True, 'description': \"A JSON object containing additional, value-type-dependent properties.\\nFor serialized variables of type Object, the following properties can be provided:\\n\\n* objectTypeName : A string representation of the object's type name.\\n* serializationDataFormat : The serialization format used to store the variable.\\n\\nFor serialized variables of type File, the following properties can be provided:\\n\\n* filename : The name of the file. This is not the variable name but the name that will be used when downloading the file again.\\n* mimetype : The MIME type of the file that is being uploaded.\\n* encoding : The encoding of the file that is being uploaded.\\n\\nThe following property can be provided for all value types:\\n\\n* transient : Indicates whether the variable should be transient or\\nnot. See [documentation](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables#transient-variables) for more informations.\\n(Not applicable for decision-definition , /process-instance/variables-async , and /migration/executeAsync endpoints)\"}}} Usage: cctl apply putLocalExecutionVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply putTaskLocalVariable \u00b6 Update Local Task Variable Sets a variable in the context of a given task. URL: /task/{id}/localVariables/{varName} Schema: {'type': 'object', 'properties': {'value': {'$ref': '#/components/schemas/AnyValue'}, 'type': {'type': 'string', 'nullable': True, 'description': 'The value type of the variable.'}, 'valueInfo': {'type': 'object', 'additionalProperties': True, 'description': \"A JSON object containing additional, value-type-dependent properties.\\nFor serialized variables of type Object, the following properties can be provided:\\n\\n* objectTypeName : A string representation of the object's type name.\\n* serializationDataFormat : The serialization format used to store the variable.\\n\\nFor serialized variables of type File, the following properties can be provided:\\n\\n* filename : The name of the file. This is not the variable name but the name that will be used when downloading the file again.\\n* mimetype : The MIME type of the file that is being uploaded.\\n* encoding : The encoding of the file that is being uploaded.\\n\\nThe following property can be provided for all value types:\\n\\n* transient : Indicates whether the variable should be transient or\\nnot. See [documentation](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables#transient-variables) for more informations.\\n(Not applicable for decision-definition , /process-instance/variables-async , and /migration/executeAsync endpoints)\"}}} Usage: cctl apply putTaskLocalVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply putTaskVariable \u00b6 Update Task Variable Updates a process variable that is visible from the Task scope. A variable is visible from the task if it is a local task variable, or declared in a parent scope of the task. See the documentation on variable scopes and visibility . Note : If a variable doesn't exist, the variable is created in the top-most scope visible from the task. URL: /task/{id}/variables/{varName} Schema: {'type': 'object', 'properties': {'value': {'$ref': '#/components/schemas/AnyValue'}, 'type': {'type': 'string', 'nullable': True, 'description': 'The value type of the variable.'}, 'valueInfo': {'type': 'object', 'additionalProperties': True, 'description': \"A JSON object containing additional, value-type-dependent properties.\\nFor serialized variables of type Object, the following properties can be provided:\\n\\n* objectTypeName : A string representation of the object's type name.\\n* serializationDataFormat : The serialization format used to store the variable.\\n\\nFor serialized variables of type File, the following properties can be provided:\\n\\n* filename : The name of the file. This is not the variable name but the name that will be used when downloading the file again.\\n* mimetype : The MIME type of the file that is being uploaded.\\n* encoding : The encoding of the file that is being uploaded.\\n\\nThe following property can be provided for all value types:\\n\\n* transient : Indicates whether the variable should be transient or\\nnot. See [documentation](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables#transient-variables) for more informations.\\n(Not applicable for decision-definition , /process-instance/variables-async , and /migration/executeAsync endpoints)\"}}} Usage: cctl apply putTaskVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryExecutions \u00b6 Get Executions (POST) Queries for executions that fulfill given parameters through a JSON object. This method is slightly more powerful than the Get Executions method because it allows to filter by multiple instance and execution variables of types String , Number or Boolean . URL: /execution Schema: {'type': 'object', 'description': 'A Execution instance query which defines a list of Execution instances', 'properties': {'businessKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the business key of the process instances the executions belong to.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process definition the executions run on.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the key of the process definition the executions run on.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the process instance the execution belongs to.'}, 'activityId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the activity the execution currently executes.'}, 'signalEventSubscriptionName': {'type': 'string', 'nullable': True, 'description': 'Select only those executions that expect a signal of the given name.'}, 'messageEventSubscriptionName': {'type': 'string', 'nullable': True, 'description': 'Select only those executions that expect a message of the given name.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active executions. Value may only be true , as false is the default\\nbehavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended executions. Value may only be true , as false is the default\\nbehavior.'}, 'incidentId': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident id.'}, 'incidentType': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident type. See the [User Guide](/manual/develop/user-guide/process-engine/incidents/#incident-types) for a list of incident types.'}, 'incidentMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message. Exact match.'}, 'incidentMessageLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message that the parameter is a substring of.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of tenant ids. An execution must have one of the given\\ntenant ids.'}, 'variables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'An array to only include executions that have variables with certain values.\\n\\nThe array consists of objects with the three properties name , operator \\nand value .\\n name (String) is the variable name, operator (String) is the comparison\\noperator to be used and value the variable value.\\n value may be String , Number or Boolean .\\n\\nValid operator values are: eq - equal to; neq - not equal to; gt -\\ngreater than;\\n gteq - greater than or equal to; lt - lower than; lteq - lower than or\\nequal to;\\n like .'}, 'processVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'An array to only include executions that belong to a process instance with variables\\nwith certain values.\\n\\nThe array consists of objects with the three properties name , operator \\nand value .\\n name (String) is the variable name, operator (String) is the comparison\\noperator to be used and value the variable value.\\n value may be String , Number or Boolean .\\n\\nValid operator values are: eq - equal to; neq - not equal to.'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable names provided in variables and processVariables case-\\ninsensitively. If set to true **variableName** and **variablename** are\\ntreated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable values provided in variables and processVariables case-\\ninsensitively. If set to true **variableValue** and **variablevalue** are\\ntreated as equal.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Has no effect for the /count endpoint', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'definitionKey', 'definitionId', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryExecutions [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryExecutionsCount \u00b6 Get Execution Count (POST) Queries for the number of executions that fulfill given parameters. This method takes the same message body as the Get Executions POST method and therefore it is slightly more powerful than the Get Execution Count method. URL: /execution/count Schema: {'type': 'object', 'description': 'A Execution instance query which defines a list of Execution instances', 'properties': {'businessKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the business key of the process instances the executions belong to.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process definition the executions run on.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the key of the process definition the executions run on.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the process instance the execution belongs to.'}, 'activityId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the activity the execution currently executes.'}, 'signalEventSubscriptionName': {'type': 'string', 'nullable': True, 'description': 'Select only those executions that expect a signal of the given name.'}, 'messageEventSubscriptionName': {'type': 'string', 'nullable': True, 'description': 'Select only those executions that expect a message of the given name.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active executions. Value may only be true , as false is the default\\nbehavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended executions. Value may only be true , as false is the default\\nbehavior.'}, 'incidentId': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident id.'}, 'incidentType': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident type. See the [User Guide](/manual/develop/user-guide/process-engine/incidents/#incident-types) for a list of incident types.'}, 'incidentMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message. Exact match.'}, 'incidentMessageLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message that the parameter is a substring of.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of tenant ids. An execution must have one of the given\\ntenant ids.'}, 'variables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'An array to only include executions that have variables with certain values.\\n\\nThe array consists of objects with the three properties name , operator \\nand value .\\n name (String) is the variable name, operator (String) is the comparison\\noperator to be used and value the variable value.\\n value may be String , Number or Boolean .\\n\\nValid operator values are: eq - equal to; neq - not equal to; gt -\\ngreater than;\\n gteq - greater than or equal to; lt - lower than; lteq - lower than or\\nequal to;\\n like .'}, 'processVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'An array to only include executions that belong to a process instance with variables\\nwith certain values.\\n\\nThe array consists of objects with the three properties name , operator \\nand value .\\n name (String) is the variable name, operator (String) is the comparison\\noperator to be used and value the variable value.\\n value may be String , Number or Boolean .\\n\\nValid operator values are: eq - equal to; neq - not equal to.'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable names provided in variables and processVariables case-\\ninsensitively. If set to true **variableName** and **variablename** are\\ntreated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable values provided in variables and processVariables case-\\ninsensitively. If set to true **variableValue** and **variablevalue** are\\ntreated as equal.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Has no effect for the /count endpoint', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'definitionKey', 'definitionId', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryExecutionsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryExternalTasks \u00b6 Get List (POST) Queries for external tasks that fulfill given parameters in the form of a JSON object. This method is slightly more powerful than the Get External Tasks method because it allows to specify a hierarchical result sorting. URL: /external-task Schema: {'title': 'ExternalTaskQueryDto', 'type': 'object', 'description': 'A JSON object with the following properties:', 'properties': {'externalTaskId': {'type': 'string', 'nullable': True, 'description': \"Filter by an external task's id.\"}, 'externalTaskIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by the comma-separated list of external task ids.'}, 'topicName': {'type': 'string', 'nullable': True, 'description': 'Filter by an external task topic.'}, 'workerId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the worker that the task was most recently locked by.'}, 'locked': {'type': 'boolean', 'nullable': True, 'description': 'Only include external tasks that are currently locked (i.e., they have a lock time and it has not expired).\\nValue may only be true , as false matches any external task.'}, 'notLocked': {'type': 'boolean', 'nullable': True, 'description': 'Only include external tasks that are currently not locked (i.e., they have no lock or it has expired).\\nValue may only be true , as false matches any external task.'}, 'withRetriesLeft': {'type': 'boolean', 'nullable': True, 'description': 'Only include external tasks that have a positive (&gt; 0) number of retries (or null ). Value may only be\\n true , as false matches any external task.'}, 'noRetriesLeft': {'type': 'boolean', 'nullable': True, 'description': 'Only include external tasks that have 0 retries. Value may only be true , as false matches any\\nexternal task.'}, 'lockExpirationAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to external tasks that have a lock that expires after a given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'lockExpirationBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to external tasks that have a lock that expires before a given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'activityId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the activity that an external task is created for.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by the comma-separated list of ids of the activities that an external task is created for.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the execution that an external task belongs to.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the process instance that an external task belongs to.'}, 'processInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a comma-separated list of process instance ids that an external task may belong to.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the process definition that an external task belongs to.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a comma-separated list of tenant ids.\\nAn external task must have one of the given tenant ids.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active tasks. Value may only be true , as false matches any external task.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended tasks. Value may only be true , as false matches any external task.'}, 'priorityHigherThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include jobs with a priority higher than or equal to the given value.\\nValue must be a valid long value.'}, 'priorityLowerThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include jobs with a priority lower than or equal to the given value.\\nValue must be a valid long value.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'A JSON array of criteria to sort the result by. Each element of the array is a JSON object that\\n specifies one ordering. The position in the array identifies the rank of an ordering, i.e., whether\\n it is primary, secondary, etc. The ordering objects have the following properties:\\n\\n **Note:** The sorting properties will not be applied to the External Task count query.', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['id', 'lockExpirationTime', 'processInstanceId', 'processDefinitionId', 'processDefinitionKey', 'taskPriority', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryExternalTasks [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryExternalTasksCount \u00b6 Get List Count (POST) Queries for the number of external tasks that fulfill given parameters. This method takes the same message body as the Get External Tasks (POST) method. URL: /external-task/count Schema: {'title': 'ExternalTaskQueryDto', 'type': 'object', 'description': 'A JSON object with the following properties:', 'properties': {'externalTaskId': {'type': 'string', 'nullable': True, 'description': \"Filter by an external task's id.\"}, 'externalTaskIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by the comma-separated list of external task ids.'}, 'topicName': {'type': 'string', 'nullable': True, 'description': 'Filter by an external task topic.'}, 'workerId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the worker that the task was most recently locked by.'}, 'locked': {'type': 'boolean', 'nullable': True, 'description': 'Only include external tasks that are currently locked (i.e., they have a lock time and it has not expired).\\nValue may only be true , as false matches any external task.'}, 'notLocked': {'type': 'boolean', 'nullable': True, 'description': 'Only include external tasks that are currently not locked (i.e., they have no lock or it has expired).\\nValue may only be true , as false matches any external task.'}, 'withRetriesLeft': {'type': 'boolean', 'nullable': True, 'description': 'Only include external tasks that have a positive (&gt; 0) number of retries (or null ). Value may only be\\n true , as false matches any external task.'}, 'noRetriesLeft': {'type': 'boolean', 'nullable': True, 'description': 'Only include external tasks that have 0 retries. Value may only be true , as false matches any\\nexternal task.'}, 'lockExpirationAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to external tasks that have a lock that expires after a given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'lockExpirationBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to external tasks that have a lock that expires before a given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'activityId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the activity that an external task is created for.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by the comma-separated list of ids of the activities that an external task is created for.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the execution that an external task belongs to.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the process instance that an external task belongs to.'}, 'processInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a comma-separated list of process instance ids that an external task may belong to.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the process definition that an external task belongs to.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a comma-separated list of tenant ids.\\nAn external task must have one of the given tenant ids.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active tasks. Value may only be true , as false matches any external task.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended tasks. Value may only be true , as false matches any external task.'}, 'priorityHigherThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include jobs with a priority higher than or equal to the given value.\\nValue must be a valid long value.'}, 'priorityLowerThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include jobs with a priority lower than or equal to the given value.\\nValue must be a valid long value.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'A JSON array of criteria to sort the result by. Each element of the array is a JSON object that\\n specifies one ordering. The position in the array identifies the rank of an ordering, i.e., whether\\n it is primary, secondary, etc. The ordering objects have the following properties:\\n\\n **Note:** The sorting properties will not be applied to the External Task count query.', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['id', 'lockExpirationTime', 'processInstanceId', 'processDefinitionId', 'processDefinitionKey', 'taskPriority', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryExternalTasksCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryGroupCount \u00b6 Get List Count (POST) Queries for groups using a list of parameters and retrieves the count. URL: /group/count Schema: {'type': 'object', 'description': 'A group instance query which defines a list of group instances', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the group.'}, 'idIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a JSON string array of group ids.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'Filter by the name of the group.'}, 'nameLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the name that the parameter is a substring of.'}, 'type': {'type': 'string', 'nullable': True, 'description': 'Filter by the type of the group.'}, 'member': {'type': 'string', 'nullable': True, 'description': 'Only retrieve groups where the given user id is a member of.'}, 'memberOfTenant': {'type': 'string', 'nullable': True, 'description': 'Only retrieve groups which are members of the given tenant.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['id', 'name', 'type'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryGroupCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryHistoricActivityInstances \u00b6 Get List (POST) Queries for historic activity instances that fulfill the given parameters. The size of the result set can be retrieved by using the Get Historic Activity Instance Count method. URL: /history/activity-instance Schema: {'type': 'object', 'description': 'A historic activity instance query which defines a group of historic activity instances', 'properties': {'activityInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by activity instance id.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition id.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the execution that executed the activity instance.'}, 'activityId': {'type': 'string', 'nullable': True, 'description': 'Filter by the activity id (according to BPMN 2.0 XML).'}, 'activityName': {'type': 'string', 'nullable': True, 'description': 'Filter by the activity name (according to BPMN 2.0 XML).'}, 'activityType': {'type': 'string', 'nullable': True, 'description': 'Filter by activity type.'}, 'taskAssignee': {'type': 'string', 'nullable': True, 'description': 'Only include activity instances that are user tasks and assigned to a given user.'}, 'finished': {'type': 'boolean', 'nullable': True, 'description': 'Only include finished activity instances.\\nValue may only be true , as false behaves the same as when the property is not set.'}, 'unfinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include unfinished activity instances.\\nValue may only be true , as false behaves the same as when the property is not set.'}, 'canceled': {'type': 'boolean', 'nullable': True, 'description': 'Only include canceled activity instances.\\nValue may only be true , as false behaves the same as when the property is not set.'}, 'completeScope': {'type': 'boolean', 'nullable': True, 'description': 'Only include activity instances which completed a scope.\\nValue may only be true , as false behaves the same as when the property is not set.'}, 'startedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were started before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were started after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were finished before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were finished after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Must be a JSON array of Strings. An activity instance must have one of the given tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic activity instances that belong to no tenant. Value may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['activityInstanceId', 'instanceId', 'executionId', 'activityId', 'activityName', 'activityType', 'startTime', 'endTime', 'duration', 'definitionId', 'occurrence', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryHistoricActivityInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryHistoricActivityInstancesCount \u00b6 Get List Count (POST) Queries for the number of historic activity instances that fulfill the given parameters. URL: /history/activity-instance/count Schema: {'type': 'object', 'description': 'A historic activity instance query which defines a group of historic activity instances', 'properties': {'activityInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by activity instance id.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition id.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the execution that executed the activity instance.'}, 'activityId': {'type': 'string', 'nullable': True, 'description': 'Filter by the activity id (according to BPMN 2.0 XML).'}, 'activityName': {'type': 'string', 'nullable': True, 'description': 'Filter by the activity name (according to BPMN 2.0 XML).'}, 'activityType': {'type': 'string', 'nullable': True, 'description': 'Filter by activity type.'}, 'taskAssignee': {'type': 'string', 'nullable': True, 'description': 'Only include activity instances that are user tasks and assigned to a given user.'}, 'finished': {'type': 'boolean', 'nullable': True, 'description': 'Only include finished activity instances.\\nValue may only be true , as false behaves the same as when the property is not set.'}, 'unfinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include unfinished activity instances.\\nValue may only be true , as false behaves the same as when the property is not set.'}, 'canceled': {'type': 'boolean', 'nullable': True, 'description': 'Only include canceled activity instances.\\nValue may only be true , as false behaves the same as when the property is not set.'}, 'completeScope': {'type': 'boolean', 'nullable': True, 'description': 'Only include activity instances which completed a scope.\\nValue may only be true , as false behaves the same as when the property is not set.'}, 'startedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were started before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were started after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were finished before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were finished after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Must be a JSON array of Strings. An activity instance must have one of the given tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic activity instances that belong to no tenant. Value may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['activityInstanceId', 'instanceId', 'executionId', 'activityId', 'activityName', 'activityType', 'startTime', 'endTime', 'duration', 'definitionId', 'occurrence', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryHistoricActivityInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryHistoricDetails \u00b6 Get Historic Details (POST) Queries for historic details that fulfill the given parameters. This method is slightly more powerful than the Get Historic Details method because it allows sorting by multiple parameters. The size of the result set can be retrieved by using the Get Historic Detail Count method. URL: /history/detail Schema: {'type': 'object', 'description': 'A historic detail query which defines a group of historic details.', 'properties': {'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic details which belong to one of the passed process instance ids.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Filter by execution id.'}, 'taskId': {'type': 'string', 'nullable': True, 'description': 'Filter by task id.'}, 'activityInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by activity instance id.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by case instance id.'}, 'caseExecutionId': {'type': 'string', 'nullable': True, 'description': 'Filter by case execution id.'}, 'variableInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by variable instance id.'}, 'variableTypeIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic details where the variable updates belong to one of the passed \\nlist of variable types. A list of all supported variable types can be found\\n[here](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#supported-variable-values).\\n**Note:** All non-primitive variables are associated with the type serializable .'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic details that belong to no tenant. Value may only be\\n true , as false is the default behavior.'}, 'userOperationId': {'type': 'string', 'nullable': True, 'description': 'Filter by a user operation id.'}, 'formFields': {'type': 'boolean', 'nullable': True, 'description': 'Only include HistoricFormFields . Value may only be true , as false is the default behavior.'}, 'variableUpdates': {'type': 'boolean', 'nullable': True, 'description': 'Only include HistoricVariableUpdates . Value may only be true , as false is the default behavior.'}, 'excludeTaskDetails': {'type': 'boolean', 'nullable': True, 'description': 'Excludes all task-related HistoricDetails , so only items which have no task id set will be selected.\\nWhen this parameter is used together with taskId , this call is ignored and task details are not excluded.\\nValue may only be true , as false is the default behavior.'}, 'initial': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to historic variable updates that contain only initial variable values.\\nValue may only be true , as false is the default behavior.'}, 'occurredBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to historic details that occured before the given date (including the date).\\nDefault [format](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200.\"}, 'occurredAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to historic details that occured after the given date (including the date).\\nDefault [format](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200.\"}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'A JSON array of criteria to sort the result by. Each element of the array is\\n a JSON object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Does not have an effect for the count endpoint.', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['processInstanceId', 'variableName', 'variableType', 'variableRevision', 'formPropertyId', 'time', 'occurrence', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryHistoricDetails [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --max-results | text | Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. | None | | --first-result | text | Pagination of results. Specifies the index of the first result to return. | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -o , --output | choice ( template ) | N/A | template | | --skip-validation | boolean | ignore validation | False | | -f , --file | filename | input as yaml | None | | --help | boolean | Show this message and exit. | False | cctl apply queryHistoricExternalTaskLogs \u00b6 Get External Task Logs (POST) Queries for historic external task logs that fulfill the given parameters. This method is slightly more powerful than the Get External Task Logs method because it allows filtering by historic external task logs values of the different types String , Number or Boolean . URL: /history/external-task-log Schema: {'type': 'object', 'description': 'A Historic External Task Log instance query which defines a list of Historic External Task Log instances', 'properties': {'logId': {'type': 'string', 'nullable': True, 'description': 'Filter by historic external task log id.'}, 'externalTaskId': {'type': 'string', 'nullable': True, 'description': 'Filter by external task id.'}, 'topicName': {'type': 'string', 'nullable': True, 'description': 'Filter by an external task topic.'}, 'workerId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the worker that the task was most recently locked by.'}, 'errorMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by external task exception message.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic external task logs which belong to one of the passed activity ids.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic external task logs which belong to one of the passed activity\\ninstance ids.'}, 'executionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic external task logs which belong to one of the passed execution ids.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition key.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic external task log entries which belong to one of the passed and\\ncomma-separated tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic external task log entries that belong to no tenant. Value may only\\nbe true , as false is the default behavior.'}, 'priorityLowerThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include logs for which the associated external task had a priority lower than or\\nequal to the given value. Value must be a valid long value.'}, 'priorityHigherThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include logs for which the associated external task had a priority higher than or\\nequal to the given value. Value must be a valid long value.'}, 'creationLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include creation logs. Value may only be true , as false is the default behavior.'}, 'failureLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include failure logs. Value may only be true , as false is the default behavior.'}, 'successLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include success logs. Value may only be true , as false is the default behavior.'}, 'deletionLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include deletion logs. Value may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints.', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['timestamp', 'externalTaskId', 'topicName', 'workerId', 'retries', 'priority', 'activityId', 'activityInstanceId', 'executionId', 'processInstanceId', 'processDefinitionId', 'processDefinitionKey', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryHistoricExternalTaskLogs [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryHistoricExternalTaskLogsCount \u00b6 Get External Task Log Count (POST) Queries for the number of historic external task logs that fulfill the given parameters. This method takes the same message body as the Get External Task Logs (POST) method and therefore it is slightly more powerful than the Get External Task Log Count method. URL: /history/external-task-log/count Schema: {'type': 'object', 'description': 'A Historic External Task Log instance query which defines a list of Historic External Task Log instances', 'properties': {'logId': {'type': 'string', 'nullable': True, 'description': 'Filter by historic external task log id.'}, 'externalTaskId': {'type': 'string', 'nullable': True, 'description': 'Filter by external task id.'}, 'topicName': {'type': 'string', 'nullable': True, 'description': 'Filter by an external task topic.'}, 'workerId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the worker that the task was most recently locked by.'}, 'errorMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by external task exception message.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic external task logs which belong to one of the passed activity ids.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic external task logs which belong to one of the passed activity\\ninstance ids.'}, 'executionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic external task logs which belong to one of the passed execution ids.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition key.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic external task log entries which belong to one of the passed and\\ncomma-separated tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic external task log entries that belong to no tenant. Value may only\\nbe true , as false is the default behavior.'}, 'priorityLowerThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include logs for which the associated external task had a priority lower than or\\nequal to the given value. Value must be a valid long value.'}, 'priorityHigherThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include logs for which the associated external task had a priority higher than or\\nequal to the given value. Value must be a valid long value.'}, 'creationLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include creation logs. Value may only be true , as false is the default behavior.'}, 'failureLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include failure logs. Value may only be true , as false is the default behavior.'}, 'successLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include success logs. Value may only be true , as false is the default behavior.'}, 'deletionLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include deletion logs. Value may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints.', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['timestamp', 'externalTaskId', 'topicName', 'workerId', 'retries', 'priority', 'activityId', 'activityInstanceId', 'executionId', 'processInstanceId', 'processDefinitionId', 'processDefinitionKey', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryHistoricExternalTaskLogsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryHistoricJobLogs \u00b6 Get Job Logs (POST) Queries for historic job logs that fulfill the given parameters. This method is slightly more powerful than the Get Job Logs method because it allows filtering by historic job logs values of the different types String , Number or Boolean . URL: /history/job-log Schema: {'type': 'object', 'description': 'A Historic Job Log instance query which defines a list of Historic Job Log instances', 'properties': {'logId': {'type': 'string', 'nullable': True, 'description': 'Filter by historic job log id.'}, 'jobId': {'type': 'string', 'nullable': True, 'description': 'Filter by job id.'}, 'jobExceptionMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by job exception message.'}, 'jobDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by job definition id.'}, 'jobDefinitionType': {'type': 'string', 'nullable': True, 'description': 'Filter by job definition type. See the\\n[User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/the-job-executor/#job-creation)\\nfor more information about job definition types.'}, 'jobDefinitionConfiguration': {'type': 'string', 'nullable': True, 'description': 'Filter by job definition configuration.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic job logs which belong to one of the passed activity ids.'}, 'failedActivityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic job logs which belong to failures of one of the passed activity ids.'}, 'executionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic job logs which belong to one of the passed execution ids.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition key.'}, 'deploymentId': {'type': 'string', 'nullable': True, 'description': 'Filter by deployment id.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic job log entries which belong to one of the passed and comma-\\nseparated tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic job log entries that belong to no tenant. Value may only be\\n true , as false is the default behavior.'}, 'hostname': {'type': 'string', 'nullable': True, 'description': 'Filter by hostname.'}, 'jobPriorityLowerThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include logs for which the associated job had a priority lower than or equal to the\\ngiven value. Value must be a valid long value.'}, 'jobPriorityHigherThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include logs for which the associated job had a priority higher than or equal to the\\ngiven value. Value must be a valid long value.'}, 'creationLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include creation logs. Value may only be true , as false is the default behavior.'}, 'failureLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include failure logs. Value may only be true , as false is the default behavior.'}, 'successLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include success logs. Value may only be true , as false is the default behavior.'}, 'deletionLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include deletion logs. Value may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['timestamp', 'jobId', 'jobDefinitionId', 'jobDueDate', 'jobRetries', 'jobPriority', 'activityId', 'executionId', 'processInstanceId', 'processDefinitionId', 'processDefinitionKey', 'deploymentId', 'hostname', 'occurrence', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryHistoricJobLogs [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryHistoricJobLogsCount \u00b6 Get Job Log Count (POST) Queries for the number of historic job logs that fulfill the given parameters. This method takes the same message body as the Get Job Logs (POST) method and therefore it is slightly more powerful than the Get Job Log Count method. URL: /history/job-log/count Schema: {'type': 'object', 'description': 'A Historic Job Log instance query which defines a list of Historic Job Log instances', 'properties': {'logId': {'type': 'string', 'nullable': True, 'description': 'Filter by historic job log id.'}, 'jobId': {'type': 'string', 'nullable': True, 'description': 'Filter by job id.'}, 'jobExceptionMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by job exception message.'}, 'jobDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by job definition id.'}, 'jobDefinitionType': {'type': 'string', 'nullable': True, 'description': 'Filter by job definition type. See the\\n[User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/the-job-executor/#job-creation)\\nfor more information about job definition types.'}, 'jobDefinitionConfiguration': {'type': 'string', 'nullable': True, 'description': 'Filter by job definition configuration.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic job logs which belong to one of the passed activity ids.'}, 'failedActivityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic job logs which belong to failures of one of the passed activity ids.'}, 'executionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic job logs which belong to one of the passed execution ids.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition key.'}, 'deploymentId': {'type': 'string', 'nullable': True, 'description': 'Filter by deployment id.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic job log entries which belong to one of the passed and comma-\\nseparated tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic job log entries that belong to no tenant. Value may only be\\n true , as false is the default behavior.'}, 'hostname': {'type': 'string', 'nullable': True, 'description': 'Filter by hostname.'}, 'jobPriorityLowerThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include logs for which the associated job had a priority lower than or equal to the\\ngiven value. Value must be a valid long value.'}, 'jobPriorityHigherThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include logs for which the associated job had a priority higher than or equal to the\\ngiven value. Value must be a valid long value.'}, 'creationLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include creation logs. Value may only be true , as false is the default behavior.'}, 'failureLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include failure logs. Value may only be true , as false is the default behavior.'}, 'successLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include success logs. Value may only be true , as false is the default behavior.'}, 'deletionLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include deletion logs. Value may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['timestamp', 'jobId', 'jobDefinitionId', 'jobDueDate', 'jobRetries', 'jobPriority', 'activityId', 'executionId', 'processInstanceId', 'processDefinitionId', 'processDefinitionKey', 'deploymentId', 'hostname', 'occurrence', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryHistoricJobLogsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryHistoricProcessInstances \u00b6 Get List (POST) Queries for historic process instances that fulfill the given parameters. This method is slightly more powerful than the Get Process Instance because it allows filtering by multiple process variables of types String , Number or Boolean . URL: /history/process-instance Schema: {'type': 'object', 'description': 'A historic process instance query which defines a group of historic process instances', 'properties': {'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by process instance ids. Must be a JSON array of Strings .'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process definition the instances run on.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the key of the process definition the instances run on.'}, 'processDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of process definition keys. A process instance must have one of the given process definition keys. Must be a JSON array of Strings .'}, 'processDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Filter by the name of the process definition the instances run on.'}, 'processDefinitionNameLike': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition names that the parameter is a substring of.'}, 'processDefinitionKeyNotIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Exclude instances that belong to a set of process definitions. Must be a JSON array of Strings .'}, 'processInstanceBusinessKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key.'}, 'processInstanceBusinessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key that the parameter is a substring of.'}, 'rootProcessInstances': {'type': 'boolean', 'nullable': True, 'description': 'Restrict the query to all process instances that are top level process instances.'}, 'finished': {'type': 'boolean', 'nullable': True, 'description': 'Only include finished process instances. This flag includes all process instances\\nthat are completed or terminated. Value may only be true , as false is the default behavior.'}, 'unfinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include unfinished process instances. Value may only be true , as false is the default behavior.'}, 'withIncidents': {'type': 'boolean', 'nullable': True, 'description': 'Only include process instances which have an incident. Value may only be true , as false is the default behavior.'}, 'withRootIncidents': {'type': 'boolean', 'nullable': True, 'description': 'Only include process instances which have a root incident. Value may only be true , as false is the default behavior.'}, 'incidentType': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident type. See the [User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/incidents/#incident-types) for a list of incident types.'}, 'incidentStatus': {'type': 'string', 'nullable': True, 'enum': ['open', 'resolved'], 'description': 'Only include process instances which have an incident in status either open or resolved. To get all process instances, use the query parameter withIncidents.'}, 'incidentMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message. Exact match.'}, 'incidentMessageLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message that the parameter is a substring of.'}, 'startedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were started before the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were started after the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were finished before the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were finished after the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'executedActivityAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that executed an activity after the given date (inclusive).\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'executedActivityBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that executed an activity before the given date (inclusive).\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'executedJobAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that executed an job after the given date (inclusive).\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'executedJobBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that executed an job before the given date (inclusive).\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedBy': {'type': 'string', 'nullable': True, 'description': 'Only include process instances that were started by the given user.'}, 'superProcessInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given process instance. Takes a process instance id.'}, 'subProcessInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to one process instance that has a sub process instance with the given id.'}, 'superCaseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id.'}, 'subCaseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to one process instance that has a sub case instance with the given id.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of tenant ids. A process instance must have one of the given tenant ids. Must be a JSON array of Strings '}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic process instances which belong to no tenant. Value may only be true , as false is the default behavior.'}, 'executedActivityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to instances that executed an activity with one of given ids. Must be a JSON array of Strings '}, 'activeActivityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to instances that have an active activity with one of given ids. Must be a JSON array of Strings '}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are active.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are suspended.'}, 'completed': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are completed.'}, 'externallyTerminated': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are externallyTerminated.'}, 'internallyTerminated': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are internallyTerminated.'}, 'variables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include process instances that have/had variables with certain values.\\nThe array consists of objects with the three properties name , operator and value . name ( String ) is the variable name,\\n operator ( String ) is the comparison operator to be used and value the variable value.\\n\\nValue may be String , Number or Boolean .\\n\\nValid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like .\\n'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable names provided in variables case-insensitively. If set to true variableName and variablename are treated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable values provided in variables case-insensitively. If set to true variableValue and variablevalue are treated as equal.'}, 'orQueries': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}, 'description': \"A JSON array of nested historic process instance queries with OR semantics.\\n\\nA process instance matches a nested query if it fulfills at least one of the query's predicates.\\n\\nWith multiple nested queries, a process instance must fulfill at least one predicate of each query\\n([Conjunctive Normal Form](https://en.wikipedia.org/wiki/Conjunctive_normal_form)).\\n\\nAll process instance query properties can be used except for: sorting \\n\\nSee the [User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/process-engine-api/#or-queries) for more information about OR queries.\"}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'definitionId', 'definitionKey', 'definitionName', 'definitionVersion', 'businessKey', 'startTime', 'endTime', 'duration', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryHistoricProcessInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryHistoricProcessInstancesCount \u00b6 Get List Count (POST) Queries for the number of historic process instances that fulfill the given parameters. This method takes the same message body as the Get Process Instances (POST) method and therefore it is slightly more powerful than the Get Process Instance Count method. URL: /history/process-instance/count Schema: {'type': 'object', 'description': 'A historic process instance query which defines a group of historic process instances', 'properties': {'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by process instance ids. Must be a JSON array of Strings .'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process definition the instances run on.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the key of the process definition the instances run on.'}, 'processDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of process definition keys. A process instance must have one of the given process definition keys. Must be a JSON array of Strings .'}, 'processDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Filter by the name of the process definition the instances run on.'}, 'processDefinitionNameLike': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition names that the parameter is a substring of.'}, 'processDefinitionKeyNotIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Exclude instances that belong to a set of process definitions. Must be a JSON array of Strings .'}, 'processInstanceBusinessKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key.'}, 'processInstanceBusinessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key that the parameter is a substring of.'}, 'rootProcessInstances': {'type': 'boolean', 'nullable': True, 'description': 'Restrict the query to all process instances that are top level process instances.'}, 'finished': {'type': 'boolean', 'nullable': True, 'description': 'Only include finished process instances. This flag includes all process instances\\nthat are completed or terminated. Value may only be true , as false is the default behavior.'}, 'unfinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include unfinished process instances. Value may only be true , as false is the default behavior.'}, 'withIncidents': {'type': 'boolean', 'nullable': True, 'description': 'Only include process instances which have an incident. Value may only be true , as false is the default behavior.'}, 'withRootIncidents': {'type': 'boolean', 'nullable': True, 'description': 'Only include process instances which have a root incident. Value may only be true , as false is the default behavior.'}, 'incidentType': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident type. See the [User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/incidents/#incident-types) for a list of incident types.'}, 'incidentStatus': {'type': 'string', 'nullable': True, 'enum': ['open', 'resolved'], 'description': 'Only include process instances which have an incident in status either open or resolved. To get all process instances, use the query parameter withIncidents.'}, 'incidentMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message. Exact match.'}, 'incidentMessageLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message that the parameter is a substring of.'}, 'startedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were started before the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were started after the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were finished before the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were finished after the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'executedActivityAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that executed an activity after the given date (inclusive).\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'executedActivityBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that executed an activity before the given date (inclusive).\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'executedJobAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that executed an job after the given date (inclusive).\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'executedJobBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that executed an job before the given date (inclusive).\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedBy': {'type': 'string', 'nullable': True, 'description': 'Only include process instances that were started by the given user.'}, 'superProcessInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given process instance. Takes a process instance id.'}, 'subProcessInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to one process instance that has a sub process instance with the given id.'}, 'superCaseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id.'}, 'subCaseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to one process instance that has a sub case instance with the given id.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of tenant ids. A process instance must have one of the given tenant ids. Must be a JSON array of Strings '}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic process instances which belong to no tenant. Value may only be true , as false is the default behavior.'}, 'executedActivityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to instances that executed an activity with one of given ids. Must be a JSON array of Strings '}, 'activeActivityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to instances that have an active activity with one of given ids. Must be a JSON array of Strings '}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are active.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are suspended.'}, 'completed': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are completed.'}, 'externallyTerminated': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are externallyTerminated.'}, 'internallyTerminated': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are internallyTerminated.'}, 'variables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include process instances that have/had variables with certain values.\\nThe array consists of objects with the three properties name , operator and value . name ( String ) is the variable name,\\n operator ( String ) is the comparison operator to be used and value the variable value.\\n\\nValue may be String , Number or Boolean .\\n\\nValid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like .\\n'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable names provided in variables case-insensitively. If set to true variableName and variablename are treated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable values provided in variables case-insensitively. If set to true variableValue and variablevalue are treated as equal.'}, 'orQueries': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}, 'description': \"A JSON array of nested historic process instance queries with OR semantics.\\n\\nA process instance matches a nested query if it fulfills at least one of the query's predicates.\\n\\nWith multiple nested queries, a process instance must fulfill at least one predicate of each query\\n([Conjunctive Normal Form](https://en.wikipedia.org/wiki/Conjunctive_normal_form)).\\n\\nAll process instance query properties can be used except for: sorting \\n\\nSee the [User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/process-engine-api/#or-queries) for more information about OR queries.\"}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'definitionId', 'definitionKey', 'definitionName', 'definitionVersion', 'businessKey', 'startTime', 'endTime', 'duration', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryHistoricProcessInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryHistoricTaskInstances \u00b6 Get Tasks (Historic) (POST) Queries for historic tasks that fulfill the given parameters. This method is slightly more powerful than the Get Tasks (Historic) method because it allows filtering by multiple process or task variables of types String , Number or Boolean . The size of the result set can be retrieved by using the Get Task Count (POST) method. URL: /history/task Schema: {'type': 'object', 'description': 'A Historic Task instance query which defines a list of Historic Task instances', 'properties': {'taskId': {'type': 'string', 'nullable': True, 'description': 'Filter by task id.'}, 'taskParentTaskId': {'type': 'string', 'nullable': True, 'description': 'Filter by parent task id.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processInstanceBusinessKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key.'}, 'processInstanceBusinessKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by process instances with one of the give business keys.\\nThe keys need to be in a comma-separated list.'}, 'processInstanceBusinessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key that has the parameter value as a substring.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the execution that executed the task.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given key.'}, 'processDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given name.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by case instance id.'}, 'caseExecutionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the case execution that executed the task.'}, 'caseDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by case definition id.'}, 'caseDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given key.'}, 'caseDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given name.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which belong to one of the passed activity instance ids.'}, 'taskName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given name.'}, 'taskNameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a name with the given parameter value as substring.'}, 'taskDescription': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given description.'}, 'taskDescriptionLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a description that has the parameter value as a substring.'}, 'taskDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given key.'}, 'taskDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that have one of the passed task definition keys.'}, 'taskDeleteReason': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given delete reason.'}, 'taskDeleteReasonLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a delete reason that has the parameter value as a substring.'}, 'taskAssignee': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the given user is assigned to.'}, 'taskAssigneeLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are assigned to users with the parameter value as a substring.'}, 'taskOwner': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the given user owns.'}, 'taskOwnerLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are owned by users with the parameter value as a substring.'}, 'taskPriority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'Restrict to tasks that have the given priority.'}, 'assigned': {'type': 'boolean', 'nullable': True, 'description': 'If set to true , restricts the query to all tasks that are assigned.'}, 'unassigned': {'type': 'boolean', 'nullable': True, 'description': 'If set to true , restricts the query to all tasks that are unassigned.'}, 'finished': {'type': 'boolean', 'nullable': True, 'description': 'Only include finished tasks. Value may only be true , as false is the default behavior.'}, 'unfinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include unfinished tasks. Value may only be true , as false is the default\\nbehavior.'}, 'processFinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks of finished processes. Value may only be true , as false is the\\ndefault behavior.'}, 'processUnfinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks of unfinished processes. Value may only be true , as false is the\\ndefault behavior.'}, 'taskDueDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due on the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'taskDueDateBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'taskDueDateAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'withoutTaskDueDate': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks which have no due date. Value may only be true , as false is the\\ndefault behavior.'}, 'taskFollowUpDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date on the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'taskFollowUpDateBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'taskFollowUpDateAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were started before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were started after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were finished before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were finished after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of tenant ids. A task instance must have one of the given\\ntenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic task instances that belong to no tenant. Value may only be\\n true , as false is the default behavior.'}, 'taskVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'Only include tasks that have variables with certain values. Variable filtering expressions are\\ncomma-separated and are structured as follows:\\n\\nA valid parameter value has the form key_operator_value .\\n key is the variable name, operator is the comparison operator to be used\\nand value the variable value.\\n**Note:** Values are always treated as String objects on server side.\\n\\n\\nValid operator values are:\\n* eq - equal to;\\n* neq - not equal to;\\n* gt - greater than;\\n* gteq - greater than or equal to;\\n* lt - lower than;\\n* lteq - lower than or equal to;\\n* like .\\n\\n key and value may not contain underscore or comma characters.'}, 'processVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'Only include tasks that belong to process instances that have variables with certain\\nvalues. Variable filtering expressions are comma-separated and are structured as\\nfollows:\\n\\nA valid parameter value has the form key_operator_value .\\n key is the variable name, operator is the comparison operator to be used\\nand value the variable value.\\n**Note:** Values are always treated as String objects on server side.\\n\\n\\nValid operator values are:\\n* eq - equal to;\\n* neq - not equal to;\\n* gt - greater than;\\n* gteq - greater than or equal to;\\n* lt - lower than;\\n* lteq - lower than or equal to;\\n* like ;\\n* notLike .\\n\\n key and value may not contain underscore or comma characters.'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match the variable name provided in taskVariables and processVariables case-\\ninsensitively. If set to true **variableName** and **variablename** are\\ntreated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match the variable value provided in taskVariables and processVariables case-\\ninsensitively. If set to true **variableValue** and **variablevalue** are\\ntreated as equal.'}, 'taskInvolvedUser': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks with a historic identity link to the given user.'}, 'taskInvolvedGroup': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks with a historic identity link to the given group.'}, 'taskHadCandidateUser': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks with a historic identity link to the given candidate user.'}, 'taskHadCandidateGroup': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks with a historic identity link to the given candidate group.'}, 'withCandidateGroups': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks which have a candidate group. Value may only be true ,\\nas false is the default behavior.'}, 'withoutCandidateGroups': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks which have no candidate group. Value may only be true ,\\nas false is the default behavior.'}, 'orQueries': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/HistoricTaskInstanceQueryDto'}, 'description': \"A JSON array of nested historic task instance queries with OR semantics.\\n\\nA task instance matches a nested query if it fulfills at least one of the query's predicates.\\n\\nWith multiple nested queries, a task instance must fulfill at least one predicate of each query\\n([Conjunctive Normal Form](https://en.wikipedia.org/wiki/Conjunctive_normal_form)).\\n\\nAll task instance query properties can be used except for: sorting , withCandidateGroups , withoutCandidateGroups .\\n\\nSee the [User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/process-engine-api/#or-queries) for more information about OR queries.\"}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['taskId', 'activityInstanceId', 'processDefinitionId', 'processInstanceId', 'executionId', 'duration', 'endTime', 'startTime', 'taskName', 'taskDescription', 'assignee', 'owner', 'dueDate', 'followUpDate', 'deleteReason', 'taskDefinitionKey', 'priority', 'caseDefinitionId', 'caseInstanceId', 'caseExecutionId', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryHistoricTaskInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryHistoricTaskInstancesCount \u00b6 Get Task Count (POST) Queries for the number of historic tasks that fulfill the given parameters. Takes the same parameters as the Get Tasks (Historic) method. Corresponds to the size of the result set of the Get Tasks (Historic) (POST) method and takes the same parameters. URL: /history/task/count Schema: {'type': 'object', 'description': 'A Historic Task instance query which defines a list of Historic Task instances', 'properties': {'taskId': {'type': 'string', 'nullable': True, 'description': 'Filter by task id.'}, 'taskParentTaskId': {'type': 'string', 'nullable': True, 'description': 'Filter by parent task id.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processInstanceBusinessKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key.'}, 'processInstanceBusinessKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by process instances with one of the give business keys.\\nThe keys need to be in a comma-separated list.'}, 'processInstanceBusinessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key that has the parameter value as a substring.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the execution that executed the task.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given key.'}, 'processDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given name.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by case instance id.'}, 'caseExecutionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the case execution that executed the task.'}, 'caseDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by case definition id.'}, 'caseDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given key.'}, 'caseDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given name.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which belong to one of the passed activity instance ids.'}, 'taskName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given name.'}, 'taskNameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a name with the given parameter value as substring.'}, 'taskDescription': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given description.'}, 'taskDescriptionLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a description that has the parameter value as a substring.'}, 'taskDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given key.'}, 'taskDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that have one of the passed task definition keys.'}, 'taskDeleteReason': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given delete reason.'}, 'taskDeleteReasonLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a delete reason that has the parameter value as a substring.'}, 'taskAssignee': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the given user is assigned to.'}, 'taskAssigneeLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are assigned to users with the parameter value as a substring.'}, 'taskOwner': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the given user owns.'}, 'taskOwnerLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are owned by users with the parameter value as a substring.'}, 'taskPriority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'Restrict to tasks that have the given priority.'}, 'assigned': {'type': 'boolean', 'nullable': True, 'description': 'If set to true , restricts the query to all tasks that are assigned.'}, 'unassigned': {'type': 'boolean', 'nullable': True, 'description': 'If set to true , restricts the query to all tasks that are unassigned.'}, 'finished': {'type': 'boolean', 'nullable': True, 'description': 'Only include finished tasks. Value may only be true , as false is the default behavior.'}, 'unfinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include unfinished tasks. Value may only be true , as false is the default\\nbehavior.'}, 'processFinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks of finished processes. Value may only be true , as false is the\\ndefault behavior.'}, 'processUnfinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks of unfinished processes. Value may only be true , as false is the\\ndefault behavior.'}, 'taskDueDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due on the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'taskDueDateBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'taskDueDateAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'withoutTaskDueDate': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks which have no due date. Value may only be true , as false is the\\ndefault behavior.'}, 'taskFollowUpDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date on the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'taskFollowUpDateBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'taskFollowUpDateAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were started before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were started after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were finished before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were finished after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of tenant ids. A task instance must have one of the given\\ntenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic task instances that belong to no tenant. Value may only be\\n true , as false is the default behavior.'}, 'taskVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'Only include tasks that have variables with certain values. Variable filtering expressions are\\ncomma-separated and are structured as follows:\\n\\nA valid parameter value has the form key_operator_value .\\n key is the variable name, operator is the comparison operator to be used\\nand value the variable value.\\n**Note:** Values are always treated as String objects on server side.\\n\\n\\nValid operator values are:\\n* eq - equal to;\\n* neq - not equal to;\\n* gt - greater than;\\n* gteq - greater than or equal to;\\n* lt - lower than;\\n* lteq - lower than or equal to;\\n* like .\\n\\n key and value may not contain underscore or comma characters.'}, 'processVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'Only include tasks that belong to process instances that have variables with certain\\nvalues. Variable filtering expressions are comma-separated and are structured as\\nfollows:\\n\\nA valid parameter value has the form key_operator_value .\\n key is the variable name, operator is the comparison operator to be used\\nand value the variable value.\\n**Note:** Values are always treated as String objects on server side.\\n\\n\\nValid operator values are:\\n* eq - equal to;\\n* neq - not equal to;\\n* gt - greater than;\\n* gteq - greater than or equal to;\\n* lt - lower than;\\n* lteq - lower than or equal to;\\n* like ;\\n* notLike .\\n\\n key and value may not contain underscore or comma characters.'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match the variable name provided in taskVariables and processVariables case-\\ninsensitively. If set to true **variableName** and **variablename** are\\ntreated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match the variable value provided in taskVariables and processVariables case-\\ninsensitively. If set to true **variableValue** and **variablevalue** are\\ntreated as equal.'}, 'taskInvolvedUser': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks with a historic identity link to the given user.'}, 'taskInvolvedGroup': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks with a historic identity link to the given group.'}, 'taskHadCandidateUser': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks with a historic identity link to the given candidate user.'}, 'taskHadCandidateGroup': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks with a historic identity link to the given candidate group.'}, 'withCandidateGroups': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks which have a candidate group. Value may only be true ,\\nas false is the default behavior.'}, 'withoutCandidateGroups': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks which have no candidate group. Value may only be true ,\\nas false is the default behavior.'}, 'orQueries': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/HistoricTaskInstanceQueryDto'}, 'description': \"A JSON array of nested historic task instance queries with OR semantics.\\n\\nA task instance matches a nested query if it fulfills at least one of the query's predicates.\\n\\nWith multiple nested queries, a task instance must fulfill at least one predicate of each query\\n([Conjunctive Normal Form](https://en.wikipedia.org/wiki/Conjunctive_normal_form)).\\n\\nAll task instance query properties can be used except for: sorting , withCandidateGroups , withoutCandidateGroups .\\n\\nSee the [User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/process-engine-api/#or-queries) for more information about OR queries.\"}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['taskId', 'activityInstanceId', 'processDefinitionId', 'processInstanceId', 'executionId', 'duration', 'endTime', 'startTime', 'taskName', 'taskDescription', 'assignee', 'owner', 'dueDate', 'followUpDate', 'deleteReason', 'taskDefinitionKey', 'priority', 'caseDefinitionId', 'caseInstanceId', 'caseExecutionId', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryHistoricTaskInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryHistoricVariableInstances \u00b6 Get Variable Instances (POST) Queries for historic variable instances that fulfill the given parameters. This method is slightly more powerful than the Get Variable Instances method because it allows filtering by variable values of the different types String , Number or Boolean . URL: /history/variable-instance Schema: {'type': 'object', 'description': 'A Historic Variable Instance instance query which defines a list of Historic Variable Instance instances', 'properties': {'variableName': {'type': 'string', 'nullable': True, 'description': 'Filter by variable name.'}, 'variableNameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to variables with a name like the parameter.'}, 'variableValue': {'type': 'object', 'description': 'Filter by variable value. May be String , Number or Boolean .'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match the variable name provided in variableName and variableNameLike case-\\ninsensitively. If set to true **variableName** and **variablename** are\\ntreated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match the variable value provided in variableValue case-insensitively. If set to true \\n**variableValue** and **variablevalue** are treated as equal.'}, 'variableTypeIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': \"Only include historic variable instances which belong to one of the passed and comma-\\nseparated variable types. A list of all supported variable types can be found\\n[here](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#supported-variable-values).\\n**Note:** All non-primitive variables are associated with the type\\n'serializable'.\"}, 'includeDeleted': {'type': 'boolean', 'nullable': True, 'description': 'Include variables that has already been deleted during the execution.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process instance the variable belongs to.'}, 'processInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed process instance ids.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process definition the variable belongs to.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by a key of the process definition the variable belongs to.'}, 'executionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and execution ids.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by the case instance the variable belongs to.'}, 'caseExecutionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and case execution ids.'}, 'caseActivityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and case activity ids.'}, 'taskIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and task ids.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and activity instance ids.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and comma-\\nseparated tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic variable instances that belong to no tenant. Value may only be\\n true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'variableName', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryHistoricVariableInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --max-results | text | Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. | None | | --first-result | text | Pagination of results. Specifies the index of the first result to return. | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -o , --output | choice ( template ) | N/A | template | | --skip-validation | boolean | ignore validation | False | | -f , --file | filename | input as yaml | None | | --help | boolean | Show this message and exit. | False | cctl apply queryHistoricVariableInstancesCount \u00b6 Get Variable Instance Count (POST) Queries for historic variable instances that fulfill the given parameters. This method takes the same message body as the Get Variable Instances (POST) method and therefore it is more powerful regarding variable values than the Get Variable Instance Count method. URL: /history/variable-instance/count Schema: {'type': 'object', 'description': 'A Historic Variable Instance instance query which defines a list of Historic Variable Instance instances', 'properties': {'variableName': {'type': 'string', 'nullable': True, 'description': 'Filter by variable name.'}, 'variableNameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to variables with a name like the parameter.'}, 'variableValue': {'type': 'object', 'description': 'Filter by variable value. May be String , Number or Boolean .'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match the variable name provided in variableName and variableNameLike case-\\ninsensitively. If set to true **variableName** and **variablename** are\\ntreated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match the variable value provided in variableValue case-insensitively. If set to true \\n**variableValue** and **variablevalue** are treated as equal.'}, 'variableTypeIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': \"Only include historic variable instances which belong to one of the passed and comma-\\nseparated variable types. A list of all supported variable types can be found\\n[here](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#supported-variable-values).\\n**Note:** All non-primitive variables are associated with the type\\n'serializable'.\"}, 'includeDeleted': {'type': 'boolean', 'nullable': True, 'description': 'Include variables that has already been deleted during the execution.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process instance the variable belongs to.'}, 'processInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed process instance ids.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process definition the variable belongs to.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by a key of the process definition the variable belongs to.'}, 'executionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and execution ids.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by the case instance the variable belongs to.'}, 'caseExecutionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and case execution ids.'}, 'caseActivityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and case activity ids.'}, 'taskIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and task ids.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and activity instance ids.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and comma-\\nseparated tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic variable instances that belong to no tenant. Value may only be\\n true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'variableName', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryHistoricVariableInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryJobDefinitions \u00b6 Get Job Definitions (POST) Queries for job definitions that fulfill given parameters. This method is slightly more powerful than the Get Job Definitions method because it allows filtering by multiple job definitions of types String , Number or Boolean . URL: /job-definition Schema: {'type': 'object', 'description': 'A Job definition query which defines a list of Job definitions', 'properties': {'jobDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by job definition id.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include job definitions which belong to one of the passed activity ids.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Only include job definitions which exist for the given process definition id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Only include job definitions which exist for the given process definition key.'}, 'jobType': {'type': 'string', 'nullable': True, 'description': 'Only include job definitions which exist for the given job type. See the\\n[User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/the-job-executor/#job-creation)\\nfor more information about job types.'}, 'jobConfiguration': {'type': 'string', 'nullable': True, 'description': 'Only include job definitions which exist for the given job configuration. For example: for\\ntimer jobs it is the timer configuration.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active job definitions. Value may only be true , as false is the default\\nbehavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended job definitions. Value may only be true , as false is the\\ndefault behavior.'}, 'withOverridingJobPriority': {'type': 'boolean', 'nullable': True, 'description': 'Only include job definitions that have an overriding job priority defined. The only\\neffective value is true . If set to false , this filter is not applied.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include job definitions which belong to one of the passed tenant\\nids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include job definitions which belong to no tenant. Value may only be true , as\\n false is the default behavior.'}, 'includeJobDefinitionsWithoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Include job definitions which belong to no tenant. Can be used in combination with\\n tenantIdIn . Value may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints.', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['jobDefinitionId', 'activityId', 'processDefinitionId', 'processDefinitionKey', 'jobType', 'jobConfiguration', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryJobDefinitions [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryJobDefinitionsCount \u00b6 Get Job Definition Count (POST) Queries for the number of job definitions that fulfill given parameters. This method takes the same message body as the Get Job Definitions (POST) method and therefore it is slightly more powerful than the Get Job Definition Count method. URL: /job-definition/count Schema: {'type': 'object', 'description': 'A Job definition query which defines a list of Job definitions', 'properties': {'jobDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by job definition id.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include job definitions which belong to one of the passed activity ids.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Only include job definitions which exist for the given process definition id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Only include job definitions which exist for the given process definition key.'}, 'jobType': {'type': 'string', 'nullable': True, 'description': 'Only include job definitions which exist for the given job type. See the\\n[User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/the-job-executor/#job-creation)\\nfor more information about job types.'}, 'jobConfiguration': {'type': 'string', 'nullable': True, 'description': 'Only include job definitions which exist for the given job configuration. For example: for\\ntimer jobs it is the timer configuration.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active job definitions. Value may only be true , as false is the default\\nbehavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended job definitions. Value may only be true , as false is the\\ndefault behavior.'}, 'withOverridingJobPriority': {'type': 'boolean', 'nullable': True, 'description': 'Only include job definitions that have an overriding job priority defined. The only\\neffective value is true . If set to false , this filter is not applied.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include job definitions which belong to one of the passed tenant\\nids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include job definitions which belong to no tenant. Value may only be true , as\\n false is the default behavior.'}, 'includeJobDefinitionsWithoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Include job definitions which belong to no tenant. Can be used in combination with\\n tenantIdIn . Value may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints.', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['jobDefinitionId', 'activityId', 'processDefinitionId', 'processDefinitionKey', 'jobType', 'jobConfiguration', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryJobDefinitionsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryJobs \u00b6 Get Jobs (POST) Queries for jobs that fulfill given parameters. This method is slightly more powerful than the Get Jobs method because it allows filtering by multiple jobs of types String , Number or Boolean . URL: /job Schema: {'type': 'object', 'description': 'A Job instance query which defines a list of Job instances', 'properties': {'jobId': {'type': 'string', 'nullable': True, 'description': 'Filter by job id.'}, 'jobIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of job ids.'}, 'jobDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs which exist for the given job definition.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs which exist for the given process instance.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only select jobs which exist for the given list of process instance ids.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs which exist for the given execution.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the process definition the jobs run on.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the key of the process definition the jobs run on.'}, 'activityId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs which exist for an activity with the given id.'}, 'withRetriesLeft': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs which have retries left. Value may only be true , as false is the\\ndefault behavior.'}, 'executable': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs which are executable, i.e., retries > 0 and due date is null or due\\ndate is in the past. Value may only be true , as false is the default\\nbehavior.'}, 'timers': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs that are timers. Cannot be used together with messages . Value may only\\nbe true , as false is the default behavior.'}, 'messages': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs that are messages. Cannot be used together with timers . Value may only\\nbe true , as false is the default behavior.'}, 'dueDates': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/JobConditionQueryParameterDto'}, 'description': 'Only select jobs where the due date is lower or higher than the given date.\\n'}, 'createTimes': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/JobConditionQueryParameterDto'}, 'description': 'Only select jobs created before or after the given date.\\n'}, 'withException': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs that failed due to an exception. Value may only be true , as false is\\nthe default behavior.'}, 'exceptionMessage': {'type': 'string', 'nullable': True, 'description': 'Only select jobs that failed due to an exception with the given message.'}, 'failedActivityId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs that failed due to an exception at an activity with the given id.'}, 'noRetriesLeft': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs which have no retries left. Value may only be true , as false is the\\ndefault behavior.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active jobs. Value may only be true , as false is the default behavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended jobs. Value may only be true , as false is the default behavior.'}, 'priorityLowerThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include jobs with a priority lower than or equal to the given value. Value must be a\\nvalid long value.'}, 'priorityHigherThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include jobs with a priority higher than or equal to the given value. Value must be a\\nvalid long value.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include jobs which belong to one of the passed tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include jobs which belong to no tenant. Value may only be true , as false is the\\ndefault behavior.'}, 'includeJobsWithoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Include jobs which belong to no tenant. Can be used in combination with tenantIdIn .\\nValue may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Does not have an effect for the count endpoint.', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['jobId', 'executionId', 'processInstanceId', 'processDefinitionId', 'processDefinitionKey', 'jobPriority', 'jobRetries', 'jobDueDate', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryJobs [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryJobsCount \u00b6 Get Job Count (POST) Queries for jobs that fulfill given parameters. This method takes the same message body as the Get Jobs POST method and therefore it is slightly more powerful than the Get Job Count method. URL: /job/count Schema: {'type': 'object', 'description': 'A Job instance query which defines a list of Job instances', 'properties': {'jobId': {'type': 'string', 'nullable': True, 'description': 'Filter by job id.'}, 'jobIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of job ids.'}, 'jobDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs which exist for the given job definition.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs which exist for the given process instance.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only select jobs which exist for the given list of process instance ids.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs which exist for the given execution.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the process definition the jobs run on.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the key of the process definition the jobs run on.'}, 'activityId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs which exist for an activity with the given id.'}, 'withRetriesLeft': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs which have retries left. Value may only be true , as false is the\\ndefault behavior.'}, 'executable': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs which are executable, i.e., retries > 0 and due date is null or due\\ndate is in the past. Value may only be true , as false is the default\\nbehavior.'}, 'timers': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs that are timers. Cannot be used together with messages . Value may only\\nbe true , as false is the default behavior.'}, 'messages': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs that are messages. Cannot be used together with timers . Value may only\\nbe true , as false is the default behavior.'}, 'dueDates': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/JobConditionQueryParameterDto'}, 'description': 'Only select jobs where the due date is lower or higher than the given date.\\n'}, 'createTimes': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/JobConditionQueryParameterDto'}, 'description': 'Only select jobs created before or after the given date.\\n'}, 'withException': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs that failed due to an exception. Value may only be true , as false is\\nthe default behavior.'}, 'exceptionMessage': {'type': 'string', 'nullable': True, 'description': 'Only select jobs that failed due to an exception with the given message.'}, 'failedActivityId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs that failed due to an exception at an activity with the given id.'}, 'noRetriesLeft': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs which have no retries left. Value may only be true , as false is the\\ndefault behavior.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active jobs. Value may only be true , as false is the default behavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended jobs. Value may only be true , as false is the default behavior.'}, 'priorityLowerThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include jobs with a priority lower than or equal to the given value. Value must be a\\nvalid long value.'}, 'priorityHigherThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include jobs with a priority higher than or equal to the given value. Value must be a\\nvalid long value.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include jobs which belong to one of the passed tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include jobs which belong to no tenant. Value may only be true , as false is the\\ndefault behavior.'}, 'includeJobsWithoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Include jobs which belong to no tenant. Can be used in combination with tenantIdIn .\\nValue may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Does not have an effect for the count endpoint.', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['jobId', 'executionId', 'processInstanceId', 'processDefinitionId', 'processDefinitionKey', 'jobPriority', 'jobRetries', 'jobDueDate', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryJobsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryProcessInstances \u00b6 Get List (POST) Queries for process instances that fulfill given parameters through a JSON object. This method is slightly more powerful than the Get Instances method because it allows filtering by multiple process variables of types string , number or boolean . URL: /process-instance Schema: {'type': 'object', 'description': 'A process instance query which defines a group of process instances', 'properties': {'deploymentId': {'type': 'string', 'nullable': True, 'description': 'Filter by the deployment the id belongs to.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process definition the instances run on.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the key of the process definition the instances run on.'}, 'processDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of process definition keys.\\nA process instance must have one of the given process definition keys. Must be a JSON array of Strings.'}, 'processDefinitionKeyNotIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Exclude instances by a list of process definition keys.\\nA process instance must not have one of the given process definition keys. Must be a JSON array of Strings.'}, 'businessKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key.'}, 'businessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key that the parameter is a substring of.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by case instance id.'}, 'superProcessInstance': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given process instance.\\nTakes a process instance id.'}, 'subProcessInstance': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that have the given process instance as a sub process instance.\\nTakes a process instance id.'}, 'superCaseInstance': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given case instance.\\nTakes a case instance id.'}, 'subCaseInstance': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that have the given case instance as a sub case instance.\\nTakes a case instance id.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active process instances. Value may only be true, as false is the default behavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended process instances. Value may only be true, as false is the default behavior.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of process instance ids. Must be a JSON array of Strings.'}, 'withIncident': {'type': 'boolean', 'nullable': True, 'description': 'Filter by presence of incidents. Selects only process instances that have an incident.'}, 'incidentId': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident id.'}, 'incidentType': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident type. See the User Guide for a list of incident types.'}, 'incidentMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message. Exact match.'}, 'incidentMessageLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message that the parameter is a substring of.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of tenant ids. A process instance must have one of the given tenant ids.\\nMust be a JSON array of Strings.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include process instances which belong to no tenant.\\nValue may only be true, as false is the default behavior.'}, 'processDefinitionWithoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include process instances which process definition has no tenant id.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of activity ids.\\nA process instance must currently wait in a leaf activity with one of the given activity ids.'}, 'rootProcessInstances': {'type': 'boolean', 'nullable': True, 'description': 'Restrict the query to all process instances that are top level process instances.'}, 'leafProcessInstances': {'type': 'boolean', 'nullable': True, 'description': \"Restrict the query to all process instances that are leaf instances. (i.e. don't have any sub instances)\"}, 'variables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include process instances that have variables with certain values.\\nThe array consists of objects with the three properties name , operator and value .\\n name (String) is the variable name,\\n operator (String) is the comparison operator to be used and value the variable value.\\nThe value may be String, Number or Boolean.\\n\\nValid operator values are: eq - equal to; neq - not equal to; gt - greater than;\\n gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like .'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable names in this query case-insensitively.\\nIf set to true variableName and variablename are treated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable values in this query case-insensitively.\\nIf set to true variableValue and variablevalue are treated as equal.'}, 'orQueries': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'description': \"A JSON array of nested process instance queries with OR semantics.\\nA process instance matches a nested query if it fulfills at least one of the query's predicates.\\nWith multiple nested queries, a process instance must fulfill at least one predicate of each query (Conjunctive Normal Form).\\nAll process instance query properties can be used except for: sorting \\nSee the [User guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/process-engine-api/#or-queries) for more information about OR queries.\"}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'definitionId', 'definitionKey', 'businessKey', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryProcessInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryProcessInstancesCount \u00b6 Get List Count (POST) Queries for the number of process instances that fulfill the given parameters. This method takes the same message body as the Get Instances (POST) method and therefore it is slightly more powerful than the Get Instance Count method. URL: /process-instance/count Schema: {'type': 'object', 'description': 'A process instance query which defines a group of process instances', 'properties': {'deploymentId': {'type': 'string', 'nullable': True, 'description': 'Filter by the deployment the id belongs to.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process definition the instances run on.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the key of the process definition the instances run on.'}, 'processDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of process definition keys.\\nA process instance must have one of the given process definition keys. Must be a JSON array of Strings.'}, 'processDefinitionKeyNotIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Exclude instances by a list of process definition keys.\\nA process instance must not have one of the given process definition keys. Must be a JSON array of Strings.'}, 'businessKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key.'}, 'businessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key that the parameter is a substring of.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by case instance id.'}, 'superProcessInstance': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given process instance.\\nTakes a process instance id.'}, 'subProcessInstance': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that have the given process instance as a sub process instance.\\nTakes a process instance id.'}, 'superCaseInstance': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given case instance.\\nTakes a case instance id.'}, 'subCaseInstance': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that have the given case instance as a sub case instance.\\nTakes a case instance id.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active process instances. Value may only be true, as false is the default behavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended process instances. Value may only be true, as false is the default behavior.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of process instance ids. Must be a JSON array of Strings.'}, 'withIncident': {'type': 'boolean', 'nullable': True, 'description': 'Filter by presence of incidents. Selects only process instances that have an incident.'}, 'incidentId': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident id.'}, 'incidentType': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident type. See the User Guide for a list of incident types.'}, 'incidentMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message. Exact match.'}, 'incidentMessageLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message that the parameter is a substring of.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of tenant ids. A process instance must have one of the given tenant ids.\\nMust be a JSON array of Strings.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include process instances which belong to no tenant.\\nValue may only be true, as false is the default behavior.'}, 'processDefinitionWithoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include process instances which process definition has no tenant id.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of activity ids.\\nA process instance must currently wait in a leaf activity with one of the given activity ids.'}, 'rootProcessInstances': {'type': 'boolean', 'nullable': True, 'description': 'Restrict the query to all process instances that are top level process instances.'}, 'leafProcessInstances': {'type': 'boolean', 'nullable': True, 'description': \"Restrict the query to all process instances that are leaf instances. (i.e. don't have any sub instances)\"}, 'variables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include process instances that have variables with certain values.\\nThe array consists of objects with the three properties name , operator and value .\\n name (String) is the variable name,\\n operator (String) is the comparison operator to be used and value the variable value.\\nThe value may be String, Number or Boolean.\\n\\nValid operator values are: eq - equal to; neq - not equal to; gt - greater than;\\n gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like .'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable names in this query case-insensitively.\\nIf set to true variableName and variablename are treated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable values in this query case-insensitively.\\nIf set to true variableValue and variablevalue are treated as equal.'}, 'orQueries': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'description': \"A JSON array of nested process instance queries with OR semantics.\\nA process instance matches a nested query if it fulfills at least one of the query's predicates.\\nWith multiple nested queries, a process instance must fulfill at least one predicate of each query (Conjunctive Normal Form).\\nAll process instance query properties can be used except for: sorting \\nSee the [User guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/process-engine-api/#or-queries) for more information about OR queries.\"}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'definitionId', 'definitionKey', 'businessKey', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryProcessInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply querySchemaLog \u00b6 Get List (POST) Queries for schema log entries that fulfill given parameters. URL: /schema/log Schema: {'type': 'object', 'properties': {'version': {'type': 'string', 'nullable': True, 'description': 'The version of the schema.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'A JSON array of criteria to sort the result by. Each element of the array is\\n a JSON object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. ', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['timestamp'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply querySchemaLog [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryTasks \u00b6 Get List (POST) Queries for tasks that fulfill a given filter. This method is slightly more powerful than the Get Tasks method because it allows filtering by multiple process or task variables of types String , Number or Boolean . The size of the result set can be retrieved by using the Get Task Count (POST) method. Security Consideration : There are several parameters (such as assigneeExpression ) for specifying an EL expression. These are disabled by default to prevent remote code execution. See the section on security considerations for custom code in the user guide for details. URL: /task Schema: {'type': 'object', 'description': 'A Task query which defines a group of Tasks.', 'properties': {'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to process instances with the given id.'}, 'processInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that belong to process instances with the given ids.'}, 'processInstanceBusinessKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to process instances with the given business key.'}, 'processInstanceBusinessKeyExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to process instances with the given business key which \\nis described by an expression. See the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions.'}, 'processInstanceBusinessKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that belong to process instances with one of the give business keys. \\nThe keys need to be in a comma-separated list.'}, 'processInstanceBusinessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a process instance business key that has the parameter \\nvalue as a substring.'}, 'processInstanceBusinessKeyLikeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a process instance business key that has the parameter \\nvalue as a substring and is described by an expression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given key.'}, 'processDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that belong to a process definition with one of the given keys. The \\nkeys need to be in a comma-separated list.'}, 'processDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given name.'}, 'processDefinitionNameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a process definition name that has the parameter value as \\na substring.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to an execution with the given id.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to case instances with the given id.'}, 'caseInstanceBusinessKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to case instances with the given business key.'}, 'caseInstanceBusinessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a case instance business key that has the parameter value \\nas a substring.'}, 'caseDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given id.'}, 'caseDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given key.'}, 'caseDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given name.'}, 'caseDefinitionNameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a case definition name that has the parameter value as a \\nsubstring.'}, 'caseExecutionId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case execution with the given id.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which belong to one of the passed and comma-separated activity \\ninstance ids.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which belong to one of the passed and comma-separated \\ntenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which belong to no tenant. Value may only be true , \\nas false is the default behavior.'}, 'assignee': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the given user is assigned to.'}, 'assigneeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the user described by the given expression is assigned to. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'assigneeLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have an assignee that has the parameter \\nvalue as a substring.'}, 'assigneeLikeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have an assignee that has the parameter value described by the \\ngiven expression as a substring. See the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'assigneeIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which are assigned to one of the passed and comma-separated user ids.'}, 'assigneeNotIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which are not assigned to one of the passed and comma-separated user ids.'}, 'owner': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the given user owns.'}, 'ownerExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the user described by the given expression owns. See the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'candidateGroup': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that are offered to the given group.'}, 'candidateGroupExpression': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that are offered to the group described by the given expression. \\nSee the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'candidateUser': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that are offered to the given user or to one of his groups.'}, 'candidateUserExpression': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that are offered to the user described by the given expression. \\nSee the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'includeAssignedTasks': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Also include tasks that are assigned to users in candidate queries. Default is to only \\ninclude tasks that are not assigned to any user if you query by candidate user or\\ngroup(s).'}, 'involvedUser': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that the given user is involved in. A user is involved in a task if \\nan identity link exists between task and user (e.g., the user is the assignee).'}, 'involvedUserExpression': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that the user described by the given expression is involved in.\\nA user is involved in a task if an identity link exists between task and user\\n(e.g., the user is the assignee). See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions.'}, 'assigned': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'If set to true , restricts the query to all tasks that are assigned.'}, 'unassigned': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'If set to true , restricts the query to all tasks that are unassigned.'}, 'taskDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given key.'}, 'taskDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that have one of the given keys. The keys need to be in a comma-separated list.'}, 'taskDefinitionKeyLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a key that has the parameter value as a substring.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given name.'}, 'nameNotEqual': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that do not have the given name.'}, 'nameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a name with the given parameter value as substring.'}, 'nameNotLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that do not have a name with the given parameter\\nvalue as substring.'}, 'description': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given description.'}, 'descriptionLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a description that has the parameter\\nvalue as a substring.'}, 'priority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'Restrict to tasks that have the given priority.'}, 'maxPriority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'Restrict to tasks that have a lower or equal priority.'}, 'minPriority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'Restrict to tasks that have a higher or equal priority.'}, 'dueDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due on the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.546+0200 .\"}, 'dueDateExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are due on the date described by the given expression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'dueAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due after the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.435+0200 .\"}, 'dueAfterExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are due after the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'dueBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due before the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.243+0200 .\"}, 'dueBeforeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are due before the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'withoutDueDate': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have no due date. Value may only be true , \\nas false is the default behavior.'}, 'followUpDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date on the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date\\nmust have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.342+0200 .\"}, 'followUpDateExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a followUp date on the date described by the given\\nexpression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'followUpAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date after the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.542+0200 .\"}, 'followUpAfterExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a followUp date after the date described by the given\\nexpression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'followUpBefore': {'type': 'string', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date before the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.234+0200 .\"}, 'followUpBeforeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a followUp date before the date described by the given\\nexpression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'followUpBeforeOrNotExistent': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have no followUp date or a followUp date before the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.432+0200 . The typical use case\\nis to query all active tasks for a user for a given date.\"}, 'followUpBeforeOrNotExistentExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have no followUp date or a followUp date before the date\\ndescribed by the given expression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'createdOn': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were created on the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.324+0200 .\"}, 'createdOnExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that were created on the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'createdAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were created after the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must\\nhave the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.342+0200 .\"}, 'createdAfterExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that were created after the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'createdBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were created before the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must\\nhave the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.332+0200 .\"}, 'createdBeforeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that were created before the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'delegationState': {'type': 'string', 'nullable': True, 'enum': ['PENDING', 'RESOLVED'], 'description': 'Restrict to tasks that are in the given delegation state. Valid values are\\n PENDING and RESOLVED .'}, 'candidateGroups': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that are offered to any of the given candidate groups. Takes a\\ncomma-separated list of group names, so for example\\n developers,support,sales .'}, 'candidateGroupsExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are offered to any of the candidate groups described by the\\ngiven expression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to\\n java.util.List of Strings.'}, 'withCandidateGroups': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have a candidate group. Value may only be true ,\\nas false is the default behavior.'}, 'withoutCandidateGroups': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have no candidate group. Value may only be true ,\\nas false is the default behavior.'}, 'withCandidateUsers': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have a candidate user. Value may only be true ,\\nas false is the default behavior.'}, 'withoutCandidateUsers': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have no candidate users. Value may only be true ,\\nas false is the default behavior.'}, 'active': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include active tasks. Value may only be true , as false \\nis the default behavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include suspended tasks. Value may only be true , as\\n false is the default behavior.'}, 'taskVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include tasks that have variables with certain values. The\\narray consists of JSON objects with three properties name , operator and value .\\n name is the variable name, operator is the comparison operator to be used and\\n value the variable value. value may be of type String , Number or Boolean .\\n\\nValid operator values are:\\n eq - equal to;\\n neq - not equal to;\\n gt - greater than;\\n gteq - greater than or equal to;\\n lt - lower than;\\n lteq - lower than or equal to;\\n like .\\n key and value may not contain underscore or comma characters.'}, 'processVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include tasks that belong to a process instance with variables\\nwith certain values. The array consists of JSON objects with three properties\\n name , operator and value . name is the variable name, operator is the\\ncomparison operator to be used and value the variable value. value may be of\\ntype String , Number or Boolean .\\n\\nValid operator values are:\\n eq - equal to;\\n neq - not equal to;\\n gt - greater than;\\n gteq - greater than or equal to;\\n lt - lower than;\\n lteq - lower than or equal to;\\n like ;\\n notLike .\\n key and value may not contain underscore or comma characters.'}, 'caseInstanceVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include tasks that belong to a case instance with variables\\nwith certain values. The array consists of JSON objects with three properties\\n name , operator and value . name is the variable name, operator is the\\ncomparison operator to be used and value the variable value. value may be of\\ntype String , Number or Boolean .\\n\\nValid operator values are:\\n eq - equal to;\\n neq - not equal to;\\n gt - greater than;\\n gteq - greater than or equal to;\\n lt - lower than;\\n lteq - lower than or equal to;\\n like .\\n key and value may not contain underscore or comma characters.'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Match all variable names in this query case-insensitively. If set\\n variableName and variablename are treated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Match all variable values in this query case-insensitively. If set\\n variableValue and variablevalue are treated as equal.'}, 'parentTaskId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all tasks that are sub tasks of the given task. Takes a task id.'}, 'orQueries': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/TaskQueryDto'}, 'description': \"A JSON array of nested task queries with OR semantics. A task matches a nested query if it fulfills\\n*at least one* of the query's predicates. With multiple nested queries, a task must fulfill at least one predicate of *each* query ([Conjunctive Normal Form](https://en.wikipedia.org/wiki/Conjunctive_normal_form)).\\n\\nAll task query properties can be used except for: sorting , withCandidateGroups ,\\n withoutCandidateGroups , withCandidateUsers , withoutCandidateUsers \\n\\nSee the [User guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/process-engine-api/#or-queries)\\nfor more information about OR queries.\"}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'caseInstanceId', 'dueDate', 'executionId', 'caseExecutionId', 'assignee', 'created', 'description', 'id', 'name', 'nameCaseInsensitive', 'priority', 'processVariable', 'executionVariable', 'taskVariable', 'caseExecutionVariable', 'caseInstanceVariable'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}, 'parameters': {'$ref': '#/components/schemas/SortTaskQueryParametersDto'}}}}}} Usage: cctl apply queryTasks [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryTasksCount \u00b6 Get List Count (POST) Retrieves the number of tasks that fulfill the given filter. Corresponds to the size of the result set of the Get Tasks (POST) method and takes the same parameters. Security Consideration : There are several parameters (such as assigneeExpression ) for specifying an EL expression. These are disabled by default to prevent remote code execution. See the section on security considerations for custom code in the user guide for details. URL: /task/count Schema: {'type': 'object', 'description': 'A Task query which defines a group of Tasks.', 'properties': {'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to process instances with the given id.'}, 'processInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that belong to process instances with the given ids.'}, 'processInstanceBusinessKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to process instances with the given business key.'}, 'processInstanceBusinessKeyExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to process instances with the given business key which \\nis described by an expression. See the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions.'}, 'processInstanceBusinessKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that belong to process instances with one of the give business keys. \\nThe keys need to be in a comma-separated list.'}, 'processInstanceBusinessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a process instance business key that has the parameter \\nvalue as a substring.'}, 'processInstanceBusinessKeyLikeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a process instance business key that has the parameter \\nvalue as a substring and is described by an expression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given key.'}, 'processDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that belong to a process definition with one of the given keys. The \\nkeys need to be in a comma-separated list.'}, 'processDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given name.'}, 'processDefinitionNameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a process definition name that has the parameter value as \\na substring.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to an execution with the given id.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to case instances with the given id.'}, 'caseInstanceBusinessKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to case instances with the given business key.'}, 'caseInstanceBusinessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a case instance business key that has the parameter value \\nas a substring.'}, 'caseDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given id.'}, 'caseDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given key.'}, 'caseDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given name.'}, 'caseDefinitionNameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a case definition name that has the parameter value as a \\nsubstring.'}, 'caseExecutionId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case execution with the given id.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which belong to one of the passed and comma-separated activity \\ninstance ids.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which belong to one of the passed and comma-separated \\ntenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which belong to no tenant. Value may only be true , \\nas false is the default behavior.'}, 'assignee': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the given user is assigned to.'}, 'assigneeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the user described by the given expression is assigned to. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'assigneeLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have an assignee that has the parameter \\nvalue as a substring.'}, 'assigneeLikeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have an assignee that has the parameter value described by the \\ngiven expression as a substring. See the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'assigneeIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which are assigned to one of the passed and comma-separated user ids.'}, 'assigneeNotIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which are not assigned to one of the passed and comma-separated user ids.'}, 'owner': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the given user owns.'}, 'ownerExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the user described by the given expression owns. See the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'candidateGroup': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that are offered to the given group.'}, 'candidateGroupExpression': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that are offered to the group described by the given expression. \\nSee the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'candidateUser': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that are offered to the given user or to one of his groups.'}, 'candidateUserExpression': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that are offered to the user described by the given expression. \\nSee the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'includeAssignedTasks': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Also include tasks that are assigned to users in candidate queries. Default is to only \\ninclude tasks that are not assigned to any user if you query by candidate user or\\ngroup(s).'}, 'involvedUser': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that the given user is involved in. A user is involved in a task if \\nan identity link exists between task and user (e.g., the user is the assignee).'}, 'involvedUserExpression': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that the user described by the given expression is involved in.\\nA user is involved in a task if an identity link exists between task and user\\n(e.g., the user is the assignee). See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions.'}, 'assigned': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'If set to true , restricts the query to all tasks that are assigned.'}, 'unassigned': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'If set to true , restricts the query to all tasks that are unassigned.'}, 'taskDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given key.'}, 'taskDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that have one of the given keys. The keys need to be in a comma-separated list.'}, 'taskDefinitionKeyLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a key that has the parameter value as a substring.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given name.'}, 'nameNotEqual': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that do not have the given name.'}, 'nameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a name with the given parameter value as substring.'}, 'nameNotLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that do not have a name with the given parameter\\nvalue as substring.'}, 'description': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given description.'}, 'descriptionLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a description that has the parameter\\nvalue as a substring.'}, 'priority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'Restrict to tasks that have the given priority.'}, 'maxPriority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'Restrict to tasks that have a lower or equal priority.'}, 'minPriority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'Restrict to tasks that have a higher or equal priority.'}, 'dueDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due on the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.546+0200 .\"}, 'dueDateExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are due on the date described by the given expression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'dueAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due after the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.435+0200 .\"}, 'dueAfterExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are due after the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'dueBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due before the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.243+0200 .\"}, 'dueBeforeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are due before the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'withoutDueDate': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have no due date. Value may only be true , \\nas false is the default behavior.'}, 'followUpDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date on the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date\\nmust have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.342+0200 .\"}, 'followUpDateExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a followUp date on the date described by the given\\nexpression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'followUpAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date after the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.542+0200 .\"}, 'followUpAfterExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a followUp date after the date described by the given\\nexpression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'followUpBefore': {'type': 'string', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date before the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.234+0200 .\"}, 'followUpBeforeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a followUp date before the date described by the given\\nexpression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'followUpBeforeOrNotExistent': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have no followUp date or a followUp date before the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.432+0200 . The typical use case\\nis to query all active tasks for a user for a given date.\"}, 'followUpBeforeOrNotExistentExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have no followUp date or a followUp date before the date\\ndescribed by the given expression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'createdOn': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were created on the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.324+0200 .\"}, 'createdOnExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that were created on the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'createdAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were created after the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must\\nhave the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.342+0200 .\"}, 'createdAfterExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that were created after the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'createdBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were created before the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must\\nhave the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.332+0200 .\"}, 'createdBeforeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that were created before the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'delegationState': {'type': 'string', 'nullable': True, 'enum': ['PENDING', 'RESOLVED'], 'description': 'Restrict to tasks that are in the given delegation state. Valid values are\\n PENDING and RESOLVED .'}, 'candidateGroups': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that are offered to any of the given candidate groups. Takes a\\ncomma-separated list of group names, so for example\\n developers,support,sales .'}, 'candidateGroupsExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are offered to any of the candidate groups described by the\\ngiven expression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to\\n java.util.List of Strings.'}, 'withCandidateGroups': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have a candidate group. Value may only be true ,\\nas false is the default behavior.'}, 'withoutCandidateGroups': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have no candidate group. Value may only be true ,\\nas false is the default behavior.'}, 'withCandidateUsers': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have a candidate user. Value may only be true ,\\nas false is the default behavior.'}, 'withoutCandidateUsers': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have no candidate users. Value may only be true ,\\nas false is the default behavior.'}, 'active': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include active tasks. Value may only be true , as false \\nis the default behavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include suspended tasks. Value may only be true , as\\n false is the default behavior.'}, 'taskVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include tasks that have variables with certain values. The\\narray consists of JSON objects with three properties name , operator and value .\\n name is the variable name, operator is the comparison operator to be used and\\n value the variable value. value may be of type String , Number or Boolean .\\n\\nValid operator values are:\\n eq - equal to;\\n neq - not equal to;\\n gt - greater than;\\n gteq - greater than or equal to;\\n lt - lower than;\\n lteq - lower than or equal to;\\n like .\\n key and value may not contain underscore or comma characters.'}, 'processVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include tasks that belong to a process instance with variables\\nwith certain values. The array consists of JSON objects with three properties\\n name , operator and value . name is the variable name, operator is the\\ncomparison operator to be used and value the variable value. value may be of\\ntype String , Number or Boolean .\\n\\nValid operator values are:\\n eq - equal to;\\n neq - not equal to;\\n gt - greater than;\\n gteq - greater than or equal to;\\n lt - lower than;\\n lteq - lower than or equal to;\\n like ;\\n notLike .\\n key and value may not contain underscore or comma characters.'}, 'caseInstanceVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include tasks that belong to a case instance with variables\\nwith certain values. The array consists of JSON objects with three properties\\n name , operator and value . name is the variable name, operator is the\\ncomparison operator to be used and value the variable value. value may be of\\ntype String , Number or Boolean .\\n\\nValid operator values are:\\n eq - equal to;\\n neq - not equal to;\\n gt - greater than;\\n gteq - greater than or equal to;\\n lt - lower than;\\n lteq - lower than or equal to;\\n like .\\n key and value may not contain underscore or comma characters.'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Match all variable names in this query case-insensitively. If set\\n variableName and variablename are treated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Match all variable values in this query case-insensitively. If set\\n variableValue and variablevalue are treated as equal.'}, 'parentTaskId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all tasks that are sub tasks of the given task. Takes a task id.'}, 'orQueries': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/TaskQueryDto'}, 'description': \"A JSON array of nested task queries with OR semantics. A task matches a nested query if it fulfills\\n*at least one* of the query's predicates. With multiple nested queries, a task must fulfill at least one predicate of *each* query ([Conjunctive Normal Form](https://en.wikipedia.org/wiki/Conjunctive_normal_form)).\\n\\nAll task query properties can be used except for: sorting , withCandidateGroups ,\\n withoutCandidateGroups , withCandidateUsers , withoutCandidateUsers \\n\\nSee the [User guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/process-engine-api/#or-queries)\\nfor more information about OR queries.\"}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'caseInstanceId', 'dueDate', 'executionId', 'caseExecutionId', 'assignee', 'created', 'description', 'id', 'name', 'nameCaseInsensitive', 'priority', 'processVariable', 'executionVariable', 'taskVariable', 'caseExecutionVariable', 'caseInstanceVariable'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}, 'parameters': {'$ref': '#/components/schemas/SortTaskQueryParametersDto'}}}}}} Usage: cctl apply queryTasksCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply queryVariableInstances \u00b6 Get Variable Instances (POST) Query for variable instances that fulfill given parameters through a JSON object. This method is slightly more powerful than the Get Variable Instances method because it allows filtering by multiple variable instances of types String , Number or Boolean . URL: /variable-instance Schema: {'type': 'object', 'description': 'A variable instance query which defines a list of variable instances', 'properties': {'variableName': {'type': 'string', 'nullable': True, 'description': 'Filter by variable instance name.'}, 'variableNameLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the variable instance name. The parameter can include the wildcard % to\\nexpress like-strategy such as: starts with ( % name), ends with (name % ) or\\ncontains ( % name % ).'}, 'processInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\nprocess instance ids.'}, 'executionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\nexecution ids.'}, 'caseInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed case instance ids.'}, 'caseExecutionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed case execution ids.'}, 'taskIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed task\\nids.'}, 'batchIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\nbatch ids.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\nactivity instance ids.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\ntenant ids.'}, 'variableValues': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'An array to only include variable instances that have the certain values.\\nThe array consists of objects with the three properties name , operator and value . name (String) is the\\nvariable name, operator (String) is the comparison operator to be used and value the variable value.\\n value may be String , Number or Boolean .\\n\\nValid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater\\nthan or equal to; lt - lower than; lteq - lower than or equal to; like '}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable names provided in variableValues case-insensitively. If set to true \\n**variableName** and **variablename** are treated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable values provided in variableValues case-insensitively. If set to\\n true **variableValue** and **variablevalue** are treated as equal.'}, 'variableScopeIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of passed scope ids.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is an object that specifies one ordering.\\n The position in the array identifies the rank of an ordering, i.e., whether it is primary, secondary, etc.\\n Sorting has no effect for count endpoints', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['variableName', 'variableType', 'activityInstanceId', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryVariableInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --max-results | text | Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. | None | | --first-result | text | Pagination of results. Specifies the index of the first result to return. | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -o , --output | choice ( template ) | N/A | template | | --skip-validation | boolean | ignore validation | False | | -f , --file | filename | input as yaml | None | | --help | boolean | Show this message and exit. | False | cctl apply queryVariableInstancesCount \u00b6 Get Variable Instance Count (POST) Query for the number of variable instances that fulfill given parameters. This method takes the same message body as the Get Variable Instances POST method and therefore it is slightly more powerful than the Get Variable Instance Count method. URL: /variable-instance/count Schema: {'type': 'object', 'description': 'A variable instance query which defines a list of variable instances', 'properties': {'variableName': {'type': 'string', 'nullable': True, 'description': 'Filter by variable instance name.'}, 'variableNameLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the variable instance name. The parameter can include the wildcard % to\\nexpress like-strategy such as: starts with ( % name), ends with (name % ) or\\ncontains ( % name % ).'}, 'processInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\nprocess instance ids.'}, 'executionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\nexecution ids.'}, 'caseInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed case instance ids.'}, 'caseExecutionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed case execution ids.'}, 'taskIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed task\\nids.'}, 'batchIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\nbatch ids.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\nactivity instance ids.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\ntenant ids.'}, 'variableValues': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'An array to only include variable instances that have the certain values.\\nThe array consists of objects with the three properties name , operator and value . name (String) is the\\nvariable name, operator (String) is the comparison operator to be used and value the variable value.\\n value may be String , Number or Boolean .\\n\\nValid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater\\nthan or equal to; lt - lower than; lteq - lower than or equal to; like '}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable names provided in variableValues case-insensitively. If set to true \\n**variableName** and **variablename** are treated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable values provided in variableValues case-insensitively. If set to\\n true **variableValue** and **variablevalue** are treated as equal.'}, 'variableScopeIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of passed scope ids.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is an object that specifies one ordering.\\n The position in the array identifies the rank of an ordering, i.e., whether it is primary, secondary, etc.\\n Sorting has no effect for count endpoints', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['variableName', 'variableType', 'activityInstanceId', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryVariableInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply recalculateDuedate \u00b6 Recalculate Job Due Date Recalculates the due date of a job by id. URL: /job/{id}/duedate/recalculate Schema: - Usage: cctl apply recalculateDuedate [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --creation-date-based / --not-creation-date-based boolean Recalculate the due date based on the creation date of the job or the current date. Value may only be false , as true is the default behavior. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply redeploy \u00b6 Redeploy Re-deploys an existing deployment. The deployment resources to re-deploy can be restricted by using the properties resourceIds or resourceNames . If no deployment resources to re-deploy are passed then all existing resources of the given deployment are re-deployed. Warning : Deployments can contain custom code in form of scripts or EL expressions to customize process behavior. This may be abused for remote execution of arbitrary code. See the section on security considerations for custom code in the user guide for details. URL: /deployment/{id}/redeploy Schema: {'title': 'RedeploymentDto', 'type': 'object', 'description': 'A JSON object with the following properties:', 'properties': {'resourceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of deployment resource ids to re-deploy.'}, 'resourceNames': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of deployment resource names to re-deploy.'}, 'source': {'type': 'string', 'nullable': True, 'description': 'Sets the source of the deployment.'}}} Usage: cctl apply redeploy [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply removalTimeAsync \u00b6 Set Removal Time Async (POST) Sets the removal time to multiple historic process instances asynchronously (batch). At least historicProcessInstanceIds or historicProcessInstanceQuery has to be provided. If both are provided, all instances matching query criterion and instances from the list will be updated with a removal time. URL: /history/process-instance/set-removal-time Schema: {'allOf': [{'type': 'object', 'properties': {'historicProcessInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'The id of the process instance.'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}, 'hierarchical': {'type': 'boolean', 'nullable': True, 'description': 'Sets the removal time to all historic process instances in the hierarchy.\\nValue may only be true , as false is the default behavior.'}}}, {'$ref': '#/components/schemas/AbstractSetRemovalTimeDto'}]} Usage: cctl apply removalTimeAsync [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply removalTimeAsyncHistoricBatch \u00b6 Set Removal Time Async (POST) Sets the removal time to multiple historic batches asynchronously (batch). At least historicBatchIds or historicBatchQuery has to be provided. If both are provided, all instances matching query criterion and instances from the list will be updated with a removal time. URL: /history/batch/set-removal-time Schema: {'allOf': [{'type': 'object', 'properties': {'historicBatchQuery': {'type': 'object', 'nullable': True, 'description': 'Query for the historic batches to set the removal time for.'}, 'historicBatchIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'The ids of the historic batches to set the removal time for.'}}}, {'$ref': '#/components/schemas/AbstractSetRemovalTimeDto'}]} Usage: cctl apply removalTimeAsyncHistoricBatch [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply removalTimeAsyncHistoricDecisionInstance \u00b6 Set Removal Time Async (POST) Sets the removal time to multiple historic decision instances asynchronously (batch). At least historicDecisionInstanceIds or historicDecisionInstanceQuery has to be provided. If both are provided, all instances matching query criterion and instances from the list will be updated with a removal time. URL: /history/decision-instance/set-removal-time Schema: {'allOf': [{'type': 'object', 'properties': {'hierarchical': {'type': 'boolean', 'nullable': True, 'description': 'Sets the removal time to all historic decision instances in the hierarchy.\\nValue may only be true , as false is the default behavior.'}, 'historicDecisionInstanceQuery': {'$ref': '#/components/schemas/HistoricDecisionInstanceQueryDto'}, 'historicDecisionInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'The ids of the historic decision instances to set the removal time for.'}}}, {'$ref': '#/components/schemas/AbstractSetRemovalTimeDto'}]} Usage: cctl apply removalTimeAsyncHistoricDecisionInstance [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply resolve \u00b6 Resolve Resolves a task and updates execution variables. Resolving a task marks that the assignee is done with the task delegated to them, and that it can be sent back to the owner. Can only be executed when the task has been delegated. The assignee will be set to the owner, who performed the delegation. URL: /task/{id}/resolve Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs.'}, 'withVariablesInReturn': {'type': 'boolean', 'nullable': True, 'default': False, 'description': \"Indicates whether the response should contain the process variables or not. The\\ndefault is false with a response code of 204 . If set to true the response\\ncontains the process variables and has a response code of 200 . If the task is not\\nassociated with a process instance (e.g. if it's part of a case instance) no\\nvariables will be returned.\"}}} Usage: cctl apply resolve [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply restartProcessInstance \u00b6 Restart Process Instance Restarts process instances that were canceled or terminated synchronously. Can also restart completed process instances. It will create a new instance using the original instance information. To execute the restart asynchronously, use the Restart Process Instance Async method. For more information about the difference between synchronous and asynchronous execution, please refer to the related section of the User Guide . URL: /process-definition/{id}/restart Schema: {'type': 'object', 'properties': {'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids to restart.'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started as part of this request.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution of\\n[input/output variable mappings](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#input-output-variable-mapping)\\nfor activities that are started as part of this request.'}, 'initialVariables': {'type': 'boolean', 'nullable': True, 'description': 'Set the initial set of variables during restart. By default, the last set of variables is used.'}, 'withoutBusinessKey': {'type': 'boolean', 'nullable': True, 'description': 'Do not take over the business key of the historic process instance.'}, 'instructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/RestartProcessInstanceModificationInstructionDto'}, 'description': '**Optional**. A JSON array of instructions that specify which activities to start the process instance at.\\nIf this property is omitted, the process instance starts at its default blank start event.'}}} Usage: cctl apply restartProcessInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply restartProcessInstanceAsyncOperation \u00b6 Restart Process Instance Async Restarts process instances that were canceled or terminated asynchronously. Can also restart completed process instances. It will create a new instance using the original instance information. To execute the restart asynchronously, use the Restart Process Instance method. For more information about the difference between synchronous and asynchronous execution, please refer to the related section of the User Guide . URL: /process-definition/{id}/restart-async Schema: {'type': 'object', 'properties': {'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids to restart.'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started as part of this request.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution of\\n[input/output variable mappings](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#input-output-variable-mapping)\\nfor activities that are started as part of this request.'}, 'initialVariables': {'type': 'boolean', 'nullable': True, 'description': 'Set the initial set of variables during restart. By default, the last set of variables is used.'}, 'withoutBusinessKey': {'type': 'boolean', 'nullable': True, 'description': 'Do not take over the business key of the historic process instance.'}, 'instructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/RestartProcessInstanceModificationInstructionDto'}, 'description': '**Optional**. A JSON array of instructions that specify which activities to start the process instance at.\\nIf this property is omitted, the process instance starts at its default blank start event.'}}} Usage: cctl apply restartProcessInstanceAsyncOperation [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply retriesByProcess \u00b6 Set Job Retries Async (POST) Create a batch to set retries of jobs associated with given processes asynchronously. URL: /process-instance/job-retries Schema: {'type': 'object', 'properties': {'processInstances': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids to fetch jobs, for which retries will be set.'}, 'retries': {'type': 'integer', 'format': 'int32', 'nullable': True, 'minimum': 0, 'description': 'An integer representing the number of retries. Please note that the value cannot be negative or null.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}}} Usage: cctl apply retriesByProcess [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply retriesByProcessHistoricQueryBased \u00b6 Set Job Retries Async Historic Query Based (POST) Create a batch to set retries of jobs asynchronously based on a historic process instance query. URL: /process-instance/job-retries-historic-query-based Schema: {'type': 'object', 'properties': {'processInstances': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids to fetch jobs, for which retries will be set.'}, 'retries': {'type': 'integer', 'format': 'int32', 'nullable': True, 'minimum': 0, 'description': 'An integer representing the number of retries. Please note that the value cannot be negative or null.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}}} Usage: cctl apply retriesByProcessHistoricQueryBased [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply signalExecution \u00b6 Trigger Execution Signals an execution by id. Can for example be used to explicitly skip user tasks or signal asynchronous continuations. URL: /execution/{id}/signal Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs. Each key is a variable name and\\neach value a JSON variable value object.'}}} Usage: cctl apply signalExecution [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply startProcessInstance \u00b6 Start Instance Instantiates a given process definition. Process variables and business key may be supplied in the request body. URL: /process-definition/{id}/start Schema: {'type': 'object', 'properties': {'businessKey': {'type': 'string', 'nullable': True, 'description': 'The business key of the process instance.'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': ''}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'The case instance id the process instance is to be initialized with.'}, 'startInstructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/ProcessInstanceModificationInstructionDto'}, 'description': '**Optional**. A JSON array of instructions that specify which activities to start the process instance at.\\nIf this property is omitted, the process instance starts at its default blank start event.'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started or ended as part of this request.\\n**Note**: This option is currently only respected when start instructions are submitted\\nvia the startInstructions property.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution of\\n[input/output variable mappings](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#input-output-variable-mapping)\\nfor activities that are started or ended as part of this request.\\n**Note**: This option is currently only respected when start instructions are submitted\\nvia the startInstructions property.'}, 'withVariablesInReturn': {'type': 'boolean', 'nullable': True, 'description': 'Indicates if the variables, which was used by the process instance during execution, should be returned.\\nDefault value: false '}}} Usage: cctl apply startProcessInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply startProcessInstanceByKey \u00b6 Start Instance Instantiates a given process definition, starts the latest version of the process definition which belongs to no tenant. Process variables and business key may be supplied in the request body. URL: /process-definition/key/{key}/start Schema: {'type': 'object', 'properties': {'businessKey': {'type': 'string', 'nullable': True, 'description': 'The business key of the process instance.'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': ''}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'The case instance id the process instance is to be initialized with.'}, 'startInstructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/ProcessInstanceModificationInstructionDto'}, 'description': '**Optional**. A JSON array of instructions that specify which activities to start the process instance at.\\nIf this property is omitted, the process instance starts at its default blank start event.'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started or ended as part of this request.\\n**Note**: This option is currently only respected when start instructions are submitted\\nvia the startInstructions property.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution of\\n[input/output variable mappings](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#input-output-variable-mapping)\\nfor activities that are started or ended as part of this request.\\n**Note**: This option is currently only respected when start instructions are submitted\\nvia the startInstructions property.'}, 'withVariablesInReturn': {'type': 'boolean', 'nullable': True, 'description': 'Indicates if the variables, which was used by the process instance during execution, should be returned.\\nDefault value: false '}}} Usage: cctl apply startProcessInstanceByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply startProcessInstanceByKeyAndTenantId \u00b6 Start Instance Instantiates a given process definition, starts the latest version of the process definition for tenant. Process variables and business key may be supplied in the request body. URL: /process-definition/key/{key}/tenant-id/{tenant-id}/start Schema: {'type': 'object', 'properties': {'businessKey': {'type': 'string', 'nullable': True, 'description': 'The business key of the process instance.'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': ''}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'The case instance id the process instance is to be initialized with.'}, 'startInstructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/ProcessInstanceModificationInstructionDto'}, 'description': '**Optional**. A JSON array of instructions that specify which activities to start the process instance at.\\nIf this property is omitted, the process instance starts at its default blank start event.'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started or ended as part of this request.\\n**Note**: This option is currently only respected when start instructions are submitted\\nvia the startInstructions property.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution of\\n[input/output variable mappings](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#input-output-variable-mapping)\\nfor activities that are started or ended as part of this request.\\n**Note**: This option is currently only respected when start instructions are submitted\\nvia the startInstructions property.'}, 'withVariablesInReturn': {'type': 'boolean', 'nullable': True, 'description': 'Indicates if the variables, which was used by the process instance during execution, should be returned.\\nDefault value: false '}}} Usage: cctl apply startProcessInstanceByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply submit \u00b6 Submit Form Completes a task and updates process variables using a form submit. There are two difference between this method and the complete method: If the task is in state PENDING - i.e., has been delegated before, it is not completed but resolved. Otherwise it will be completed. If the task has Form Field Metadata defined, the process engine will perform backend validation for any form fields which have validators defined. See the Generated Task Forms section of the User Guide for more information. URL: /task/{id}/submit-form Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs.'}, 'withVariablesInReturn': {'type': 'boolean', 'nullable': True, 'default': False, 'description': \"Indicates whether the response should contain the process variables or not. The\\ndefault is false with a response code of 204 . If set to true the response\\ncontains the process variables and has a response code of 200 . If the task is not\\nassociated with a process instance (e.g. if it's part of a case instance) no\\nvariables will be returned.\"}}} Usage: cctl apply submit [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply submitForm \u00b6 Submit Start Form Starts a process instance using a set of process variables and the business key. If the start event has Form Field Metadata defined, the process engine will perform backend validation for any form fields which have validators defined. See Documentation on Generated Task Forms . URL: /process-definition/{id}/submit-form Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': ''}, 'businessKey': {'type': 'string', 'nullable': True, 'description': 'The business key the process instance is to be initialized with.\\nThe business key uniquely identifies the process instance in the context of the given process definition.'}}} Usage: cctl apply submitForm [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply submitFormByKey \u00b6 Submit Start Form Starts the latest version of the process definition which belongs to no tenant using a set of process variables and the business key. If the start event has Form Field Metadata defined, the process engine will perform backend validation for any form fields which have validators defined. See Documentation on Generated Task Forms . URL: /process-definition/key/{key}/submit-form Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': ''}, 'businessKey': {'type': 'string', 'nullable': True, 'description': 'The business key the process instance is to be initialized with.\\nThe business key uniquely identifies the process instance in the context of the given process definition.'}}} Usage: cctl apply submitFormByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply submitFormByKeyAndTenantId \u00b6 Submit Start Form Starts the latest version of the process definition for a tenant using a set of process variables and the business key. If the start event has Form Field Metadata defined, the process engine will perform backend validation for any form fields which have validators defined. See Documentation on Generated Task Forms . URL: /process-definition/key/{key}/tenant-id/{tenant-id}/submit-form Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': ''}, 'businessKey': {'type': 'string', 'nullable': True, 'description': 'The business key the process instance is to be initialized with.\\nThe business key uniquely identifies the process instance in the context of the given process definition.'}}} Usage: cctl apply submitFormByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply suspensionState \u00b6 Activate/Suspend In Group Activates or suspends process instances by providing certain criteria: Activate/Suspend Process Instance By Process Definition Id \u00b6 suspend processDefinitionId Activate/Suspend Process Instance By Process Definition Key \u00b6 suspend processDefinitionKey processDefinitionTenantId processDefinitionWithoutTenantId Activate/Suspend Process Instance In Group \u00b6 suspend processInstanceIds processInstanceQuery historicProcessInstanceQuery URL: /process-instance/suspended Schema: {'allOf': [{'type': 'object', 'properties': {'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The process definition id of the process instances to activate or suspend.\\n\\n**Note**: This parameter can be used only with combination of suspended .'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'The process definition key of the process instances to activate or suspend.\\n\\n**Note**: This parameter can be used only with combination of suspended , processDefinitionTenantId , and processDefinitionWithoutTenantId .'}, 'processDefinitionTenantId': {'type': 'string', 'nullable': True, 'description': 'Only activate or suspend process instances of a process definition which belongs to a tenant with the given id.\\n\\n**Note**: This parameter can be used only with combination of suspended , processDefinitionKey , and processDefinitionWithoutTenantId .'}, 'processDefinitionWithoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only activate or suspend process instances of a process definition which belongs to no tenant.\\nValue may only be true, as false is the default behavior.\\n\\n**Note**: This parameter can be used only with combination of suspended , processDefinitionKey , and processDefinitionTenantId .'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids which defines a group of process instances\\nwhich will be activated or suspended by the operation.\\n\\n**Note**: This parameter can be used only with combination of suspended , processInstanceQuery , and historicProcessInstanceQuery .'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}}}, {'$ref': '#/components/schemas/SuspensionStateDto'}]} Usage: cctl apply suspensionState [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply suspensionStateAsyncOperation \u00b6 Activate/Suspend In Batch Activates or suspends process instances asynchronously with a list of process instance ids, a process instance query, and/or a historical process instance query. URL: /process-instance/suspended-async Schema: {'allOf': [{'type': 'object', 'properties': {'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids which defines a group of process instances\\nwhich will be activated or suspended by the operation.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}}}, {'$ref': '#/components/schemas/SuspensionStateDto'}]} Usage: cctl apply suspensionStateAsyncOperation [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply suspensionStateBy \u00b6 Activate/Suspend Jobs Activates or suspends jobs matching the given criterion. This can only be on of: * jobDefinitionId * processDefinitionId * processInstanceId * processDefinitionKey URL: /job/suspended Schema: {'allOf': [{'type': 'object', 'description': 'Defines by which selection criterion to activate or suspend jobs.\\nThis selection criterion are mutually exclusive and can only be on of:\\n* jobDefinitionId \\n* processDefinitionId \\n* processInstanceId \\n* processDefinitionKey ', 'properties': {'jobDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The job definition id of the jobs to activate or suspend.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The process definition id of the jobs to activate or suspend.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'The process instance id of the jobs to activate or suspend.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'The process definition key of the jobs to activate or suspend.'}, 'processDefinitionTenantId': {'type': 'string', 'nullable': True, 'description': 'Only activate or suspend jobs of a process definition which belongs to a tenant\\nwith the given id. Works only when selecting with processDefinitionKey .'}, 'processDefinitionWithoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only activate or suspend jobs of a process definition which belongs to no tenant.\\nValue may only be true , as false is the default behavior. Works only when selecting with processDefinitionKey .'}}}, {'$ref': '#/components/schemas/SuspensionStateDto'}]} Usage: cctl apply suspensionStateBy [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply suspensionStateById \u00b6 Activate/Suspend Process Instance By Id Activates or suspends a given process instance by id. URL: /process-instance/{id}/suspended Schema: {'type': 'object', 'properties': {'suspended': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend a given instance \\n(e.g. process instance, job, job definition, or batch). When the value is set to true, \\nthe given instance will be suspended and when the value is set to false, \\nthe given instance will be activated.'}}} Usage: cctl apply suspensionStateById [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply suspensionStateJobDefinition \u00b6 Activate/Suspend Job Definition By Id Activates or suspends a given job definition by id. URL: /job-definition/{id}/suspended Schema: {'allOf': [{'type': 'object', 'properties': {'includeJobs': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend also all jobs of\\nthe referenced job definitions. When the value is set to true , all jobs\\nof the provided job definitions will be activated or suspended and\\nwhen the value is set to false , the suspension state of all jobs\\nof the provided job definitions will not be updated.'}, 'executionDate': {'type': 'string', 'nullable': True, 'description': \"The date on which the referenced job definitions will be activated or suspended. If null,\\nthe suspension state of the given job definitions is updated\\nimmediately. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-\\ndd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}}}, {'$ref': '#/components/schemas/SuspensionStateDto'}]} Usage: cctl apply suspensionStateJobDefinition [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply suspensionStateJobDefinitions \u00b6 Activate/Suspend Job Definitions Activates or suspends job definitions with the given process definition id or process definition key. URL: /job-definition/suspended Schema: {'allOf': [{'type': 'object', 'description': 'Defines by which selection criterion to activate or suspend job definitions.\\nThe selection criteria are mutually exclusive and can only be one of:\\n* processDefinitionId \\n* processDefinitionKey ', 'properties': {'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The process definition id of the job definitions to activate or suspend.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'The process definition key of the job definitions to activate or suspend.'}, 'processDefinitionTenantId': {'type': 'string', 'nullable': True, 'description': 'Only activate or suspend job definitions of a process definition which belongs to a\\ntenant with the given id.\\n\\nNote that this parameter will only be considered \\nin combination with processDefinitionKey .'}, 'processDefinitionWithoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only activate or suspend job definitions of a process definition which belongs to\\nno tenant. Value may only be true , as false is the default\\nbehavior.\\n\\nNote that this parameter will only be considered \\nin combination with processDefinitionKey .'}}}, {'$ref': '#/components/schemas/JobDefinitionSuspensionStateDto'}]} Usage: cctl apply suspensionStateJobDefinitions [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply task \u00b6 Update Updates a task. URL: /task/{id} Schema: {'type': 'object', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'The task id.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'The task name.'}, 'assignee': {'type': 'string', 'nullable': True, 'description': \"The assignee's id.\"}, 'owner': {'type': 'string', 'nullable': True, 'description': \"The owner's id.\"}, 'created': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The date the task was created on.\\n[Default format](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ .\"}, 'due': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The task's due date.\\n[Default format](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ .\"}, 'followUp': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The follow-up date for the task.\\n[Default format](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ .\"}, 'delegationState': {'type': 'string', 'nullable': True, 'enum': ['PENDING', 'RESOLVED'], 'description': \"The task's delegation state. Possible values are PENDING and RESOLVED .\"}, 'description': {'type': 'string', 'nullable': True, 'description': \"The task's description.\"}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'The id of the execution the task belongs to.'}, 'parentTaskId': {'type': 'string', 'nullable': True, 'description': 'The id the parent task, if this task is a subtask.'}, 'priority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': \"The task's priority.\"}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the process definition the task belongs to.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'The id of the process instance the task belongs to.'}, 'caseExecutionId': {'type': 'string', 'nullable': True, 'description': 'The id of the case execution the task belongs to.'}, 'caseDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the case definition the task belongs to.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'The id of the case instance the task belongs to.'}, 'taskDefinitionKey': {'type': 'string', 'nullable': True, 'description': \"The task's key.\"}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Whether the task belongs to a process instance that is suspended.'}, 'formKey': {'type': 'string', 'nullable': True, 'description': 'If not null , the form key for the task.'}, 'camundaFormRef': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/CamundaFormRef'}, 'description': 'A reference to a specific version of a Camunda Form.'}, 'tenantId': {'type': 'string', 'nullable': True, 'description': 'If not null , the tenant id of the task.'}}} Usage: cctl apply task [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply tenant \u00b6 Update Tenant Updates a given tenant. URL: /tenant/{id} Schema: {'type': 'object', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'The id of the tenant.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'The name of the tenant.'}}} Usage: cctl apply tenant [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply throwSignal \u00b6 Event A signal is an event of global scope (broadcast semantics) and is delivered to all active handlers. Internally this maps to the engine's signal event received builder method RuntimeService#createSignalEvent() . For more information about the signal behavior, see the Signal Events section of the BPMN 2.0 Implementation Reference . URL: /signal Schema: {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of the signal to deliver.\\n\\n**Note**: This property is mandatory.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Optionally specifies a single execution which is notified by the signal.\\n\\n**Note**: If no execution id is defined the signal is broadcasted to all subscribed\\nhandlers. '}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs. Each key is a variable name and\\neach value a JSON variable value object.'}, 'tenantId': {'type': 'string', 'nullable': True, 'description': 'Specifies a tenant to deliver the signal. The signal can only be received on\\nexecutions or process definitions which belongs to the given tenant.\\n\\n**Note**: Cannot be used in combination with executionId.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'If true the signal can only be received on executions or process definitions which\\nbelongs to no tenant. Value may not be false as this is the default behavior.\\n\\n**Note**: Cannot be used in combination with executionId .'}}} Usage: cctl apply throwSignal [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply triggerEvent \u00b6 Trigger Message Event Subscription Delivers a message to a specific execution by id, to trigger an existing message event subscription. Inject process variables as the message's payload. URL: /execution/{id}/messageSubscriptions/{messageName}/trigger Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs. Each key is a variable name and\\neach value a JSON variable value object.'}}} Usage: cctl apply triggerEvent [OPTIONS] MESSAGENAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply unclaim \u00b6 Unclaim Resets a task's assignee. If successful, the task is not assigned to a user. URL: /task/{id}/unclaim Schema: - Usage: cctl apply unclaim [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply unlock \u00b6 Unlock Unlocks an external task by id. Clears the task's lock expiration time and worker id. URL: /external-task/{id}/unlock Schema: - Usage: cctl apply unlock [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply unlockUser \u00b6 Unlock User Unlocks a user by id. URL: /user/{id}/unlock Schema: - Usage: cctl apply unlockUser [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply validateMigrationPlan \u00b6 Validate Migration Plan Validates a migration plan statically without executing it. This corresponds to the creation time validation described in the user guide. URL: /migration/validate Schema: {'type': 'object', 'properties': {'sourceProcessDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the source process definition for the migration.'}, 'targetProcessDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the target process definition for the migration.'}, 'instructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/MigrationInstructionDto'}, 'description': 'A list of migration instructions which map equal activities. Each\\nmigration instruction is a JSON object with the following properties:'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': \"A map of variables which will be set into the process instances' scope.\\nEach key is a variable name and each value a JSON variable value object.\"}}} Usage: cctl apply validateMigrationPlan [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply variablesAsyncOperation \u00b6 Set Variables Async (POST) Update or create runtime process variables in the root scope of process instances. URL: /process-instance/variables-async Schema: {'type': 'object', 'properties': {'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids that define a group of process instances\\nto which the operation will set variables.\\n\\nPlease note that if processInstanceIds , processInstanceQuery and historicProcessInstanceQuery \\nare defined, the resulting operation will be performed on the union of these sets.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A variables the operation will set in the root scope of the process instances.'}}} Usage: cctl apply variablesAsyncOperation [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl apply verifyUser \u00b6 Verify User Verifies that user credentials are valid. URL: /identity/verify Schema: {'type': 'object', 'properties': {'username': {'type': 'string', 'nullable': True, 'description': 'The username of a user.'}, 'password': {'type': 'string', 'nullable': True, 'description': 'A password of a user.'}}} Usage: cctl apply verifyUser [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False cctl delete \u00b6 delete ressources Usage: cctl delete [OPTIONS] COMMAND [ARGS]... Options: Name Type Description Default -e , --engine text N/A None --help boolean Show this message and exit. False cctl delete attachment \u00b6 Delete Removes an attachment from a task by id. URL: /task/{id}/attachment/{attachmentId} Schema: - Usage: cctl delete attachment [OPTIONS] ATTACHMENTID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete authorization \u00b6 Delete Authorization Deletes an authorization by id. URL: /authorization/{id} Schema: - Usage: cctl delete authorization [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete batch \u00b6 Delete Deletes a batch by id, including all related jobs and job definitions. Optionally also deletes the batch history. URL: /batch/{id} Schema: - Usage: cctl delete batch [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --cascade / --not-cascade boolean true , if the historic batch and historic job logs for this batch should also be deleted. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete clearIncidentAnnotation \u00b6 Clear Incident Annotation Clears the annotation of an incident with given id. URL: /incident/{id}/annotation Schema: - Usage: cctl delete clearIncidentAnnotation [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete deployment \u00b6 Delete Deletes a deployment by id. URL: /deployment/{id} Schema: - Usage: cctl delete deployment [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --skip-io-mappings / --not-skip-io-mappings boolean true , if all input/output mappings should not be invoked. None --skip-custom-listeners / --not-skip-custom-listeners boolean true , if only the built-in ExecutionListeners should be notified with the end event. None --cascade / --not-cascade boolean true , if all process instances, historic process instances and jobs for this deployment should be deleted. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete filter \u00b6 Delete Filter Deletes a filter by id. URL: /filter/{id} Schema: - Usage: cctl delete filter [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete group \u00b6 Delete Group Deletes a group by id. URL: /group/{id} Schema: - Usage: cctl delete group [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete groupMember \u00b6 Delete a Group Member Removes a member from a group. URL: /group/{id}/members/{userId} Schema: - Usage: cctl delete groupMember [OPTIONS] USERID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete groupMembership \u00b6 Create Tenant Group Membership Creates a membership between a tenant and a group. URL: /tenant/{id}/group-members/{groupId} Schema: - Usage: cctl delete groupMembership [OPTIONS] GROUPID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete historicBatch \u00b6 Delete Historic Batch Deletes a historic batch by id, including related historic job logs. URL: /history/batch/{id} Schema: - Usage: cctl delete historicBatch [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete historicProcessInstance \u00b6 Delete Deletes a process instance from the history by id. URL: /history/process-instance/{id} Schema: - Usage: cctl delete historicProcessInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --fail-if-not-exists / --not-fail-if-not-exists boolean If set to false , the request will still be successful if the process id is not found. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete historicVariableInstance \u00b6 Delete Variable Instance Deletes a historic variable instance by id. URL: /history/variable-instance/{id} Schema: - Usage: cctl delete historicVariableInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete historicVariableInstancesOfHistoricProcessInstance \u00b6 Delete Variable Instances Deletes all variables of a process instance from the history by id. URL: /history/process-instance/{id}/variable-instances Schema: - Usage: cctl delete historicVariableInstancesOfHistoricProcessInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete incident \u00b6 Resolve Incident Resolves an incident with given id. URL: /incident/{id} Schema: - Usage: cctl delete incident [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete localExecutionVariable \u00b6 Delete Local Execution Variable Deletes a variable in the context of a given execution by id. Deletion does not propagate upwards in the execution hierarchy. URL: /execution/{id}/localVariables/{varName} Schema: - Usage: cctl delete localExecutionVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete processDefinition \u00b6 Delete Deletes a running process instance by id. URL: /process-definition/{id} Schema: - Usage: cctl delete processDefinition [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --skip-io-mappings / --not-skip-io-mappings boolean A boolean value to control whether input/output mappings should be executed during deletion. true , if input/output mappings should not be invoked. None --skip-custom-listeners / --not-skip-custom-listeners boolean true , if only the built-in ExecutionListeners should be notified with the end event. None --cascade / --not-cascade boolean true , if all process instances, historic process instances and jobs for this process definition should be deleted. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete processDefinitionsByKey \u00b6 Delete By Key Deletes process definitions by a given key which belong to no tenant id. URL: /process-definition/key/{key} Schema: - Usage: cctl delete processDefinitionsByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --skip-io-mappings / --not-skip-io-mappings boolean A boolean value to control whether input/output mappings should be executed during deletion. true , if input/output mappings should not be invoked. None --skip-custom-listeners / --not-skip-custom-listeners boolean true , if only the built-in ExecutionListeners should be notified with the end event. None --cascade / --not-cascade boolean true , if all process instances, historic process instances and jobs for this process definition should be deleted. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete processDefinitionsByKeyAndTenantId \u00b6 Delete By Key Deletes process definitions by a given key and which belong to a tenant id. URL: /process-definition/key/{key}/tenant-id/{tenant-id} Schema: - Usage: cctl delete processDefinitionsByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --skip-io-mappings / --not-skip-io-mappings boolean A boolean value to control whether input/output mappings should be executed during deletion. true , if input/output mappings should not be invoked. None --skip-custom-listeners / --not-skip-custom-listeners boolean true , if only the built-in ExecutionListeners should be notified with the end event. None --cascade / --not-cascade boolean true , if all process instances, historic process instances and jobs for this process definition should be deleted. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete processInstance \u00b6 Delete Deletes a running process instance by id. URL: /process-instance/{id} Schema: - Usage: cctl delete processInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --fail-if-not-exists / --not-fail-if-not-exists boolean If set to false, the request will still be successful if the process id is not found. None --skip-subprocesses / --not-skip-subprocesses boolean If set to true, subprocesses related to deleted processes will be skipped. None --skip-io-mappings / --not-skip-io-mappings boolean If set to true, the input/output mappings will be skipped. None --skip-custom-listeners / --not-skip-custom-listeners boolean If set to true, the custom listeners will be skipped. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete processInstanceVariable \u00b6 Delete Process Variable Deletes a variable of a process instance by id. URL: /process-instance/{id}/variables/{varName} Schema: - Usage: cctl delete processInstanceVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete task \u00b6 Delete Removes a task by id. URL: /task/{id} Schema: - Usage: cctl delete task [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete taskLocalVariable \u00b6 Delete Local Task Variable Removes a local variable from a task by id. URL: /task/{id}/localVariables/{varName} Schema: - Usage: cctl delete taskLocalVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete taskMetrics \u00b6 Delete Task Worker Metrics Deletes all task worker metrics prior to the given date or all if no date is provided. URL: /metrics/task-worker Schema: - Usage: cctl delete taskMetrics [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --date text The date prior to which all task worker metrics should be deleted. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete taskVariable \u00b6 Delete Task Variable Removes a variable that is visible to a task. A variable is visible to a task if it is a local task variable or declared in a parent scope of the task. See documentation on visiblity of variables . URL: /task/{id}/variables/{varName} Schema: - Usage: cctl delete taskVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete tenant \u00b6 Delete Tenant Deletes a tenant by id. URL: /tenant/{id} Schema: - Usage: cctl delete tenant [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete user \u00b6 Delete Deletes a user by id. URL: /user/{id} Schema: - Usage: cctl delete user [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl delete userMembership \u00b6 Delete a Tenant User Membership Deletes a membership between a tenant and an user. URL: /tenant/{id}/user-members/{userId} Schema: - Usage: cctl delete userMembership [OPTIONS] USERID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False cctl describe \u00b6 get complex collected information about engine ressources Usage: cctl describe [OPTIONS] COMMAND [ARGS]... Options: Name Type Description Default -e , --engine text N/A None --help boolean Show this message and exit. False cctl get \u00b6 query resources of camunda engine Usage: cctl get [OPTIONS] COMMAND [ARGS]... Options: Name Type Description Default -e , --engine text N/A None --help boolean Show this message and exit. False cctl get activityInstanceTree \u00b6 Get Activity Instance Retrieves an Activity Instance (Tree) for a given process instance by id. URL: /process-instance/{id}/activity-instances Schema: - Usage: cctl get activityInstanceTree [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get activityStatistics \u00b6 Get Activity Instance Statistics Retrieves runtime statistics of a given process definition, grouped by activities. These statistics include the number of running activity instances, optionally the number of failed jobs and also optionally the number of incidents either grouped by incident types or for a specific incident type. Note : This does not include historic data. URL: /process-definition/{id}/statistics Schema: - Usage: cctl get activityStatistics [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --incidents-for-type text If this property has been set with any incident type (i.e., a string value) the result will only include the number of incidents for the assigned incident type. Cannot be used in combination with incidents . See the User Guide for a list of incident types. None --incidents / --not-incidents boolean Valid values for this property are true or false . If this property has been set to true the result will include the corresponding number of incidents for each occurred incident type. If it is set to false , the incidents will not be included in the result. Cannot be used in combination with incidentsForType . None --failed-jobs / --not-failed-jobs boolean Whether to include the number of failed jobs in the result or not. Valid values are true or false . None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get activityStatisticsByProcessDefinitionKey \u00b6 Get Activity Instance Statistics Retrieves runtime statistics of the latest version of the given process definition which belongs to no tenant, grouped by activities. These statistics include the number of running activity instances, optionally the number of failed jobs and also optionally the number of incidents either grouped by incident types or for a specific incident type. Note : This does not include historic data. URL: /process-definition/key/{key}/statistics Schema: - Usage: cctl get activityStatisticsByProcessDefinitionKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --incidents-for-type text If this property has been set with any incident type (i.e., a string value) the result will only include the number of incidents for the assigned incident type. Cannot be used in combination with incidents . See the User Guide for a list of incident types. None --incidents / --not-incidents boolean Valid values for this property are true or false . If this property has been set to true the result will include the corresponding number of incidents for each occurred incident type. If it is set to false , the incidents will not be included in the result. Cannot be used in combination with incidentsForType . None --failed-jobs / --not-failed-jobs boolean Whether to include the number of failed jobs in the result or not. Valid values are true or false . None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get activityStatisticsByProcessDefinitionKeyAndTenantId \u00b6 Get Activity Instance Statistics Retrieves runtime statistics of the latest version of the given process definition for a tenant, grouped by activities. These statistics include the number of running activity instances, optionally the number of failed jobs and also optionally the number of incidents either grouped by incident types or for a specific incident type. Note : This does not include historic data. URL: /process-definition/key/{key}/tenant-id/{tenant-id}/statistics Schema: - Usage: cctl get activityStatisticsByProcessDefinitionKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --incidents-for-type text If this property has been set with any incident type (i.e., a string value) the result will only include the number of incidents for the assigned incident type. Cannot be used in combination with incidents . See the User Guide for a list of incident types. None --incidents / --not-incidents boolean Valid values for this property are true or false . If this property has been set to true the result will include the corresponding number of incidents for each occurred incident type. If it is set to false , the incidents will not be included in the result. Cannot be used in combination with incidentsForType . None --failed-jobs / --not-failed-jobs boolean Whether to include the number of failed jobs in the result or not. Valid values are true or false . None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get attachment \u00b6 Get Retrieves a task attachment by task id and attachment id. URL: /task/{id}/attachment/{attachmentId} Schema: - Usage: cctl get attachment [OPTIONS] ATTACHMENTID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get attachmentData \u00b6 Get (Binary) Retrieves the binary content of a task attachment by task id and attachment id. URL: /task/{id}/attachment/{attachmentId}/data Schema: - Usage: cctl get attachmentData [OPTIONS] ATTACHMENTID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get attachments \u00b6 Get List Gets the attachments for a task. URL: /task/{id}/attachment Schema: - Usage: cctl get attachments [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get authorization \u00b6 Get Authorization Retrieves an authorization by id. URL: /authorization/{id} Schema: - Usage: cctl get authorization [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get authorizationCount \u00b6 Get Authorization Count Queries for authorizations using a list of parameters and retrieves the count. URL: /authorization/count Schema: - Usage: cctl get authorizationCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --resource-id text Filter by resource id. None --resource-type text Filter by an integer representation of the resource type. See the User Guide for a list of integer representations of resource types. None --group-id-in text Filter by a comma-separated list of groupIds. None --user-id-in text Filter by a comma-separated list of userIds. None --type text Filter by authorization type. (0=global, 1=grant, 2=revoke). See the User Guide for more information about authorization types. None --id text Filter by the id of the authorization. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get batch \u00b6 Get Retrieves a batch by id, according to the Batch interface in the engine. URL: /batch/{id} Schema: - Usage: cctl get batch [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get batchStatistics \u00b6 Get Statistics Queries for batch statistics that fulfill given parameters. Parameters may be the properties of batches, such as the id or type. The size of the result set can be retrieved by using the Get Batch Statistics Count method. URL: /batch/statistics Schema: - Usage: cctl get batchStatistics [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --suspended / --not-suspended boolean A Boolean value which indicates whether only active or suspended batches should be included. When the value is set to true , only suspended batches will be returned and when the value is set to false , only active batches will be returned. None --without-tenant-id / --not-without-tenant-id boolean Only include batches which belong to no tenant. Value can effectively only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of Strings . A batch matches if it has one of the given tenant ids. None --type text Filter by batch type. See the User Guide for more information about batch types. None --batch-id text Filter by batch id. None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get batchStatisticsCount \u00b6 Get Statistics Count Requests the number of batch statistics that fulfill the query criteria. Takes the same filtering parameters as the Get Batch Statistics method. URL: /batch/statistics/count Schema: - Usage: cctl get batchStatisticsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --suspended / --not-suspended boolean A Boolean value which indicates whether only active or suspended batches should be included. When the value is set to true , only suspended batches will be returned and when the value is set to false , only active batches will be returned. None --without-tenant-id / --not-without-tenant-id boolean Only include batches which belong to no tenant. Value can effectively only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of Strings . A batch matches if it has one of the given tenant ids. None --type text Filter by batch type. See the User Guide for more information about batch types. None --batch-id text Filter by batch id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get batches \u00b6 Get List Queries for batches that fulfill given parameters. Parameters may be the properties of batches, such as the id or type. The size of the result set can be retrieved by using the Get Batch Count method. URL: /batch Schema: - Usage: cctl get batches [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --suspended / --not-suspended boolean A Boolean value which indicates whether only active or suspended batches should be included. When the value is set to true , only suspended batches will be returned and when the value is set to false , only active batches will be returned. None --without-tenant-id / --not-without-tenant-id boolean Only include batches which belong to no tenant. Value can effectively only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of Strings . A batch matches if it has one of the given tenant ids. None --type text Filter by batch type. See the User Guide for more information about batch types. None --batch-id text Filter by batch id. None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get batchesCount \u00b6 Get List Count Requests the number of batches that fulfill the query criteria. Takes the same filtering parameters as the Get Batches method. URL: /batch/count Schema: - Usage: cctl get batchesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --suspended / --not-suspended boolean A Boolean value which indicates whether only active or suspended batches should be included. When the value is set to true , only suspended batches will be returned and when the value is set to false , only active batches will be returned. None --without-tenant-id / --not-without-tenant-id boolean Only include batches which belong to no tenant. Value can effectively only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of Strings . A batch matches if it has one of the given tenant ids. None --type text Filter by batch type. See the User Guide for more information about batch types. None --batch-id text Filter by batch id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get cleanableHistoricBatchesReport \u00b6 Get Cleanable Batch Report Retrieves a report about a historic batch operations relevant to history cleanup (see History cleanup ) so that you can tune the history time to live. These reports include the count of the finished batches, cleanable batches and type of the batch. The size of the result set can be retrieved by using the Get Cleanable Batch Report Count method. Please note: The history time to live for batch operations does not support Multi-Tenancy . The report will return an information for all batch operations (for all tenants) if you have permissions to see the history. URL: /history/batch/cleanable-batch-report Schema: - Usage: cctl get cleanableHistoricBatchesReport [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get cleanableHistoricBatchesReportCount \u00b6 Get Cleanable Batch Report Count Queries for the number of report results about a historic batch operations relevant to history cleanup (see History cleanup ). Takes the same parameters as the Get Cleanable Batch Report method. URL: /history/batch/cleanable-batch-report/count Schema: - Usage: cctl get cleanableHistoricBatchesReportCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get cleanableHistoricDecisionInstanceReport \u00b6 Get Cleanable Decision Instance Report Retrieves a report about a decision definition and finished decision instances relevant to history cleanup (see History cleanup ), so that you can tune the history time to live. These reports include the count of the finished historic decision instances, cleanable decision instances and basic decision definition data - id, key, name and version. The size of the result set can be retrieved by using the Get Cleanable Decision Instance Report Count method. URL: /history/decision-definition/cleanable-decision-instance-report Schema: - Usage: cctl get cleanableHistoricDecisionInstanceReport [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --compact / --not-compact boolean Only include decision instances which have more than zero finished instances. Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include decision definitions which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A decision definition must have one of the given tenant ids. None --decision-definition-key-in text Filter by decision definition keys. Must be a comma-separated list of decision definition keys. None --decision-definition-id-in text Filter by decision definition ids. Must be a comma-separated list of decision definition ids. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get cleanableHistoricDecisionInstanceReportCount \u00b6 Get Cleanable Decision Instance Report Count Queries for the number of report results about a decision definition and finished decision instances relevant to history cleanup (see History cleanup ). Takes the same parameters as the Get Cleanable Decision Instance Report method. URL: /history/decision-definition/cleanable-decision-instance-report/count Schema: - Usage: cctl get cleanableHistoricDecisionInstanceReportCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --compact / --not-compact boolean Only include decision instances which have more than zero finished instances. Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include decision definitions which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A decision definition must have one of the given tenant ids. None --decision-definition-key-in text Filter by decision definition keys. Must be a comma-separated list of decision definition keys. None --decision-definition-id-in text Filter by decision definition ids. Must be a comma-separated list of decision definition ids. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get cleanableHistoricProcessInstanceReport \u00b6 Get Cleanable Process Instance Report Retrieves a report about a process definition and finished process instances relevant to history cleanup (see History cleanup ) so that you can tune the history time to live. These reports include the count of the finished historic process instances, cleanable process instances and basic process definition data - id, key, name and version. The size of the result set can be retrieved by using the Get Cleanable Process Instance Report Count method. URL: /history/process-definition/cleanable-process-instance-report Schema: - Usage: cctl get cleanableHistoricProcessInstanceReport [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --compact / --not-compact boolean Only include process instances which have more than zero finished instances. Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include process definitions which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A process definition must have one of the given tenant ids. None --process-definition-key-in text Filter by process definition keys. Must be a comma-separated list of process definition keys. None --process-definition-id-in text Filter by process definition ids. Must be a comma-separated list of process definition ids. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get cleanableHistoricProcessInstanceReportCount \u00b6 Get Cleanable Process Instance Report Count Queries for the number of report results about a process definition and finished process instances relevant to history cleanup (see History cleanup ). Takes the same parameters as the Get Cleanable Process Instance Report method. URL: /history/process-definition/cleanable-process-instance-report/count Schema: - Usage: cctl get cleanableHistoricProcessInstanceReportCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --compact / --not-compact boolean Only include process instances which have more than zero finished instances. Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include process definitions which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A process definition must have one of the given tenant ids. None --process-definition-key-in text Filter by process definition keys. Must be a comma-separated list of process definition keys. None --process-definition-id-in text Filter by process definition ids. Must be a comma-separated list of process definition ids. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get comment \u00b6 Get Retrieves a task comment by task id and comment id. URL: /task/{id}/comment/{commentId} Schema: - Usage: cctl get comment [OPTIONS] COMMENTID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get comments \u00b6 Get List Gets the comments for a task by id. URL: /task/{id}/comment Schema: - Usage: cctl get comments [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionDefinitionById \u00b6 Get Decision Definition By Id Retrieves a decision definition by id, according to the DecisionDefinition interface in the engine. URL: /decision-definition/{id} Schema: - Usage: cctl get decisionDefinitionById [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionDefinitionByKey \u00b6 Get Decision Definition By Key Retrieves the latest version of the decision definition which belongs to no tenant. URL: /decision-definition/key/{key} Schema: - Usage: cctl get decisionDefinitionByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionDefinitionByKeyAndTenantId \u00b6 Get Decision Definition By Key And Tenant Id Retrieves the latest version of the decision definition for tenant URL: /decision-definition/key/{key}/tenant-id/{tenant-id} Schema: - Usage: cctl get decisionDefinitionByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionDefinitionDiagram \u00b6 Get Diagram Retrieves the diagram of a decision definition. URL: /decision-definition/{id}/diagram Schema: - Usage: cctl get decisionDefinitionDiagram [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionDefinitionDiagramByKey \u00b6 Get Diagram By Key Returns the diagram for the latest version of the decision definition which belongs to no tenant URL: /decision-definition/key/{key}/diagram Schema: - Usage: cctl get decisionDefinitionDiagramByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionDefinitionDiagramByKeyAndTenant \u00b6 Get Diagram By Key And Tenant Returns the XML of the latest version of the decision definition for tenant. URL: /decision-definition/key/{key}/tenant-id/{tenant-id}/diagram Schema: - Usage: cctl get decisionDefinitionDiagramByKeyAndTenant [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionDefinitionDmnXmlById \u00b6 Get XML By Id Retrieves the DMN XML of a decision definition. URL: /decision-definition/{id}/xml Schema: - Usage: cctl get decisionDefinitionDmnXmlById [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionDefinitionDmnXmlByKey \u00b6 Get XML By Key Retrieves the XML for the latest version of the decision definition which belongs to no tenant. URL: /decision-definition/key/{key}/xml Schema: - Usage: cctl get decisionDefinitionDmnXmlByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionDefinitionDmnXmlByKeyAndTenant \u00b6 Get XML By Key and Tenant Retrieves the XML of the latest version of the decision definition for tenant URL: /decision-definition/key/{key}/tenant-id/{tenant-id}/xml Schema: - Usage: cctl get decisionDefinitionDmnXmlByKeyAndTenant [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionDefinitions \u00b6 Get List Queries for decision definitions that fulfill given parameters. Parameters may be the properties of decision definitions, such as the name, key or version. The size of the result set can be retrieved by using the Get Decision Definition Count method. URL: /decision-definition Schema: - Usage: cctl get decisionDefinitions [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --version-tag-like text Filter by the version tags of those decision definition resources that the parameter is a substring of. None --version-tag text Filter by the version tag. None --include-decision-definitions-without-tenant-id / --not-include-decision-definitions-without-tenant-id boolean Include decision definitions which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include decision definitions which belong to no tenant. Value can effectively only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of Strings . A decision definition must have one of the given tenant ids. None --without-decision-requirements-definition / --not-without-decision-requirements-definition boolean Only include decision definitions which does not belongs to any decision requirements definition. Value may only be true , as false is the default behavior. None --decision-requirements-definition-key text Filter by the key of the decision requirements definition this decision definition belongs to. None --decision-requirements-definition-id text Filter by the id of the decision requirements definition this decision definition belongs to. None --resource-name-like text Filter by names of those decision definition resources that the parameter is a substring of. None --resource-name text Filter by the name of the decision definition resource. Exact match. None --latest-version / --not-latest-version boolean Only include those decision definitions that are latest versions. Value may only be true , as false is the default behavior. None --version text Filter by decision definition version. None --category-like text Filter by decision definition categories that the parameter is a substring of. None --category text Filter by decision definition category. Exact match. None --key-like text Filter by decision definition keys that the parameter is a substring of. None --key text Filter by decision definition key, i.e., the id in the DMN 1.0 XML. Exact match. None --deployed-at text Filter by the deploy time of the deployment the decision definition belongs to. Only selects decision definitions that have been deployed at a specific time (exact match). None --deployed-after text Filter by the deploy time of the deployment the decision definition belongs to. Only selects decision definitions that have been deployed after (exclusive) a specific time. None --deployment-id text Filter by the deployment the id belongs to. None --name-like text Filter by decision definition names that the parameter is a substring of. None --name text Filter by decision definition name. None --decision-definition-id-in text Filter by decision definition ids. None --decision-definition-id text Filter by decision definition id. None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionDefinitionsCount \u00b6 Get List Count Requests the number of decision definitions that fulfill the query criteria. Takes the same filtering parameters as the Get Decision Definition method. URL: /decision-definition/count Schema: - Usage: cctl get decisionDefinitionsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --version-tag-like text Filter by the version tags of those decision definition resources that the parameter is a substring of. None --version-tag text Filter by the version tag. None --include-decision-definitions-without-tenant-id / --not-include-decision-definitions-without-tenant-id boolean Include decision definitions which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include decision definitions which belong to no tenant. Value can effectively only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of Strings . A decision definition must have one of the given tenant ids. None --without-decision-requirements-definition / --not-without-decision-requirements-definition boolean Only include decision definitions which does not belongs to any decision requirements definition. Value may only be true , as false is the default behavior. None --decision-requirements-definition-key text Filter by the key of the decision requirements definition this decision definition belongs to. None --decision-requirements-definition-id text Filter by the id of the decision requirements definition this decision definition belongs to. None --resource-name-like text Filter by names of those decision definition resources that the parameter is a substring of. None --resource-name text Filter by the name of the decision definition resource. Exact match. None --latest-version / --not-latest-version boolean Only include those decision definitions that are latest versions. Value may only be true , as false is the default behavior. None --version text Filter by decision definition version. None --category-like text Filter by decision definition categories that the parameter is a substring of. None --category text Filter by decision definition category. Exact match. None --key-like text Filter by decision definition keys that the parameter is a substring of. None --key text Filter by decision definition key, i.e., the id in the DMN 1.0 XML. Exact match. None --deployed-at text Filter by the deploy time of the deployment the decision definition belongs to. Only selects decision definitions that have been deployed at a specific time (exact match). None --deployed-after text Filter by the deploy time of the deployment the decision definition belongs to. Only selects decision definitions that have been deployed after (exclusive) a specific time. None --deployment-id text Filter by the deployment the id belongs to. None --name-like text Filter by decision definition names that the parameter is a substring of. None --name text Filter by decision definition name. None --decision-definition-id-in text Filter by decision definition ids. None --decision-definition-id text Filter by decision definition id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionRequirementsDefinitionById \u00b6 Get Decision Requirements Definition by ID Retrieves a decision requirements definition according to the DecisionRequirementsDefinition interface in the engine. URL: /decision-requirements-definition/{id} Schema: - Usage: cctl get decisionRequirementsDefinitionById [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionRequirementsDefinitionByKey \u00b6 Get Decision Requirements Definition by Key Retrieves a decision requirements definition according to the DecisionRequirementsDefinition interface in the engine. Returns the latest version of the decision requirements definition which belongs to no tenant. URL: /decision-requirements-definition/key/{key} Schema: - Usage: cctl get decisionRequirementsDefinitionByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionRequirementsDefinitionByKeyAndTenantId \u00b6 Get Decision Requirements Definition by Key and Tenant ID Retrieves a decision requirements definition according to the DecisionRequirementsDefinition interface in the engine. Returns the latest version of the decision requirements definition for a tenant. URL: /decision-requirements-definition/key/{key}/tenant-id/{tenant-id} Schema: - Usage: cctl get decisionRequirementsDefinitionByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionRequirementsDefinitionDiagramById \u00b6 Get Decision Requirements Diagram by ID Retrieves the diagram of a decision requirements definition. URL: /decision-requirements-definition/{id}/diagram Schema: - Usage: cctl get decisionRequirementsDefinitionDiagramById [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionRequirementsDefinitionDiagramByKey \u00b6 Get Decision Requirements Diagram by Key Retrieves the diagram of a decision requirements definition. Returns the diagram for the latest version of the decision requirements definition which belongs to no tenant. URL: /decision-requirements-definition/key/{key}/diagram Schema: - Usage: cctl get decisionRequirementsDefinitionDiagramByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionRequirementsDefinitionDiagramByKeyAndTenantId \u00b6 Get Decision Requirements Diagram by Key and Tenant ID Retrieves the diagram of a decision requirements definition. Returns the diagram of the latest version of the decision requirements definition for a tenant. URL: /decision-requirements-definition/key/{key}/tenant-id/{tenant-id}/diagram Schema: - Usage: cctl get decisionRequirementsDefinitionDiagramByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionRequirementsDefinitionDmnXmlById \u00b6 Get DMN XML by ID Retrieves the DMN XML of a decision requirements definition. URL: /decision-requirements-definition/{id}/xml Schema: - Usage: cctl get decisionRequirementsDefinitionDmnXmlById [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionRequirementsDefinitionDmnXmlByKey \u00b6 Get DMN XML by Key Retrieves the DMN XML of a decision requirements definition. Returns the XML for the latest version of the decision requirements definition which belongs to no tenant. URL: /decision-requirements-definition/key/{key}/xml Schema: - Usage: cctl get decisionRequirementsDefinitionDmnXmlByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionRequirementsDefinitionDmnXmlByKeyAndTenantId \u00b6 Get DMN XML by Key and Tenant ID Retrieves the DMN XML of a decision requirements definition. Returns the XML of the latest version of the decision requirements definition for a tenant. URL: /decision-requirements-definition/key/{key}/tenant-id/{tenant-id}/xml Schema: - Usage: cctl get decisionRequirementsDefinitionDmnXmlByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionRequirementsDefinitions \u00b6 Get Decision Requirements Definitions Queries for decision requirements definitions that fulfill given parameters. Parameters may be the properties of decision requirements definitions, such as the name, key or version. The size of the result set can be retrieved by using the Get Decision Requirements Definition Count method. URL: /decision-requirements-definition Schema: - Usage: cctl get decisionRequirementsDefinitions [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --include-decision-requirements-definitions-without-tenant-id / --not-include-decision-requirements-definitions-without-tenant-id boolean Include decision requirements definitions which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include decision requirements definitions which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A decision requirements definition must have one of the given tenant ids. None --resource-name-like text Filter by names of those decision requirements definition resources that the parameter is a substring of. None --resource-name text Filter by the name of the decision requirements definition resource. Exact match. None --latest-version / --not-latest-version boolean Only include those decision requirements definitions that are latest versions. Value may only be true , as false is the default behavior. None --version text Filter by decision requirements definition version. None --category-like text Filter by decision requirements definition categories that the parameter is a substring of. None --category text Filter by decision requirements definition category. Exact match. None --key-like text Filter by decision requirements definition keys that the parameter is a substring of. None --key text Filter by decision requirements definition key, i.e., the id in the DMN 1.3 XML. Exact match. None --deployment-id text Filter by the id of the deployment a decision requirement definition belongs to. None --name-like text Filter by decision requirements definition names that the parameter is a substring of. None --name text Filter by decision requirements definition name. None --decision-requirements-definition-id-in text Filter by decision requirements definition ids. None --decision-requirements-definition-id text Filter by decision requirements definition id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionRequirementsDefinitionsCount \u00b6 Get Decision Requirements Definition Count Requests the number of decision requirements definitions that fulfill the query criteria. Takes the same filtering parameters as the Get Decision Requirements Definitions method. URL: /decision-requirements-definition/count Schema: - Usage: cctl get decisionRequirementsDefinitionsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --include-decision-requirements-definitions-without-tenant-id / --not-include-decision-requirements-definitions-without-tenant-id boolean Include decision requirements definitions which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include decision requirements definitions which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A decision requirements definition must have one of the given tenant ids. None --resource-name-like text Filter by names of those decision requirements definition resources that the parameter is a substring of. None --resource-name text Filter by the name of the decision requirements definition resource. Exact match. None --latest-version / --not-latest-version boolean Only include those decision requirements definitions that are latest versions. Value may only be true , as false is the default behavior. None --version text Filter by decision requirements definition version. None --category-like text Filter by decision requirements definition categories that the parameter is a substring of. None --category text Filter by decision requirements definition category. Exact match. None --key-like text Filter by decision requirements definition keys that the parameter is a substring of. None --key text Filter by decision requirements definition key, i.e., the id in the DMN 1.3 XML. Exact match. None --deployment-id text Filter by the id of the deployment a decision requirement definition belongs to. None --name-like text Filter by decision requirements definition names that the parameter is a substring of. None --name text Filter by decision requirements definition name. None --decision-requirements-definition-id-in text Filter by decision requirements definition ids. None --decision-requirements-definition-id text Filter by decision requirements definition id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionStatistics \u00b6 Get DRD Statistics Retrieves evaluation statistics of a given decision requirements definition. URL: /history/decision-requirements-definition/{id}/statistics Schema: - Usage: cctl get decisionStatistics [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --decision-instance-id text Restrict query results to be based only on specific evaluation instance of a given decision requirements definition. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get deployedForm \u00b6 Get Deployed Form Retrieves the deployed form that is referenced from a given task. For further information please refer to the User Guide . URL: /task/{id}/deployed-form Schema: - Usage: cctl get deployedForm [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get deployedStartForm \u00b6 Get Deployed Start Form Retrieves the deployed form that can be referenced from a start event. For further information please refer to User Guide . URL: /process-definition/{id}/deployed-start-form Schema: - Usage: cctl get deployedStartForm [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get deployedStartFormByKey \u00b6 Get Deployed Start Form Retrieves the deployed form that can be referenced from a start event. For further information please refer to User Guide . URL: /process-definition/key/{key}/deployed-start-form Schema: - Usage: cctl get deployedStartFormByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get deployedStartFormByKeyAndTenantId \u00b6 Get Deployed Start Form Retrieves the deployed form that can be referenced from a start event. For further information please refer to User Guide . URL: /process-definition/key/{key}/tenant-id/{tenant-id}/deployed-start-form Schema: - Usage: cctl get deployedStartFormByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get deployment \u00b6 Get Retrieves a deployment by id, according to the Deployment interface of the engine. URL: /deployment/{id} Schema: - Usage: cctl get deployment [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get deploymentResource \u00b6 Get Resource Retrieves a deployment resource by resource id for the given deployment. URL: /deployment/{id}/resources/{resourceId} Schema: - Usage: cctl get deploymentResource [OPTIONS] RESOURCEID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get deploymentResourceData \u00b6 Get Resource (Binary) Retrieves the binary content of a deployment resource for the given deployment by id. URL: /deployment/{id}/resources/{resourceId}/data Schema: - Usage: cctl get deploymentResourceData [OPTIONS] RESOURCEID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get deploymentResources \u00b6 Get Resources Retrieves all deployment resources of a given deployment. URL: /deployment/{id}/resources Schema: - Usage: cctl get deploymentResources [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get deployments \u00b6 Get List Queries for deployments that fulfill given parameters. Parameters may be the properties of deployments, such as the id or name or a range of the deployment time. The size of the result set can be retrieved by using the Get Deployment count method. URL: /deployment Schema: - Usage: cctl get deployments [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --before text Restricts to all deployments before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --after text Restricts to all deployments after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --include-deployments-without-tenant-id / --not-include-deployments-without-tenant-id boolean Include deployments which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include deployments which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A deployment must have one of the given tenant ids. None --without-source / --not-without-source boolean Filter by the deployment source whereby source is equal to null . None --source text Filter by the deployment source. None --name-like text Filter by the deployment name that the parameter is a substring of. The parameter can include the wildcard % to express like-strategy such as: starts with ( % name), ends with (name % ) or contains ( % name % ). None --name text Filter by the deployment name. Exact match. None --id text Filter by deployment id None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get deploymentsCount \u00b6 Get List Count Queries for the number of deployments that fulfill given parameters. Takes the same parameters as the Get Deployments method. URL: /deployment/count Schema: - Usage: cctl get deploymentsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --before text Restricts to all deployments before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --after text Restricts to all deployments after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --include-deployments-without-tenant-id / --not-include-deployments-without-tenant-id boolean Include deployments which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include deployments which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A deployment must have one of the given tenant ids. None --without-source / --not-without-source boolean Filter by the deployment source whereby source is equal to null . None --source text Filter by the deployment source. None --name-like text Filter by the deployment name that the parameter is a substring of. The parameter can include the wildcard % to express like-strategy such as: starts with ( % name), ends with (name % ) or contains ( % name % ). None --name text Filter by the deployment name. Exact match. None --id text Filter by deployment id None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get errorDetailsHistoricExternalTaskLog \u00b6 Get External Task Log Error Details Retrieves the corresponding error details of the passed historic external task log by id. URL: /history/external-task-log/{id}/error-details Schema: - Usage: cctl get errorDetailsHistoricExternalTaskLog [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get eventSubscriptions \u00b6 Get List Queries for event subscriptions that fulfill given parameters. The size of the result set can be retrieved by using the Get Event Subscriptions count method. URL: /event-subscription Schema: - Usage: cctl get eventSubscriptions [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --include-event-subscriptions-without-tenant-id / --not-include-event-subscriptions-without-tenant-id boolean Select event subscriptions which have no tenant id. Can be used in combination with tenantIdIn parameter. Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only select subscriptions which have no tenant id. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. Only select subscriptions that belong to one of the given tenant ids. None --activity-id text Only select subscriptions that belong to an activity with the given id. None --process-instance-id text Only select subscriptions that belong to a process instance with the given id. None --execution-id text Only select subscriptions that belong to an execution with the given id. None --event-type text Only select subscriptions for events with the given type. Valid values: message , signal , compensate and conditional . None --event-name text Only select subscriptions for events with the given name. None --event-subscription-id text Only select subscription with the given id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get eventSubscriptionsCount \u00b6 Get List Count Queries for the number of event subscriptions that fulfill given parameters. Takes the same parameters as the Get Event Subscriptions method. URL: /event-subscription/count Schema: - Usage: cctl get eventSubscriptionsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --include-event-subscriptions-without-tenant-id / --not-include-event-subscriptions-without-tenant-id boolean Select event subscriptions which have no tenant id. Can be used in combination with tenantIdIn parameter. Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only select subscriptions which have no tenant id. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. Only select subscriptions that belong to one of the given tenant ids. None --activity-id text Only select subscriptions that belong to an activity with the given id. None --process-instance-id text Only select subscriptions that belong to a process instance with the given id. None --execution-id text Only select subscriptions that belong to an execution with the given id. None --event-type text Only select subscriptions for events with the given type. Valid values: message , signal , compensate and conditional . None --event-name text Only select subscriptions for events with the given name. None --event-subscription-id text Only select subscription with the given id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get executeFilterCount \u00b6 Execute Filter Count Executes the saved query of the filter by id and returns the count. URL: /filter/{id}/count Schema: - Usage: cctl get executeFilterCount [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get executeFilterList \u00b6 Execute Filter List Executes the saved query of the filter by id and returns the result list. URL: /filter/{id}/list Schema: - Usage: cctl get executeFilterList [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get executeFilterSingleResult \u00b6 Execute Filter Single Result Executes the saved query of the filter by id and returns the single result. URL: /filter/{id}/singleResult Schema: - Usage: cctl get executeFilterSingleResult [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get execution \u00b6 Get Execution Retrieves an execution by id, according to the Execution interface in the engine. URL: /execution/{id} Schema: - Usage: cctl get execution [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get executions \u00b6 Get Executions Queries for the executions that fulfill given parameters. Parameters may be static as well as dynamic runtime properties of executions. The size of the result set can be retrieved by using the Get Execution Count method. URL: /execution Schema: - Usage: cctl get executions [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match all variable values provided in variables and processVariables case- insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match all variable names provided in variables and processVariables case- insensitively. If set to true variableName and variablename are treated as equal. None --process-variables text Only include executions that belong to a process instance with variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to. key and value may not contain underscore or comma characters. | None | | --variables | text | Only include executions that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --tenant-id-in | text | Filter by a comma-separated list of tenant ids. An execution must have one of the given tenant ids. | None | | --incident-message-like | text | Filter by the incident message that the parameter is a substring of. | None | | --incident-message | text | Filter by the incident message. Exact match. | None | | --incident-type | text | Filter by the incident type. See the User Guide for a list of incident types. | None | | --incident-id | text | Filter by the incident id. | None | | --suspended / --not-suspended | boolean | Only include suspended executions. Value may only be true , as false is the default behavior. | None | | --active / --not-active | boolean | Only include active executions. Value may only be true , as false is the default behavior. | None | | --message-event-subscription-name | text | Select only those executions that expect a message of the given name. | None | | --signal-event-subscription-name | text | Select only those executions that expect a signal of the given name. | None | | --activity-id | text | Filter by the id of the activity the execution currently executes. | None | | --process-instance-id | text | Filter by the id of the process instance the execution belongs to. | None | | --process-definition-key | text | Filter by the key of the process definition the executions run on. | None | | --process-definition-id | text | Filter by the process definition the executions run on. | None | | --business-key | text | Filter by the business key of the process instances the executions belong to. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get executionsCount \u00b6 Get Execution Count Queries for the number of executions that fulfill given parameters. Takes the same parameters as the Get Executions method. URL: /execution/count Schema: - Usage: cctl get executionsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match all variable values provided in variables and processVariables case- insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match all variable names provided in variables and processVariables case- insensitively. If set to true variableName and variablename are treated as equal. None --process-variables text Only include executions that belong to a process instance with variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to. key and value may not contain underscore or comma characters. | None | | --variables | text | Only include executions that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --tenant-id-in | text | Filter by a comma-separated list of tenant ids. An execution must have one of the given tenant ids. | None | | --incident-message-like | text | Filter by the incident message that the parameter is a substring of. | None | | --incident-message | text | Filter by the incident message. Exact match. | None | | --incident-type | text | Filter by the incident type. See the User Guide for a list of incident types. | None | | --incident-id | text | Filter by the incident id. | None | | --suspended / --not-suspended | boolean | Only include suspended executions. Value may only be true , as false is the default behavior. | None | | --active / --not-active | boolean | Only include active executions. Value may only be true , as false is the default behavior. | None | | --message-event-subscription-name | text | Select only those executions that expect a message of the given name. | None | | --signal-event-subscription-name | text | Select only those executions that expect a signal of the given name. | None | | --activity-id | text | Filter by the id of the activity the execution currently executes. | None | | --process-instance-id | text | Filter by the id of the process instance the execution belongs to. | None | | --process-definition-key | text | Filter by the key of the process definition the executions run on. | None | | --process-definition-id | text | Filter by the process definition the executions run on. | None | | --business-key | text | Filter by the business key of the process instances the executions belong to. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get externalTask \u00b6 Get Retrieves an external task by id, corresponding to the ExternalTask interface in the engine. URL: /external-task/{id} Schema: - Usage: cctl get externalTask [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get externalTaskErrorDetails \u00b6 Get Error Details Retrieves the error details in the context of a running external task by id. URL: /external-task/{id}/errorDetails Schema: - Usage: cctl get externalTaskErrorDetails [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get externalTasks \u00b6 Get List Queries for the external tasks that fulfill given parameters. Parameters may be static as well as dynamic runtime properties of executions. The size of the result set can be retrieved by using the Get External Task Count method. URL: /external-task Schema: - Usage: cctl get externalTasks [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --priority-lower-than-or-equals text Only include jobs with a priority lower than or equal to the given value. Value must be a valid long value. None --priority-higher-than-or-equals text Only include jobs with a priority higher than or equal to the given value. Value must be a valid long value. None --suspended / --not-suspended boolean Only include suspended tasks. Value may only be true , as false matches any external task. None --active / --not-active boolean Only include active tasks. Value may only be true , as false matches any external task. None --tenant-id-in text Filter by a comma-separated list of tenant ids. An external task must have one of the given tenant ids. None --process-definition-id text Filter by the id of the process definition that an external task belongs to. None --process-instance-id-in text Filter by a comma-separated list of process instance ids that an external task may belong to. None --process-instance-id text Filter by the id of the process instance that an external task belongs to. None --execution-id text Filter by the id of the execution that an external task belongs to. None --activity-id-in text Filter by the comma-separated list of ids of the activities that an external task is created for. None --activity-id text Filter by the id of the activity that an external task is created for. None --lock-expiration-before text Restrict to external tasks that have a lock that expires before a given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --lock-expiration-after text Restrict to external tasks that have a lock that expires after a given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --no-retries-left / --not-no-retries-left boolean Only include external tasks that have 0 retries. Value may only be true , as false matches any external task. None --with-retries-left / --not-with-retries-left boolean Only include external tasks that have a positive (> 0) number of retries (or null ). Value may only be true , as false matches any external task. None --not-locked / --not-not-locked boolean Only include external tasks that are currently not locked (i.e., they have no lock or it has expired). Value may only be true , as false matches any external task. None --locked / --not-locked boolean Only include external tasks that are currently locked (i.e., they have a lock time and it has not expired). Value may only be true , as false matches any external task. None --worker-id text Filter by the id of the worker that the task was most recently locked by. None --topic-name text Filter by an external task topic. None --external-task-id-in text Filter by the comma-separated list of external task ids. None --external-task-id text Filter by an external task's id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get externalTasksCount \u00b6 Get List Count Queries for the number of external tasks that fulfill given parameters. Takes the same parameters as the Get External Tasks method. URL: /external-task/count Schema: - Usage: cctl get externalTasksCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --priority-lower-than-or-equals text Only include jobs with a priority lower than or equal to the given value. Value must be a valid long value. None --priority-higher-than-or-equals text Only include jobs with a priority higher than or equal to the given value. Value must be a valid long value. None --suspended / --not-suspended boolean Only include suspended tasks. Value may only be true , as false matches any external task. None --active / --not-active boolean Only include active tasks. Value may only be true , as false matches any external task. None --tenant-id-in text Filter by a comma-separated list of tenant ids. An external task must have one of the given tenant ids. None --process-definition-id text Filter by the id of the process definition that an external task belongs to. None --process-instance-id-in text Filter by a comma-separated list of process instance ids that an external task may belong to. None --process-instance-id text Filter by the id of the process instance that an external task belongs to. None --execution-id text Filter by the id of the execution that an external task belongs to. None --activity-id-in text Filter by the comma-separated list of ids of the activities that an external task is created for. None --activity-id text Filter by the id of the activity that an external task is created for. None --lock-expiration-before text Restrict to external tasks that have a lock that expires before a given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --lock-expiration-after text Restrict to external tasks that have a lock that expires after a given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --no-retries-left / --not-no-retries-left boolean Only include external tasks that have 0 retries. Value may only be true , as false matches any external task. None --with-retries-left / --not-with-retries-left boolean Only include external tasks that have a positive (> 0) number of retries (or null ). Value may only be true , as false matches any external task. None --not-locked / --not-not-locked boolean Only include external tasks that are currently not locked (i.e., they have no lock or it has expired). Value may only be true , as false matches any external task. None --locked / --not-locked boolean Only include external tasks that are currently locked (i.e., they have a lock time and it has not expired). Value may only be true , as false matches any external task. None --worker-id text Filter by the id of the worker that the task was most recently locked by. None --topic-name text Filter by an external task topic. None --external-task-id-in text Filter by the comma-separated list of external task ids. None --external-task-id text Filter by an external task's id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get filterCount \u00b6 Get Filter Count Retrieves the number of filters that fulfill a provided query. Corresponds to the size of the result set when using the Get Filters method. URL: /filter/count Schema: - Usage: cctl get filterCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --owner text Filter by the user id of the owner of the filter. None --name-like text Filter by the name that the parameter is a substring of. None --name text Filter by the name of the filter. None --resource-type text Filter by the resource type of the filter, e.g., Task . None --filter-id text Filter by the id of the filter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get filterList \u00b6 Get Filters Queries for a list of filters using a list of parameters. The size of the result set can be retrieved by using the Get Filter Count method. URL: /filter Schema: - Usage: cctl get filterList [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --item-count / --not-item-count boolean If set to true , each filter result will contain an itemCount property with the number of items matched by the filter itself. None --owner text Filter by the user id of the owner of the filter. None --name-like text Filter by the name that the parameter is a substring of. None --name text Filter by the name of the filter. None --resource-type text Filter by the resource type of the filter, e.g., Task . None --filter-id text Filter by the id of the filter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get findCleanupJob \u00b6 Find clean up history job (GET) Deprecated! Use GET /history/cleanup/jobs instead. Finds history cleanup job (See History cleanup ). URL: /history/cleanup/job Schema: - Usage: cctl get findCleanupJob [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get findCleanupJobs \u00b6 Find clean up history jobs (GET) Finds history cleanup jobs (See History cleanup ). URL: /history/cleanup/jobs Schema: - Usage: cctl get findCleanupJobs [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get form \u00b6 Get Form Key Retrieves the form key for a task. The form key corresponds to the FormData#formKey property in the engine. This key can be used to do task-specific form rendering in client applications. Additionally, the context path of the containing process application is returned. URL: /task/{id}/form Schema: - Usage: cctl get form [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get formVariables \u00b6 Get Task Form Variables Retrieves the form variables for a task. The form variables take form data specified on the task into account. If form fields are defined, the variable types and default values of the form fields are taken into account. URL: /task/{id}/form-variables Schema: - Usage: cctl get formVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true). If set to true, a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false, a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --variable-names | text | A comma-separated list of variable names. Allows restricting the list of requested variables to the variable names in the list. It is best practice to restrict the list of variables to the variables actually required by the form in order to minimize fetching of data. If the query parameter is ommitted all variables are fetched. If the query parameter contains non-existent variable names, the variable names are ignored. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get group \u00b6 Get Group Retrieves a group by id. URL: /group/{id} Schema: - Usage: cctl get group [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get groupCount \u00b6 Get List Count Queries for groups using a list of parameters and retrieves the count. URL: /group/count Schema: - Usage: cctl get groupCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --member-of-tenant text Only retrieve groups which are members of the given tenant. None --member text Only retrieve groups where the given user id is a member of. None --type text Filter by the type of the group. None --name-like text Filter by the name that the parameter is a substring of. None --name text Filter by the name of the group. None --id-in text Filter by a comma seperated list of group ids. None --id text Filter by the id of the group. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get groupInfo \u00b6 Get a User's Groups Gets the groups of a user by id and includes all users that share a group with the given user. URL: /identity/groups Schema: - Usage: cctl get groupInfo [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --user-id text The id of the user to get the groups for. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicActivityInstance \u00b6 Get Retrieves a historic activity instance by id, according to the HistoricActivityInstance interface in the engine. URL: /history/activity-instance/{id} Schema: - Usage: cctl get historicActivityInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicActivityInstances \u00b6 Get List Queries for historic activity instances that fulfill the given parameters. The size of the result set can be retrieved by using the Get Historic Activity Instance Count method. URL: /history/activity-instance Schema: - Usage: cctl get historicActivityInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --without-tenant-id / --not-without-tenant-id boolean Only include historic activity instances that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of ids. An activity instance must have one of the given tenant ids. None --finished-after text Restrict to instances that were finished after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --finished-before text Restrict to instances that were finished before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --started-after text Restrict to instances that were started after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --started-before text Restrict to instances that were started before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --complete-scope / --not-complete-scope boolean Only include activity instances which completed a scope. Value may only be true , as false behaves the same as when the property is not set. None --canceled / --not-canceled boolean Only include canceled activity instances. Value may only be true , as false behaves the same as when the property is not set. None --unfinished / --not-unfinished boolean Only include unfinished activity instances. Value may only be true , as false behaves the same as when the property is not set. None --finished / --not-finished boolean Only include finished activity instances. Value may only be true , as false behaves the same as when the property is not set. None --task-assignee text Only include activity instances that are user tasks and assigned to a given user. None --activity-type text Filter by activity type. None --activity-name text Filter by the activity name (according to BPMN 2.0 XML). None --activity-id text Filter by the activity id (according to BPMN 2.0 XML). None --execution-id text Filter by the id of the execution that executed the activity instance. None --process-definition-id text Filter by process definition id. None --process-instance-id text Filter by process instance id. None --activity-instance-id text Filter by activity instance id. None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicActivityInstancesCount \u00b6 Get List Count Queries for the number of historic activity instances that fulfill the given parameters. Takes the same parameters as the Get Historic Activity Instance method. URL: /history/activity-instance/count Schema: - Usage: cctl get historicActivityInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --without-tenant-id / --not-without-tenant-id boolean Only include historic activity instances that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of ids. An activity instance must have one of the given tenant ids. None --finished-after text Restrict to instances that were finished after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --finished-before text Restrict to instances that were finished before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --started-after text Restrict to instances that were started after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --started-before text Restrict to instances that were started before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --complete-scope / --not-complete-scope boolean Only include activity instances which completed a scope. Value may only be true , as false behaves the same as when the property is not set. None --canceled / --not-canceled boolean Only include canceled activity instances. Value may only be true , as false behaves the same as when the property is not set. None --unfinished / --not-unfinished boolean Only include unfinished activity instances. Value may only be true , as false behaves the same as when the property is not set. None --finished / --not-finished boolean Only include finished activity instances. Value may only be true , as false behaves the same as when the property is not set. None --task-assignee text Only include activity instances that are user tasks and assigned to a given user. None --activity-type text Filter by activity type. None --activity-name text Filter by the activity name (according to BPMN 2.0 XML). None --activity-id text Filter by the activity id (according to BPMN 2.0 XML). None --execution-id text Filter by the id of the execution that executed the activity instance. None --process-definition-id text Filter by process definition id. None --process-instance-id text Filter by process instance id. None --activity-instance-id text Filter by activity instance id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicActivityStatistics \u00b6 Get Historic Activity Statistics Retrieves historic statistics of a given process definition, grouped by activities. These statistics include the number of running activity instances and, optionally, the number of canceled activity instances, finished activity instances and activity instances which completed a scope (i.e., in BPMN 2.0 manner: a scope is completed by an activity instance when the activity instance consumed a token but did not emit a new token). Note: This only includes historic data. URL: /history/process-definition/{id}/statistics Schema: - Usage: cctl get historicActivityStatistics [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --process-instance-id-in text Restrict to process instances with the given IDs. The IDs must be provided as a comma- separated list. None --finished-after text Restrict to process instances that were finished after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --finished-before text Restrict to process instances that were finished before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --started-after text Restrict to process instances that were started after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --started-before text Restrict to process instances that were started before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --incidents / --not-incidents boolean Whether to include the number of incidents. Valid values are true or false . Default: false . None --complete-scope / --not-complete-scope boolean Whether to include the number of activity instances which completed a scope in the result or not. Valid values are true or false . Default: false . None --finished / --not-finished boolean Whether to include the number of finished activity instances in the result or not. Valid values are true or false . Default: false . None --canceled / --not-canceled boolean Whether to include the number of canceled activity instances in the result or not. Valid values are true or false . Default: false . None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicBatch \u00b6 Get Historic Batch Retrieves a historic batch by id, according to the HistoricBatch interface in the engine. URL: /history/batch/{id} Schema: - Usage: cctl get historicBatch [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicBatches \u00b6 Get Historic Batches Queries for historic batches that fulfill given parameters. Parameters may be the properties of batches, such as the id or type. The size of the result set can be retrieved by using the Get Historic Batch Count method. URL: /history/batch Schema: - Usage: cctl get historicBatches [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --without-tenant-id / --not-without-tenant-id boolean Only include batches which belong to no tenant. Value can effectively only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A batch matches if it has one of the given tenant ids. None --completed / --not-completed boolean Filter completed or not completed batches. If the value is true , only completed batches, i.e., end time is set, are returned. Otherwise, if the value is false , only running batches, i.e., end time is null, are returned. None --type text Filter by batch type. See the User Guide for more information about batch types. None --batch-id text Filter by batch id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicBatchesCount \u00b6 Get Historic Batch Count Requests the number of historic batches that fulfill the query criteria. Takes the same filtering parameters as the Get Historic Batches method. URL: /history/batch/count Schema: - Usage: cctl get historicBatchesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --without-tenant-id / --not-without-tenant-id boolean Only include batches which belong to no tenant. Value can effectively only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A batch matches if it has one of the given tenant ids. None --completed / --not-completed boolean Filter completed or not completed batches. If the value is true , only completed batches, i.e., end time is set, are returned. Otherwise, if the value is false , only running batches, i.e., end time is null, are returned. None --type text Filter by batch type. See the User Guide for more information about batch types. None --batch-id text Filter by batch id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicDecisionInstance \u00b6 Get Historic Decision Instance Retrieves a historic decision instance by id, according to the HistoricDecisionInstance interface in the engine. URL: /history/decision-instance/{id} Schema: - Usage: cctl get historicDecisionInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --disable-custom-object-deserialization / --not-disable-custom-object-deserialization boolean Disables deserialization of input and output values that are custom objects. Value may only be true , as false is the default behavior. None --disable-binary-fetching / --not-disable-binary-fetching boolean Disables fetching of byte array input and output values. Value may only be true , as false is the default behavior. None --include-outputs / --not-include-outputs boolean Include output values in the result. Value may only be true , as false is the default behavior. None --include-inputs / --not-include-inputs boolean Include input values in the result. Value may only be true , as false is the default behavior. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicDecisionInstances \u00b6 Get Historic Decision Instances Queries for historic decision instances that fulfill the given parameters. The size of the result set can be retrieved by using the Get Historic Decision Instance Count method. URL: /history/decision-instance Schema: - Usage: cctl get historicDecisionInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --disable-custom-object-deserialization / --not-disable-custom-object-deserialization boolean Disables deserialization of input and output values that are custom objects. Value may only be true , as false is the default behavior. None --disable-binary-fetching / --not-disable-binary-fetching boolean Disables fetching of byte array input and output values. Value may only be true , as false is the default behavior. None --include-outputs / --not-include-outputs boolean Include output values in the result. Value may only be true , as false is the default behavior. None --include-inputs / --not-include-inputs boolean Include input values in the result. Value may only be true , as false is the default behavior. None --decision-requirements-definition-key text Filter by the key of the decision requirements definition the instances belongs to. None --decision-requirements-definition-id text Filter by the decision requirements definition the instances belongs to. None --root-decision-instances-only / --not-root-decision-instances-only boolean Restrict to instances those are the root decision instance of an evaluation. Value may only be true , as false is the default behavior. None --root-decision-instance-id text Restrict to instances that have a given root decision instance id. This also includes the decision instance with the given id. None --user-id text Restrict to instances that were evaluated by the given user. None --evaluated-after text Restrict to instances that were evaluated after the given date. By default , the date must have the format `yyyy-MM- dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200`. None --evaluated-before text Restrict to instances that were evaluated before the given date. By default , the date must have the format `yyyy-MM- dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200`. None --without-tenant-id / --not-without-tenant-id boolean Only include historic decision instances that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A historic decision instance must have one of the given tenant ids. None --activity-instance-id-in text Filter by the activity instance ids the instances belongs to. Must be a comma-separated list of acitvity instance ids. None --activity-id-in text Filter by the activity ids the instances belongs to. Must be a comma-separated list of acitvity ids. None --case-instance-id text Filter by the case instance the instances belongs to. None --case-definition-key text Filter by the key of the case definition the instances belongs to. None --case-definition-id text Filter by the case definition the instances belongs to. None --process-instance-id text Filter by the process instance the instances belongs to. None --process-definition-key text Filter by the key of the process definition the instances belongs to. None --process-definition-id text Filter by the process definition the instances belongs to. None --decision-definition-name-like text Filter by the name of the decision definition the instances belongs to, that the parameter is a substring of. None --decision-definition-name text Filter by the name of the decision definition the instances belongs to. None --decision-definition-key-in text Filter by the keys of the decision definition the instances belongs to. Must be a comma- separated list of decision definition keys. None --decision-definition-key text Filter by the key of the decision definition the instances belongs to. None --decision-definition-id-in text Filter by the decision definitions the instances belongs to. Must be a comma-separated list of decision definition ids. None --decision-definition-id text Filter by the decision definition the instances belongs to. None --decision-instance-id-in text Filter by decision instance ids. Must be a comma-separated list of decision instance ids. None --decision-instance-id text Filter by decision instance id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicDecisionInstancesCount \u00b6 Get Historic Decision Instance Count Queries for the number of historic decision instances that fulfill the given parameters. Takes the same parameters as the Get Historic Decision Instances method. URL: /history/decision-instance/count Schema: - Usage: cctl get historicDecisionInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --decision-requirements-definition-key text Filter by the key of the decision requirements definition the instances belongs to. None --decision-requirements-definition-id text Filter by the decision requirements definition the instances belongs to. None --root-decision-instances-only / --not-root-decision-instances-only boolean Restrict to instances those are the root decision instance of an evaluation. Value may only be true , as false is the default behavior. None --root-decision-instance-id text Restrict to instances that have a given root decision instance id. This also includes the decision instance with the given id. None --user-id text Restrict to instances that were evaluated by the given user. None --evaluated-after text Restrict to instances that were evaluated after the given date. By default , the date must have the format `yyyy-MM- dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200`. None --evaluated-before text Restrict to instances that were evaluated before the given date. By default , the date must have the format `yyyy-MM- dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200`. None --without-tenant-id / --not-without-tenant-id boolean Only include historic decision instances that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A historic decision instance must have one of the given tenant ids. None --activity-instance-id-in text Filter by the activity instance ids the instances belongs to. Must be a comma-separated list of acitvity instance ids. None --activity-id-in text Filter by the activity ids the instances belongs to. Must be a comma-separated list of acitvity ids. None --case-instance-id text Filter by the case instance the instances belongs to. None --case-definition-key text Filter by the key of the case definition the instances belongs to. None --case-definition-id text Filter by the case definition the instances belongs to. None --process-instance-id text Filter by the process instance the instances belongs to. None --process-definition-key text Filter by the key of the process definition the instances belongs to. None --process-definition-id text Filter by the process definition the instances belongs to. None --decision-definition-name-like text Filter by the name of the decision definition the instances belongs to, that the parameter is a substring of. None --decision-definition-name text Filter by the name of the decision definition the instances belongs to. None --decision-definition-key-in text Filter by the keys of the decision definition the instances belongs to. Must be a comma- separated list of decision definition keys. None --decision-definition-key text Filter by the key of the decision definition the instances belongs to. None --decision-definition-id-in text Filter by the decision definitions the instances belongs to. Must be a comma-separated list of decision definition ids. None --decision-definition-id text Filter by the decision definition the instances belongs to. None --decision-instance-id-in text Filter by decision instance ids. Must be a comma-separated list of decision instance ids. None --decision-instance-id text Filter by decision instance id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicDetail \u00b6 Get Historic Detail Retrieves a historic detail by id. URL: /history/detail/{id} Schema: - Usage: cctl get historicDetail [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-value / --not-deserialize-value boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get historicDetailBinary \u00b6 Get Historic Detail (Binary) Retrieves the content of a historic variable update by id. Applicable for byte array and file variables. URL: /history/detail/{id}/data Schema: - Usage: cctl get historicDetailBinary [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicDetails \u00b6 Get Historic Details Queries for historic details that fulfill the given parameters. The size of the result set can be retrieved by using the Get Historic Detail Count method. URL: /history/detail Schema: - Usage: cctl get historicDetails [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --max-results | text | Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. | None | | --first-result | text | Pagination of results. Specifies the index of the first result to return. | None | | --sort-order | text | Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. | None | | --sort-by | text | Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. | None | | --occurred-after | text | Restrict to historic details that occured after the given date (including the date). Default format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200. | None | | --occurred-before | text | Restrict to historic details that occured before the given date (including the date). Default format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200. | None | | --initial / --not-initial | boolean | Restrict to historic variable updates that contain only initial variable values. Value may only be true , as false is the default behavior. | None | | --exclude-task-details / --not-exclude-task-details | boolean | Excludes all task-related HistoricDetails , so only items which have no task id set will be selected. When this parameter is used together with taskId , this call is ignored and task details are not excluded. Value may only be true , as false is the default behavior. | None | | --variable-updates / --not-variable-updates | boolean | Only include HistoricVariableUpdates . Value may only be true , as false is the default behavior. | None | | --form-fields / --not-form-fields | boolean | Only include HistoricFormFields . Value may only be true , as false is the default behavior. | None | | --user-operation-id | text | Filter by a user operation id. | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include historic details that belong to no tenant. Value may only be true , as false is the default behavior. | None | | --tenant-id-in | text | Filter by a comma-separated list of tenant ids. | None | | --variable-type-in | text | Only include historic details where the variable updates belong to one of the passed comma-separated list of variable types. A list of all supported variable types can be found here . Note: All non-primitive variables are associated with the type serializable . | None | | --variable-instance-id | text | Filter by variable instance id. | None | | --case-execution-id | text | Filter by case execution id. | None | | --case-instance-id | text | Filter by case instance id. | None | | --activity-instance-id | text | Filter by activity instance id. | None | | --task-id | text | Filter by task id. | None | | --execution-id | text | Filter by execution id. | None | | --process-instance-id-in | text | Only include historic details which belong to one of the passed comma-separated process instance ids. | None | | --process-instance-id | text | Filter by process instance id. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get historicDetailsCount \u00b6 Get Historic Detail Count Queries for the number of historic details that fulfill the given parameters. Takes the same parameters as the Get Historic Details method. URL: /history/detail/count Schema: - Usage: cctl get historicDetailsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --occurred-after text Restrict to historic details that occured after the given date (including the date). Default format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200. None --occurred-before text Restrict to historic details that occured before the given date (including the date). Default format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200. None --initial / --not-initial boolean Restrict to historic variable updates that contain only initial variable values. Value may only be true , as false is the default behavior. None --exclude-task-details / --not-exclude-task-details boolean Excludes all task-related HistoricDetails , so only items which have no task id set will be selected. When this parameter is used together with taskId , this call is ignored and task details are not excluded. Value may only be true , as false is the default behavior. None --variable-updates / --not-variable-updates boolean Only include HistoricVariableUpdates . Value may only be true , as false is the default behavior. None --form-fields / --not-form-fields boolean Only include HistoricFormFields . Value may only be true , as false is the default behavior. None --user-operation-id text Filter by a user operation id. None --without-tenant-id / --not-without-tenant-id boolean Only include historic details that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. None --variable-type-in text Only include historic details where the variable updates belong to one of the passed comma-separated list of variable types. A list of all supported variable types can be found here . Note: All non-primitive variables are associated with the type serializable . None --variable-instance-id text Filter by variable instance id. None --case-execution-id text Filter by case execution id. None --case-instance-id text Filter by case instance id. None --activity-instance-id text Filter by activity instance id. None --task-id text Filter by task id. None --execution-id text Filter by execution id. None --process-instance-id-in text Only include historic details which belong to one of the passed comma-separated process instance ids. None --process-instance-id text Filter by process instance id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicExternalTaskLog \u00b6 Get External Task Log Retrieves a historic external task log by id. URL: /history/external-task-log/{id} Schema: - Usage: cctl get historicExternalTaskLog [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicExternalTaskLogs \u00b6 Get External Task Logs Queries for historic external task logs that fulfill the given parameters. The size of the result set can be retrieved by using the Get External Task Log Count method. URL: /history/external-task-log Schema: - Usage: cctl get historicExternalTaskLogs [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --deletion-log / --not-deletion-log boolean Only include deletion logs. Value may only be true , as false is the default behavior. None --success-log / --not-success-log boolean Only include success logs. Value may only be true , as false is the default behavior. None --failure-log / --not-failure-log boolean Only include failure logs. Value may only be true , as false is the default behavior. None --creation-log / --not-creation-log boolean Only include creation logs. Value may only be true , as false is the default behavior. None --priority-higher-than-or-equals text Only include logs for which the associated external task had a priority higher than or equal to the given value. Value must be a valid long value. None --priority-lower-than-or-equals text Only include logs for which the associated external task had a priority lower than or equal to the given value. Value must be a valid long value. None --without-tenant-id / --not-without-tenant-id boolean Only include historic external task log entries that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Only include historic external task log entries which belong to one of the passed and comma-separated tenant ids. None --process-definition-key text Filter by process definition key. None --process-definition-id text Filter by process definition id. None --process-instance-id text Filter by process instance id. None --execution-id-in text Only include historic external task logs which belong to one of the passed execution ids. None --activity-instance-id-in text Only include historic external task logs which belong to one of the passed activity instance ids. None --activity-id-in text Only include historic external task logs which belong to one of the passed activity ids. None --error-message text Filter by external task exception message. None --worker-id text Filter by the id of the worker that the task was most recently locked by. None --topic-name text Filter by an external task topic. None --external-task-id text Filter by external task id. None --log-id text Filter by historic external task log id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicExternalTaskLogsCount \u00b6 Get External Task Log Count Queries for the number of historic external task logs that fulfill the given parameters. Takes the same parameters as the Get External Task Logs method. URL: /history/external-task-log/count Schema: - Usage: cctl get historicExternalTaskLogsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deletion-log / --not-deletion-log boolean Only include deletion logs. Value may only be true , as false is the default behavior. None --success-log / --not-success-log boolean Only include success logs. Value may only be true , as false is the default behavior. None --failure-log / --not-failure-log boolean Only include failure logs. Value may only be true , as false is the default behavior. None --creation-log / --not-creation-log boolean Only include creation logs. Value may only be true , as false is the default behavior. None --priority-higher-than-or-equals text Only include logs for which the associated external task had a priority higher than or equal to the given value. Value must be a valid long value. None --priority-lower-than-or-equals text Only include logs for which the associated external task had a priority lower than or equal to the given value. Value must be a valid long value. None --without-tenant-id / --not-without-tenant-id boolean Only include historic external task log entries that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Only include historic external task log entries which belong to one of the passed and comma-separated tenant ids. None --process-definition-key text Filter by process definition key. None --process-definition-id text Filter by process definition id. None --process-instance-id text Filter by process instance id. None --execution-id-in text Only include historic external task logs which belong to one of the passed execution ids. None --activity-instance-id-in text Only include historic external task logs which belong to one of the passed activity instance ids. None --activity-id-in text Only include historic external task logs which belong to one of the passed activity ids. None --error-message text Filter by external task exception message. None --worker-id text Filter by the id of the worker that the task was most recently locked by. None --topic-name text Filter by an external task topic. None --external-task-id text Filter by external task id. None --log-id text Filter by historic external task log id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicIdentityLinks \u00b6 Get Identity Link Logs Queries for historic identity link logs that fulfill given parameters. The size of the result set can be retrieved by using the Get Identity-Link-Log Count method. URL: /history/identity-link-log Schema: - Usage: cctl get historicIdentityLinks [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --without-tenant-id / --not-without-tenant-id boolean Only include historic identity links that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. None --assigner-id text Restricts to identity links that have the given assigner id. None --operation-type text Restricts to identity links that have the given operationType (add/delete). None --process-definition-key text Restricts to identity links that have the given process definition key. None --process-definition-id text Restricts to identity links that have the given process definition id. None --task-id text Restricts to identity links that have the given task id. None --date-after text Restricts to identity links that have the time after the given time. None --date-before text Restricts to identity links that have the time before the given time. None --group-id text Restricts to identity links that have the given group id. None --user-id text Restricts to identity links that have the given user id. None --type text Restricts to identity links that have the given type (candidate/assignee/owner). None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicIdentityLinksCount \u00b6 Get Identity Link Log Count Queries for the number of historic identity link logs that fulfill the given parameters. Takes the same parameters as the Get Identity-Link-Logs method. URL: /history/identity-link-log/count Schema: - Usage: cctl get historicIdentityLinksCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --without-tenant-id / --not-without-tenant-id boolean Only include historic identity links that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. None --assigner-id text Restricts to identity links that have the given assigner id. None --operation-type text Restricts to identity links that have the given operationType (add/delete). None --process-definition-key text Restricts to identity links that have the given process definition key. None --process-definition-id text Restricts to identity links that have the given process definition id. None --task-id text Restricts to identity links that have the given task id. None --date-after text Restricts to identity links that have the time after the given time. None --date-before text Restricts to identity links that have the time before the given time. None --group-id text Restricts to identity links that have the given group id. None --user-id text Restricts to identity links that have the given user id. None --type text Restricts to identity links that have the given type (candidate/assignee/owner). None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicIncidents \u00b6 Get Incidents Queries for historic incidents that fulfill given parameters. The size of the result set can be retrieved by using the Get Incident Count method. URL: /history/incident Schema: - Usage: cctl get historicIncidents [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --job-definition-id-in text Restricts to incidents that have one of the given comma-separated job definition ids. None --without-tenant-id / --not-without-tenant-id boolean Only include historic incidents that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Restricts to incidents that have one of the given comma-separated tenant ids. None --deleted / --not-deleted boolean Restricts to incidents that are deleted. None --resolved / --not-resolved boolean Restricts to incidents that are resolved. None --open / --not-open boolean Restricts to incidents that are open. None --history-configuration text Restricts to incidents that have the given parameter set as history configuration. None --configuration text Restricts to incidents that have the given parameter set as configuration. None --root-cause-incident-id text Restricts to incidents that have the given incident id as root cause incident. None --cause-incident-id text Restricts to incidents that have the given incident id as cause incident. None --failed-activity-id text Restricts to incidents that were created due to the failure of an activity with the given id. None --activity-id text Restricts to incidents that belong to an activity with the given id. None --end-time-after text Restricts to incidents that have an endTimeAfter date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --end-time-before text Restricts to incidents that have an endTimeBefore date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --create-time-after text Restricts to incidents that have a createTime date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --create-time-before text Restricts to incidents that have a createTime date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --execution-id text Restricts to incidents that belong to an execution with the given id. None --process-instance-id text Restricts to incidents that belong to a process instance with the given id. None --process-definition-key-in text Restricts to incidents that have one of the given process definition keys. None --process-definition-key text Restricts to incidents that have the given processDefinitionKey. None --process-definition-id text Restricts to incidents that belong to a process definition with the given id. None --incident-message-like text Restricts to incidents that incidents message is a substring of the given value. The string can include the wildcard character '%' to express like-strategy: starts with (string%), ends with (%string) or contains (%string%). None --incident-message text Restricts to incidents that have the given incident message. None --incident-type text Restricts to incidents that belong to the given incident type. See the [User Guide](/manual/develop/user-guide/process-engine/incidents/#incident-types) for a list of incident types. None --incident-id text Restricts to incidents that have the given id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicIncidentsCount \u00b6 Get Incident Count Queries for the number of historic incidents that fulfill the given parameters. Takes the same parameters as the Get Incidents method. URL: /history/incident/count Schema: - Usage: cctl get historicIncidentsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --job-definition-id-in text Restricts to incidents that have one of the given comma-separated job definition ids. None --without-tenant-id / --not-without-tenant-id boolean Only include historic incidents that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Restricts to incidents that have one of the given comma-separated tenant ids. None --deleted / --not-deleted boolean Restricts to incidents that are deleted. None --resolved / --not-resolved boolean Restricts to incidents that are resolved. None --open / --not-open boolean Restricts to incidents that are open. None --history-configuration text Restricts to incidents that have the given parameter set as history configuration. None --configuration text Restricts to incidents that have the given parameter set as configuration. None --root-cause-incident-id text Restricts to incidents that have the given incident id as root cause incident. None --cause-incident-id text Restricts to incidents that have the given incident id as cause incident. None --failed-activity-id text Restricts to incidents that were created due to the failure of an activity with the given id. None --activity-id text Restricts to incidents that belong to an activity with the given id. None --end-time-after text Restricts to incidents that have an endTimeAfter date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --end-time-before text Restricts to incidents that have an endTimeBefore date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --create-time-after text Restricts to incidents that have a createTime date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --create-time-before text Restricts to incidents that have a createTime date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --execution-id text Restricts to incidents that belong to an execution with the given id. None --process-instance-id text Restricts to incidents that belong to a process instance with the given id. None --process-definition-key-in text Restricts to incidents that have one of the given process definition keys. None --process-definition-key text Restricts to incidents that have the given processDefinitionKey. None --process-definition-id text Restricts to incidents that belong to a process definition with the given id. None --incident-message-like text Restricts to incidents that incidents message is a substring of the given value. The string can include the wildcard character '%' to express like-strategy: starts with (string%), ends with (%string) or contains (%string%). None --incident-message text Restricts to incidents that have the given incident message. None --incident-type text Restricts to incidents that belong to the given incident type. See the [User Guide](/manual/develop/user-guide/process-engine/incidents/#incident-types) for a list of incident types. None --incident-id text Restricts to incidents that have the given id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicJobLog \u00b6 Get Job Log Retrieves a historic job log by id. URL: /history/job-log/{id} Schema: - Usage: cctl get historicJobLog [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicJobLogs \u00b6 Get Job Logs Queries for historic job logs that fulfill the given parameters. The size of the result set can be retrieved by using the Get Job Log Count method. URL: /history/job-log Schema: - Usage: cctl get historicJobLogs [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --deletion-log / --not-deletion-log boolean Only include deletion logs. Value may only be true , as false is the default behavior. None --success-log / --not-success-log boolean Only include success logs. Value may only be true , as false is the default behavior. None --failure-log / --not-failure-log boolean Only include failure logs. Value may only be true , as false is the default behavior. None --creation-log / --not-creation-log boolean Only include creation logs. Value may only be true , as false is the default behavior. None --job-priority-higher-than-or-equals text Only include logs for which the associated job had a priority higher than or equal to the given value. Value must be a valid long value. None --job-priority-lower-than-or-equals text Only include logs for which the associated job had a priority lower than or equal to the given value. Value must be a valid long value. None --hostname text Filter by hostname. None --without-tenant-id / --not-without-tenant-id boolean Only include historic job log entries that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Only include historic job log entries which belong to one of the passed and comma- separated tenant ids. None --deployment-id text Filter by deployment id. None --process-definition-key text Filter by process definition key. None --process-definition-id text Filter by process definition id. None --process-instance-id text Filter by process instance id. None --execution-id-in text Only include historic job logs which belong to one of the passed execution ids. None --failed-activity-id-in text Only include historic job logs which belong to failures of one of the passed activity ids. None --activity-id-in text Only include historic job logs which belong to one of the passed activity ids. None --job-definition-configuration text Filter by job definition configuration. None --job-definition-type text Filter by job definition type. See the User Guide for more information about job definition types. None --job-definition-id text Filter by job definition id. None --job-exception-message text Filter by job exception message. None --job-id text Filter by job id. None --log-id text Filter by historic job log id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicJobLogsCount \u00b6 Get Job Log Count Queries for the number of historic job logs that fulfill the given parameters. Takes the same parameters as the Get Job Logs method. URL: /history/job-log/count Schema: - Usage: cctl get historicJobLogsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deletion-log / --not-deletion-log boolean Only include deletion logs. Value may only be true , as false is the default behavior. None --success-log / --not-success-log boolean Only include success logs. Value may only be true , as false is the default behavior. None --failure-log / --not-failure-log boolean Only include failure logs. Value may only be true , as false is the default behavior. None --creation-log / --not-creation-log boolean Only include creation logs. Value may only be true , as false is the default behavior. None --job-priority-higher-than-or-equals text Only include logs for which the associated job had a priority higher than or equal to the given value. Value must be a valid long value. None --job-priority-lower-than-or-equals text Only include logs for which the associated job had a priority lower than or equal to the given value. Value must be a valid long value. None --hostname text Filter by hostname. None --without-tenant-id / --not-without-tenant-id boolean Only include historic job log entries that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Only include historic job log entries which belong to one of the passed and comma- separated tenant ids. None --deployment-id text Filter by deployment id. None --process-definition-key text Filter by process definition key. None --process-definition-id text Filter by process definition id. None --process-instance-id text Filter by process instance id. None --execution-id-in text Only include historic job logs which belong to one of the passed execution ids. None --failed-activity-id-in text Only include historic job logs which belong to failures of one of the passed activity ids. None --activity-id-in text Only include historic job logs which belong to one of the passed activity ids. None --job-definition-configuration text Filter by job definition configuration. None --job-definition-type text Filter by job definition type. See the User Guide for more information about job definition types. None --job-definition-id text Filter by job definition id. None --job-exception-message text Filter by job exception message. None --job-id text Filter by job id. None --log-id text Filter by historic job log id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicProcessInstance \u00b6 Get Retrieves a historic process instance by id, according to the HistoricProcessInstance interface in the engine. URL: /history/process-instance/{id} Schema: - Usage: cctl get historicProcessInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicProcessInstanceDurationReport \u00b6 Get Duration Report Retrieves a report about the duration of completed process instances, grouped by a period. These reports include the maximum, minimum and average duration of all completed process instances which were started in a given period. Note: This only includes historic data. URL: /history/process-instance/report Schema: - Usage: cctl get historicProcessInstanceDurationReport [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --started-after text Restrict to instances that were started after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2016-01-23T14:42:45.000+0200 . None --started-before text Restrict to instances that were started before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2016-01-23T14:42:45.000+0200 . None --process-definition-key-in text Filter by process definition keys. Must be a comma-separated list of process definition keys. None --process-definition-id-in text Filter by process definition ids. Must be a comma-separated list of process definition ids. None --period-unit text Mandatory. Specifies the granularity of the report. Valid values are month and quarter . None --report-type text Mandatory. Specifies the type of the report to retrieve. To retrieve a report about the duration of process instances, the value must be set to duration . None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicProcessInstances \u00b6 Get List Queries for historic process instances that fulfill the given parameters. The size of the result set can be retrieved by using the Get Process Instance Count method. URL: /history/process-instance Schema: - Usage: cctl get historicProcessInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match all variable values provided in variables case-insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match all variable names provided in variables case-insensitively. If set to true variableName and variablename are treated as equal. None --variables text Only include process instances that have/had variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . Key and value may not contain underscore or comma characters. | None | | --internally-terminated / --not-internally-terminated | boolean | Restrict to instances that are internallyTerminated. | None | | --externally-terminated / --not-externally-terminated | boolean | Restrict to instances that are externallyTerminated. | None | | --completed / --not-completed | boolean | Restrict to instances that are completed. | None | | --suspended / --not-suspended | boolean | Restrict to instances that are suspended. | None | | --active / --not-active | boolean | Restrict to instances that are active. | None | | --active-activity-id-in | text | Restrict to instances that have an active activity with one of given ids. Filter by a comma-separated list of Strings | None | | --executed-activity-id-in | text | Restrict to instances that executed an activity with one of given ids. Filter by a comma-separated list of Strings | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include historic process instances which belong to no tenant. Value may only be true , as false is the default behavior. | None | | --tenant-id-in | text | Filter by a list of tenant ids. A process instance must have one of the given tenant ids. Filter by a comma-separated list of Strings | None | | --case-instance-id | text | Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id. | None | | --sub-case-instance-id | text | Restrict query to one process instance that has a sub case instance with the given id. | None | | --super-case-instance-id | text | Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id. | None | | --sub-process-instance-id | text | Restrict query to one process instance that has a sub process instance with the given id. | None | | --super-process-instance-id | text | Restrict query to all process instances that are sub process instances of the given process instance. Takes a process instance id. | None | | --started-by | text | Only include process instances that were started by the given user. | None | | --executed-job-before | text | Restrict to instances that executed an job before the given date (inclusive). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --executed-job-after | text | Restrict to instances that executed an job after the given date (inclusive). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --executed-activity-before | text | Restrict to instances that executed an activity before the given date (inclusive). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --executed-activity-after | text | Restrict to instances that executed an activity after the given date (inclusive). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --finished-after | text | Restrict to instances that were finished after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --finished-before | text | Restrict to instances that were finished before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --started-after | text | Restrict to instances that were started after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --started-before | text | Restrict to instances that were started before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --incident-message-like | text | Filter by the incident message that the parameter is a substring of. | None | | --incident-message | text | Filter by the incident message. Exact match. | None | | --incident-status | text | Only include process instances which have an incident in status either open or resolved. To get all process instances, use the query parameter withIncidents. | None | | --incident-type | text | Filter by the incident type. See the User Guide for a list of incident types. | None | | --with-root-incidents / --not-with-root-incidents | boolean | Only include process instances which have a root incident. Value may only be true , as false is the default behavior. | None | | --with-incidents / --not-with-incidents | boolean | Only include process instances which have an incident. Value may only be true , as false is the default behavior. | None | | --unfinished / --not-unfinished | boolean | Only include unfinished process instances. Value may only be true , as false is the default behavior. | None | | --finished / --not-finished | boolean | Only include finished process instances. This flag includes all process instances that are completed or terminated. Value may only be true , as false is the default behavior. | None | | --root-process-instances / --not-root-process-instances | boolean | Restrict the query to all process instances that are top level process instances. | None | | --process-instance-business-key-like | text | Filter by process instance business key that the parameter is a substring of. | None | | --process-instance-business-key | text | Filter by process instance business key. | None | | --process-definition-key-not-in | text | Exclude instances that belong to a set of process definitions. Filter by a comma-separated list of Strings . | None | | --process-definition-name-like | text | Filter by process definition names that the parameter is a substring of. | None | | --process-definition-name | text | Filter by the name of the process definition the instances run on. | None | | --process-definition-key-in | text | Filter by a list of process definition keys. A process instance must have one of the given process definition keys. Filter by a comma-separated list of Strings . | None | | --process-definition-key | text | Filter by the key of the process definition the instances run on. | None | | --process-definition-id | text | Filter by the process definition the instances run on. | None | | --process-instance-ids | text | Filter by process instance ids. Filter by a comma-separated list of Strings . | None | | --process-instance-id | text | Filter by process instance id. | None | | --max-results | text | Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. | None | | --first-result | text | Pagination of results. Specifies the index of the first result to return. | None | | --sort-order | text | Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. | None | | --sort-by | text | Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get historicProcessInstancesCount \u00b6 Get List Count Queries for the number of historic process instances that fulfill the given parameters. Takes the same parameters as the Get Process Instances method. URL: /history/process-instance/count Schema: - Usage: cctl get historicProcessInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match all variable values provided in variables case-insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match all variable names provided in variables case-insensitively. If set to true variableName and variablename are treated as equal. None --variables text Only include process instances that have/had variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . Key and value may not contain underscore or comma characters. | None | | --internally-terminated / --not-internally-terminated | boolean | Restrict to instances that are internallyTerminated. | None | | --externally-terminated / --not-externally-terminated | boolean | Restrict to instances that are externallyTerminated. | None | | --completed / --not-completed | boolean | Restrict to instances that are completed. | None | | --suspended / --not-suspended | boolean | Restrict to instances that are suspended. | None | | --active / --not-active | boolean | Restrict to instances that are active. | None | | --active-activity-id-in | text | Restrict to instances that have an active activity with one of given ids. Filter by a comma-separated list of Strings | None | | --executed-activity-id-in | text | Restrict to instances that executed an activity with one of given ids. Filter by a comma-separated list of Strings | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include historic process instances which belong to no tenant. Value may only be true , as false is the default behavior. | None | | --tenant-id-in | text | Filter by a list of tenant ids. A process instance must have one of the given tenant ids. Filter by a comma-separated list of Strings | None | | --case-instance-id | text | Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id. | None | | --sub-case-instance-id | text | Restrict query to one process instance that has a sub case instance with the given id. | None | | --super-case-instance-id | text | Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id. | None | | --sub-process-instance-id | text | Restrict query to one process instance that has a sub process instance with the given id. | None | | --super-process-instance-id | text | Restrict query to all process instances that are sub process instances of the given process instance. Takes a process instance id. | None | | --started-by | text | Only include process instances that were started by the given user. | None | | --executed-job-before | text | Restrict to instances that executed an job before the given date (inclusive). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --executed-job-after | text | Restrict to instances that executed an job after the given date (inclusive). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --executed-activity-before | text | Restrict to instances that executed an activity before the given date (inclusive). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --executed-activity-after | text | Restrict to instances that executed an activity after the given date (inclusive). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --finished-after | text | Restrict to instances that were finished after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --finished-before | text | Restrict to instances that were finished before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --started-after | text | Restrict to instances that were started after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --started-before | text | Restrict to instances that were started before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --incident-message-like | text | Filter by the incident message that the parameter is a substring of. | None | | --incident-message | text | Filter by the incident message. Exact match. | None | | --incident-status | text | Only include process instances which have an incident in status either open or resolved. To get all process instances, use the query parameter withIncidents. | None | | --incident-type | text | Filter by the incident type. See the User Guide for a list of incident types. | None | | --with-root-incidents / --not-with-root-incidents | boolean | Only include process instances which have a root incident. Value may only be true , as false is the default behavior. | None | | --with-incidents / --not-with-incidents | boolean | Only include process instances which have an incident. Value may only be true , as false is the default behavior. | None | | --unfinished / --not-unfinished | boolean | Only include unfinished process instances. Value may only be true , as false is the default behavior. | None | | --finished / --not-finished | boolean | Only include finished process instances. This flag includes all process instances that are completed or terminated. Value may only be true , as false is the default behavior. | None | | --root-process-instances / --not-root-process-instances | boolean | Restrict the query to all process instances that are top level process instances. | None | | --process-instance-business-key-like | text | Filter by process instance business key that the parameter is a substring of. | None | | --process-instance-business-key | text | Filter by process instance business key. | None | | --process-definition-key-not-in | text | Exclude instances that belong to a set of process definitions. Filter by a comma-separated list of Strings . | None | | --process-definition-name-like | text | Filter by process definition names that the parameter is a substring of. | None | | --process-definition-name | text | Filter by the name of the process definition the instances run on. | None | | --process-definition-key-in | text | Filter by a list of process definition keys. A process instance must have one of the given process definition keys. Filter by a comma-separated list of Strings . | None | | --process-definition-key | text | Filter by the key of the process definition the instances run on. | None | | --process-definition-id | text | Filter by the process definition the instances run on. | None | | --process-instance-ids | text | Filter by process instance ids. Filter by a comma-separated list of Strings . | None | | --process-instance-id | text | Filter by process instance id. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get historicTaskInstanceReport \u00b6 Get Task Report (Historic) Retrieves a report of completed tasks. When the report type is set to count , the report contains a list of completed task counts where an entry contains the task name, the definition key of the task, the process definition id, the process definition key, the process definition name and the count of how many tasks were completed for the specified key in a given period. When the report type is set to duration , the report contains a minimum, maximum and average duration value of all completed task instances in a given period. URL: /history/task/report Schema: - Usage: cctl get historicTaskInstanceReport [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --group-by text When the report type is set to count , this parameter is mandatory . Groups the tasks report by a given criterion. Valid values are taskName and processDefinition . None --completed-after text Restrict to tasks that were completed after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --completed-before text Restrict to tasks that were completed before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --period-unit text When the report type is set to duration , this parameter is mandatory . Specifies the granularity of the report. Valid values are month and quarter . None --report-type text Mandatory. Specifies the kind of the report to execute. To retrieve a report about the duration of process instances the value must be set to duration . For a report of the completed tasks in a specific timespan the value must be set to count . None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicTaskInstances \u00b6 Get Tasks (Historic) Queries for historic tasks that fulfill the given parameters. The size of the result set can be retrieved by using the Get Task Count method. URL: /history/task Schema: - Usage: cctl get historicTaskInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --without-candidate-groups / --not-without-candidate-groups boolean Only include tasks which have no candidate group. Value may only be true , as false is the default behavior. None --with-candidate-groups / --not-with-candidate-groups boolean Only include tasks which have a candidate group. Value may only be true , as false is the default behavior. None --task-had-candidate-group text Restrict to tasks with a historic identity link to the given candidate group. None --task-had-candidate-user text Restrict to tasks with a historic identity link to the given candidate user. None --task-involved-group text Restrict to tasks with a historic identity link to the given group. None --task-involved-user text Restrict to tasks with a historic identity link to the given user. None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match the variable value provided in taskVariables and processVariables case- insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match the variable name provided in taskVariables and processVariables case- insensitively. If set to true variableName and variablename are treated as equal. None --process-variables text Only include tasks that belong to process instances that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: * eq - equal to; * neq - not equal to; * gt - greater than; * gteq - greater than or equal to; * lt - lower than; * lteq - lower than or equal to; * like ; * notLike . key and value may not contain underscore or comma characters. | None | | --task-variables | text | Only include tasks that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: * eq - equal to; * neq - not equal to; * gt - greater than; * gteq - greater than or equal to; * lt - lower than; * lteq - lower than or equal to; * like . key and value may not contain underscore or comma characters. | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include historic task instances that belong to no tenant. Value may only be true , as false is the default behavior. | None | | --tenant-id-in | text | Filter by a comma-separated list of tenant ids. A task instance must have one of the given tenant ids. | None | | --finished-after | text | Restrict to tasks that were finished after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --finished-before | text | Restrict to tasks that were finished before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --started-after | text | Restrict to tasks that were started after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --started-before | text | Restrict to tasks that were started before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-follow-up-date-after | text | Restrict to tasks that have a followUp date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-follow-up-date-before | text | Restrict to tasks that have a followUp date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-follow-up-date | text | Restrict to tasks that have a followUp date on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --without-task-due-date / --not-without-task-due-date | boolean | Only include tasks which have no due date. Value may only be true , as false is the default behavior. | None | | --task-due-date-after | text | Restrict to tasks that are due after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-due-date-before | text | Restrict to tasks that are due before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-due-date | text | Restrict to tasks that are due on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --process-unfinished / --not-process-unfinished | boolean | Only include tasks of unfinished processes. Value may only be true , as false is the default behavior. | None | | --process-finished / --not-process-finished | boolean | Only include tasks of finished processes. Value may only be true , as false is the default behavior. | None | | --unfinished / --not-unfinished | boolean | Only include unfinished tasks. Value may only be true , as false is the default behavior. | None | | --finished / --not-finished | boolean | Only include finished tasks. Value may only be true , as false is the default behavior. | None | | --unassigned / --not-unassigned | boolean | If set to true , restricts the query to all tasks that are unassigned. | None | | --assigned / --not-assigned | boolean | If set to true , restricts the query to all tasks that are assigned. | None | | --task-priority | text | Restrict to tasks that have the given priority. | None | | --task-owner-like | text | Restrict to tasks that are owned by users with the parameter value as a substring. | None | | --task-owner | text | Restrict to tasks that the given user owns. | None | | --task-assignee-like | text | Restrict to tasks that are assigned to users with the parameter value as a substring. | None | | --task-assignee | text | Restrict to tasks that the given user is assigned to. | None | | --task-delete-reason-like | text | Restrict to tasks that have a delete reason that has the parameter value as a substring. | None | | --task-delete-reason | text | Restrict to tasks that have the given delete reason. | None | | --task-definition-key-in | text | Restrict to tasks that have one of the passed comma-separated task definition keys. | None | | --task-definition-key | text | Restrict to tasks that have the given key. | None | | --task-description-like | text | Restrict to tasks that have a description that has the parameter value as a substring. | None | | --task-description | text | Restrict to tasks that have the given description. | None | | --task-name-like | text | Restrict to tasks that have a name with the given parameter value as substring. | None | | --task-name | text | Restrict to tasks that have the given name. | None | | --activity-instance-id-in | text | Only include tasks which belong to one of the passed comma-separated activity instance ids. | None | | --case-definition-name | text | Restrict to tasks that belong to a case definition with the given name. | None | | --case-definition-key | text | Restrict to tasks that belong to a case definition with the given key. | None | | --case-definition-id | text | Filter by case definition id. | None | | --case-execution-id | text | Filter by the id of the case execution that executed the task. | None | | --case-instance-id | text | Filter by case instance id. | None | | --process-definition-name | text | Restrict to tasks that belong to a process definition with the given name. | None | | --process-definition-key | text | Restrict to tasks that belong to a process definition with the given key. | None | | --process-definition-id | text | Filter by process definition id. | None | | --execution-id | text | Filter by the id of the execution that executed the task. | None | | --process-instance-business-key-like | text | Filter by process instance business key that has the parameter value as a substring. | None | | --process-instance-business-key-in | text | Filter by process instances with one of the give business keys. The keys need to be in a comma-separated list. | None | | --process-instance-business-key | text | Filter by process instance business key. | None | | --process-instance-id | text | Filter by process instance id. | None | | --task-parent-task-id | text | Filter by parent task id. | None | | --task-id | text | Filter by task id. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get historicTaskInstancesCount \u00b6 Get Task Count Queries for the number of historic tasks that fulfill the given parameters. Takes the same parameters as the Get Tasks (Historic) method. URL: /history/task/count Schema: - Usage: cctl get historicTaskInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --without-candidate-groups / --not-without-candidate-groups boolean Only include tasks which have no candidate group. Value may only be true , as false is the default behavior. None --with-candidate-groups / --not-with-candidate-groups boolean Only include tasks which have a candidate group. Value may only be true , as false is the default behavior. None --task-had-candidate-group text Restrict to tasks with a historic identity link to the given candidate group. None --task-had-candidate-user text Restrict to tasks with a historic identity link to the given candidate user. None --task-involved-group text Restrict to tasks with a historic identity link to the given group. None --task-involved-user text Restrict to tasks with a historic identity link to the given user. None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match the variable value provided in taskVariables and processVariables case- insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match the variable name provided in taskVariables and processVariables case- insensitively. If set to true variableName and variablename are treated as equal. None --process-variables text Only include tasks that belong to process instances that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: * eq - equal to; * neq - not equal to; * gt - greater than; * gteq - greater than or equal to; * lt - lower than; * lteq - lower than or equal to; * like ; * notLike . key and value may not contain underscore or comma characters. | None | | --task-variables | text | Only include tasks that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: * eq - equal to; * neq - not equal to; * gt - greater than; * gteq - greater than or equal to; * lt - lower than; * lteq - lower than or equal to; * like . key and value may not contain underscore or comma characters. | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include historic task instances that belong to no tenant. Value may only be true , as false is the default behavior. | None | | --tenant-id-in | text | Filter by a comma-separated list of tenant ids. A task instance must have one of the given tenant ids. | None | | --finished-after | text | Restrict to tasks that were finished after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --finished-before | text | Restrict to tasks that were finished before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --started-after | text | Restrict to tasks that were started after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --started-before | text | Restrict to tasks that were started before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-follow-up-date-after | text | Restrict to tasks that have a followUp date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-follow-up-date-before | text | Restrict to tasks that have a followUp date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-follow-up-date | text | Restrict to tasks that have a followUp date on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --without-task-due-date / --not-without-task-due-date | boolean | Only include tasks which have no due date. Value may only be true , as false is the default behavior. | None | | --task-due-date-after | text | Restrict to tasks that are due after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-due-date-before | text | Restrict to tasks that are due before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-due-date | text | Restrict to tasks that are due on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --process-unfinished / --not-process-unfinished | boolean | Only include tasks of unfinished processes. Value may only be true , as false is the default behavior. | None | | --process-finished / --not-process-finished | boolean | Only include tasks of finished processes. Value may only be true , as false is the default behavior. | None | | --unfinished / --not-unfinished | boolean | Only include unfinished tasks. Value may only be true , as false is the default behavior. | None | | --finished / --not-finished | boolean | Only include finished tasks. Value may only be true , as false is the default behavior. | None | | --unassigned / --not-unassigned | boolean | If set to true , restricts the query to all tasks that are unassigned. | None | | --assigned / --not-assigned | boolean | If set to true , restricts the query to all tasks that are assigned. | None | | --task-priority | text | Restrict to tasks that have the given priority. | None | | --task-owner-like | text | Restrict to tasks that are owned by users with the parameter value as a substring. | None | | --task-owner | text | Restrict to tasks that the given user owns. | None | | --task-assignee-like | text | Restrict to tasks that are assigned to users with the parameter value as a substring. | None | | --task-assignee | text | Restrict to tasks that the given user is assigned to. | None | | --task-delete-reason-like | text | Restrict to tasks that have a delete reason that has the parameter value as a substring. | None | | --task-delete-reason | text | Restrict to tasks that have the given delete reason. | None | | --task-definition-key-in | text | Restrict to tasks that have one of the passed comma-separated task definition keys. | None | | --task-definition-key | text | Restrict to tasks that have the given key. | None | | --task-description-like | text | Restrict to tasks that have a description that has the parameter value as a substring. | None | | --task-description | text | Restrict to tasks that have the given description. | None | | --task-name-like | text | Restrict to tasks that have a name with the given parameter value as substring. | None | | --task-name | text | Restrict to tasks that have the given name. | None | | --activity-instance-id-in | text | Only include tasks which belong to one of the passed comma-separated activity instance ids. | None | | --case-definition-name | text | Restrict to tasks that belong to a case definition with the given name. | None | | --case-definition-key | text | Restrict to tasks that belong to a case definition with the given key. | None | | --case-definition-id | text | Filter by case definition id. | None | | --case-execution-id | text | Filter by the id of the case execution that executed the task. | None | | --case-instance-id | text | Filter by case instance id. | None | | --process-definition-name | text | Restrict to tasks that belong to a process definition with the given name. | None | | --process-definition-key | text | Restrict to tasks that belong to a process definition with the given key. | None | | --process-definition-id | text | Filter by process definition id. | None | | --execution-id | text | Filter by the id of the execution that executed the task. | None | | --process-instance-business-key-like | text | Filter by process instance business key that has the parameter value as a substring. | None | | --process-instance-business-key-in | text | Filter by process instances with one of the give business keys. The keys need to be in a comma-separated list. | None | | --process-instance-business-key | text | Filter by process instance business key. | None | | --process-instance-id | text | Filter by process instance id. | None | | --task-parent-task-id | text | Filter by parent task id. | None | | --task-id | text | Filter by task id. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get historicVariableInstance \u00b6 Get Variable Instance Retrieves a historic variable by id. URL: /history/variable-instance/{id} Schema: - Usage: cctl get historicVariableInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get historicVariableInstanceBinary \u00b6 Get Variable Instance (Binary) Retrieves the content of a historic variable by id. Applicable for variables that are serialized as binary data. URL: /history/variable-instance/{id}/data Schema: - Usage: cctl get historicVariableInstanceBinary [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicVariableInstances \u00b6 Get Variable Instances Queries for historic variable instances that fulfill the given parameters. The size of the result set can be retrieved by using the Get Variable Instance Count method. URL: /history/variable-instance Schema: - Usage: cctl get historicVariableInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --max-results | text | Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. | None | | --first-result | text | Pagination of results. Specifies the index of the first result to return. | None | | --sort-order | text | Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. | None | | --sort-by | text | Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include historic variable instances that belong to no tenant. Value may only be true , as false is the default behavior. | None | | --tenant-id-in | text | Only include historic variable instances which belong to one of the passed and comma- separated tenant ids. | None | | --activity-instance-id-in | text | Only include historic variable instances which belong to one of the passed and and comma-separated activity instance ids. | None | | --task-id-in | text | Only include historic variable instances which belong to one of the passed and and comma-separated task ids. | None | | --case-activity-id-in | text | Only include historic variable instances which belong to one of the passed and and comma-separated case activity ids. | None | | --case-execution-id-in | text | Only include historic variable instances which belong to one of the passed and and comma-separated case execution ids. | None | | --case-instance-id | text | Filter by the case instance the variable belongs to. | None | | --execution-id-in | text | Only include historic variable instances which belong to one of the passed and and comma-separated execution ids. | None | | --process-definition-key | text | Filter by a key of the process definition the variable belongs to. | None | | --process-definition-id | text | Filter by the process definition the variable belongs to. | None | | --process-instance-id-in | text | Only include historic variable instances which belong to one of the passed and comma-separated process instance ids. | None | | --process-instance-id | text | Filter by the process instance the variable belongs to. | None | | --include-deleted / --not-include-deleted | boolean | Include variables that has already been deleted during the execution. | None | | --variable-type-in | text | Only include historic variable instances which belong to one of the passed and comma- separated variable types. A list of all supported variable types can be found here . Note: All non-primitive variables are associated with the type 'serializable'. | None | | --variable-values-ignore-case / --not-variable-values-ignore-case | boolean | Match the variable value provided in variableValue case-insensitively. If set to true variableValue and variablevalue are treated as equal. | None | | --variable-names-ignore-case / --not-variable-names-ignore-case | boolean | Match the variable name provided in variableName and variableNameLike case- insensitively. If set to true variableName and variablename are treated as equal. | None | | --variable-value | text | Filter by variable value. Is treated as a String object on server side. | None | | --variable-name-like | text | Restrict to variables with a name like the parameter. | None | | --variable-name | text | Filter by variable name. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get historicVariableInstancesCount \u00b6 Get Variable Instance Count Queries for the number of historic variable instances that fulfill the given parameters. Takes the same parameters as the Get Variable Instances method. URL: /history/variable-instance/count Schema: - Usage: cctl get historicVariableInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --without-tenant-id / --not-without-tenant-id boolean Only include historic variable instances that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Only include historic variable instances which belong to one of the passed and comma- separated tenant ids. None --activity-instance-id-in text Only include historic variable instances which belong to one of the passed and and comma-separated activity instance ids. None --task-id-in text Only include historic variable instances which belong to one of the passed and and comma-separated task ids. None --case-activity-id-in text Only include historic variable instances which belong to one of the passed and and comma-separated case activity ids. None --case-execution-id-in text Only include historic variable instances which belong to one of the passed and and comma-separated case execution ids. None --case-instance-id text Filter by the case instance the variable belongs to. None --execution-id-in text Only include historic variable instances which belong to one of the passed and and comma-separated execution ids. None --process-definition-key text Filter by a key of the process definition the variable belongs to. None --process-definition-id text Filter by the process definition the variable belongs to. None --process-instance-id-in text Only include historic variable instances which belong to one of the passed and comma-separated process instance ids. None --process-instance-id text Filter by the process instance the variable belongs to. None --include-deleted / --not-include-deleted boolean Include variables that has already been deleted during the execution. None --variable-type-in text Only include historic variable instances which belong to one of the passed and comma- separated variable types. A list of all supported variable types can be found here . Note: All non-primitive variables are associated with the type 'serializable'. None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match the variable value provided in variableValue case-insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match the variable name provided in variableName and variableNameLike case- insensitively. If set to true variableName and variablename are treated as equal. None --variable-value text Filter by variable value. Is treated as a String object on server side. None --variable-name-like text Restrict to variables with a name like the parameter. None --variable-name text Filter by variable name. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historyCleanupConfiguration \u00b6 Get History Cleanup Configuration Retrieves history cleanup batch window configuration (See History cleanup ). URL: /history/cleanup/configuration Schema: - Usage: cctl get historyCleanupConfiguration [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get identityLinks \u00b6 Get List Gets the identity links for a task by id, which are the users and groups that are in some relation to it (including assignee and owner). URL: /task/{id}/identity-links Schema: - Usage: cctl get identityLinks [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --type text Filter by the type of links to include. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get incident \u00b6 Get Incident Retrieves an incident by ID. URL: /incident/{id} Schema: - Usage: cctl get incident [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get incidents \u00b6 Get List Queries for incidents that fulfill given parameters. The size of the result set can be retrieved by using the Get Incident Count method. URL: /incident Schema: - Usage: cctl get incidents [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --job-definition-id-in text Restricts to incidents that have one of the given comma-separated job definition ids. None --tenant-id-in text Restricts to incidents that have one of the given comma-separated tenant ids. None --configuration text Restricts to incidents that have the given parameter set as configuration. None --root-cause-incident-id text Restricts to incidents that have the given incident id as root cause incident. None --cause-incident-id text Restricts to incidents that have the given incident id as cause incident. None --failed-activity-id text Restricts to incidents that were created due to the failure of an activity with the given id. None --activity-id text Restricts to incidents that belong to an activity with the given id. None --incident-timestamp-after text Restricts to incidents that have an incidentTimestamp date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --incident-timestamp-before text Restricts to incidents that have an incidentTimestamp date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --execution-id text Restricts to incidents that belong to an execution with the given id. None --process-instance-id text Restricts to incidents that belong to a process instance with the given id. None --process-definition-key-in text Restricts to incidents that belong to a process definition with the given keys. Must be a comma-separated list. None --process-definition-id text Restricts to incidents that belong to a process definition with the given id. None --incident-message-like text Restricts to incidents that incidents message is a substring of the given value. The string can include the wildcard character '%' to express like-strategy: starts with ( string% ), ends with ( %string ) or contains ( %string% ). None --incident-message text Restricts to incidents that have the given incident message. None --incident-type text Restricts to incidents that belong to the given incident type. See the User Guide for a list of incident types. None --incident-id text Restricts to incidents that have the given id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get incidentsCount \u00b6 Get List Count Queries for the number of incidents that fulfill given parameters. Takes the same parameters as the Get Incidents method. URL: /incident/count Schema: - Usage: cctl get incidentsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --job-definition-id-in text Restricts to incidents that have one of the given comma-separated job definition ids. None --tenant-id-in text Restricts to incidents that have one of the given comma-separated tenant ids. None --configuration text Restricts to incidents that have the given parameter set as configuration. None --root-cause-incident-id text Restricts to incidents that have the given incident id as root cause incident. None --cause-incident-id text Restricts to incidents that have the given incident id as cause incident. None --failed-activity-id text Restricts to incidents that were created due to the failure of an activity with the given id. None --activity-id text Restricts to incidents that belong to an activity with the given id. None --incident-timestamp-after text Restricts to incidents that have an incidentTimestamp date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --incident-timestamp-before text Restricts to incidents that have an incidentTimestamp date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --execution-id text Restricts to incidents that belong to an execution with the given id. None --process-instance-id text Restricts to incidents that belong to a process instance with the given id. None --process-definition-key-in text Restricts to incidents that belong to a process definition with the given keys. Must be a comma-separated list. None --process-definition-id text Restricts to incidents that belong to a process definition with the given id. None --incident-message-like text Restricts to incidents that incidents message is a substring of the given value. The string can include the wildcard character '%' to express like-strategy: starts with ( string% ), ends with ( %string ) or contains ( %string% ). None --incident-message text Restricts to incidents that have the given incident message. None --incident-type text Restricts to incidents that belong to the given incident type. See the User Guide for a list of incident types. None --incident-id text Restricts to incidents that have the given id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get interval \u00b6 Get Metrics in Interval Retrieves a list of metrics, aggregated for a given interval. URL: /metrics Schema: - Usage: cctl get interval [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --aggregate-by-reporter text Aggregate metrics by reporter. None --interval text The interval for which the metrics should be aggregated. Time unit is seconds. Default: The interval is set to 15 minutes (900 seconds). None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --end-date text The end date (exclusive). None --start-date text The start date (inclusive). None --reporter text The name of the reporter (host), on which the metrics was logged. This will have value provided by the hostname configuration property . None --name text The name of the metric. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get isUserAuthorized \u00b6 Perform an Authorization Check Performs an authorization check for the currently authenticated user. URL: /authorization/check Schema: - Usage: cctl get isUserAuthorized [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --user-id text The id of the user to check permissions for. The currently authenticated user must have a READ permission for the Authorization resource. If userId is blank, a check for the currently authenticated user is performed. None --resource-id text The id of the resource to check permissions for. If left blank, a check for global permissions on the resource is performed. None --resource-type text An integer representing the resource type to check permissions for. See the User Guide for a list of integer representations of resource types. None --resource-name text String value for the name of the resource to check permissions for. None --permission-name text String value representing the permission name to check for. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get job \u00b6 Get Job Retrieves a job by id, according to the Job interface in the engine. URL: /job/{id} Schema: - Usage: cctl get job [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get jobDefinition \u00b6 Get Job Definition Retrieves a job definition by id, according to the JobDefinition interface in the engine. URL: /job-definition/{id} Schema: - Usage: cctl get jobDefinition [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get jobDefinitions \u00b6 Get Job Definitions Queries for job definitions that fulfill given parameters. The size of the result set can be retrieved by using the Get Job Definition Count method. URL: /job-definition Schema: - Usage: cctl get jobDefinitions [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --include-job-definitions-without-tenant-id / --not-include-job-definitions-without-tenant-id boolean Include job definitions which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include job definitions which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Only include job definitions which belong to one of the passed and comma-separated tenant ids. None --with-overriding-job-priority / --not-with-overriding-job-priority boolean Only include job definitions that have an overriding job priority defined. The only effective value is true . If set to false , this filter is not applied. None --suspended / --not-suspended boolean Only include suspended job definitions. Value may only be true , as false is the default behavior. None --active / --not-active boolean Only include active job definitions. Value may only be true , as false is the default behavior. None --job-configuration text Only include job definitions which exist for the given job configuration. For example: for timer jobs it is the timer configuration. None --job-type text Only include job definitions which exist for the given job type. See the User Guide for more information about job types. None --process-definition-key text Only include job definitions which exist for the given process definition key. None --process-definition-id text Only include job definitions which exist for the given process definition id. None --activity-id-in text Only include job definitions which belong to one of the passed and comma-separated activity ids. None --job-definition-id text Filter by job definition id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get jobDefinitionsCount \u00b6 Get Job Definition Count Queries for the number of job definitions that fulfill given parameters. Takes the same parameters as the Get Job Definitions method. URL: /job-definition/count Schema: - Usage: cctl get jobDefinitionsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --include-job-definitions-without-tenant-id / --not-include-job-definitions-without-tenant-id boolean Include job definitions which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include job definitions which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Only include job definitions which belong to one of the passed and comma-separated tenant ids. None --with-overriding-job-priority / --not-with-overriding-job-priority boolean Only include job definitions that have an overriding job priority defined. The only effective value is true . If set to false , this filter is not applied. None --suspended / --not-suspended boolean Only include suspended job definitions. Value may only be true , as false is the default behavior. None --active / --not-active boolean Only include active job definitions. Value may only be true , as false is the default behavior. None --job-configuration text Only include job definitions which exist for the given job configuration. For example: for timer jobs it is the timer configuration. None --job-type text Only include job definitions which exist for the given job type. See the User Guide for more information about job types. None --process-definition-key text Only include job definitions which exist for the given process definition key. None --process-definition-id text Only include job definitions which exist for the given process definition id. None --activity-id-in text Only include job definitions which belong to one of the passed and comma-separated activity ids. None --job-definition-id text Filter by job definition id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get jobs \u00b6 Get Jobs Queries for jobs that fulfill given parameters. The size of the result set can be retrieved by using the Get Job Count method. URL: /job Schema: - Usage: cctl get jobs [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --include-jobs-without-tenant-id / --not-include-jobs-without-tenant-id boolean Include jobs which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include jobs which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Only include jobs which belong to one of the passed comma-separated tenant ids. None --priority-higher-than-or-equals text Only include jobs with a priority higher than or equal to the given value. Value must be a valid long value. None --priority-lower-than-or-equals text Only include jobs with a priority lower than or equal to the given value. Value must be a valid long value. None --suspended / --not-suspended boolean Only include suspended jobs. Value may only be true , as false is the default behavior. None --active / --not-active boolean Only include active jobs. Value may only be true , as false is the default behavior. None --no-retries-left / --not-no-retries-left boolean Only select jobs which have no retries left. Value may only be true , as false is the default behavior. None --failed-activity-id text Only select jobs that failed due to an exception at an activity with the given id. None --exception-message text Only select jobs that failed due to an exception with the given message. None --with-exception / --not-with-exception boolean Only select jobs that failed due to an exception. Value may only be true , as false is the default behavior. None --create-times text Only select jobs created before or after the given date. Create time expressions are comma-separated and are structured as follows: A valid condition value has the form operator_value . operator is the comparison operator to be used and value the date value as string. Valid operator values are: gt - greater than; lt - lower than. value may not contain underscore or comma characters. | None | | --due-dates | text | Only select jobs where the due date is lower or higher than the given date. Due date expressions are comma-separated and are structured as follows: A valid condition value has the form operator_value . operator is the comparison operator to be used and value the date value as string. Valid operator values are: gt - greater than; lt - lower than. value may not contain underscore or comma characters. | None | | --messages / --not-messages | boolean | Only select jobs that are messages. Cannot be used together with timers . Value may only be true , as false is the default behavior. | None | | --timers / --not-timers | boolean | Only select jobs that are timers. Cannot be used together with messages . Value may only be true , as false is the default behavior. | None | | --executable / --not-executable | boolean | Only select jobs which are executable, i.e., retries > 0 and due date is null or due date is in the past. Value may only be true , as false is the default behavior. | None | | --with-retries-left / --not-with-retries-left | boolean | Only select jobs which have retries left. Value may only be true , as false is the default behavior. | None | | --activity-id | text | Only select jobs which exist for an activity with the given id. | None | | --process-definition-key | text | Filter by the key of the process definition the jobs run on. | None | | --process-definition-id | text | Filter by the id of the process definition the jobs run on. | None | | --execution-id | text | Only select jobs which exist for the given execution. | None | | --process-instance-ids | text | Only select jobs which exist for the given comma-separated list of process instance ids. | None | | --process-instance-id | text | Only select jobs which exist for the given process instance. | None | | --job-definition-id | text | Only select jobs which exist for the given job definition. | None | | --job-ids | text | Filter by a comma-separated list of job ids. | None | | --job-id | text | Filter by job id. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get jobsCount \u00b6 Get Job Count Queries for the number of jobs that fulfill given parameters. Takes the same parameters as the Get Jobs method. URL: /job/count Schema: - Usage: cctl get jobsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --include-jobs-without-tenant-id / --not-include-jobs-without-tenant-id boolean Include jobs which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include jobs which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Only include jobs which belong to one of the passed comma-separated tenant ids. None --priority-higher-than-or-equals text Only include jobs with a priority higher than or equal to the given value. Value must be a valid long value. None --priority-lower-than-or-equals text Only include jobs with a priority lower than or equal to the given value. Value must be a valid long value. None --suspended / --not-suspended boolean Only include suspended jobs. Value may only be true , as false is the default behavior. None --active / --not-active boolean Only include active jobs. Value may only be true , as false is the default behavior. None --no-retries-left / --not-no-retries-left boolean Only select jobs which have no retries left. Value may only be true , as false is the default behavior. None --failed-activity-id text Only select jobs that failed due to an exception at an activity with the given id. None --exception-message text Only select jobs that failed due to an exception with the given message. None --with-exception / --not-with-exception boolean Only select jobs that failed due to an exception. Value may only be true , as false is the default behavior. None --create-times text Only select jobs created before or after the given date. Create time expressions are comma-separated and are structured as follows: A valid condition value has the form operator_value . operator is the comparison operator to be used and value the date value as string. Valid operator values are: gt - greater than; lt - lower than. value may not contain underscore or comma characters. | None | | --due-dates | text | Only select jobs where the due date is lower or higher than the given date. Due date expressions are comma-separated and are structured as follows: A valid condition value has the form operator_value . operator is the comparison operator to be used and value the date value as string. Valid operator values are: gt - greater than; lt - lower than. value may not contain underscore or comma characters. | None | | --messages / --not-messages | boolean | Only select jobs that are messages. Cannot be used together with timers . Value may only be true , as false is the default behavior. | None | | --timers / --not-timers | boolean | Only select jobs that are timers. Cannot be used together with messages . Value may only be true , as false is the default behavior. | None | | --executable / --not-executable | boolean | Only select jobs which are executable, i.e., retries > 0 and due date is null or due date is in the past. Value may only be true , as false is the default behavior. | None | | --with-retries-left / --not-with-retries-left | boolean | Only select jobs which have retries left. Value may only be true , as false is the default behavior. | None | | --activity-id | text | Only select jobs which exist for an activity with the given id. | None | | --process-definition-key | text | Filter by the key of the process definition the jobs run on. | None | | --process-definition-id | text | Filter by the id of the process definition the jobs run on. | None | | --execution-id | text | Only select jobs which exist for the given execution. | None | | --process-instance-ids | text | Only select jobs which exist for the given comma-separated list of process instance ids. | None | | --process-instance-id | text | Only select jobs which exist for the given process instance. | None | | --job-definition-id | text | Only select jobs which exist for the given job definition. | None | | --job-ids | text | Filter by a comma-separated list of job ids. | None | | --job-id | text | Filter by job id. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get latestProcessDefinitionByTenantId \u00b6 Get Retrieves the latest version of the process definition for tenant according to the ProcessDefinition interface in the engine. URL: /process-definition/key/{key}/tenant-id/{tenant-id} Schema: - Usage: cctl get latestProcessDefinitionByTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get localExecutionVariable \u00b6 Get Local Execution Variable Retrieves a variable from the context of a given execution by id. Does not traverse the parent execution hierarchy. URL: /execution/{id}/localVariables/{varName} Schema: - Usage: cctl get localExecutionVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-value / --not-deserialize-value boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get localExecutionVariableBinary \u00b6 Get Local Execution Variable (Binary) Retrieves a binary variable from the context of a given execution by id. Does not traverse the parent execution hierarchy. Applicable for byte array and file variables. URL: /execution/{id}/localVariables/{varName}/data Schema: - Usage: cctl get localExecutionVariableBinary [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get localExecutionVariables \u00b6 Get Local Execution Variables Retrieves all variables of a given execution by id. URL: /execution/{id}/localVariables Schema: - Usage: cctl get localExecutionVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get messageEventSubscription \u00b6 Get Message Event Subscription Retrieves a message event subscription for a given execution by id and a message name. URL: /execution/{id}/messageSubscriptions/{messageName} Schema: - Usage: cctl get messageEventSubscription [OPTIONS] MESSAGENAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get metrics \u00b6 Get Sum Retrieves the sum (count) for a given metric. URL: /metrics/{metrics-name}/sum Schema: - Usage: cctl get metrics [OPTIONS] METRICS_NAME Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --end-date text The end date (exclusive). None --start-date text The start date (inclusive). None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get passwordPolicy \u00b6 Get Password Policy A password policy consists of a list of rules that new passwords must follow to be policy compliant. This end point returns a JSON representation of the list of policy rules. More information on password policies in Camunda can be found in the password policy user guide and in the security instructions . URL: /identity/password-policy Schema: - Usage: cctl get passwordPolicy [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get processDefinition \u00b6 Get Retrieves a process definition according to the ProcessDefinition interface in the engine. URL: /process-definition/{id} Schema: - Usage: cctl get processDefinition [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get processDefinitionBpmn20Xml \u00b6 Get XML Retrieves the BPMN 2.0 XML of a process definition. URL: /process-definition/{id}/xml Schema: - Usage: cctl get processDefinitionBpmn20Xml [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get processDefinitionBpmn20XmlByKey \u00b6 Get XML Retrieves latest version the BPMN 2.0 XML of a process definition. URL: /process-definition/key/{key}/xml Schema: - Usage: cctl get processDefinitionBpmn20XmlByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get processDefinitionBpmn20XmlByKeyAndTenantId \u00b6 Get XML Retrieves latest version the BPMN 2.0 XML of a process definition. Returns the XML for the latest version of the process definition for tenant. URL: /process-definition/key/{key}/tenant-id/{tenant-id}/xml Schema: - Usage: cctl get processDefinitionBpmn20XmlByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get processDefinitionByKey \u00b6 Get Retrieves the latest version of the process definition which belongs to no tenant according to the ProcessDefinition interface in the engine. URL: /process-definition/key/{key} Schema: - Usage: cctl get processDefinitionByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get processDefinitionDiagram \u00b6 Get Diagram Retrieves the diagram of a process definition. If the process definition's deployment contains an image resource with the same file name as the process definition, the deployed image will be returned by the Get Diagram endpoint. Example: someProcess.bpmn and someProcess.png . Supported file extentions for the image are: svg , png , jpg , and gif . URL: /process-definition/{id}/diagram Schema: - Usage: cctl get processDefinitionDiagram [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get processDefinitionDiagramByKey \u00b6 Get Diagram Retrieves the diagram for the latest version of the process definition which belongs to no tenant. If the process definition's deployment contains an image resource with the same file name as the process definition, the deployed image will be returned by the Get Diagram endpoint. Example: someProcess.bpmn and someProcess.png . Supported file extentions for the image are: svg , png , jpg , and gif . URL: /process-definition/key/{key}/diagram Schema: - Usage: cctl get processDefinitionDiagramByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get processDefinitionDiagramByKeyAndTenantId \u00b6 Get Diagram Retrieves the diagram for the latest version of the process definition for tenant. If the process definition's deployment contains an image resource with the same file name as the process definition, the deployed image will be returned by the Get Diagram endpoint. Example: someProcess.bpmn and someProcess.png . Supported file extentions for the image are: svg , png , jpg , and gif . URL: /process-definition/key/{key}/tenant-id/{tenant-id}/diagram Schema: - Usage: cctl get processDefinitionDiagramByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get processDefinitionStatistics \u00b6 Get Process Instance Statistics Retrieves runtime statistics of the process engine, grouped by process definitions. These statistics include the number of running process instances, optionally the number of failed jobs and also optionally the number of incidents either grouped by incident types or for a specific incident type. Note : This does not include historic data. URL: /process-definition/statistics Schema: - Usage: cctl get processDefinitionStatistics [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --root-incidents / --not-root-incidents boolean Valid values for this property are true or false . If this property has been set to true the result will include the corresponding number of root incidents for each occurred incident type. If it is set to false , the incidents will not be included in the result. Cannot be used in combination with incidentsForType or incidents . None --incidents-for-type text If this property has been set with any incident type (i.e., a string value) the result will only include the number of incidents for the assigned incident type. Cannot be used in combination with incidents . See the User Guide for a list of incident types. None --incidents / --not-incidents boolean Valid values for this property are true or false . If this property has been set to true the result will include the corresponding number of incidents for each occurred incident type. If it is set to false , the incidents will not be included in the result. Cannot be used in combination with incidentsForType . None --failed-jobs / --not-failed-jobs boolean Whether to include the number of failed jobs in the result or not. Valid values are true or false . None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get processDefinitions \u00b6 Get List Queries for process definitions that fulfill given parameters. Parameters may be the properties of process definitions, such as the name, key or version. The size of the result set can be retrieved by using the Get Definition Count method. URL: /process-definition Schema: - Usage: cctl get processDefinitions [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --startable-permission-check / --not-startable-permission-check boolean Filter by process definitions which the user is allowed to start in Tasklist. If the user doesn't have these permissions the result will be empty list. The permissions are: * CREATE permission for all Process instances * CREATE_INSTANCE and READ permission on Process definition level None --not-startable-in-tasklist / --not-not-startable-in-tasklist boolean Filter by process definitions which are not startable in Tasklist. None --startable-in-tasklist / --not-startable-in-tasklist boolean Filter by process definitions which are startable in Tasklist.. None --without-version-tag / --not-without-version-tag boolean Only include process definitions without a versionTag . None --version-tag-like text Filter by the version tag that the parameter is a substring of. None --version-tag text Filter by the version tag. None --include-process-definitions-without-tenant-id / --not-include-process-definitions-without-tenant-id boolean Include process definitions which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include process definitions which belong to no tenant. Value may only be true, as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A process definition must have one of the given tenant ids. None --incident-message-like text Filter by the incident message that the parameter is a substring of. None --incident-message text Filter by the incident message. Exact match. None --incident-type text Filter by the incident type. See the User Guide for a list of incident types. None --incident-id text Filter by the incident id. None --suspended / --not-suspended boolean Only include suspended process definitions. Value may only be true , as false is the default behavior. None --active / --not-active boolean Only include active process definitions. Value may only be true , as false is the default behavior. None --startable-by text Filter by a user name who is allowed to start the process. None --resource-name-like text Filter by names of those process definition resources that the parameter is a substring of. None --resource-name text Filter by the name of the process definition resource. Exact match. None --latest-version / --not-latest-version boolean Only include those process definitions that are latest versions. Value may only be true , as false is the default behavior. None --version text Filter by process definition version. None --category-like text Filter by process definition categories that the parameter is a substring of. None --category text Filter by process definition category. Exact match. None --key-like text Filter by process definition keys that the parameter is a substring of. None --keys-in text Filter by a comma-separated list of process definition keys. None --key text Filter by process definition key, i.e., the id in the BPMN 2.0 XML. Exact match. None --deployed-at text Filter by the deploy time of the deployment the process definition belongs to. Only selects process definitions that have been deployed at a specific time (exact match). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.546+0200 . None --deployed-after text Filter by the deploy time of the deployment the process definition belongs to. Only selects process definitions that have been deployed after (exclusive) a specific time. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.546+0200 . None --deployment-id text Filter by the deployment the id belongs to. None --name-like text Filter by process definition names that the parameter is a substring of. None --name text Filter by process definition name. None --process-definition-id-in text Filter by a comma-separated list of process definition ids. None --process-definition-id text Filter by process definition id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get processDefinitionsCount \u00b6 Get List Count Requests the number of process definitions that fulfill the query criteria. Takes the same filtering parameters as the Get Definitions method. URL: /process-definition/count Schema: - Usage: cctl get processDefinitionsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --startable-permission-check / --not-startable-permission-check boolean Filter by process definitions which the user is allowed to start in Tasklist. If the user doesn't have these permissions the result will be empty list. The permissions are: * CREATE permission for all Process instances * CREATE_INSTANCE and READ permission on Process definition level None --not-startable-in-tasklist / --not-not-startable-in-tasklist boolean Filter by process definitions which are not startable in Tasklist. None --startable-in-tasklist / --not-startable-in-tasklist boolean Filter by process definitions which are startable in Tasklist.. None --without-version-tag / --not-without-version-tag boolean Only include process definitions without a versionTag . None --version-tag-like text Filter by the version tag that the parameter is a substring of. None --version-tag text Filter by the version tag. None --include-process-definitions-without-tenant-id / --not-include-process-definitions-without-tenant-id boolean Include process definitions which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include process definitions which belong to no tenant. Value may only be true, as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A process definition must have one of the given tenant ids. None --incident-message-like text Filter by the incident message that the parameter is a substring of. None --incident-message text Filter by the incident message. Exact match. None --incident-type text Filter by the incident type. See the User Guide for a list of incident types. None --incident-id text Filter by the incident id. None --suspended / --not-suspended boolean Only include suspended process definitions. Value may only be true , as false is the default behavior. None --active / --not-active boolean Only include active process definitions. Value may only be true , as false is the default behavior. None --startable-by text Filter by a user name who is allowed to start the process. None --resource-name-like text Filter by names of those process definition resources that the parameter is a substring of. None --resource-name text Filter by the name of the process definition resource. Exact match. None --latest-version / --not-latest-version boolean Only include those process definitions that are latest versions. Value may only be true , as false is the default behavior. None --version text Filter by process definition version. None --category-like text Filter by process definition categories that the parameter is a substring of. None --category text Filter by process definition category. Exact match. None --key-like text Filter by process definition keys that the parameter is a substring of. None --keys-in text Filter by a comma-separated list of process definition keys. None --key text Filter by process definition key, i.e., the id in the BPMN 2.0 XML. Exact match. None --deployed-at text Filter by the deploy time of the deployment the process definition belongs to. Only selects process definitions that have been deployed at a specific time (exact match). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.546+0200 . None --deployed-after text Filter by the deploy time of the deployment the process definition belongs to. Only selects process definitions that have been deployed after (exclusive) a specific time. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.546+0200 . None --deployment-id text Filter by the deployment the id belongs to. None --name-like text Filter by process definition names that the parameter is a substring of. None --name text Filter by process definition name. None --process-definition-id-in text Filter by a comma-separated list of process definition ids. None --process-definition-id text Filter by process definition id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get processEngineNames \u00b6 Get List Retrieves the names of all process engines available on your platform. Note : You cannot prepend /engine/{name} to this method. URL: /engine Schema: - Usage: cctl get processEngineNames [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get processInstance \u00b6 Get Process Instance Retrieves a process instance by id, according to the ProcessInstance interface in the engine. URL: /process-instance/{id} Schema: - Usage: cctl get processInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get processInstanceVariable \u00b6 Get Process Variable Retrieves a variable of a given process instance by id. URL: /process-instance/{id}/variables/{varName} Schema: - Usage: cctl get processInstanceVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-value / --not-deserialize-value boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true). If set to true, a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false, a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get processInstanceVariableBinary \u00b6 Get Process Variable (Binary) Retrieves the content of a Process Variable by the Process Instance id and the Process Variable name. Applicable for byte array or file Process Variables. URL: /process-instance/{id}/variables/{varName}/data Schema: - Usage: cctl get processInstanceVariableBinary [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get processInstanceVariables \u00b6 Get Process Variables Retrieves all variables of a given process instance by id. URL: /process-instance/{id}/variables Schema: - Usage: cctl get processInstanceVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true). If set to true, a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false, a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get processInstances \u00b6 Get List Queries for process instances that fulfill given parameters. Parameters may be static as well as dynamic runtime properties of process instances. The size of the result set can be retrieved by using the Get Instance Count method. URL: /process-instance Schema: - Usage: cctl get processInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match all variable values in this query case-insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match all variable names in this query case-insensitively. If set to true variableName and variablename are treated as equal. None --variables text Only include process instances that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note : Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --leaf-process-instances / --not-leaf-process-instances | boolean | Restrict the query to all process instances that are leaf instances. (i.e. don't have any sub instances). | None | | --root-process-instances / --not-root-process-instances | boolean | Restrict the query to all process instances that are top level process instances. | None | | --activity-id-in | text | Filter by a comma-separated list of activity ids. A process instance must currently wait in a leaf activity with one of the given activity ids. | None | | --process-definition-without-tenant-id / --not-process-definition-without-tenant-id | boolean | Only include process instances which process definition has no tenant id. | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include process instances which belong to no tenant. | None | | --tenant-id-in | text | Filter by a comma-separated list of tenant ids. A process instance must have one of the given tenant ids. | None | | --incident-message-like | text | Filter by the incident message that the parameter is a substring of. | None | | --incident-message | text | Filter by the incident message. Exact match. | None | | --incident-type | text | Filter by the incident type. See the User Guide for a list of incident types. | None | | --incident-id | text | Filter by the incident id. | None | | --with-incident / --not-with-incident | boolean | Filter by presence of incidents. Selects only process instances that have an incident. | None | | --suspended / --not-suspended | boolean | Only include suspended process instances. Value may only be true, as false is the default behavior. | None | | --active / --not-active | boolean | Only include active process instances. Value may only be true, as false is the default behavior. | None | | --sub-case-instance | text | Restrict query to all process instances that have the given case instance as a sub case instance. Takes a case instance id. | None | | --super-case-instance | text | Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id. | None | | --sub-process-instance | text | Restrict query to all process instances that have the given process instance as a sub process instance. Takes a process instance id. | None | | --super-process-instance | text | Restrict query to all process instances that are sub process instances of the given process instance. Takes a process instance id. | None | | --deployment-id | text | Filter by the deployment the id belongs to. | None | | --process-definition-key-not-in | text | Exclude instances by a comma-separated list of process definition keys. A process instance must not have one of the given process definition keys. | None | | --process-definition-key-in | text | Filter by a comma-separated list of process definition keys. A process instance must have one of the given process definition keys. | None | | --process-definition-key | text | Filter by the key of the process definition the instances run on. | None | | --process-definition-id | text | Filter by the deployment the id belongs to. | None | | --case-instance-id | text | Filter by case instance id. | None | | --business-key-like | text | Filter by process instance business key that the parameter is a substring of. | None | | --business-key | text | Filter by process instance business key. | None | | --process-instance-ids | text | Filter by a comma-separated list of process instance ids. | None | | --max-results | text | Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. | None | | --first-result | text | Pagination of results. Specifies the index of the first result to return. | None | | --sort-order | text | Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. | None | | --sort-by | text | Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get processInstancesCount \u00b6 Get List Count Queries for the number of process instances that fulfill given parameters. URL: /process-instance/count Schema: - Usage: cctl get processInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match all variable values in this query case-insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match all variable names in this query case-insensitively. If set to true variableName and variablename are treated as equal. None --variables text Only include process instances that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note : Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --leaf-process-instances / --not-leaf-process-instances | boolean | Restrict the query to all process instances that are leaf instances. (i.e. don't have any sub instances). | None | | --root-process-instances / --not-root-process-instances | boolean | Restrict the query to all process instances that are top level process instances. | None | | --activity-id-in | text | Filter by a comma-separated list of activity ids. A process instance must currently wait in a leaf activity with one of the given activity ids. | None | | --process-definition-without-tenant-id / --not-process-definition-without-tenant-id | boolean | Only include process instances which process definition has no tenant id. | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include process instances which belong to no tenant. | None | | --tenant-id-in | text | Filter by a comma-separated list of tenant ids. A process instance must have one of the given tenant ids. | None | | --incident-message-like | text | Filter by the incident message that the parameter is a substring of. | None | | --incident-message | text | Filter by the incident message. Exact match. | None | | --incident-type | text | Filter by the incident type. See the User Guide for a list of incident types. | None | | --incident-id | text | Filter by the incident id. | None | | --with-incident / --not-with-incident | boolean | Filter by presence of incidents. Selects only process instances that have an incident. | None | | --suspended / --not-suspended | boolean | Only include suspended process instances. Value may only be true, as false is the default behavior. | None | | --active / --not-active | boolean | Only include active process instances. Value may only be true, as false is the default behavior. | None | | --sub-case-instance | text | Restrict query to all process instances that have the given case instance as a sub case instance. Takes a case instance id. | None | | --super-case-instance | text | Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id. | None | | --sub-process-instance | text | Restrict query to all process instances that have the given process instance as a sub process instance. Takes a process instance id. | None | | --super-process-instance | text | Restrict query to all process instances that are sub process instances of the given process instance. Takes a process instance id. | None | | --deployment-id | text | Filter by the deployment the id belongs to. | None | | --process-definition-key-not-in | text | Exclude instances by a comma-separated list of process definition keys. A process instance must not have one of the given process definition keys. | None | | --process-definition-key-in | text | Filter by a comma-separated list of process definition keys. A process instance must have one of the given process definition keys. | None | | --process-definition-key | text | Filter by the key of the process definition the instances run on. | None | | --process-definition-id | text | Filter by the deployment the id belongs to. | None | | --case-instance-id | text | Filter by case instance id. | None | | --business-key-like | text | Filter by process instance business key that the parameter is a substring of. | None | | --business-key | text | Filter by process instance business key. | None | | --process-instance-ids | text | Filter by a comma-separated list of process instance ids. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get queryAuthorizations \u00b6 Get Authorizations Queries for a list of authorizations using a list of parameters. The size of the result set can be retrieved by using the Get Authorization Count method. URL: /authorization Schema: - Usage: cctl get queryAuthorizations [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --resource-id text Filter by resource id. None --resource-type text Filter by an integer representation of the resource type. See the User Guide for a list of integer representations of resource types. None --group-id-in text Filter by a comma-separated list of groupIds. None --user-id-in text Filter by a comma-separated list of userIds. None --type text Filter by authorization type. (0=global, 1=grant, 2=revoke). See the User Guide for more information about authorization types. None --id text Filter by the id of the authorization. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get queryGroups \u00b6 Get List Queries for a list of groups using a list of parameters. The size of the result set can be retrieved by using the Get Group Count method. URL: /group Schema: - Usage: cctl get queryGroups [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --member-of-tenant text Only retrieve groups which are members of the given tenant. None --member text Only retrieve groups where the given user id is a member of. None --type text Filter by the type of the group. None --name-like text Filter by the name that the parameter is a substring of. None --name text Filter by the name of the group. None --id-in text Filter by a comma seperated list of group ids. None --id text Filter by the id of the group. None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get queryTenants \u00b6 Get Tenants Query for a list of tenants using a list of parameters. The size of the result set can be retrieved by using the Get Tenant Count method. URL: /tenant Schema: - Usage: cctl get queryTenants [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --including-groups-of-user / --not-including-groups-of-user boolean Select only tenants where the user or one of his groups is a member of. Can only be used in combination with the userMember parameter. Value may only be true , as false is the default behavior. None --group-member text Select only tenants where the given group is a member of. None --user-member text Select only tenants where the given user is a member of. None --name-like text Filter by the name that the parameter is a substring of. None --name text Filter by the name of the tenant. None --id text Filter by the id of the tenant. None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get queryUserOperationCount \u00b6 Get User Operation Log Count Queries for the number of user operation log entries that fulfill the given parameters. Takes the same parameters as the Get User Operation Log (Historic) method. URL: /history/user-operation/count Schema: - Usage: cctl get queryUserOperationCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --before-timestamp text Restrict to entries that were created before the given timestamp. By default , the timestamp must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200. None --after-timestamp text Restrict to entries that were created after the given timestamp. By default , the timestamp must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200. None --property text Only include operations that changed this property, e.g., owner or assignee . None --category-in text Filter by a comma-separated list of categories that this operation is associated with, possible values are TaskWorker , Admin or Operator . None --category text Filter by the category that this operation is associated with, possible values are TaskWorker , Admin or Operator . None --entity-type-in text Filter by a comma-separated list of types of the entities that was affected by this operation, possible values are Task , Attachment or IdentityLink . None --entity-type text Filter by the type of the entity that was affected by this operation, possible values are Task , Attachment or IdentityLink . None --operation-type text Filter by the type of the operation like Claim or Delegate . See the Javadoc for a list of available operation types. None --operation-id text Filter by the id of the operation. This allows fetching of multiple entries which are part of a composite operation. None --user-id text Only include operations of this user. None --job-definition-id text Filter by job definition id. None --job-id text Filter by job id. None --batch-id text Only include operations on this batch. None --external-task-id text Only include operations on this external task. None --task-id text Only include operations on this task. None --case-execution-id text Filter by case execution id. None --case-instance-id text Filter by case instance id. None --case-definition-id text Filter by case definition id. None --execution-id text Filter by execution id. None --process-instance-id text Filter by process instance id. None --process-definition-key text Filter by process definition key. None --process-definition-id text Filter by process definition id. None --deployment-id text Filter by deployment id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get queryUserOperationEntries \u00b6 Get User Operation Log (Historic) Queries for user operation log entries that fulfill the given parameters. The size of the result set can be retrieved by using the Get User Operation Log Count method. Note that the properties of operation log entries are interpreted as restrictions on the entities they apply to. That means, if a single process instance is updated, the field processInstanceId is populated. If a single operation updates all process instances of the same process definition, the field processInstanceId is null (a null restriction is viewed as a wildcard, i.e., matches a process instance with any id) and the field processDefinitionId is populated. This way, which entities were changed by a user operation can easily be reconstructed. URL: /history/user-operation Schema: - Usage: cctl get queryUserOperationEntries [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --before-timestamp text Restrict to entries that were created before the given timestamp. By default , the timestamp must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200. None --after-timestamp text Restrict to entries that were created after the given timestamp. By default , the timestamp must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200. None --property text Only include operations that changed this property, e.g., owner or assignee . None --category-in text Filter by a comma-separated list of categories that this operation is associated with, possible values are TaskWorker , Admin or Operator . None --category text Filter by the category that this operation is associated with, possible values are TaskWorker , Admin or Operator . None --entity-type-in text Filter by a comma-separated list of types of the entities that was affected by this operation, possible values are Task , Attachment or IdentityLink . None --entity-type text Filter by the type of the entity that was affected by this operation, possible values are Task , Attachment or IdentityLink . None --operation-type text Filter by the type of the operation like Claim or Delegate . See the Javadoc for a list of available operation types. None --operation-id text Filter by the id of the operation. This allows fetching of multiple entries which are part of a composite operation. None --user-id text Only include operations of this user. None --job-definition-id text Filter by job definition id. None --job-id text Filter by job id. None --batch-id text Only include operations on this batch. None --external-task-id text Only include operations on this external task. None --task-id text Only include operations on this task. None --case-execution-id text Filter by case execution id. None --case-instance-id text Filter by case instance id. None --case-definition-id text Filter by case definition id. None --execution-id text Filter by execution id. None --process-instance-id text Filter by process instance id. None --process-definition-key text Filter by process definition key. None --process-definition-id text Filter by process definition id. None --deployment-id text Filter by deployment id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get renderedForm \u00b6 Get Rendered Form Retrieves the rendered form for a task. This method can be used to get the HTML rendering of a Generated Task Form . URL: /task/{id}/rendered-form Schema: - Usage: cctl get renderedForm [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get renderedStartForm \u00b6 Get Rendered Start Form Retrieves the rendered form for a process definition. This method can be used to get the HTML rendering of a Generated Task Form . URL: /process-definition/{id}/rendered-form Schema: - Usage: cctl get renderedStartForm [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get renderedStartFormByKey \u00b6 Get Rendered Start Form Retrieves the rendered form for the latest version of the process definition which belongs to no tenant. This method can be used to get the HTML rendering of a Generated Task Form . URL: /process-definition/key/{key}/rendered-form Schema: - Usage: cctl get renderedStartFormByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get renderedStartFormByKeyAndTenantId \u00b6 Get Rendered Start Form Retrieves the rendered form for the latest version of the process definition for a tenant. This method can be used to get the HTML rendering of a Generated Task Form . URL: /process-definition/key/{key}/tenant-id/{tenant-id}/rendered-form Schema: - Usage: cctl get renderedStartFormByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get restAPIVersion \u00b6 Get Rest API version Retrieves the version of the Rest API. URL: /version Schema: - Usage: cctl get restAPIVersion [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get schemaLog \u00b6 Get List Queries for schema log entries that fulfill given parameters. URL: /schema/log Schema: - Usage: cctl get schemaLog [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --version text Only return schema log entries with a specific version. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get singleFilter \u00b6 Get Single Filter Retrieves a single filter by id, according to the Filter interface in the engine. URL: /filter/{id} Schema: - Usage: cctl get singleFilter [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --item-count / --not-item-count boolean If set to true , each filter result will contain an itemCount property with the number of items matched by the filter itself. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get stacktrace \u00b6 Get Exception Stacktrace Retrieves the exception stacktrace corresponding to the passed job id. URL: /job/{id}/stacktrace Schema: - Usage: cctl get stacktrace [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get stacktraceHistoricJobLog \u00b6 Get Job Log Exception Stacktrace Retrieves the corresponding exception stacktrace to the passed historic job log by id. URL: /history/job-log/{id}/stacktrace Schema: - Usage: cctl get stacktraceHistoricJobLog [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get startForm \u00b6 Get Start Form Key Retrieves the key of the start form for a process definition. The form key corresponds to the FormData#formKey property in the engine. URL: /process-definition/{id}/startForm Schema: - Usage: cctl get startForm [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get startFormByKey \u00b6 Get Start Form Key Retrieves the key of the start form for the latest version of the process definition which belongs to no tenant. The form key corresponds to the FormData#formKey property in the engine. URL: /process-definition/key/{key}/startForm Schema: - Usage: cctl get startFormByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get startFormByKeyAndTenantId \u00b6 Get Start Form Key Retrieves the key of the start form for the latest version of the process definition for a tenant. The form key corresponds to the FormData#formKey property in the engine. URL: /process-definition/key/{key}/tenant-id/{tenant-id}/startForm Schema: - Usage: cctl get startFormByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get startFormVariables \u00b6 Get Start Form Variables Retrieves the start form variables for a process definition (only if they are defined via the Generated Task Form approach). The start form variables take form data specified on the start event into account. If form fields are defined, the variable types and default values of the form fields are taken into account. URL: /process-definition/{id}/form-variables Schema: - Usage: cctl get startFormVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true). If set to true, a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false, a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note : While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --variable-names | text | A comma-separated list of variable names. Allows restricting the list of requested variables to the variable names in the list. It is best practice to restrict the list of variables to the variables actually required by the form in order to minimize fetching of data. If the query parameter is ommitted all variables are fetched. If the query parameter contains non-existent variable names, the variable names are ignored. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get startFormVariablesByKey \u00b6 Get Start Form Variables Retrieves the start form variables for the latest process definition which belongs to no tenant (only if they are defined via the Generated Task Form approach). The start form variables take form data specified on the start event into account. If form fields are defined, the variable types and default values of the form fields are taken into account. URL: /process-definition/key/{key}/form-variables Schema: - Usage: cctl get startFormVariablesByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true). If set to true, a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false, a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note : While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --variable-names | text | A comma-separated list of variable names. Allows restricting the list of requested variables to the variable names in the list. It is best practice to restrict the list of variables to the variables actually required by the form in order to minimize fetching of data. If the query parameter is ommitted all variables are fetched. If the query parameter contains non-existent variable names, the variable names are ignored. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get startFormVariablesByKeyAndTenantId \u00b6 Get Start Form Variables Retrieves the start form variables for the latest process definition for a tenant (only if they are defined via the Generated Task Form approach). The start form variables take form data specified on the start event into account. If form fields are defined, the variable types and default values of the form fields are taken into account. URL: /process-definition/key/{key}/tenant-id/{tenant-id}/form-variables Schema: - Usage: cctl get startFormVariablesByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true). If set to true, a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false, a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note : While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --variable-names | text | A comma-separated list of variable names. Allows restricting the list of requested variables to the variable names in the list. It is best practice to restrict the list of variables to the variables actually required by the form in order to minimize fetching of data. If the query parameter is ommitted all variables are fetched. If the query parameter contains non-existent variable names, the variable names are ignored. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get staticCalledProcessDefinitions \u00b6 Get Static Called Process Definitions For the given process, returns a list of called process definitions corresponding to the CalledProcessDefinition interface in the engine. The list contains all process definitions that are referenced statically by call activities in the given process. This endpoint does not resolve process definitions that are referenced with expressions. Each called process definition contains a list of call activity ids, which specifies the call activities that are calling that process. This endpoint does not resolve references to case definitions. URL: /process-definition/{id}/static-called-process-definitions Schema: - Usage: cctl get staticCalledProcessDefinitions [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get task \u00b6 Get Retrieves a task by id. URL: /task/{id} Schema: - Usage: cctl get task [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get taskLocalVariable \u00b6 Get Local Task Variable Retrieves a variable from the context of a given task by id. URL: /task/{id}/localVariables/{varName} Schema: - Usage: cctl get taskLocalVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-value / --not-deserialize-value boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on the server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get taskLocalVariableBinary \u00b6 Get Local Task Variable (Binary) Retrieves a binary variable from the context of a given task by id. Applicable for byte array and file variables. URL: /task/{id}/localVariables/{varName}/data Schema: - Usage: cctl get taskLocalVariableBinary [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get taskLocalVariables \u00b6 Get Local Task Variables Retrieves all variables of a given task by id. URL: /task/{id}/localVariables Schema: - Usage: cctl get taskLocalVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on the server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get taskVariable \u00b6 Get Task Variable Retrieves a variable from the context of a given task. The variable must be visible from the task. It is visible from the task if it is a local task variable or declared in a parent scope of the task. See documentation on visiblity of variables . URL: /task/{id}/variables/{varName} Schema: - Usage: cctl get taskVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-value / --not-deserialize-value boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on the server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get taskVariableBinary \u00b6 Get Task Variable (Binary) Retrieves a binary variable from the context of a given task. Applicable for byte array and file variables. The variable must be visible from the task. It is visible from the task if it is a local task variable or declared in a parent scope of the task. See documentation on visiblity of variables . URL: /task/{id}/variables/{varName}/data Schema: - Usage: cctl get taskVariableBinary [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get taskVariables \u00b6 Get Task Variables Retrieves all variables visible from the task. A variable is visible from the task if it is a local task variable or declared in a parent scope of the task. See documentation on visiblity of variables . URL: /task/{id}/variables Schema: - Usage: cctl get taskVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on the server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get tasks \u00b6 Get List Queries for tasks that fulfill a given filter. The size of the result set can be retrieved by using the Get Task Count method. Security Consideration: There are several query parameters (such as assigneeExpression) for specifying an EL expression. These are disabled by default to prevent remote code execution. See the section on security considerations for custom code in the user guide for details. URL: /task Schema: - Usage: cctl get tasks [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --parent-task-id text Restrict query to all tasks that are sub tasks of the given task. Takes a task id. None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match all variable values in this query case-insensitively. If set variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match all variable names in this query case-insensitively. If set variableName and variablename are treated as equal. None --case-instance-variables text Only include tasks that belong to case instances that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note : Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --process-variables | text | Only include tasks that belong to process instances that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note : Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like ; notLike . key and value may not contain underscore or comma characters. | None | | --task-variables | text | Only include tasks that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note : Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --suspended / --not-suspended | boolean | Only include suspended tasks. Value may only be true , as false is the default behavior. | None | | --active / --not-active | boolean | Only include active tasks. Value may only be true , as false is the default behavior. | None | | --without-candidate-users / --not-without-candidate-users | boolean | Only include tasks which have no candidate users. Value may only be true , as false is the default behavior. | None | | --with-candidate-users / --not-with-candidate-users | boolean | Only include tasks which have a candidate user. Value may only be true , as false is the default behavior. | None | | --without-candidate-groups / --not-without-candidate-groups | boolean | Only include tasks which have no candidate group. Value may only be true , as false is the default behavior. | None | | --with-candidate-groups / --not-with-candidate-groups | boolean | Only include tasks which have a candidate group. Value may only be true , as false is the default behavior. | None | | --candidate-groups-expression | text | Restrict to tasks that are offered to any of the candidate groups described by the given expression. See the user guide for more information on available functions. The expression must evaluate to java.util.List of Strings. | None | | --candidate-groups | text | Restrict to tasks that are offered to any of the given candidate groups. Takes a comma-separated list of group names, so for example developers,support,sales . | None | | --delegation-state | text | Restrict to tasks that are in the given delegation state. Valid values are PENDING and RESOLVED . | None | | --created-before-expression | text | Restrict to tasks that were created before the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --created-before | text | Restrict to tasks that were created before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.332+0200 . | None | | --created-after-expression | text | Restrict to tasks that were created after the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --created-after | text | Restrict to tasks that were created after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.342+0200 . | None | | --created-on-expression | text | Restrict to tasks that were created on the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --created-on | text | Restrict to tasks that were created on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.324+0200 . | None | | --follow-up-before-or-not-existent-expression | text | Restrict to tasks that have no followUp date or a followUp date before the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --follow-up-before-or-not-existent | text | Restrict to tasks that have no followUp date or a followUp date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.432+0200 . The typical use case is to query all active tasks for a user for a given date. | None | | --follow-up-before-expression | text | Restrict to tasks that have a followUp date before the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --follow-up-before | text | Restrict to tasks that have a followUp date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.234+0200 . | None | | --follow-up-after-expression | text | Restrict to tasks that have a followUp date after the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --follow-up-after | text | Restrict to tasks that have a followUp date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.542+0200 . | None | | --follow-up-date-expression | text | Restrict to tasks that have a followUp date on the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --follow-up-date | text | Restrict to tasks that have a followUp date on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.342+0200 . | None | | --without-due-date / --not-without-due-date | boolean | Only include tasks which have no due date. Value may only be true , as false is the default behavior. | None | | --due-before-expression | text | Restrict to tasks that are due before the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --due-before | text | Restrict to tasks that are due before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.243+0200 . | None | | --due-after-expression | text | Restrict to tasks that are due after the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --due-after | text | Restrict to tasks that are due after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.435+0200 . | None | | --due-date-expression | text | Restrict to tasks that are due on the date described by the given expression. See the User Guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --due-date | text | Restrict to tasks that are due on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.546+0200 . | None | | --min-priority | text | Restrict to tasks that have a higher or equal priority. | None | | --max-priority | text | Restrict to tasks that have a lower or equal priority. | None | | --priority | text | Restrict to tasks that have the given priority. | None | | --description-like | text | Restrict to tasks that have a description that has the parameter value as a substring. | None | | --description | text | Restrict to tasks that have the given description. | None | | --name-not-like | text | Restrict to tasks that do not have a name with the given parameter value as substring. | None | | --name-like | text | Restrict to tasks that have a name with the given parameter value as substring. | None | | --name-not-equal | text | Restrict to tasks that do not have the given name. | None | | --name | text | Restrict to tasks that have the given name. | None | | --task-definition-key-like | text | Restrict to tasks that have a key that has the parameter value as a substring. | None | | --task-definition-key-in | text | Restrict to tasks that have one of the given keys. The keys need to be in a comma-separated list. | None | | --task-definition-key | text | Restrict to tasks that have the given key. | None | | --unassigned / --not-unassigned | boolean | If set to true , restricts the query to all tasks that are unassigned. | None | | --assigned / --not-assigned | boolean | If set to true , restricts the query to all tasks that are assigned. | None | | --involved-user-expression | text | Only include tasks that the user described by the given expression is involved in. A user is involved in a task if an identity link exists between task and user (e.g., the user is the assignee). See the user guide for more information on available functions. | None | | --involved-user | text | Only include tasks that the given user is involved in. A user is involved in a task if an identity link exists between task and user (e.g., the user is the assignee). | None | | --include-assigned-tasks / --not-include-assigned-tasks | boolean | Also include tasks that are assigned to users in candidate queries. Default is to only include tasks that are not assigned to any user if you query by candidate user or group(s). | None | | --candidate-user-expression | text | Only include tasks that are offered to the user described by the given expression. See the user guide for more information on available functions. | None | | --candidate-user | text | Only include tasks that are offered to the given user or to one of his groups. | None | | --candidate-group-expression | text | Only include tasks that are offered to the group described by the given expression. See the user guide for more information on available functions. | None | | --candidate-group | text | Only include tasks that are offered to the given group. | None | | --owner-expression | text | Restrict to tasks that the user described by the given expression owns. See the user guide for more information on available functions. | None | | --owner | text | Restrict to tasks that the given user owns. | None | | --assignee-not-in | text | Only include tasks which are not assigned to one of the passed and comma-separated user ids. | None | | --assignee-in | text | Only include tasks which are assigned to one of the passed and comma-separated user ids. | None | | --assignee-like-expression | text | Restrict to tasks that have an assignee that has the parameter value described by the given expression as a substring. See the user guide for more information on available functions. | None | | --assignee-like | text | Restrict to tasks that have an assignee that has the parameter value as a substring. | None | | --assignee-expression | text | Restrict to tasks that the user described by the given expression is assigned to. See the user guide for more information on available functions. | None | | --assignee | text | Restrict to tasks that the given user is assigned to. | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include tasks which belong to no tenant. Value may only be true , as false is the default behavior. | None | | --tenant-id-in | text | Only include tasks which belong to one of the passed and comma-separated tenant ids. | None | | --activity-instance-id-in | text | Only include tasks which belong to one of the passed and comma-separated activity instance ids. | None | | --case-execution-id | text | Restrict to tasks that belong to a case execution with the given id. | None | | --case-definition-name-like | text | Restrict to tasks that have a case definition name that has the parameter value as a substring. | None | | --case-definition-name | text | Restrict to tasks that belong to a case definition with the given name. | None | | --case-definition-key | text | Restrict to tasks that belong to a case definition with the given key. | None | | --case-definition-id | text | Restrict to tasks that belong to a case definition with the given id. | None | | --case-instance-business-key-like | text | Restrict to tasks that have a case instance business key that has the parameter value as a substring. | None | | --case-instance-business-key | text | Restrict to tasks that belong to case instances with the given business key. | None | | --case-instance-id | text | Restrict to tasks that belong to case instances with the given id. | None | | --execution-id | text | Restrict to tasks that belong to an execution with the given id. | None | | --process-definition-name-like | text | Restrict to tasks that have a process definition name that has the parameter value as a substring. | None | | --process-definition-name | text | Restrict to tasks that belong to a process definition with the given name. | None | | --process-definition-key-in | text | Restrict to tasks that belong to a process definition with one of the given keys. The keys need to be in a comma-separated list. | None | | --process-definition-key | text | Restrict to tasks that belong to a process definition with the given key. | None | | --process-definition-id | text | Restrict to tasks that belong to a process definition with the given id. | None | | --process-instance-business-key-like-expression | text | Restrict to tasks that have a process instance business key that has the parameter value as a substring and is described by an expression. See the user guide for more information on available functions. | None | | --process-instance-business-key-like | text | Restrict to tasks that have a process instance business key that has the parameter value as a substring. | None | | --process-instance-business-key-in | text | Restrict to tasks that belong to process instances with one of the give business keys. The keys need to be in a comma-separated list. | None | | --process-instance-business-key-expression | text | Restrict to tasks that belong to process instances with the given business key which is described by an expression. See the user guide for more information on available functions. | None | | --process-instance-business-key | text | Restrict to tasks that belong to process instances with the given business key. | None | | --process-instance-id-in | text | Restrict to tasks that belong to process instances with the given ids. | None | | --process-instance-id | text | Restrict to tasks that belong to process instances with the given id. | None | | --task-id-in | text | Restrict to tasks with any of the given ids. | None | | --task-id | text | Restrict to task with the given id. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get tasksCount \u00b6 Get List Count Retrieves the number of tasks that fulfill a provided filter. Corresponds to the size of the result set when using the Get Tasks method. Security Consideration: There are several query parameters (such as assigneeExpression) for specifying an EL expression. These are disabled by default to prevent remote code execution. See the section on security considerations for custom code in the user guide for details. URL: /task/count Schema: - Usage: cctl get tasksCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --parent-task-id text Restrict query to all tasks that are sub tasks of the given task. Takes a task id. None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match all variable values in this query case-insensitively. If set variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match all variable names in this query case-insensitively. If set variableName and variablename are treated as equal. None --case-instance-variables text Only include tasks that belong to case instances that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note : Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --process-variables | text | Only include tasks that belong to process instances that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note : Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like ; notLike . key and value may not contain underscore or comma characters. | None | | --task-variables | text | Only include tasks that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note : Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --suspended / --not-suspended | boolean | Only include suspended tasks. Value may only be true , as false is the default behavior. | None | | --active / --not-active | boolean | Only include active tasks. Value may only be true , as false is the default behavior. | None | | --without-candidate-users / --not-without-candidate-users | boolean | Only include tasks which have no candidate users. Value may only be true , as false is the default behavior. | None | | --with-candidate-users / --not-with-candidate-users | boolean | Only include tasks which have a candidate user. Value may only be true , as false is the default behavior. | None | | --without-candidate-groups / --not-without-candidate-groups | boolean | Only include tasks which have no candidate group. Value may only be true , as false is the default behavior. | None | | --with-candidate-groups / --not-with-candidate-groups | boolean | Only include tasks which have a candidate group. Value may only be true , as false is the default behavior. | None | | --candidate-groups-expression | text | Restrict to tasks that are offered to any of the candidate groups described by the given expression. See the user guide for more information on available functions. The expression must evaluate to java.util.List of Strings. | None | | --candidate-groups | text | Restrict to tasks that are offered to any of the given candidate groups. Takes a comma-separated list of group names, so for example developers,support,sales . | None | | --delegation-state | text | Restrict to tasks that are in the given delegation state. Valid values are PENDING and RESOLVED . | None | | --created-before-expression | text | Restrict to tasks that were created before the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --created-before | text | Restrict to tasks that were created before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.332+0200 . | None | | --created-after-expression | text | Restrict to tasks that were created after the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --created-after | text | Restrict to tasks that were created after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.342+0200 . | None | | --created-on-expression | text | Restrict to tasks that were created on the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --created-on | text | Restrict to tasks that were created on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.324+0200 . | None | | --follow-up-before-or-not-existent-expression | text | Restrict to tasks that have no followUp date or a followUp date before the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --follow-up-before-or-not-existent | text | Restrict to tasks that have no followUp date or a followUp date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.432+0200 . The typical use case is to query all active tasks for a user for a given date. | None | | --follow-up-before-expression | text | Restrict to tasks that have a followUp date before the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --follow-up-before | text | Restrict to tasks that have a followUp date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.234+0200 . | None | | --follow-up-after-expression | text | Restrict to tasks that have a followUp date after the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --follow-up-after | text | Restrict to tasks that have a followUp date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.542+0200 . | None | | --follow-up-date-expression | text | Restrict to tasks that have a followUp date on the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --follow-up-date | text | Restrict to tasks that have a followUp date on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.342+0200 . | None | | --without-due-date / --not-without-due-date | boolean | Only include tasks which have no due date. Value may only be true , as false is the default behavior. | None | | --due-before-expression | text | Restrict to tasks that are due before the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --due-before | text | Restrict to tasks that are due before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.243+0200 . | None | | --due-after-expression | text | Restrict to tasks that are due after the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --due-after | text | Restrict to tasks that are due after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.435+0200 . | None | | --due-date-expression | text | Restrict to tasks that are due on the date described by the given expression. See the User Guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --due-date | text | Restrict to tasks that are due on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.546+0200 . | None | | --min-priority | text | Restrict to tasks that have a higher or equal priority. | None | | --max-priority | text | Restrict to tasks that have a lower or equal priority. | None | | --priority | text | Restrict to tasks that have the given priority. | None | | --description-like | text | Restrict to tasks that have a description that has the parameter value as a substring. | None | | --description | text | Restrict to tasks that have the given description. | None | | --name-not-like | text | Restrict to tasks that do not have a name with the given parameter value as substring. | None | | --name-like | text | Restrict to tasks that have a name with the given parameter value as substring. | None | | --name-not-equal | text | Restrict to tasks that do not have the given name. | None | | --name | text | Restrict to tasks that have the given name. | None | | --task-definition-key-like | text | Restrict to tasks that have a key that has the parameter value as a substring. | None | | --task-definition-key-in | text | Restrict to tasks that have one of the given keys. The keys need to be in a comma-separated list. | None | | --task-definition-key | text | Restrict to tasks that have the given key. | None | | --unassigned / --not-unassigned | boolean | If set to true , restricts the query to all tasks that are unassigned. | None | | --assigned / --not-assigned | boolean | If set to true , restricts the query to all tasks that are assigned. | None | | --involved-user-expression | text | Only include tasks that the user described by the given expression is involved in. A user is involved in a task if an identity link exists between task and user (e.g., the user is the assignee). See the user guide for more information on available functions. | None | | --involved-user | text | Only include tasks that the given user is involved in. A user is involved in a task if an identity link exists between task and user (e.g., the user is the assignee). | None | | --include-assigned-tasks / --not-include-assigned-tasks | boolean | Also include tasks that are assigned to users in candidate queries. Default is to only include tasks that are not assigned to any user if you query by candidate user or group(s). | None | | --candidate-user-expression | text | Only include tasks that are offered to the user described by the given expression. See the user guide for more information on available functions. | None | | --candidate-user | text | Only include tasks that are offered to the given user or to one of his groups. | None | | --candidate-group-expression | text | Only include tasks that are offered to the group described by the given expression. See the user guide for more information on available functions. | None | | --candidate-group | text | Only include tasks that are offered to the given group. | None | | --owner-expression | text | Restrict to tasks that the user described by the given expression owns. See the user guide for more information on available functions. | None | | --owner | text | Restrict to tasks that the given user owns. | None | | --assignee-not-in | text | Only include tasks which are not assigned to one of the passed and comma-separated user ids. | None | | --assignee-in | text | Only include tasks which are assigned to one of the passed and comma-separated user ids. | None | | --assignee-like-expression | text | Restrict to tasks that have an assignee that has the parameter value described by the given expression as a substring. See the user guide for more information on available functions. | None | | --assignee-like | text | Restrict to tasks that have an assignee that has the parameter value as a substring. | None | | --assignee-expression | text | Restrict to tasks that the user described by the given expression is assigned to. See the user guide for more information on available functions. | None | | --assignee | text | Restrict to tasks that the given user is assigned to. | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include tasks which belong to no tenant. Value may only be true , as false is the default behavior. | None | | --tenant-id-in | text | Only include tasks which belong to one of the passed and comma-separated tenant ids. | None | | --activity-instance-id-in | text | Only include tasks which belong to one of the passed and comma-separated activity instance ids. | None | | --case-execution-id | text | Restrict to tasks that belong to a case execution with the given id. | None | | --case-definition-name-like | text | Restrict to tasks that have a case definition name that has the parameter value as a substring. | None | | --case-definition-name | text | Restrict to tasks that belong to a case definition with the given name. | None | | --case-definition-key | text | Restrict to tasks that belong to a case definition with the given key. | None | | --case-definition-id | text | Restrict to tasks that belong to a case definition with the given id. | None | | --case-instance-business-key-like | text | Restrict to tasks that have a case instance business key that has the parameter value as a substring. | None | | --case-instance-business-key | text | Restrict to tasks that belong to case instances with the given business key. | None | | --case-instance-id | text | Restrict to tasks that belong to case instances with the given id. | None | | --execution-id | text | Restrict to tasks that belong to an execution with the given id. | None | | --process-definition-name-like | text | Restrict to tasks that have a process definition name that has the parameter value as a substring. | None | | --process-definition-name | text | Restrict to tasks that belong to a process definition with the given name. | None | | --process-definition-key-in | text | Restrict to tasks that belong to a process definition with one of the given keys. The keys need to be in a comma-separated list. | None | | --process-definition-key | text | Restrict to tasks that belong to a process definition with the given key. | None | | --process-definition-id | text | Restrict to tasks that belong to a process definition with the given id. | None | | --process-instance-business-key-like-expression | text | Restrict to tasks that have a process instance business key that has the parameter value as a substring and is described by an expression. See the user guide for more information on available functions. | None | | --process-instance-business-key-like | text | Restrict to tasks that have a process instance business key that has the parameter value as a substring. | None | | --process-instance-business-key-in | text | Restrict to tasks that belong to process instances with one of the give business keys. The keys need to be in a comma-separated list. | None | | --process-instance-business-key-expression | text | Restrict to tasks that belong to process instances with the given business key which is described by an expression. See the user guide for more information on available functions. | None | | --process-instance-business-key | text | Restrict to tasks that belong to process instances with the given business key. | None | | --process-instance-id-in | text | Restrict to tasks that belong to process instances with the given ids. | None | | --process-instance-id | text | Restrict to tasks that belong to process instances with the given id. | None | | --task-id-in | text | Restrict to tasks with any of the given ids. | None | | --task-id | text | Restrict to task with the given id. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get telemetryConfiguration \u00b6 Fetch Telemetry Configuration Fetches Telemetry Configuration. URL: /telemetry/configuration Schema: - Usage: cctl get telemetryConfiguration [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get tenant \u00b6 Get Tenant Retrieves a tenant. URL: /tenant/{id} Schema: - Usage: cctl get tenant [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get tenantCount \u00b6 Get Tenant Count Query for tenants using a list of parameters and retrieves the count. URL: /tenant/count Schema: - Usage: cctl get tenantCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --including-groups-of-user / --not-including-groups-of-user boolean Select only tenants where the user or one of his groups is a member of. Can only be used in combination with the userMember parameter. Value may only be true , as false is the default behavior. None --group-member text Select only tenants where the given group is a member of. None --user-member text Select only tenants where the given user is a member of. None --name-like text Filter by the name that the parameter is a substring of. None --name text Filter by the name of the tenant. None --id text Filter by the id of the tenant. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get topicNames \u00b6 Get External Task Topic Names Queries for distinct topic names of external tasks that fulfill given parameters. Query can be restricted to only tasks with retries left, tasks that are locked, or tasks that are unlocked. The parameters withLockedTasks and withUnlockedTasks are exclusive. Setting them both to true will return an empty list. Providing no parameters will return a list of all distinct topic names with external tasks. URL: /external-task/topic-names Schema: - Usage: cctl get topicNames [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --with-retries-left / --not-with-retries-left boolean Only include external tasks that have a positive (> 0) number of retries (or null ). Value may only be true , as false matches any external task. None --with-unlocked-tasks / --not-with-unlocked-tasks boolean Only include external tasks that are currently not locked (i.e., they have no lock or it has expired). Value may only be true , as false matches any external task. None --with-locked-tasks / --not-with-locked-tasks boolean Only include external tasks that are currently locked (i.e., they have a lock time and it has not expired). Value may only be true , as false matches any external task. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get userCount \u00b6 Get List Count Queries for the number of deployments that fulfill given parameters. Takes the same parameters as the Get Users method. URL: /user/count Schema: - Usage: cctl get userCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --potential-starter text Only select Users that are potential starter for the given process definition. None --member-of-tenant text Filter for users which are members of the given tenant. None --member-of-group text Filter for users which are members of the given group. None --email-like text Filter by the email that the parameter is a substring of. None --email text Filter by the email of the user. Exact match. None --last-name-like text Filter by the last name that the parameter is a substring of. None --last-name text Filter by the last name of the user. Exact match. None --first-name-like text Filter by the first name that the parameter is a substring of. None --first-name text Filter by the first name of the user. Exact match. None --id-in text Filter by a comma-separated list of user ids. None --id text Filter by user id None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get userProfile \u00b6 Get Profile Retrieves a user's profile. URL: /user/{id}/profile Schema: - Usage: cctl get userProfile [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get users \u00b6 Get List Query for a list of users using a list of parameters. The size of the result set can be retrieved by using the Get User Count method. Get User Count method. URL: /user Schema: - Usage: cctl get users [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --potential-starter text Only select Users that are potential starter for the given process definition. None --member-of-tenant text Filter for users which are members of the given tenant. None --member-of-group text Filter for users which are members of the given group. None --email-like text Filter by the email that the parameter is a substring of. None --email text Filter by the email of the user. Exact match. None --last-name-like text Filter by the last name that the parameter is a substring of. None --last-name text Filter by the last name of the user. Exact match. None --first-name-like text Filter by the first name that the parameter is a substring of. None --first-name text Filter by the first name of the user. Exact match. None --id-in text Filter by a comma-separated list of user ids. None --id text Filter by user id None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get variableInstance \u00b6 Get Variable Instance Retrieves a variable by id. URL: /variable-instance/{id} Schema: - Usage: cctl get variableInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-value / --not-deserialize-value boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get variableInstanceBinary \u00b6 Get Variable Instance (Binary) Retrieves the content of a variable by id. Applicable for byte array and file variables. URL: /variable-instance/{id}/data Schema: - Usage: cctl get variableInstanceBinary [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get variableInstances \u00b6 Get Variable Instances Query for variable instances that fulfill given parameters. Parameters may be the properties of variable instances, such as the name or type. The size of the result set can be retrieved by using the Get Variable Instance Count method. URL: /variable-instance Schema: - Usage: cctl get variableInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --max-results | text | Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. | None | | --first-result | text | Pagination of results. Specifies the index of the first result to return. | None | | --sort-order | text | Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. | None | | --sort-by | text | Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. | None | | --variable-scope-id-in | text | Only include variable instances which belong to one of passed scope ids. | None | | --variable-values-ignore-case / --not-variable-values-ignore-case | boolean | Match all variable values provided in variableValues case-insensitively. If set to true variableValue and variablevalue are treated as equal. | None | | --variable-names-ignore-case / --not-variable-names-ignore-case | boolean | Match all variable names provided in variableValues case-insensitively. If set to true variableName and variablename are treated as equal. | None | | --variable-values | text | Only include variable instances that have the certain values. Value filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --tenant-id-in | text | Only include variable instances which belong to one of the passed and comma-separated tenant ids. | None | | --activity-instance-id-in | text | Only include variable instances which belong to one of the passed and comma-separated activity instance ids. | None | | --batch-id-in | text | Only include variable instances which belong to one of the passed and comma-separated batch ids. | None | | --task-id-in | text | Only include variable instances which belong to one of the passed and comma-separated task ids. | None | | --case-execution-id-in | text | Only include variable instances which belong to one of the passed and comma-separated case execution ids. | None | | --case-instance-id-in | text | Only include variable instances which belong to one of the passed and comma-separated case instance ids. | None | | --execution-id-in | text | Only include variable instances which belong to one of the passed and comma-separated execution ids. | None | | --process-instance-id-in | text | Only include variable instances which belong to one of the passed and comma-separated process instance ids. | None | | --variable-name-like | text | Filter by the variable instance name. The parameter can include the wildcard % to express like-strategy such as: starts with ( % name), ends with (name % ) or contains ( % name % ). | None | | --variable-name | text | Filter by variable instance name. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get variableInstancesCount \u00b6 Get Variable Instance Count Query for the number of variable instances that fulfill given parameters. Takes the same parameters as the Get Variable Instances method. URL: /variable-instance/count Schema: - Usage: cctl get variableInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --variable-scope-id-in text Only include variable instances which belong to one of passed scope ids. None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match all variable values provided in variableValues case-insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match all variable names provided in variableValues case-insensitively. If set to true variableName and variablename are treated as equal. None --variable-values text Only include variable instances that have the certain values. Value filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --tenant-id-in | text | Only include variable instances which belong to one of the passed and comma-separated tenant ids. | None | | --activity-instance-id-in | text | Only include variable instances which belong to one of the passed and comma-separated activity instance ids. | None | | --batch-id-in | text | Only include variable instances which belong to one of the passed and comma-separated batch ids. | None | | --task-id-in | text | Only include variable instances which belong to one of the passed and comma-separated task ids. | None | | --case-execution-id-in | text | Only include variable instances which belong to one of the passed and comma-separated case execution ids. | None | | --case-instance-id-in | text | Only include variable instances which belong to one of the passed and comma-separated case instance ids. | None | | --execution-id-in | text | Only include variable instances which belong to one of the passed and comma-separated execution ids. | None | | --process-instance-id-in | text | Only include variable instances which belong to one of the passed and comma-separated process instance ids. | None | | --variable-name-like | text | Filter by the variable instance name. The parameter can include the wildcard % to express like-strategy such as: starts with ( % name), ends with (name % ) or contains ( % name % ). | None | | --variable-name | text | Filter by variable instance name. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"CLI Reference"},{"location":"commands/full/#cli-reference","text":"This page provides documentation for our command line tools.","title":"CLI Reference"},{"location":"commands/full/#cctl","text":"Usage: cctl [OPTIONS] COMMAND [ARGS]... Options: Name Type Description Default -l , --log-level choice ( DEBUG | WARNING | INFO | ERROR ) N/A None --help boolean Show this message and exit. False","title":"cctl"},{"location":"commands/full/#cctl-api-resources","text":"Usage: cctl api-resources [OPTIONS] Options: Name Type Description Default -e , --engine text N/A None --help boolean Show this message and exit. False","title":"api-resources"},{"location":"commands/full/#cctl-apply","text":"apply changes to the engine Usage: cctl apply [OPTIONS] COMMAND [ARGS]... Options: Name Type Description Default -e , --engine text N/A None --help boolean Show this message and exit. False","title":"apply"},{"location":"commands/full/#cctl-apply-addattachment","text":"Create Creates an attachment for a task. URL: /task/{id}/attachment/create Schema: - Usage: cctl apply addAttachment [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"addAttachment"},{"location":"commands/full/#cctl-apply-addidentitylink","text":"Add Adds an identity link to a task by id. Can be used to link any user or group to a task and specify a relation. URL: /task/{id}/identity-links Schema: {'type': 'object', 'required': ['type'], 'properties': {'userId': {'type': 'string', 'nullable': True, 'description': 'The id of the user participating in this link. Either userId or groupId is set.'}, 'groupId': {'type': 'string', 'nullable': True, 'description': 'The id of the group participating in this link. Either groupId or userId is set.'}, 'type': {'type': 'string', 'nullable': True, 'description': 'The type of the identity link. The value of the this property can be user-defined. The Process Engine\\nprovides three pre-defined Identity Link type s:\\n\\n* candidate \\n* assignee - reserved for the task assignee\\n* owner - reserved for the task owner\\n\\n**Note**: When adding or removing an Identity Link, the type property must be defined.'}}} Usage: cctl apply addIdentityLink [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"addIdentityLink"},{"location":"commands/full/#cctl-apply-annotationuseroperationlog","text":"Set Annotation to an User Operation Log (Historic) Set an annotation for auditing reasons. URL: /history/user-operation/{operationId}/set-annotation Schema: {'type': 'object', 'properties': {'annotation': {'type': 'string', 'nullable': True, 'description': 'The annotation value to put.'}}} Usage: cctl apply annotationUserOperationLog [OPTIONS] OPERATIONID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"annotationUserOperationLog"},{"location":"commands/full/#cctl-apply-assignee","text":"Set Assignee Changes the assignee of a task to a specific user. Note: The difference with the Claim Task method is that this method does not check if the task already has a user assigned to it. URL: /task/{id}/assignee Schema: {'type': 'object', 'properties': {'userId': {'type': 'string', 'nullable': True, 'description': 'The id of the user that the current action refers to.'}}} Usage: cctl apply assignee [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"assignee"},{"location":"commands/full/#cctl-apply-async","text":"Delete Async (POST) Delete multiple historic decision instances asynchronously (batch). At least historicDecisionInstanceIds or historicDecisionInstanceQuery has to be provided. If both are provided then all instances matching query criterion and instances from the list will be deleted. URL: /history/decision-instance/delete Schema: {'type': 'object', 'properties': {'historicDecisionInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of historic decision instance ids to delete.'}, 'historicDecisionInstanceQuery': {'$ref': '#/components/schemas/HistoricDecisionInstanceQueryDto'}, 'deleteReason': {'type': 'string', 'nullable': True, 'description': 'A string with delete reason.'}}} Usage: cctl apply async [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"async"},{"location":"commands/full/#cctl-apply-asynchistoricquerybased","text":"Delete Async Historic Query Based (POST) Deletes a set of process instances asynchronously (batch) based on a historic process instance query. URL: /process-instance/delete-historic-query-based Schema: {'type': 'object', 'properties': {'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list process instance ids to delete.'}, 'deleteReason': {'type': 'string', 'nullable': True, 'description': 'A string with delete reason.'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started or ended as part of this request.'}, 'skipSubprocesses': {'type': 'boolean', 'nullable': True, 'description': 'Skip deletion of the subprocesses related to deleted processes as part of this request.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}}} Usage: cctl apply asyncHistoricQueryBased [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"asyncHistoricQueryBased"},{"location":"commands/full/#cctl-apply-authorization","text":"Update an Authorization Updates an authorization by id. URL: /authorization/{id} Schema: {'type': 'object', 'properties': {'permissions': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'An array of Strings holding the permissions provided by this authorization.'}, 'userId': {'type': 'string', 'nullable': True, 'description': 'The id of the user this authorization has been created for. The value \\nrepresents a global authorization ranging over all users.'}, 'groupId': {'type': 'string', 'nullable': True, 'description': 'The id of the group this authorization has been created for.'}, 'resourceType': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'An integer representing the resource type. See the\\n[User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/authorization-service/#resources)\\nfor a list of integer representations of resource types.'}, 'resourceId': {'type': 'string', 'nullable': True, 'description': 'The resource Id. The value represents an authorization ranging over all\\ninstances of a resource.'}}} Usage: cctl apply authorization [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"authorization"},{"location":"commands/full/#cctl-apply-batchsuspensionstate","text":"Activate/Suspend Activates or suspends a batch by id. URL: /batch/{id}/suspended Schema: {'type': 'object', 'properties': {'suspended': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend a given instance \\n(e.g. process instance, job, job definition, or batch). When the value is set to true, \\nthe given instance will be suspended and when the value is set to false, \\nthe given instance will be activated.'}}} Usage: cctl apply batchSuspensionState [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"batchSuspensionState"},{"location":"commands/full/#cctl-apply-binarytasklocalvariable","text":"Update Local Task Variable (Binary) Sets the serialized value for a binary variable or the binary value for a file variable. URL: /task/{id}/localVariables/{varName}/data Schema: - Usage: cctl apply binaryTaskLocalVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"binaryTaskLocalVariable"},{"location":"commands/full/#cctl-apply-binarytaskvariable","text":"Update Task Variable (Binary) Sets the serialized value for a binary variable or the binary value for a file variable visible from the task. A variable is visible from the task if it is a local task variable or declared in a parent scope of the task. See documentation on visiblity of variables . URL: /task/{id}/variables/{varName}/data Schema: - Usage: cctl apply binaryTaskVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"binaryTaskVariable"},{"location":"commands/full/#cctl-apply-checkpassword","text":"Validate Password A password policy consists of a list of rules that new passwords must follow to be policy compliant. A password can be checked for compliancy via this end point. More information on password policies in Camunda can be found in the password policy user guide and in the security instructions . URL: /identity/password-policy Schema: {'type': 'object', 'properties': {'password': {'type': 'string', 'nullable': True, 'description': 'The candidate password to be check against the password policy.'}, 'profile': {'$ref': '#/components/schemas/UserProfileDto'}}} Usage: cctl apply checkPassword [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"checkPassword"},{"location":"commands/full/#cctl-apply-claim","text":"Claim Claims a task for a specific user. Note: The difference with the Set Assignee method is that here a check is performed to see if the task already has a user assigned to it. URL: /task/{id}/claim Schema: {'type': 'object', 'properties': {'userId': {'type': 'string', 'nullable': True, 'description': 'The id of the user that the current action refers to.'}}} Usage: cctl apply claim [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"claim"},{"location":"commands/full/#cctl-apply-cleanupasync","text":"Clean up history (POST) Schedules asynchronous history cleanup (See History cleanup ). Note: This endpoint will return at most a single history cleanup job. Since version 7.9.0 it is possible to configure multiple parallel history cleanup jobs . Use GET /history/cleanup/jobs to find all the available history cleanup jobs. URL: /history/cleanup Schema: - Usage: cctl apply cleanupAsync [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --immediately-due / --not-immediately-due boolean When true the job will be scheduled for nearest future. When false , the job will be scheduled for next batch window start time. Default is true . None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"cleanupAsync"},{"location":"commands/full/#cctl-apply-clearannotationuseroperationlog","text":"Clear Annotation of an User Operation Log (Historic) Clear the annotation which was previously set for auditing reasons. URL: /history/user-operation/{operationId}/clear-annotation Schema: - Usage: cctl apply clearAnnotationUserOperationLog [OPTIONS] OPERATIONID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"clearAnnotationUserOperationLog"},{"location":"commands/full/#cctl-apply-complete","text":"Complete Completes a task and updates process variables. URL: /task/{id}/complete Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs.'}, 'withVariablesInReturn': {'type': 'boolean', 'nullable': True, 'default': False, 'description': \"Indicates whether the response should contain the process variables or not. The\\ndefault is false with a response code of 204 . If set to true the response\\ncontains the process variables and has a response code of 200 . If the task is not\\nassociated with a process instance (e.g. if it's part of a case instance) no\\nvariables will be returned.\"}}} Usage: cctl apply complete [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"complete"},{"location":"commands/full/#cctl-apply-completeexternaltaskresource","text":"Complete Completes an external task by id and updates process variables. URL: /external-task/{id}/complete Schema: {'allOf': [{'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs. Each key is a variable name and each value a JSON variable value object with the following properties:'}, 'localVariables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing local variable key-value pairs. Local variables are set only in the scope of external task. Each key is a variable name and each value a JSON variable value object with the following properties:'}}}, {'$ref': '#/components/schemas/HandleExternalTaskDto'}]} Usage: cctl apply completeExternalTaskResource [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"completeExternalTaskResource"},{"location":"commands/full/#cctl-apply-configuretelemetry","text":"Configure Telemetry Configures whether Camunda receives data collection of the process engine setup and usage. URL: /telemetry/configuration Schema: {'type': 'object', 'properties': {'enableTelemetry': {'type': 'boolean', 'nullable': True, 'description': 'Specifies if the telemetry data should be sent or not.'}}} Usage: cctl apply configureTelemetry [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"configureTelemetry"},{"location":"commands/full/#cctl-apply-correlatemessageasyncoperation","text":"Correlate Message Async (POST) Correlates a message asynchronously to executions that are waiting for this message. Messages will not be correlated to process definition-level start message events to start process instances. URL: /process-instance/message-async Schema: {'type': 'object', 'properties': {'messageName': {'type': 'string', 'nullable': True, 'description': \"The name of the message to correlate. Corresponds to the 'name' element of the message defined in BPMN 2.0 XML. Can be null to correlate by other criteria only.\"}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids that define a group of process instances\\nto which the operation will correlate a message.\\n\\nPlease note that if processInstanceIds , processInstanceQuery and historicProcessInstanceQuery \\nare defined, the resulting operation will be performed on the union of these sets.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'All variables the operation will set in the root scope of the process instances the message is correlated to.'}}} Usage: cctl apply correlateMessageAsyncOperation [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"correlateMessageAsyncOperation"},{"location":"commands/full/#cctl-apply-createauthorization","text":"Create a New Authorization Creates a new authorization. URL: /authorization/create Schema: {'type': 'object', 'properties': {'type': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'The type of the authorization (0=global, 1=grant, 2=revoke). See the\\n[User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/authorization-service.md#authorization-type)\\nfor more information about authorization types.'}, 'permissions': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'An array of Strings holding the permissions provided by this authorization.'}, 'userId': {'type': 'string', 'nullable': True, 'description': 'The id of the user this authorization has been created for. The value \\nrepresents a global authorization ranging over all users.'}, 'groupId': {'type': 'string', 'nullable': True, 'description': 'The id of the group this authorization has been created for.'}, 'resourceType': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'An integer representing the resource type. See the\\n[User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/authorization-service/#resources)\\nfor a list of integer representations of resource types.'}, 'resourceId': {'type': 'string', 'nullable': True, 'description': 'The resource Id. The value represents an authorization ranging over all\\ninstances of a resource.'}}} Usage: cctl apply createAuthorization [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"createAuthorization"},{"location":"commands/full/#cctl-apply-createcomment","text":"Create Creates a comment for a task by id. URL: /task/{id}/comment/create Schema: {'allOf': [{'type': 'object', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'The id of the task comment.'}, 'userId': {'type': 'string', 'nullable': True, 'description': 'The id of the user who created the comment.'}, 'taskId': {'type': 'string', 'nullable': True, 'description': 'The id of the task to which the comment belongs.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'The id of the process instance the comment is related to.'}, 'time': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The time when the comment was created.\\n[Default format]($(docsUrl)/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ .\"}, 'message': {'type': 'string', 'nullable': True, 'description': 'The content of the comment.'}, 'removalTime': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The time after which the comment should be removed by the History Cleanup job.\\n[Default format]($(docsUrl)/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ .\"}, 'rootProcessInstanceId': {'type': 'string', 'nullable': True, 'description': 'The process instance id of the root process instance that initiated the process\\ncontaining the task.'}}}, {'$ref': '#/components/schemas/LinkableDto'}]} Usage: cctl apply createComment [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"createComment"},{"location":"commands/full/#cctl-apply-createdeployment","text":"Create Creates a deployment. Security Consideration Deployments can contain custom code in form of scripts or EL expressions to customize process behavior. This may be abused for remote execution of arbitrary code. URL: /deployment/create Schema: - Usage: cctl apply createDeployment [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"createDeployment"},{"location":"commands/full/#cctl-apply-createfilter","text":"Create Filter Creates a new filter. URL: /filter/create Schema: {'type': 'object', 'properties': {'resourceType': {'type': 'string', 'nullable': True, 'description': 'The resource type of the filter.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'The name of the filter.'}, 'owner': {'type': 'string', 'nullable': True, 'description': 'The user id of the owner of the filter.'}, 'query': {'type': 'object', 'description': 'The query of the filter as a JSON object.'}, 'properties': {'type': 'object', 'description': 'The properties of a filter as a JSON object.'}}} Usage: cctl apply createFilter [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"createFilter"},{"location":"commands/full/#cctl-apply-creategroup","text":"Create Group Creates a new group. URL: /group/create Schema: {'type': 'object', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'The id of the group.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'The name of the group.'}, 'type': {'type': 'string', 'nullable': True, 'description': 'The type of the group.'}}} Usage: cctl apply createGroup [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"createGroup"},{"location":"commands/full/#cctl-apply-creategroupmember","text":"Create Group Member Adds a member to a group. URL: /group/{id}/members/{userId} Schema: - Usage: cctl apply createGroupMember [OPTIONS] USERID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"createGroupMember"},{"location":"commands/full/#cctl-apply-creategroupmembership","text":"Create Tenant Group Membership Creates a membership between a tenant and a group. URL: /tenant/{id}/group-members/{groupId} Schema: - Usage: cctl apply createGroupMembership [OPTIONS] GROUPID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"createGroupMembership"},{"location":"commands/full/#cctl-apply-createincident","text":"Create Incident Creates a custom incident with given properties. URL: /execution/{id}/create-incident Schema: {'type': 'object', 'properties': {'incidentType': {'type': 'string', 'nullable': True, 'description': 'A type of the new incident.'}, 'configuration': {'type': 'string', 'nullable': True, 'description': 'A configuration for the new incident.'}, 'message': {'type': 'string', 'nullable': True, 'description': 'A message for the new incident.'}}} Usage: cctl apply createIncident [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"createIncident"},{"location":"commands/full/#cctl-apply-createtask","text":"Create Creates a new task. URL: /task/create Schema: {'type': 'object', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'The task id.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'The task name.'}, 'assignee': {'type': 'string', 'nullable': True, 'description': \"The assignee's id.\"}, 'owner': {'type': 'string', 'nullable': True, 'description': \"The owner's id.\"}, 'created': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The date the task was created on.\\n[Default format](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ .\"}, 'due': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The task's due date.\\n[Default format](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ .\"}, 'followUp': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The follow-up date for the task.\\n[Default format](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ .\"}, 'delegationState': {'type': 'string', 'nullable': True, 'enum': ['PENDING', 'RESOLVED'], 'description': \"The task's delegation state. Possible values are PENDING and RESOLVED .\"}, 'description': {'type': 'string', 'nullable': True, 'description': \"The task's description.\"}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'The id of the execution the task belongs to.'}, 'parentTaskId': {'type': 'string', 'nullable': True, 'description': 'The id the parent task, if this task is a subtask.'}, 'priority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': \"The task's priority.\"}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the process definition the task belongs to.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'The id of the process instance the task belongs to.'}, 'caseExecutionId': {'type': 'string', 'nullable': True, 'description': 'The id of the case execution the task belongs to.'}, 'caseDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the case definition the task belongs to.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'The id of the case instance the task belongs to.'}, 'taskDefinitionKey': {'type': 'string', 'nullable': True, 'description': \"The task's key.\"}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Whether the task belongs to a process instance that is suspended.'}, 'formKey': {'type': 'string', 'nullable': True, 'description': 'If not null , the form key for the task.'}, 'camundaFormRef': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/CamundaFormRef'}, 'description': 'A reference to a specific version of a Camunda Form.'}, 'tenantId': {'type': 'string', 'nullable': True, 'description': 'If not null , the tenant id of the task.'}}} Usage: cctl apply createTask [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"createTask"},{"location":"commands/full/#cctl-apply-createtenant","text":"Create Tenant Create a new tenant. URL: /tenant/create Schema: {'type': 'object', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'The id of the tenant.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'The name of the tenant.'}}} Usage: cctl apply createTenant [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"createTenant"},{"location":"commands/full/#cctl-apply-createuser","text":"Create Create a new user. URL: /user/create Schema: {'type': 'object', 'properties': {'profile': {'$ref': '#/components/schemas/UserProfileDto'}, 'credentials': {'$ref': '#/components/schemas/UserCredentialsDto'}}} Usage: cctl apply createUser [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"createUser"},{"location":"commands/full/#cctl-apply-createusermembership","text":"Create Tenant User Membership Creates a membership between a tenant and an user. URL: /tenant/{id}/user-members/{userId} Schema: - Usage: cctl apply createUserMembership [OPTIONS] USERID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"createUserMembership"},{"location":"commands/full/#cctl-apply-credentials","text":"Update Credentials Updates a user's credentials (password) URL: /user/{id}/credentials Schema: {'type': 'object', 'properties': {'password': {'type': 'string', 'nullable': True, 'description': 'The users new password.'}, 'authenticatedUserPassword': {'type': 'string', 'nullable': True, 'description': 'The password of the authenticated user who changes the password of the user\\n(i.e., the user with passed id as path parameter).'}}} Usage: cctl apply credentials [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"credentials"},{"location":"commands/full/#cctl-apply-delegatetask","text":"Delegate Delegates a task to another user. URL: /task/{id}/delegate Schema: {'type': 'object', 'properties': {'userId': {'type': 'string', 'nullable': True, 'description': 'The id of the user that the current action refers to.'}}} Usage: cctl apply delegateTask [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"delegateTask"},{"location":"commands/full/#cctl-apply-delivermessage","text":"Correlate Correlates a message to the process engine to either trigger a message start event or an intermediate message catching event. Internally this maps to the engine's message correlation builder methods MessageCorrelationBuilder#correlateWithResult() and MessageCorrelationBuilder#correlateAllWithResult() . For more information about the correlation behavior, see the Message Events section of the BPMN 2.0 Implementation Reference . URL: /message Schema: {'type': 'object', 'properties': {'messageName': {'type': 'string', 'nullable': True, 'description': 'The name of the message to deliver.'}, 'businessKey': {'type': 'string', 'nullable': True, 'description': 'Used for correlation of process instances that wait for incoming messages.\\nWill only correlate to executions that belong to a process instance with the provided business key.'}, 'tenantId': {'type': 'string', 'nullable': True, 'description': 'Used to correlate the message for a tenant with the given id.\\nWill only correlate to executions and process definitions which belong to the tenant.\\nMust not be supplied in conjunction with a withoutTenantId .'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'A Boolean value that indicates whether the message should only be correlated to executions\\nand process definitions which belong to no tenant or not. Value may only be true , as false \\nis the default behavior.\\nMust not be supplied in conjunction with a tenantId .'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Used to correlate the message to the process instance with the given id.'}, 'correlationKeys': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'Used for correlation of process instances that wait for incoming messages.\\nHas to be a JSON object containing key-value pairs that are matched against process instance variables\\nduring correlation. Each key is a variable name and each value a JSON variable value object with the\\nfollowing properties.'}, 'localCorrelationKeys': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'Local variables used for correlation of executions (process instances) that wait for incoming messages.\\nHas to be a JSON object containing key-value pairs that are matched against local variables during correlation.\\nEach key is a variable name and each value a JSON variable value object with the following properties.'}, 'processVariables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A map of variables that is injected into the triggered execution or process instance after the message\\nhas been delivered. Each key is a variable name and each value a JSON variable value object with\\nthe following properties.'}, 'processVariablesLocal': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A map of local variables that is injected into the triggered execution or process instance after the\\nmessage has been delivered. Each key is a variable name and each value a JSON variable value object\\nwith the following properties.'}, 'all': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'A Boolean value that indicates whether the message should be correlated to exactly one entity or multiple entities.\\nIf the value is set to false , the message will be correlated to exactly one entity (execution or process definition).\\nIf the value is set to true , the message will be correlated to multiple executions and a process definition that\\ncan be instantiated by this message in one go.'}, 'resultEnabled': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'A Boolean value that indicates whether the result of the correlation should be returned or not.\\nIf this property is set to true , there will be returned a list of message correlation result objects. Depending on the\\nall property, there will be either one ore more returned results in the list.\\n\\nThe default value is false , which means no result will be returned.'}, 'variablesInResultEnabled': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'A Boolean value that indicates whether the result of the correlation should contain process variables or not.\\nThe parameter resultEnabled should be set to true in order to use this it.\\n\\nThe default value is false , which means the variables will not be returned.'}}} Usage: cctl apply deliverMessage [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"deliverMessage"},{"location":"commands/full/#cctl-apply-evaluatecondition","text":"Evaluate Triggers evaluation of conditions for conditional start event(s). Internally this maps to the engines condition evaluation builder method ConditionEvaluationBuilder#evaluateStartConditions(). For more information see the Conditional Start Events section of the BPMN 2.0 Implementation Reference . URL: /condition Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A map of variables which are used for evaluation of the conditions and are injected into the process instances which have been triggered.\\nEach key is a variable name and each value a JSON variable value object with the following properties.'}, 'businessKey': {'type': 'string', 'nullable': True, 'description': 'Used for the process instances that have been triggered after the evaluation.'}, 'tenantId': {'type': 'string', 'nullable': True, 'description': 'Used to evaluate a condition for a tenant with the given id.\\nWill only evaluate conditions of process definitions which belong to the tenant.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value that indicates whether the conditions should only be evaluated of process definitions which belong to no tenant or not.\\nValue may only be true, as false is the default behavior.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Used to evaluate conditions of the process definition with the given id.'}}} Usage: cctl apply evaluateCondition [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"evaluateCondition"},{"location":"commands/full/#cctl-apply-evaluatedecisionbyid","text":"Evaluate By Id Evaluates a given decision and returns the result. The input values of the decision have to be supplied in the request body. URL: /decision-definition/{id}/evaluate Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': ''}}} Usage: cctl apply evaluateDecisionById [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"evaluateDecisionById"},{"location":"commands/full/#cctl-apply-evaluatedecisionbykey","text":"Evaluate By Key Evaluates the latest version of the decision definition which belongs to no tenant. The input values of the decision have to be supplied in the request body. URL: /decision-definition/key/{key}/evaluate Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': ''}}} Usage: cctl apply evaluateDecisionByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"evaluateDecisionByKey"},{"location":"commands/full/#cctl-apply-evaluatedecisionbykeyandtenant","text":"Evaluate By Key And Tenant Evaluates the latest version of the decision definition for tenant. The input values of the decision have to be supplied in the request body. URL: /decision-definition/key/{key}/tenant-id/{tenant-id}/evaluate Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': ''}}} Usage: cctl apply evaluateDecisionByKeyAndTenant [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"evaluateDecisionByKeyAndTenant"},{"location":"commands/full/#cctl-apply-executejob","text":"Execute Job Executes a job by id. Note: The execution of the job happens synchronously in the same thread. URL: /job/{id}/execute Schema: - Usage: cctl apply executeJob [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"executeJob"},{"location":"commands/full/#cctl-apply-executemigrationplan","text":"Execute Migration Plan Executes a migration plan synchronously for multiple process instances. To execute a migration plan asynchronously, use the Execute Migration Plan Async(Batch) method. For more information about the difference between synchronous and asynchronous execution of a migration plan, please refer to the related section of the user guide . URL: /migration/execute Schema: {'type': 'object', 'properties': {'migrationPlan': {'$ref': '#/components/schemas/MigrationPlanDto'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids to migrate.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'A boolean value to control whether execution listeners should be invoked during\\nmigration.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'A boolean value to control whether input/output mappings should be executed during\\nmigration.'}}} Usage: cctl apply executeMigrationPlan [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"executeMigrationPlan"},{"location":"commands/full/#cctl-apply-executemigrationplanasync","text":"Execute Migration Plan Async (Batch) Executes a migration plan asynchronously (batch) for multiple process instances. To execute a migration plan synchronously, use the Execute MigrationPlan method. For more information about the difference between synchronous and asynchronous execution of a migration plan, please refer to the related section of the user guide . URL: /migration/executeAsync Schema: {'type': 'object', 'properties': {'migrationPlan': {'$ref': '#/components/schemas/MigrationPlanDto'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids to migrate.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'A boolean value to control whether execution listeners should be invoked during\\nmigration.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'A boolean value to control whether input/output mappings should be executed during\\nmigration.'}}} Usage: cctl apply executeMigrationPlanAsync [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"executeMigrationPlanAsync"},{"location":"commands/full/#cctl-apply-executemodification","text":"Execute Modification Executes a modification synchronously for multiple process instances. To modify a single process instance, use the Modify Process Instance Execution State method. To execute a modification asynchronously, use the Execute Modification Async (Batch) method. For more information about the difference between synchronous and asynchronous execution of a modification, please refer to the related section of the user guide . URL: /modification/execute Schema: {'type': 'object', 'properties': {'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the process definition for the modification'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started or ended as part\\nof this request.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution of [input/output variable mappings](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#input-output-variable-mapping) for\\nactivities that are started or ended as part of this request.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids to modify.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'instructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/MultipleProcessInstanceModificationInstructionDto'}, 'description': 'An array of modification instructions. The instructions are executed in the order they are in. '}, 'annotation': {'type': 'string', 'nullable': True, 'description': 'An arbitrary text annotation set by a user for auditing reasons.'}}} Usage: cctl apply executeModification [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"executeModification"},{"location":"commands/full/#cctl-apply-executemodificationasync","text":"Execute Modification Async (Batch) Executes a modification asynchronously for multiple process instances. To execute a modification synchronously, use the Execute Modification method. For more information about the difference between synchronous and asynchronous execution of a modification, please refer to the related section of the user guide . URL: /modification/executeAsync Schema: {'type': 'object', 'properties': {'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the process definition for the modification'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started or ended as part\\nof this request.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution of [input/output variable mappings](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#input-output-variable-mapping) for\\nactivities that are started or ended as part of this request.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids to modify.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'instructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/MultipleProcessInstanceModificationInstructionDto'}, 'description': 'An array of modification instructions. The instructions are executed in the order they are in. '}, 'annotation': {'type': 'string', 'nullable': True, 'description': 'An arbitrary text annotation set by a user for auditing reasons.'}}} Usage: cctl apply executeModificationAsync [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"executeModificationAsync"},{"location":"commands/full/#cctl-apply-extendlock","text":"Extend Lock Extends the timeout of the lock by a given amount of time. URL: /external-task/{id}/extendLock Schema: {'allOf': [{'type': 'object', 'properties': {'newDuration': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'An amount of time (in milliseconds). This is the new lock duration starting from the\\ncurrent moment.'}}}, {'$ref': '#/components/schemas/HandleExternalTaskDto'}]} Usage: cctl apply extendLock [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"extendLock"},{"location":"commands/full/#cctl-apply-externaltaskresourcepriority","text":"Set Priority Sets the priority of an existing external task by id. The default value of a priority is 0. URL: /external-task/{id}/priority Schema: {'type': 'object', 'properties': {'priority': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'The priority of the resource.'}}} Usage: cctl apply externalTaskResourcePriority [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"externalTaskResourcePriority"},{"location":"commands/full/#cctl-apply-externaltaskresourceretries","text":"Set Retries Sets the number of retries left to execute an external task by id. If retries are set to 0, an incident is created. URL: /external-task/{id}/retries Schema: {'type': 'object', 'properties': {'retries': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'The number of retries to set for the resource. Must be >= 0. If this is 0, an incident is created\\nand the task, or job, cannot be fetched, or acquired anymore unless the retries are increased again.\\nCan not be null.'}}} Usage: cctl apply externalTaskResourceRetries [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"externalTaskResourceRetries"},{"location":"commands/full/#cctl-apply-externaltaskretries","text":"Set Retries Sync Sets the number of retries left to execute external tasks by id synchronously. If retries are set to 0, an incident is created. URL: /external-task/retries Schema: {'type': 'object', 'properties': {'retries': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'The number of retries to set for the external task. Must be >= 0. If this is 0, an incident is created\\nand the task cannot be fetched anymore unless the retries are increased again. Can not be null.'}, 'externalTaskIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'The ids of the external tasks to set the number of retries for.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'The ids of process instances containing the tasks to set the number of retries for.'}, 'externalTaskQuery': {'$ref': '#/components/schemas/ExternalTaskQueryDto'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}}} Usage: cctl apply externalTaskRetries [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"externalTaskRetries"},{"location":"commands/full/#cctl-apply-externaltaskretriesasyncoperation","text":"Set Retries Async Sets the number of retries left to execute external tasks by id asynchronously. If retries are set to 0, an incident is created. URL: /external-task/retries-async Schema: {'type': 'object', 'properties': {'retries': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'The number of retries to set for the external task. Must be >= 0. If this is 0, an incident is created\\nand the task cannot be fetched anymore unless the retries are increased again. Can not be null.'}, 'externalTaskIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'The ids of the external tasks to set the number of retries for.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'The ids of process instances containing the tasks to set the number of retries for.'}, 'externalTaskQuery': {'$ref': '#/components/schemas/ExternalTaskQueryDto'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}}} Usage: cctl apply externalTaskRetriesAsyncOperation [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"externalTaskRetriesAsyncOperation"},{"location":"commands/full/#cctl-apply-fetchandlock","text":"Fetch and Lock Fetches and locks a specific number of external tasks for execution by a worker. Query can be restricted to specific task topics and for each task topic an individual lock time can be provided. URL: /external-task/fetchAndLock Schema: {'type': 'object', 'required': ['workerId', 'maxTasks'], 'properties': {'workerId': {'type': 'string', 'description': '**Mandatory.** The id of the worker on which behalf tasks are fetched. The returned tasks are locked for\\nthat worker and can only be completed when providing the same worker id.'}, 'maxTasks': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': '**Mandatory.** The maximum number of tasks to return.'}, 'usePriority': {'type': 'boolean', 'nullable': True, 'description': 'A boolean value, which indicates whether the task should be fetched based on its priority\\nor arbitrarily.'}, 'asyncResponseTimeout': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'The [Long Polling](https://docs.camunda.org/manual/latest/user-guide/process-engine/external-tasks/#long-polling-to-fetch-and-lock-external-tasks)\\ntimeout in milliseconds.\\n\\n**Note:** The value cannot be set larger than 1.800.000 milliseconds (corresponds to 30 minutes).'}, 'topics': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/FetchExternalTaskTopicDto'}, 'description': 'A JSON array of topic objects for which external tasks should be fetched. The returned tasks may be\\narbitrarily distributed among these topics. Each topic object has the following properties:'}}} Usage: cctl apply fetchAndLock [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"fetchAndLock"},{"location":"commands/full/#cctl-apply-filter","text":"Update Filter Updates an existing filter. URL: /filter/{id} Schema: {'type': 'object', 'properties': {'resourceType': {'type': 'string', 'nullable': True, 'description': 'The resource type of the filter.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'The name of the filter.'}, 'owner': {'type': 'string', 'nullable': True, 'description': 'The user id of the owner of the filter.'}, 'query': {'type': 'object', 'description': 'The query of the filter as a JSON object.'}, 'properties': {'type': 'object', 'description': 'The properties of a filter as a JSON object.'}}} Usage: cctl apply filter [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"filter"},{"location":"commands/full/#cctl-apply-generatemigrationplan","text":"Generate Migration Plan Generates a migration plan for two process definitions. The generated migration plan contains migration instructions which map equal activities between the two process definitions. URL: /migration/generate Schema: {'type': 'object', 'properties': {'sourceProcessDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the source process definition for the migration.'}, 'targetProcessDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the target process definition for the migration.'}, 'updateEventTriggers': {'type': 'boolean', 'nullable': True, 'description': 'A boolean flag indicating whether instructions between events should be configured\\nto update the event triggers.'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': \"A map of variables which will be set into the process instances' scope.\\nEach key is a variable name and each value a JSON variable value object.\"}}} Usage: cctl apply generateMigrationPlan [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"generateMigrationPlan"},{"location":"commands/full/#cctl-apply-group","text":"Update Group Updates a given group by id. URL: /group/{id} Schema: {'type': 'object', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'The id of the group.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'The name of the group.'}, 'type': {'type': 'string', 'nullable': True, 'description': 'The type of the group.'}}} Usage: cctl apply group [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"group"},{"location":"commands/full/#cctl-apply-handlebpmnerror","text":"Handle BPMN Error Reports a business error in the context of a running task by id. The error code must be specified to identify the BPMN error handler. See the documentation for Reporting Bpmn Error in User Tasks. URL: /task/{id}/bpmnError Schema: {'type': 'object', 'properties': {'errorCode': {'type': 'string', 'nullable': True, 'description': 'An error code that indicates the predefined error. It is used to identify the BPMN\\nerror handler.'}, 'errorMessage': {'type': 'string', 'nullable': True, 'description': 'An error message that describes the error.'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs.'}}} Usage: cctl apply handleBpmnError [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"handleBpmnError"},{"location":"commands/full/#cctl-apply-handleescalation","text":"Handle BPMN Escalation Reports an escalation in the context of a running task by id. The escalation code must be specified to identify the escalation handler. See the documentation for Reporting Bpmn Escalation in User Tasks. URL: /task/{id}/bpmnEscalation Schema: {'type': 'object', 'properties': {'escalationCode': {'type': 'string', 'nullable': True, 'description': 'An escalation code that indicates the predefined escalation. It is used to identify\\nthe BPMN escalation handler.'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs.'}}} Usage: cctl apply handleEscalation [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"handleEscalation"},{"location":"commands/full/#cctl-apply-handleexternaltaskbpmnerror","text":"Handle BPMN Error Reports a business error in the context of a running external task by id. The error code must be specified to identify the BPMN error handler. URL: /external-task/{id}/bpmnError Schema: {'allOf': [{'type': 'object', 'properties': {'workerId': {'type': 'string', 'nullable': True, 'description': 'The id of the worker that reports the failure. Must match the id of the worker who has most recently\\nlocked the task.'}}}, {'$ref': '#/components/schemas/TaskBpmnErrorDto'}]} Usage: cctl apply handleExternalTaskBpmnError [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"handleExternalTaskBpmnError"},{"location":"commands/full/#cctl-apply-handlefailure","text":"Handle Failure Reports a failure to execute an external task by id. A number of retries and a timeout until the task can be retried can be specified. If retries are set to 0, an incident for this task is created. URL: /external-task/{id}/failure Schema: {'allOf': [{'type': 'object', 'properties': {'errorMessage': {'type': 'string', 'nullable': True, 'description': 'An message indicating the reason of the failure.'}, 'errorDetails': {'type': 'string', 'nullable': True, 'description': 'A detailed error description.'}, 'retries': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': \"A number of how often the task should be retried. Must be >= 0. If this is 0, an incident is created and\\nthe task cannot be fetched anymore unless the retries are increased again. The incident's message is set\\nto the errorMessage parameter.\"}, 'retryTimeout': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'A timeout in milliseconds before the external task becomes available again for fetching. Must be >= 0.'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs. Each key is a variable name and each value a JSON variable value object with the following properties:'}, 'localVariables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing local variable key-value pairs. Local variables are set only in the scope of external task. Each key is a variable name and each value a JSON variable value object with the following properties:'}}}, {'$ref': '#/components/schemas/HandleExternalTaskDto'}]} Usage: cctl apply handleFailure [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"handleFailure"},{"location":"commands/full/#cctl-apply-historicprocessinstancesasync","text":"Delete Async (POST) Delete multiple historic process instances asynchronously (batch). At least historicProcessInstanceIds or historicProcessInstanceQuery has to be provided. If both are provided then all instances matching query criterion and instances from the list will be deleted. URL: /history/process-instance/delete Schema: {'type': 'object', 'properties': {'historicProcessInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list historic process instance ids to delete.'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}, 'deleteReason': {'type': 'string', 'nullable': True, 'description': 'A string with delete reason.'}, 'failIfNotExists': {'type': 'boolean', 'nullable': True, 'description': 'If set to false , the request will still be successful if one ore more of the process ids are not found.'}}} Usage: cctl apply historicProcessInstancesAsync [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"historicProcessInstancesAsync"},{"location":"commands/full/#cctl-apply-historytimetolivebydecisiondefinitionid","text":"Update History Time to Live Updates history time to live for decision definition. The field is used within History cleanup . URL: /decision-definition/{id}/history-time-to-live Schema: {'type': 'object', 'properties': {'historyTimeToLive': {'type': 'integer', 'format': 'int32', 'nullable': True, 'minimum': 0, 'description': 'New value for historyTimeToLive field of the definition.\\nCan be null . Can not be negative.'}}} Usage: cctl apply historyTimeToLiveByDecisionDefinitionId [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"historyTimeToLiveByDecisionDefinitionId"},{"location":"commands/full/#cctl-apply-historytimetolivebydecisiondefinitionkey","text":"Update History Time to Live By Key Updates the latest version of the decision definition which belongs to no tenant. The field is used within History cleanup . URL: /decision-definition/key/{key}/history-time-to-live Schema: {'type': 'object', 'properties': {'historyTimeToLive': {'type': 'integer', 'format': 'int32', 'nullable': True, 'minimum': 0, 'description': 'New value for historyTimeToLive field of the definition.\\nCan be null . Can not be negative.'}}} Usage: cctl apply historyTimeToLiveByDecisionDefinitionKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"historyTimeToLiveByDecisionDefinitionKey"},{"location":"commands/full/#cctl-apply-historytimetolivebydecisiondefinitionkeyandtenant","text":"Update History Time to Live By Key And Tenant Updates the latest version of the decision definition for tenant. The field is used within History cleanup . URL: /decision-definition/key/{key}/tenant-id/{tenant-id}/history-time-to-live Schema: {'type': 'object', 'properties': {'historyTimeToLive': {'type': 'integer', 'format': 'int32', 'nullable': True, 'minimum': 0, 'description': 'New value for historyTimeToLive field of the definition.\\nCan be null . Can not be negative.'}}} Usage: cctl apply historyTimeToLiveByDecisionDefinitionKeyAndTenant [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"historyTimeToLiveByDecisionDefinitionKeyAndTenant"},{"location":"commands/full/#cctl-apply-historytimetolivebyprocessdefinitionid","text":"Update History Time to Live Updates history time to live for process definition. The field is used within History cleanup . URL: /process-definition/{id}/history-time-to-live Schema: {'type': 'object', 'properties': {'historyTimeToLive': {'type': 'integer', 'format': 'int32', 'nullable': True, 'minimum': 0, 'description': 'New value for historyTimeToLive field of the definition.\\nCan be null . Can not be negative.'}}} Usage: cctl apply historyTimeToLiveByProcessDefinitionId [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"historyTimeToLiveByProcessDefinitionId"},{"location":"commands/full/#cctl-apply-historytimetolivebyprocessdefinitionkey","text":"Update History Time to Live Updates history time to live for the latest version of the process definition which belongs to no tenant. The field is used within History cleanup . URL: /process-definition/key/{key}/history-time-to-live Schema: {'type': 'object', 'properties': {'historyTimeToLive': {'type': 'integer', 'format': 'int32', 'nullable': True, 'minimum': 0, 'description': 'New value for historyTimeToLive field of the definition.\\nCan be null . Can not be negative.'}}} Usage: cctl apply historyTimeToLiveByProcessDefinitionKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"historyTimeToLiveByProcessDefinitionKey"},{"location":"commands/full/#cctl-apply-historytimetolivebyprocessdefinitionkeyandtenantid","text":"Update History Time to Live Updates history time to live for the latest version of the process definition for a tenant. The field is used within History cleanup . URL: /process-definition/key/{key}/tenant-id/{tenant-id}/history-time-to-live Schema: {'type': 'object', 'properties': {'historyTimeToLive': {'type': 'integer', 'format': 'int32', 'nullable': True, 'minimum': 0, 'description': 'New value for historyTimeToLive field of the definition.\\nCan be null . Can not be negative.'}}} Usage: cctl apply historyTimeToLiveByProcessDefinitionKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"historyTimeToLiveByProcessDefinitionKeyAndTenantId"},{"location":"commands/full/#cctl-apply-identitylink","text":"Delete Removes an identity link from a task by id URL: /task/{id}/identity-links/delete Schema: {'type': 'object', 'required': ['type'], 'properties': {'userId': {'type': 'string', 'nullable': True, 'description': 'The id of the user participating in this link. Either userId or groupId is set.'}, 'groupId': {'type': 'string', 'nullable': True, 'description': 'The id of the group participating in this link. Either groupId or userId is set.'}, 'type': {'type': 'string', 'nullable': True, 'description': 'The type of the identity link. The value of the this property can be user-defined. The Process Engine\\nprovides three pre-defined Identity Link type s:\\n\\n* candidate \\n* assignee - reserved for the task assignee\\n* owner - reserved for the task owner\\n\\n**Note**: When adding or removing an Identity Link, the type property must be defined.'}}} Usage: cctl apply identityLink [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"identityLink"},{"location":"commands/full/#cctl-apply-incidentannotation","text":"Set Incident Annotation Sets the annotation of an incident with given id. URL: /incident/{id}/annotation Schema: {'type': 'object', 'properties': {'annotation': {'type': 'string', 'nullable': True, 'description': 'The annotation value to put.'}}} Usage: cctl apply incidentAnnotation [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"incidentAnnotation"},{"location":"commands/full/#cctl-apply-jobduedate","text":"Set Job Due Date Updates the due date of a job by id. URL: /job/{id}/duedate Schema: {'type': 'object', 'properties': {'duedate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': 'The date to set when the job has the next execution.'}, 'cascade': {'type': 'boolean', 'nullable': True, 'description': 'A boolean value to indicate if modifications to the due date should cascade to\\nsubsequent jobs. (e.g. Modify the due date of a timer by +15\\nminutes. This flag indicates if a +15 minutes should be applied to all\\nsubsequent timers.) This flag only affects timer jobs and only works if due date\\nis not null. Default: false '}}} Usage: cctl apply jobDuedate [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"jobDuedate"},{"location":"commands/full/#cctl-apply-jobpriority","text":"Set Job Priority Sets the execution priority of a job by id. URL: /job/{id}/priority Schema: {'type': 'object', 'properties': {'priority': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'The priority of the resource.'}}} Usage: cctl apply jobPriority [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"jobPriority"},{"location":"commands/full/#cctl-apply-jobpriorityjobdefinition","text":"Set Job Definition Priority by Id Sets an overriding execution priority for jobs with the given definition id. Optionally, the priorities of all the definitions' existing jobs are updated accordingly. The priority can be reset by setting it to null , meaning that a new job's priority will not be determined based on its definition's priority any longer. See the user guide on job prioritization for details. URL: /job-definition/{id}/jobPriority Schema: {'type': 'object', 'properties': {'priority': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': \"The new execution priority number for jobs of the given definition. The\\ndefinition's priority can be reset by using the value null . In\\nthat case, the job definition's priority no longer applies but a new\\njob's priority is determined as specified in the process model.\"}, 'includeJobs': {'type': 'boolean', 'nullable': True, 'description': 'A boolean value indicating whether existing jobs of the given definition should\\nreceive the priority as well. Default value is false . Can only be\\n true when the __priority__ parameter is not null .'}}} Usage: cctl apply jobPriorityJobDefinition [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"jobPriorityJobDefinition"},{"location":"commands/full/#cctl-apply-jobretries","text":"Set Job Retries Sets the retries of the job to the given number of retries by id. URL: /job/{id}/retries Schema: {'type': 'object', 'properties': {'retries': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'The number of retries to set for the resource. Must be >= 0. If this is 0, an incident is created\\nand the task, or job, cannot be fetched, or acquired anymore unless the retries are increased again.\\nCan not be null.'}}} Usage: cctl apply jobRetries [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"jobRetries"},{"location":"commands/full/#cctl-apply-jobretriesasyncoperation","text":"Set Job Retries Async (POST) Create a batch to set retries of jobs asynchronously. URL: /job/retries Schema: {'type': 'object', 'description': 'Defines the number of retries for a selection of jobs.\\nPlease note that if both jobIds and jobQuery are provided,\\nthen retries will be set on the union of these sets.', 'properties': {'jobIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of job ids to set retries for.'}, 'jobQuery': {'$ref': '#/components/schemas/JobQueryDto'}, 'retries': {'type': 'integer', 'format': 'int32', 'nullable': True, 'minimum': 0, 'description': 'An integer representing the number of retries. Please note that the value cannot be\\nnegative or null.'}}} Usage: cctl apply jobRetriesAsyncOperation [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"jobRetriesAsyncOperation"},{"location":"commands/full/#cctl-apply-jobretriesjobdefinition","text":"Set Job Retries By Job Definition Id Sets the number of retries of all failed jobs associated with the given job definition id. URL: /job-definition/{id}/retries Schema: {'type': 'object', 'properties': {'retries': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'The number of retries to set for the resource. Must be >= 0. If this is 0, an incident is created\\nand the task, or job, cannot be fetched, or acquired anymore unless the retries are increased again.\\nCan not be null.'}}} Usage: cctl apply jobRetriesJobDefinition [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"jobRetriesJobDefinition"},{"location":"commands/full/#cctl-apply-jobsuspensionstate","text":"Activate/Suspend Job By Id Activates or suspends a given job by id. URL: /job/{id}/suspended Schema: {'type': 'object', 'properties': {'suspended': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend a given instance \\n(e.g. process instance, job, job definition, or batch). When the value is set to true, \\nthe given instance will be suspended and when the value is set to false, \\nthe given instance will be activated.'}}} Usage: cctl apply jobSuspensionState [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"jobSuspensionState"},{"location":"commands/full/#cctl-apply-localexecutionvariablebinary","text":"Post Local Execution Variable (Binary) Sets the serialized value for a binary variable or the binary value for a file variable in the context of a given execution by id. URL: /execution/{id}/localVariables/{varName}/data Schema: - Usage: cctl apply localExecutionVariableBinary [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"localExecutionVariableBinary"},{"location":"commands/full/#cctl-apply-lock","text":"Lock an external task by a given id for a specified worker and amount of time. URL: /external-task/{id}/lock Schema: {'allOf': [{'type': 'object', 'properties': {'lockDuration': {'type': 'integer', 'format': 'int64', 'description': 'The duration to lock the external task for in milliseconds.\\n**Note:** Attempting to lock an already locked external task with the same workerId \\nwill succeed and a new lock duration will be set, starting from the current moment.'}}}, {'$ref': '#/components/schemas/HandleExternalTaskDto'}]} Usage: cctl apply lock [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"lock"},{"location":"commands/full/#cctl-apply-modifylocalexecutionvariables","text":"Update/Delete Local Execution Variables Updates or deletes the variables in the context of an execution by id. The updates do not propagate upwards in the execution hierarchy. Updates precede deletions. So, if a variable is updated AND deleted, the deletion overrides the update. URL: /execution/{id}/localVariables Schema: {'type': 'object', 'properties': {'modifications': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs.'}, 'deletions': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'An array of String keys of variables to be deleted.'}}} Usage: cctl apply modifyLocalExecutionVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"modifyLocalExecutionVariables"},{"location":"commands/full/#cctl-apply-modifyprocessinstance","text":"Modify Process Instance Execution State Submits a list of modification instructions to change a process instance's execution state. A modification instruction is one of the following: Starting execution before an activity Starting execution after an activity on its single outgoing sequence flow Starting execution on a specific sequence flow Canceling an activity instance, transition instance, or all instances (activity or transition) for an activity Instructions are executed immediately and in the order they are provided in this request's body. Variables can be provided with every starting instruction. The exact semantics of modification can be read about in the User guide . URL: /process-instance/{id}/modification Schema: {'type': 'object', 'properties': {'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started or ended as part of this request.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution of [input/output variable mappings](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#input-output-variable-mapping)\\nfor activities that are started or ended as part of this request.'}, 'instructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/ProcessInstanceModificationInstructionDto'}, 'description': 'JSON array of modification instructions. The instructions are executed in the order they are in.'}, 'annotation': {'type': 'string', 'nullable': True, 'description': 'An arbitrary text annotation set by a user for auditing reasons.'}}} Usage: cctl apply modifyProcessInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"modifyProcessInstance"},{"location":"commands/full/#cctl-apply-modifyprocessinstanceasyncoperation","text":"Modify Process Instance Execution State Async Submits a list of modification instructions to change a process instance's execution state async. A modification instruction is one of the following: Starting execution before an activity Starting execution after an activity on its single outgoing sequence flow Starting execution on a specific sequence flow Cancelling an activity instance, transition instance, or all instances (activity or transition) for an activity Instructions are executed asynchronous and in the order they are provided in this request's body. Variables can be provided with every starting instruction. The exact semantics of modification can be read about in the User guide . URL: /process-instance/{id}/modification-async Schema: {'type': 'object', 'properties': {'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started or ended as part of this request.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution of [input/output variable mappings](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#input-output-variable-mapping)\\nfor activities that are started or ended as part of this request.'}, 'instructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/ProcessInstanceModificationInstructionDto'}, 'description': 'JSON array of modification instructions. The instructions are executed in the order they are in.'}, 'annotation': {'type': 'string', 'nullable': True, 'description': 'An arbitrary text annotation set by a user for auditing reasons.'}}} Usage: cctl apply modifyProcessInstanceAsyncOperation [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"modifyProcessInstanceAsyncOperation"},{"location":"commands/full/#cctl-apply-modifyprocessinstancevariables","text":"Update/Delete Process Variables Updates or deletes the variables of a process instance by id. Updates precede deletions. So, if a variable is updated AND deleted, the deletion overrides the update. URL: /process-instance/{id}/variables Schema: {'type': 'object', 'properties': {'modifications': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs.'}, 'deletions': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'An array of String keys of variables to be deleted.'}}} Usage: cctl apply modifyProcessInstanceVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"modifyProcessInstanceVariables"},{"location":"commands/full/#cctl-apply-modifytasklocalvariables","text":"Update/Delete Local Task Variables Updates or deletes the variables in the context of a task. Updates precede deletions. So, if a variable is updated AND deleted, the deletion overrides the update. URL: /task/{id}/localVariables Schema: {'type': 'object', 'properties': {'modifications': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs.'}, 'deletions': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'An array of String keys of variables to be deleted.'}}} Usage: cctl apply modifyTaskLocalVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"modifyTaskLocalVariables"},{"location":"commands/full/#cctl-apply-modifytaskvariables","text":"Update/Delete Task Variables Updates or deletes the variables visible from the task. Updates precede deletions. So, if a variable is updated AND deleted, the deletion overrides the update. A variable is visible from the task if it is a local task variable or declared in a parent scope of the task. See documentation on visiblity of variables . URL: /task/{id}/variables Schema: {'type': 'object', 'properties': {'modifications': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs.'}, 'deletions': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'An array of String keys of variables to be deleted.'}}} Usage: cctl apply modifyTaskVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"modifyTaskVariables"},{"location":"commands/full/#cctl-apply-postexecutefiltercount","text":"Execute Filter Count (POST) Executes the saved query of the filter by id and returns the count. This method is slightly more powerful then the Get Execute Filter Count method because it allows to extend the saved query of the filter. URL: /filter/{id}/count Schema: - Usage: cctl apply postExecuteFilterCount [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"postExecuteFilterCount"},{"location":"commands/full/#cctl-apply-postexecutefilterlist","text":"Execute Filter List (POST) Executes the saved query of the filter by id and returns the result list. This method is slightly more powerful then the Get Execute FilterList method because it allows to extend the saved query of the filter. URL: /filter/{id}/list Schema: - Usage: cctl apply postExecuteFilterList [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"postExecuteFilterList"},{"location":"commands/full/#cctl-apply-postexecutefiltersingleresult","text":"Execute Filter Single Result (POST) Executes the saved query of the filter by id and returns the single result. This method is slightly more powerful then the Get Execute Filter Single Result method because it allows to extend the saved query of the filter. URL: /filter/{id}/singleResult Schema: - Usage: cctl apply postExecuteFilterSingleResult [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"postExecuteFilterSingleResult"},{"location":"commands/full/#cctl-apply-postquerygroups","text":"Get List (POST) Queries for a list of groups using a list of parameters. The size of the result set can be retrieved by using the Get Group Count (POST) method. URL: /group Schema: {'type': 'object', 'description': 'A group instance query which defines a list of group instances', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the group.'}, 'idIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a JSON string array of group ids.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'Filter by the name of the group.'}, 'nameLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the name that the parameter is a substring of.'}, 'type': {'type': 'string', 'nullable': True, 'description': 'Filter by the type of the group.'}, 'member': {'type': 'string', 'nullable': True, 'description': 'Only retrieve groups where the given user id is a member of.'}, 'memberOfTenant': {'type': 'string', 'nullable': True, 'description': 'Only retrieve groups which are members of the given tenant.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['id', 'name', 'type'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply postQueryGroups [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"postQueryGroups"},{"location":"commands/full/#cctl-apply-processdefinitionsuspensionstate","text":"Activate/Suspend By Key Activates or suspends process definitions with the given process definition key. URL: /process-definition/suspended Schema: {'type': 'object', 'properties': {'suspended': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend all process definitions with the given key.\\nWhen the value is set to true , all process definitions with the given key will be suspended and\\nwhen the value is set to false , all process definitions with the given key will be activated.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the process definitions to activate or suspend.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'The key of the process definitions to activate or suspend.'}, 'includeProcessInstances': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend also all process instances of \\nthe process definitions with the given key.\\nWhen the value is set to true , all process instances of the process definitions with the given key\\nwill be activated or suspended and when the value is set to false , the suspension state of \\nall process instances of the process definitions with the given key will not be updated.'}, 'executionDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The date on which all process definitions with the given key will be activated or suspended.\\nIf null , the suspension state of all process definitions with the given key is updated immediately.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}}} Usage: cctl apply processDefinitionSuspensionState [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"processDefinitionSuspensionState"},{"location":"commands/full/#cctl-apply-processdefinitionsuspensionstatebyid","text":"Activate/Suspend By Id Activates or suspends a given process definition by id. URL: /process-definition/{id}/suspended Schema: {'type': 'object', 'properties': {'suspended': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend all process definitions with the given key.\\nWhen the value is set to true , all process definitions with the given key will be suspended and\\nwhen the value is set to false , all process definitions with the given key will be activated.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the process definitions to activate or suspend.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'The key of the process definitions to activate or suspend.'}, 'includeProcessInstances': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend also all process instances of \\nthe process definitions with the given key.\\nWhen the value is set to true , all process instances of the process definitions with the given key\\nwill be activated or suspended and when the value is set to false , the suspension state of \\nall process instances of the process definitions with the given key will not be updated.'}, 'executionDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The date on which all process definitions with the given key will be activated or suspended.\\nIf null , the suspension state of all process definitions with the given key is updated immediately.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}}} Usage: cctl apply processDefinitionSuspensionStateById [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"processDefinitionSuspensionStateById"},{"location":"commands/full/#cctl-apply-processdefinitionsuspensionstatebykey","text":"Activate/Suspend by Id Activates or suspends a given process definition by latest version of process definition key which belongs to no tenant. URL: /process-definition/key/{key}/suspended Schema: {'type': 'object', 'properties': {'suspended': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend all process definitions with the given key.\\nWhen the value is set to true , all process definitions with the given key will be suspended and\\nwhen the value is set to false , all process definitions with the given key will be activated.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the process definitions to activate or suspend.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'The key of the process definitions to activate or suspend.'}, 'includeProcessInstances': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend also all process instances of \\nthe process definitions with the given key.\\nWhen the value is set to true , all process instances of the process definitions with the given key\\nwill be activated or suspended and when the value is set to false , the suspension state of \\nall process instances of the process definitions with the given key will not be updated.'}, 'executionDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The date on which all process definitions with the given key will be activated or suspended.\\nIf null , the suspension state of all process definitions with the given key is updated immediately.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}}} Usage: cctl apply processDefinitionSuspensionStateByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"processDefinitionSuspensionStateByKey"},{"location":"commands/full/#cctl-apply-processdefinitionsuspensionstatebykeyandtenantid","text":"Activate/Suspend by Id Activates or suspends a given process definition by the latest version of the process definition for tenant. URL: /process-definition/key/{key}/tenant-id/{tenant-id}/suspended Schema: {'type': 'object', 'properties': {'suspended': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend all process definitions with the given key.\\nWhen the value is set to true , all process definitions with the given key will be suspended and\\nwhen the value is set to false , all process definitions with the given key will be activated.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the process definitions to activate or suspend.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'The key of the process definitions to activate or suspend.'}, 'includeProcessInstances': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend also all process instances of \\nthe process definitions with the given key.\\nWhen the value is set to true , all process instances of the process definitions with the given key\\nwill be activated or suspended and when the value is set to false , the suspension state of \\nall process instances of the process definitions with the given key will not be updated.'}, 'executionDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The date on which all process definitions with the given key will be activated or suspended.\\nIf null , the suspension state of all process definitions with the given key is updated immediately.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}}} Usage: cctl apply processDefinitionSuspensionStateByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"processDefinitionSuspensionStateByKeyAndTenantId"},{"location":"commands/full/#cctl-apply-processinstancevariable","text":"Update Process Variable Sets a variable of a given process instance by id. URL: /process-instance/{id}/variables/{varName} Schema: {'type': 'object', 'properties': {'value': {'$ref': '#/components/schemas/AnyValue'}, 'type': {'type': 'string', 'nullable': True, 'description': 'The value type of the variable.'}, 'valueInfo': {'type': 'object', 'additionalProperties': True, 'description': \"A JSON object containing additional, value-type-dependent properties.\\nFor serialized variables of type Object, the following properties can be provided:\\n\\n* objectTypeName : A string representation of the object's type name.\\n* serializationDataFormat : The serialization format used to store the variable.\\n\\nFor serialized variables of type File, the following properties can be provided:\\n\\n* filename : The name of the file. This is not the variable name but the name that will be used when downloading the file again.\\n* mimetype : The MIME type of the file that is being uploaded.\\n* encoding : The encoding of the file that is being uploaded.\\n\\nThe following property can be provided for all value types:\\n\\n* transient : Indicates whether the variable should be transient or\\nnot. See [documentation](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables#transient-variables) for more informations.\\n(Not applicable for decision-definition , /process-instance/variables-async , and /migration/executeAsync endpoints)\"}}} Usage: cctl apply processInstanceVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"processInstanceVariable"},{"location":"commands/full/#cctl-apply-processinstancevariablebinary","text":"Update Process Variable (Binary) Sets the serialized value for a binary variable or the binary value for a file variable. URL: /process-instance/{id}/variables/{varName}/data Schema: - Usage: cctl apply processInstanceVariableBinary [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"processInstanceVariableBinary"},{"location":"commands/full/#cctl-apply-processinstancesasyncoperation","text":"Delete Async (POST) Deletes multiple process instances asynchronously (batch). URL: /process-instance/delete Schema: {'type': 'object', 'properties': {'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list process instance ids to delete.'}, 'deleteReason': {'type': 'string', 'nullable': True, 'description': 'A string with delete reason.'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started or ended as part of this request.'}, 'skipSubprocesses': {'type': 'boolean', 'nullable': True, 'description': 'Skip deletion of the subprocesses related to deleted processes as part of this request.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}}} Usage: cctl apply processInstancesAsyncOperation [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"processInstancesAsyncOperation"},{"location":"commands/full/#cctl-apply-profile","text":"Update User Profile Updates the profile information of an already existing user. URL: /user/{id}/profile Schema: {'type': 'object', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'The id of the user.'}, 'firstName': {'type': 'string', 'nullable': True, 'description': 'The first name of the user.'}, 'lastName': {'type': 'string', 'nullable': True, 'description': 'The first name of the user.'}, 'email': {'type': 'string', 'nullable': True, 'description': 'The email of the user.'}}} Usage: cctl apply profile [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"profile"},{"location":"commands/full/#cctl-apply-putlocalexecutionvariable","text":"Put Local Execution Variable Sets a variable in the context of a given execution by id. Update does not propagate upwards in the execution hierarchy. URL: /execution/{id}/localVariables/{varName} Schema: {'type': 'object', 'properties': {'value': {'$ref': '#/components/schemas/AnyValue'}, 'type': {'type': 'string', 'nullable': True, 'description': 'The value type of the variable.'}, 'valueInfo': {'type': 'object', 'additionalProperties': True, 'description': \"A JSON object containing additional, value-type-dependent properties.\\nFor serialized variables of type Object, the following properties can be provided:\\n\\n* objectTypeName : A string representation of the object's type name.\\n* serializationDataFormat : The serialization format used to store the variable.\\n\\nFor serialized variables of type File, the following properties can be provided:\\n\\n* filename : The name of the file. This is not the variable name but the name that will be used when downloading the file again.\\n* mimetype : The MIME type of the file that is being uploaded.\\n* encoding : The encoding of the file that is being uploaded.\\n\\nThe following property can be provided for all value types:\\n\\n* transient : Indicates whether the variable should be transient or\\nnot. See [documentation](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables#transient-variables) for more informations.\\n(Not applicable for decision-definition , /process-instance/variables-async , and /migration/executeAsync endpoints)\"}}} Usage: cctl apply putLocalExecutionVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"putLocalExecutionVariable"},{"location":"commands/full/#cctl-apply-puttasklocalvariable","text":"Update Local Task Variable Sets a variable in the context of a given task. URL: /task/{id}/localVariables/{varName} Schema: {'type': 'object', 'properties': {'value': {'$ref': '#/components/schemas/AnyValue'}, 'type': {'type': 'string', 'nullable': True, 'description': 'The value type of the variable.'}, 'valueInfo': {'type': 'object', 'additionalProperties': True, 'description': \"A JSON object containing additional, value-type-dependent properties.\\nFor serialized variables of type Object, the following properties can be provided:\\n\\n* objectTypeName : A string representation of the object's type name.\\n* serializationDataFormat : The serialization format used to store the variable.\\n\\nFor serialized variables of type File, the following properties can be provided:\\n\\n* filename : The name of the file. This is not the variable name but the name that will be used when downloading the file again.\\n* mimetype : The MIME type of the file that is being uploaded.\\n* encoding : The encoding of the file that is being uploaded.\\n\\nThe following property can be provided for all value types:\\n\\n* transient : Indicates whether the variable should be transient or\\nnot. See [documentation](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables#transient-variables) for more informations.\\n(Not applicable for decision-definition , /process-instance/variables-async , and /migration/executeAsync endpoints)\"}}} Usage: cctl apply putTaskLocalVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"putTaskLocalVariable"},{"location":"commands/full/#cctl-apply-puttaskvariable","text":"Update Task Variable Updates a process variable that is visible from the Task scope. A variable is visible from the task if it is a local task variable, or declared in a parent scope of the task. See the documentation on variable scopes and visibility . Note : If a variable doesn't exist, the variable is created in the top-most scope visible from the task. URL: /task/{id}/variables/{varName} Schema: {'type': 'object', 'properties': {'value': {'$ref': '#/components/schemas/AnyValue'}, 'type': {'type': 'string', 'nullable': True, 'description': 'The value type of the variable.'}, 'valueInfo': {'type': 'object', 'additionalProperties': True, 'description': \"A JSON object containing additional, value-type-dependent properties.\\nFor serialized variables of type Object, the following properties can be provided:\\n\\n* objectTypeName : A string representation of the object's type name.\\n* serializationDataFormat : The serialization format used to store the variable.\\n\\nFor serialized variables of type File, the following properties can be provided:\\n\\n* filename : The name of the file. This is not the variable name but the name that will be used when downloading the file again.\\n* mimetype : The MIME type of the file that is being uploaded.\\n* encoding : The encoding of the file that is being uploaded.\\n\\nThe following property can be provided for all value types:\\n\\n* transient : Indicates whether the variable should be transient or\\nnot. See [documentation](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables#transient-variables) for more informations.\\n(Not applicable for decision-definition , /process-instance/variables-async , and /migration/executeAsync endpoints)\"}}} Usage: cctl apply putTaskVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"putTaskVariable"},{"location":"commands/full/#cctl-apply-queryexecutions","text":"Get Executions (POST) Queries for executions that fulfill given parameters through a JSON object. This method is slightly more powerful than the Get Executions method because it allows to filter by multiple instance and execution variables of types String , Number or Boolean . URL: /execution Schema: {'type': 'object', 'description': 'A Execution instance query which defines a list of Execution instances', 'properties': {'businessKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the business key of the process instances the executions belong to.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process definition the executions run on.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the key of the process definition the executions run on.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the process instance the execution belongs to.'}, 'activityId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the activity the execution currently executes.'}, 'signalEventSubscriptionName': {'type': 'string', 'nullable': True, 'description': 'Select only those executions that expect a signal of the given name.'}, 'messageEventSubscriptionName': {'type': 'string', 'nullable': True, 'description': 'Select only those executions that expect a message of the given name.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active executions. Value may only be true , as false is the default\\nbehavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended executions. Value may only be true , as false is the default\\nbehavior.'}, 'incidentId': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident id.'}, 'incidentType': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident type. See the [User Guide](/manual/develop/user-guide/process-engine/incidents/#incident-types) for a list of incident types.'}, 'incidentMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message. Exact match.'}, 'incidentMessageLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message that the parameter is a substring of.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of tenant ids. An execution must have one of the given\\ntenant ids.'}, 'variables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'An array to only include executions that have variables with certain values.\\n\\nThe array consists of objects with the three properties name , operator \\nand value .\\n name (String) is the variable name, operator (String) is the comparison\\noperator to be used and value the variable value.\\n value may be String , Number or Boolean .\\n\\nValid operator values are: eq - equal to; neq - not equal to; gt -\\ngreater than;\\n gteq - greater than or equal to; lt - lower than; lteq - lower than or\\nequal to;\\n like .'}, 'processVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'An array to only include executions that belong to a process instance with variables\\nwith certain values.\\n\\nThe array consists of objects with the three properties name , operator \\nand value .\\n name (String) is the variable name, operator (String) is the comparison\\noperator to be used and value the variable value.\\n value may be String , Number or Boolean .\\n\\nValid operator values are: eq - equal to; neq - not equal to.'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable names provided in variables and processVariables case-\\ninsensitively. If set to true **variableName** and **variablename** are\\ntreated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable values provided in variables and processVariables case-\\ninsensitively. If set to true **variableValue** and **variablevalue** are\\ntreated as equal.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Has no effect for the /count endpoint', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'definitionKey', 'definitionId', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryExecutions [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryExecutions"},{"location":"commands/full/#cctl-apply-queryexecutionscount","text":"Get Execution Count (POST) Queries for the number of executions that fulfill given parameters. This method takes the same message body as the Get Executions POST method and therefore it is slightly more powerful than the Get Execution Count method. URL: /execution/count Schema: {'type': 'object', 'description': 'A Execution instance query which defines a list of Execution instances', 'properties': {'businessKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the business key of the process instances the executions belong to.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process definition the executions run on.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the key of the process definition the executions run on.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the process instance the execution belongs to.'}, 'activityId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the activity the execution currently executes.'}, 'signalEventSubscriptionName': {'type': 'string', 'nullable': True, 'description': 'Select only those executions that expect a signal of the given name.'}, 'messageEventSubscriptionName': {'type': 'string', 'nullable': True, 'description': 'Select only those executions that expect a message of the given name.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active executions. Value may only be true , as false is the default\\nbehavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended executions. Value may only be true , as false is the default\\nbehavior.'}, 'incidentId': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident id.'}, 'incidentType': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident type. See the [User Guide](/manual/develop/user-guide/process-engine/incidents/#incident-types) for a list of incident types.'}, 'incidentMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message. Exact match.'}, 'incidentMessageLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message that the parameter is a substring of.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of tenant ids. An execution must have one of the given\\ntenant ids.'}, 'variables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'An array to only include executions that have variables with certain values.\\n\\nThe array consists of objects with the three properties name , operator \\nand value .\\n name (String) is the variable name, operator (String) is the comparison\\noperator to be used and value the variable value.\\n value may be String , Number or Boolean .\\n\\nValid operator values are: eq - equal to; neq - not equal to; gt -\\ngreater than;\\n gteq - greater than or equal to; lt - lower than; lteq - lower than or\\nequal to;\\n like .'}, 'processVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'An array to only include executions that belong to a process instance with variables\\nwith certain values.\\n\\nThe array consists of objects with the three properties name , operator \\nand value .\\n name (String) is the variable name, operator (String) is the comparison\\noperator to be used and value the variable value.\\n value may be String , Number or Boolean .\\n\\nValid operator values are: eq - equal to; neq - not equal to.'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable names provided in variables and processVariables case-\\ninsensitively. If set to true **variableName** and **variablename** are\\ntreated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable values provided in variables and processVariables case-\\ninsensitively. If set to true **variableValue** and **variablevalue** are\\ntreated as equal.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Has no effect for the /count endpoint', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'definitionKey', 'definitionId', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryExecutionsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryExecutionsCount"},{"location":"commands/full/#cctl-apply-queryexternaltasks","text":"Get List (POST) Queries for external tasks that fulfill given parameters in the form of a JSON object. This method is slightly more powerful than the Get External Tasks method because it allows to specify a hierarchical result sorting. URL: /external-task Schema: {'title': 'ExternalTaskQueryDto', 'type': 'object', 'description': 'A JSON object with the following properties:', 'properties': {'externalTaskId': {'type': 'string', 'nullable': True, 'description': \"Filter by an external task's id.\"}, 'externalTaskIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by the comma-separated list of external task ids.'}, 'topicName': {'type': 'string', 'nullable': True, 'description': 'Filter by an external task topic.'}, 'workerId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the worker that the task was most recently locked by.'}, 'locked': {'type': 'boolean', 'nullable': True, 'description': 'Only include external tasks that are currently locked (i.e., they have a lock time and it has not expired).\\nValue may only be true , as false matches any external task.'}, 'notLocked': {'type': 'boolean', 'nullable': True, 'description': 'Only include external tasks that are currently not locked (i.e., they have no lock or it has expired).\\nValue may only be true , as false matches any external task.'}, 'withRetriesLeft': {'type': 'boolean', 'nullable': True, 'description': 'Only include external tasks that have a positive (&gt; 0) number of retries (or null ). Value may only be\\n true , as false matches any external task.'}, 'noRetriesLeft': {'type': 'boolean', 'nullable': True, 'description': 'Only include external tasks that have 0 retries. Value may only be true , as false matches any\\nexternal task.'}, 'lockExpirationAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to external tasks that have a lock that expires after a given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'lockExpirationBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to external tasks that have a lock that expires before a given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'activityId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the activity that an external task is created for.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by the comma-separated list of ids of the activities that an external task is created for.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the execution that an external task belongs to.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the process instance that an external task belongs to.'}, 'processInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a comma-separated list of process instance ids that an external task may belong to.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the process definition that an external task belongs to.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a comma-separated list of tenant ids.\\nAn external task must have one of the given tenant ids.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active tasks. Value may only be true , as false matches any external task.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended tasks. Value may only be true , as false matches any external task.'}, 'priorityHigherThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include jobs with a priority higher than or equal to the given value.\\nValue must be a valid long value.'}, 'priorityLowerThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include jobs with a priority lower than or equal to the given value.\\nValue must be a valid long value.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'A JSON array of criteria to sort the result by. Each element of the array is a JSON object that\\n specifies one ordering. The position in the array identifies the rank of an ordering, i.e., whether\\n it is primary, secondary, etc. The ordering objects have the following properties:\\n\\n **Note:** The sorting properties will not be applied to the External Task count query.', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['id', 'lockExpirationTime', 'processInstanceId', 'processDefinitionId', 'processDefinitionKey', 'taskPriority', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryExternalTasks [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryExternalTasks"},{"location":"commands/full/#cctl-apply-queryexternaltaskscount","text":"Get List Count (POST) Queries for the number of external tasks that fulfill given parameters. This method takes the same message body as the Get External Tasks (POST) method. URL: /external-task/count Schema: {'title': 'ExternalTaskQueryDto', 'type': 'object', 'description': 'A JSON object with the following properties:', 'properties': {'externalTaskId': {'type': 'string', 'nullable': True, 'description': \"Filter by an external task's id.\"}, 'externalTaskIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by the comma-separated list of external task ids.'}, 'topicName': {'type': 'string', 'nullable': True, 'description': 'Filter by an external task topic.'}, 'workerId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the worker that the task was most recently locked by.'}, 'locked': {'type': 'boolean', 'nullable': True, 'description': 'Only include external tasks that are currently locked (i.e., they have a lock time and it has not expired).\\nValue may only be true , as false matches any external task.'}, 'notLocked': {'type': 'boolean', 'nullable': True, 'description': 'Only include external tasks that are currently not locked (i.e., they have no lock or it has expired).\\nValue may only be true , as false matches any external task.'}, 'withRetriesLeft': {'type': 'boolean', 'nullable': True, 'description': 'Only include external tasks that have a positive (&gt; 0) number of retries (or null ). Value may only be\\n true , as false matches any external task.'}, 'noRetriesLeft': {'type': 'boolean', 'nullable': True, 'description': 'Only include external tasks that have 0 retries. Value may only be true , as false matches any\\nexternal task.'}, 'lockExpirationAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to external tasks that have a lock that expires after a given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'lockExpirationBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to external tasks that have a lock that expires before a given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'activityId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the activity that an external task is created for.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by the comma-separated list of ids of the activities that an external task is created for.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the execution that an external task belongs to.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the process instance that an external task belongs to.'}, 'processInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a comma-separated list of process instance ids that an external task may belong to.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the process definition that an external task belongs to.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a comma-separated list of tenant ids.\\nAn external task must have one of the given tenant ids.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active tasks. Value may only be true , as false matches any external task.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended tasks. Value may only be true , as false matches any external task.'}, 'priorityHigherThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include jobs with a priority higher than or equal to the given value.\\nValue must be a valid long value.'}, 'priorityLowerThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include jobs with a priority lower than or equal to the given value.\\nValue must be a valid long value.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'A JSON array of criteria to sort the result by. Each element of the array is a JSON object that\\n specifies one ordering. The position in the array identifies the rank of an ordering, i.e., whether\\n it is primary, secondary, etc. The ordering objects have the following properties:\\n\\n **Note:** The sorting properties will not be applied to the External Task count query.', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['id', 'lockExpirationTime', 'processInstanceId', 'processDefinitionId', 'processDefinitionKey', 'taskPriority', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryExternalTasksCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryExternalTasksCount"},{"location":"commands/full/#cctl-apply-querygroupcount","text":"Get List Count (POST) Queries for groups using a list of parameters and retrieves the count. URL: /group/count Schema: {'type': 'object', 'description': 'A group instance query which defines a list of group instances', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the group.'}, 'idIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a JSON string array of group ids.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'Filter by the name of the group.'}, 'nameLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the name that the parameter is a substring of.'}, 'type': {'type': 'string', 'nullable': True, 'description': 'Filter by the type of the group.'}, 'member': {'type': 'string', 'nullable': True, 'description': 'Only retrieve groups where the given user id is a member of.'}, 'memberOfTenant': {'type': 'string', 'nullable': True, 'description': 'Only retrieve groups which are members of the given tenant.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['id', 'name', 'type'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryGroupCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryGroupCount"},{"location":"commands/full/#cctl-apply-queryhistoricactivityinstances","text":"Get List (POST) Queries for historic activity instances that fulfill the given parameters. The size of the result set can be retrieved by using the Get Historic Activity Instance Count method. URL: /history/activity-instance Schema: {'type': 'object', 'description': 'A historic activity instance query which defines a group of historic activity instances', 'properties': {'activityInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by activity instance id.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition id.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the execution that executed the activity instance.'}, 'activityId': {'type': 'string', 'nullable': True, 'description': 'Filter by the activity id (according to BPMN 2.0 XML).'}, 'activityName': {'type': 'string', 'nullable': True, 'description': 'Filter by the activity name (according to BPMN 2.0 XML).'}, 'activityType': {'type': 'string', 'nullable': True, 'description': 'Filter by activity type.'}, 'taskAssignee': {'type': 'string', 'nullable': True, 'description': 'Only include activity instances that are user tasks and assigned to a given user.'}, 'finished': {'type': 'boolean', 'nullable': True, 'description': 'Only include finished activity instances.\\nValue may only be true , as false behaves the same as when the property is not set.'}, 'unfinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include unfinished activity instances.\\nValue may only be true , as false behaves the same as when the property is not set.'}, 'canceled': {'type': 'boolean', 'nullable': True, 'description': 'Only include canceled activity instances.\\nValue may only be true , as false behaves the same as when the property is not set.'}, 'completeScope': {'type': 'boolean', 'nullable': True, 'description': 'Only include activity instances which completed a scope.\\nValue may only be true , as false behaves the same as when the property is not set.'}, 'startedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were started before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were started after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were finished before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were finished after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Must be a JSON array of Strings. An activity instance must have one of the given tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic activity instances that belong to no tenant. Value may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['activityInstanceId', 'instanceId', 'executionId', 'activityId', 'activityName', 'activityType', 'startTime', 'endTime', 'duration', 'definitionId', 'occurrence', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryHistoricActivityInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryHistoricActivityInstances"},{"location":"commands/full/#cctl-apply-queryhistoricactivityinstancescount","text":"Get List Count (POST) Queries for the number of historic activity instances that fulfill the given parameters. URL: /history/activity-instance/count Schema: {'type': 'object', 'description': 'A historic activity instance query which defines a group of historic activity instances', 'properties': {'activityInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by activity instance id.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition id.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the execution that executed the activity instance.'}, 'activityId': {'type': 'string', 'nullable': True, 'description': 'Filter by the activity id (according to BPMN 2.0 XML).'}, 'activityName': {'type': 'string', 'nullable': True, 'description': 'Filter by the activity name (according to BPMN 2.0 XML).'}, 'activityType': {'type': 'string', 'nullable': True, 'description': 'Filter by activity type.'}, 'taskAssignee': {'type': 'string', 'nullable': True, 'description': 'Only include activity instances that are user tasks and assigned to a given user.'}, 'finished': {'type': 'boolean', 'nullable': True, 'description': 'Only include finished activity instances.\\nValue may only be true , as false behaves the same as when the property is not set.'}, 'unfinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include unfinished activity instances.\\nValue may only be true , as false behaves the same as when the property is not set.'}, 'canceled': {'type': 'boolean', 'nullable': True, 'description': 'Only include canceled activity instances.\\nValue may only be true , as false behaves the same as when the property is not set.'}, 'completeScope': {'type': 'boolean', 'nullable': True, 'description': 'Only include activity instances which completed a scope.\\nValue may only be true , as false behaves the same as when the property is not set.'}, 'startedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were started before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were started after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were finished before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were finished after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Must be a JSON array of Strings. An activity instance must have one of the given tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic activity instances that belong to no tenant. Value may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['activityInstanceId', 'instanceId', 'executionId', 'activityId', 'activityName', 'activityType', 'startTime', 'endTime', 'duration', 'definitionId', 'occurrence', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryHistoricActivityInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryHistoricActivityInstancesCount"},{"location":"commands/full/#cctl-apply-queryhistoricdetails","text":"Get Historic Details (POST) Queries for historic details that fulfill the given parameters. This method is slightly more powerful than the Get Historic Details method because it allows sorting by multiple parameters. The size of the result set can be retrieved by using the Get Historic Detail Count method. URL: /history/detail Schema: {'type': 'object', 'description': 'A historic detail query which defines a group of historic details.', 'properties': {'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic details which belong to one of the passed process instance ids.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Filter by execution id.'}, 'taskId': {'type': 'string', 'nullable': True, 'description': 'Filter by task id.'}, 'activityInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by activity instance id.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by case instance id.'}, 'caseExecutionId': {'type': 'string', 'nullable': True, 'description': 'Filter by case execution id.'}, 'variableInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by variable instance id.'}, 'variableTypeIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic details where the variable updates belong to one of the passed \\nlist of variable types. A list of all supported variable types can be found\\n[here](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#supported-variable-values).\\n**Note:** All non-primitive variables are associated with the type serializable .'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic details that belong to no tenant. Value may only be\\n true , as false is the default behavior.'}, 'userOperationId': {'type': 'string', 'nullable': True, 'description': 'Filter by a user operation id.'}, 'formFields': {'type': 'boolean', 'nullable': True, 'description': 'Only include HistoricFormFields . Value may only be true , as false is the default behavior.'}, 'variableUpdates': {'type': 'boolean', 'nullable': True, 'description': 'Only include HistoricVariableUpdates . Value may only be true , as false is the default behavior.'}, 'excludeTaskDetails': {'type': 'boolean', 'nullable': True, 'description': 'Excludes all task-related HistoricDetails , so only items which have no task id set will be selected.\\nWhen this parameter is used together with taskId , this call is ignored and task details are not excluded.\\nValue may only be true , as false is the default behavior.'}, 'initial': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to historic variable updates that contain only initial variable values.\\nValue may only be true , as false is the default behavior.'}, 'occurredBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to historic details that occured before the given date (including the date).\\nDefault [format](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200.\"}, 'occurredAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to historic details that occured after the given date (including the date).\\nDefault [format](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200.\"}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'A JSON array of criteria to sort the result by. Each element of the array is\\n a JSON object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Does not have an effect for the count endpoint.', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['processInstanceId', 'variableName', 'variableType', 'variableRevision', 'formPropertyId', 'time', 'occurrence', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryHistoricDetails [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --max-results | text | Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. | None | | --first-result | text | Pagination of results. Specifies the index of the first result to return. | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -o , --output | choice ( template ) | N/A | template | | --skip-validation | boolean | ignore validation | False | | -f , --file | filename | input as yaml | None | | --help | boolean | Show this message and exit. | False |","title":"queryHistoricDetails"},{"location":"commands/full/#cctl-apply-queryhistoricexternaltasklogs","text":"Get External Task Logs (POST) Queries for historic external task logs that fulfill the given parameters. This method is slightly more powerful than the Get External Task Logs method because it allows filtering by historic external task logs values of the different types String , Number or Boolean . URL: /history/external-task-log Schema: {'type': 'object', 'description': 'A Historic External Task Log instance query which defines a list of Historic External Task Log instances', 'properties': {'logId': {'type': 'string', 'nullable': True, 'description': 'Filter by historic external task log id.'}, 'externalTaskId': {'type': 'string', 'nullable': True, 'description': 'Filter by external task id.'}, 'topicName': {'type': 'string', 'nullable': True, 'description': 'Filter by an external task topic.'}, 'workerId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the worker that the task was most recently locked by.'}, 'errorMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by external task exception message.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic external task logs which belong to one of the passed activity ids.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic external task logs which belong to one of the passed activity\\ninstance ids.'}, 'executionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic external task logs which belong to one of the passed execution ids.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition key.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic external task log entries which belong to one of the passed and\\ncomma-separated tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic external task log entries that belong to no tenant. Value may only\\nbe true , as false is the default behavior.'}, 'priorityLowerThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include logs for which the associated external task had a priority lower than or\\nequal to the given value. Value must be a valid long value.'}, 'priorityHigherThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include logs for which the associated external task had a priority higher than or\\nequal to the given value. Value must be a valid long value.'}, 'creationLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include creation logs. Value may only be true , as false is the default behavior.'}, 'failureLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include failure logs. Value may only be true , as false is the default behavior.'}, 'successLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include success logs. Value may only be true , as false is the default behavior.'}, 'deletionLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include deletion logs. Value may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints.', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['timestamp', 'externalTaskId', 'topicName', 'workerId', 'retries', 'priority', 'activityId', 'activityInstanceId', 'executionId', 'processInstanceId', 'processDefinitionId', 'processDefinitionKey', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryHistoricExternalTaskLogs [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryHistoricExternalTaskLogs"},{"location":"commands/full/#cctl-apply-queryhistoricexternaltasklogscount","text":"Get External Task Log Count (POST) Queries for the number of historic external task logs that fulfill the given parameters. This method takes the same message body as the Get External Task Logs (POST) method and therefore it is slightly more powerful than the Get External Task Log Count method. URL: /history/external-task-log/count Schema: {'type': 'object', 'description': 'A Historic External Task Log instance query which defines a list of Historic External Task Log instances', 'properties': {'logId': {'type': 'string', 'nullable': True, 'description': 'Filter by historic external task log id.'}, 'externalTaskId': {'type': 'string', 'nullable': True, 'description': 'Filter by external task id.'}, 'topicName': {'type': 'string', 'nullable': True, 'description': 'Filter by an external task topic.'}, 'workerId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the worker that the task was most recently locked by.'}, 'errorMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by external task exception message.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic external task logs which belong to one of the passed activity ids.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic external task logs which belong to one of the passed activity\\ninstance ids.'}, 'executionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic external task logs which belong to one of the passed execution ids.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition key.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic external task log entries which belong to one of the passed and\\ncomma-separated tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic external task log entries that belong to no tenant. Value may only\\nbe true , as false is the default behavior.'}, 'priorityLowerThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include logs for which the associated external task had a priority lower than or\\nequal to the given value. Value must be a valid long value.'}, 'priorityHigherThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include logs for which the associated external task had a priority higher than or\\nequal to the given value. Value must be a valid long value.'}, 'creationLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include creation logs. Value may only be true , as false is the default behavior.'}, 'failureLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include failure logs. Value may only be true , as false is the default behavior.'}, 'successLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include success logs. Value may only be true , as false is the default behavior.'}, 'deletionLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include deletion logs. Value may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints.', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['timestamp', 'externalTaskId', 'topicName', 'workerId', 'retries', 'priority', 'activityId', 'activityInstanceId', 'executionId', 'processInstanceId', 'processDefinitionId', 'processDefinitionKey', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryHistoricExternalTaskLogsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryHistoricExternalTaskLogsCount"},{"location":"commands/full/#cctl-apply-queryhistoricjoblogs","text":"Get Job Logs (POST) Queries for historic job logs that fulfill the given parameters. This method is slightly more powerful than the Get Job Logs method because it allows filtering by historic job logs values of the different types String , Number or Boolean . URL: /history/job-log Schema: {'type': 'object', 'description': 'A Historic Job Log instance query which defines a list of Historic Job Log instances', 'properties': {'logId': {'type': 'string', 'nullable': True, 'description': 'Filter by historic job log id.'}, 'jobId': {'type': 'string', 'nullable': True, 'description': 'Filter by job id.'}, 'jobExceptionMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by job exception message.'}, 'jobDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by job definition id.'}, 'jobDefinitionType': {'type': 'string', 'nullable': True, 'description': 'Filter by job definition type. See the\\n[User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/the-job-executor/#job-creation)\\nfor more information about job definition types.'}, 'jobDefinitionConfiguration': {'type': 'string', 'nullable': True, 'description': 'Filter by job definition configuration.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic job logs which belong to one of the passed activity ids.'}, 'failedActivityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic job logs which belong to failures of one of the passed activity ids.'}, 'executionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic job logs which belong to one of the passed execution ids.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition key.'}, 'deploymentId': {'type': 'string', 'nullable': True, 'description': 'Filter by deployment id.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic job log entries which belong to one of the passed and comma-\\nseparated tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic job log entries that belong to no tenant. Value may only be\\n true , as false is the default behavior.'}, 'hostname': {'type': 'string', 'nullable': True, 'description': 'Filter by hostname.'}, 'jobPriorityLowerThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include logs for which the associated job had a priority lower than or equal to the\\ngiven value. Value must be a valid long value.'}, 'jobPriorityHigherThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include logs for which the associated job had a priority higher than or equal to the\\ngiven value. Value must be a valid long value.'}, 'creationLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include creation logs. Value may only be true , as false is the default behavior.'}, 'failureLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include failure logs. Value may only be true , as false is the default behavior.'}, 'successLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include success logs. Value may only be true , as false is the default behavior.'}, 'deletionLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include deletion logs. Value may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['timestamp', 'jobId', 'jobDefinitionId', 'jobDueDate', 'jobRetries', 'jobPriority', 'activityId', 'executionId', 'processInstanceId', 'processDefinitionId', 'processDefinitionKey', 'deploymentId', 'hostname', 'occurrence', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryHistoricJobLogs [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryHistoricJobLogs"},{"location":"commands/full/#cctl-apply-queryhistoricjoblogscount","text":"Get Job Log Count (POST) Queries for the number of historic job logs that fulfill the given parameters. This method takes the same message body as the Get Job Logs (POST) method and therefore it is slightly more powerful than the Get Job Log Count method. URL: /history/job-log/count Schema: {'type': 'object', 'description': 'A Historic Job Log instance query which defines a list of Historic Job Log instances', 'properties': {'logId': {'type': 'string', 'nullable': True, 'description': 'Filter by historic job log id.'}, 'jobId': {'type': 'string', 'nullable': True, 'description': 'Filter by job id.'}, 'jobExceptionMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by job exception message.'}, 'jobDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by job definition id.'}, 'jobDefinitionType': {'type': 'string', 'nullable': True, 'description': 'Filter by job definition type. See the\\n[User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/the-job-executor/#job-creation)\\nfor more information about job definition types.'}, 'jobDefinitionConfiguration': {'type': 'string', 'nullable': True, 'description': 'Filter by job definition configuration.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic job logs which belong to one of the passed activity ids.'}, 'failedActivityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic job logs which belong to failures of one of the passed activity ids.'}, 'executionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic job logs which belong to one of the passed execution ids.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition key.'}, 'deploymentId': {'type': 'string', 'nullable': True, 'description': 'Filter by deployment id.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic job log entries which belong to one of the passed and comma-\\nseparated tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic job log entries that belong to no tenant. Value may only be\\n true , as false is the default behavior.'}, 'hostname': {'type': 'string', 'nullable': True, 'description': 'Filter by hostname.'}, 'jobPriorityLowerThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include logs for which the associated job had a priority lower than or equal to the\\ngiven value. Value must be a valid long value.'}, 'jobPriorityHigherThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include logs for which the associated job had a priority higher than or equal to the\\ngiven value. Value must be a valid long value.'}, 'creationLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include creation logs. Value may only be true , as false is the default behavior.'}, 'failureLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include failure logs. Value may only be true , as false is the default behavior.'}, 'successLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include success logs. Value may only be true , as false is the default behavior.'}, 'deletionLog': {'type': 'boolean', 'nullable': True, 'description': 'Only include deletion logs. Value may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['timestamp', 'jobId', 'jobDefinitionId', 'jobDueDate', 'jobRetries', 'jobPriority', 'activityId', 'executionId', 'processInstanceId', 'processDefinitionId', 'processDefinitionKey', 'deploymentId', 'hostname', 'occurrence', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryHistoricJobLogsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryHistoricJobLogsCount"},{"location":"commands/full/#cctl-apply-queryhistoricprocessinstances","text":"Get List (POST) Queries for historic process instances that fulfill the given parameters. This method is slightly more powerful than the Get Process Instance because it allows filtering by multiple process variables of types String , Number or Boolean . URL: /history/process-instance Schema: {'type': 'object', 'description': 'A historic process instance query which defines a group of historic process instances', 'properties': {'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by process instance ids. Must be a JSON array of Strings .'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process definition the instances run on.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the key of the process definition the instances run on.'}, 'processDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of process definition keys. A process instance must have one of the given process definition keys. Must be a JSON array of Strings .'}, 'processDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Filter by the name of the process definition the instances run on.'}, 'processDefinitionNameLike': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition names that the parameter is a substring of.'}, 'processDefinitionKeyNotIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Exclude instances that belong to a set of process definitions. Must be a JSON array of Strings .'}, 'processInstanceBusinessKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key.'}, 'processInstanceBusinessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key that the parameter is a substring of.'}, 'rootProcessInstances': {'type': 'boolean', 'nullable': True, 'description': 'Restrict the query to all process instances that are top level process instances.'}, 'finished': {'type': 'boolean', 'nullable': True, 'description': 'Only include finished process instances. This flag includes all process instances\\nthat are completed or terminated. Value may only be true , as false is the default behavior.'}, 'unfinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include unfinished process instances. Value may only be true , as false is the default behavior.'}, 'withIncidents': {'type': 'boolean', 'nullable': True, 'description': 'Only include process instances which have an incident. Value may only be true , as false is the default behavior.'}, 'withRootIncidents': {'type': 'boolean', 'nullable': True, 'description': 'Only include process instances which have a root incident. Value may only be true , as false is the default behavior.'}, 'incidentType': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident type. See the [User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/incidents/#incident-types) for a list of incident types.'}, 'incidentStatus': {'type': 'string', 'nullable': True, 'enum': ['open', 'resolved'], 'description': 'Only include process instances which have an incident in status either open or resolved. To get all process instances, use the query parameter withIncidents.'}, 'incidentMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message. Exact match.'}, 'incidentMessageLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message that the parameter is a substring of.'}, 'startedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were started before the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were started after the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were finished before the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were finished after the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'executedActivityAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that executed an activity after the given date (inclusive).\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'executedActivityBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that executed an activity before the given date (inclusive).\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'executedJobAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that executed an job after the given date (inclusive).\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'executedJobBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that executed an job before the given date (inclusive).\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedBy': {'type': 'string', 'nullable': True, 'description': 'Only include process instances that were started by the given user.'}, 'superProcessInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given process instance. Takes a process instance id.'}, 'subProcessInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to one process instance that has a sub process instance with the given id.'}, 'superCaseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id.'}, 'subCaseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to one process instance that has a sub case instance with the given id.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of tenant ids. A process instance must have one of the given tenant ids. Must be a JSON array of Strings '}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic process instances which belong to no tenant. Value may only be true , as false is the default behavior.'}, 'executedActivityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to instances that executed an activity with one of given ids. Must be a JSON array of Strings '}, 'activeActivityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to instances that have an active activity with one of given ids. Must be a JSON array of Strings '}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are active.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are suspended.'}, 'completed': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are completed.'}, 'externallyTerminated': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are externallyTerminated.'}, 'internallyTerminated': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are internallyTerminated.'}, 'variables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include process instances that have/had variables with certain values.\\nThe array consists of objects with the three properties name , operator and value . name ( String ) is the variable name,\\n operator ( String ) is the comparison operator to be used and value the variable value.\\n\\nValue may be String , Number or Boolean .\\n\\nValid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like .\\n'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable names provided in variables case-insensitively. If set to true variableName and variablename are treated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable values provided in variables case-insensitively. If set to true variableValue and variablevalue are treated as equal.'}, 'orQueries': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}, 'description': \"A JSON array of nested historic process instance queries with OR semantics.\\n\\nA process instance matches a nested query if it fulfills at least one of the query's predicates.\\n\\nWith multiple nested queries, a process instance must fulfill at least one predicate of each query\\n([Conjunctive Normal Form](https://en.wikipedia.org/wiki/Conjunctive_normal_form)).\\n\\nAll process instance query properties can be used except for: sorting \\n\\nSee the [User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/process-engine-api/#or-queries) for more information about OR queries.\"}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'definitionId', 'definitionKey', 'definitionName', 'definitionVersion', 'businessKey', 'startTime', 'endTime', 'duration', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryHistoricProcessInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryHistoricProcessInstances"},{"location":"commands/full/#cctl-apply-queryhistoricprocessinstancescount","text":"Get List Count (POST) Queries for the number of historic process instances that fulfill the given parameters. This method takes the same message body as the Get Process Instances (POST) method and therefore it is slightly more powerful than the Get Process Instance Count method. URL: /history/process-instance/count Schema: {'type': 'object', 'description': 'A historic process instance query which defines a group of historic process instances', 'properties': {'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by process instance ids. Must be a JSON array of Strings .'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process definition the instances run on.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the key of the process definition the instances run on.'}, 'processDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of process definition keys. A process instance must have one of the given process definition keys. Must be a JSON array of Strings .'}, 'processDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Filter by the name of the process definition the instances run on.'}, 'processDefinitionNameLike': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition names that the parameter is a substring of.'}, 'processDefinitionKeyNotIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Exclude instances that belong to a set of process definitions. Must be a JSON array of Strings .'}, 'processInstanceBusinessKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key.'}, 'processInstanceBusinessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key that the parameter is a substring of.'}, 'rootProcessInstances': {'type': 'boolean', 'nullable': True, 'description': 'Restrict the query to all process instances that are top level process instances.'}, 'finished': {'type': 'boolean', 'nullable': True, 'description': 'Only include finished process instances. This flag includes all process instances\\nthat are completed or terminated. Value may only be true , as false is the default behavior.'}, 'unfinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include unfinished process instances. Value may only be true , as false is the default behavior.'}, 'withIncidents': {'type': 'boolean', 'nullable': True, 'description': 'Only include process instances which have an incident. Value may only be true , as false is the default behavior.'}, 'withRootIncidents': {'type': 'boolean', 'nullable': True, 'description': 'Only include process instances which have a root incident. Value may only be true , as false is the default behavior.'}, 'incidentType': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident type. See the [User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/incidents/#incident-types) for a list of incident types.'}, 'incidentStatus': {'type': 'string', 'nullable': True, 'enum': ['open', 'resolved'], 'description': 'Only include process instances which have an incident in status either open or resolved. To get all process instances, use the query parameter withIncidents.'}, 'incidentMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message. Exact match.'}, 'incidentMessageLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message that the parameter is a substring of.'}, 'startedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were started before the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were started after the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were finished before the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that were finished after the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'executedActivityAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that executed an activity after the given date (inclusive).\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'executedActivityBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that executed an activity before the given date (inclusive).\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'executedJobAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that executed an job after the given date (inclusive).\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'executedJobBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to instances that executed an job before the given date (inclusive).\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedBy': {'type': 'string', 'nullable': True, 'description': 'Only include process instances that were started by the given user.'}, 'superProcessInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given process instance. Takes a process instance id.'}, 'subProcessInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to one process instance that has a sub process instance with the given id.'}, 'superCaseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id.'}, 'subCaseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to one process instance that has a sub case instance with the given id.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of tenant ids. A process instance must have one of the given tenant ids. Must be a JSON array of Strings '}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic process instances which belong to no tenant. Value may only be true , as false is the default behavior.'}, 'executedActivityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to instances that executed an activity with one of given ids. Must be a JSON array of Strings '}, 'activeActivityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to instances that have an active activity with one of given ids. Must be a JSON array of Strings '}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are active.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are suspended.'}, 'completed': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are completed.'}, 'externallyTerminated': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are externallyTerminated.'}, 'internallyTerminated': {'type': 'boolean', 'nullable': True, 'description': 'Restrict to instances that are internallyTerminated.'}, 'variables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include process instances that have/had variables with certain values.\\nThe array consists of objects with the three properties name , operator and value . name ( String ) is the variable name,\\n operator ( String ) is the comparison operator to be used and value the variable value.\\n\\nValue may be String , Number or Boolean .\\n\\nValid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like .\\n'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable names provided in variables case-insensitively. If set to true variableName and variablename are treated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable values provided in variables case-insensitively. If set to true variableValue and variablevalue are treated as equal.'}, 'orQueries': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}, 'description': \"A JSON array of nested historic process instance queries with OR semantics.\\n\\nA process instance matches a nested query if it fulfills at least one of the query's predicates.\\n\\nWith multiple nested queries, a process instance must fulfill at least one predicate of each query\\n([Conjunctive Normal Form](https://en.wikipedia.org/wiki/Conjunctive_normal_form)).\\n\\nAll process instance query properties can be used except for: sorting \\n\\nSee the [User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/process-engine-api/#or-queries) for more information about OR queries.\"}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'definitionId', 'definitionKey', 'definitionName', 'definitionVersion', 'businessKey', 'startTime', 'endTime', 'duration', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryHistoricProcessInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryHistoricProcessInstancesCount"},{"location":"commands/full/#cctl-apply-queryhistorictaskinstances","text":"Get Tasks (Historic) (POST) Queries for historic tasks that fulfill the given parameters. This method is slightly more powerful than the Get Tasks (Historic) method because it allows filtering by multiple process or task variables of types String , Number or Boolean . The size of the result set can be retrieved by using the Get Task Count (POST) method. URL: /history/task Schema: {'type': 'object', 'description': 'A Historic Task instance query which defines a list of Historic Task instances', 'properties': {'taskId': {'type': 'string', 'nullable': True, 'description': 'Filter by task id.'}, 'taskParentTaskId': {'type': 'string', 'nullable': True, 'description': 'Filter by parent task id.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processInstanceBusinessKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key.'}, 'processInstanceBusinessKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by process instances with one of the give business keys.\\nThe keys need to be in a comma-separated list.'}, 'processInstanceBusinessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key that has the parameter value as a substring.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the execution that executed the task.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given key.'}, 'processDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given name.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by case instance id.'}, 'caseExecutionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the case execution that executed the task.'}, 'caseDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by case definition id.'}, 'caseDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given key.'}, 'caseDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given name.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which belong to one of the passed activity instance ids.'}, 'taskName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given name.'}, 'taskNameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a name with the given parameter value as substring.'}, 'taskDescription': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given description.'}, 'taskDescriptionLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a description that has the parameter value as a substring.'}, 'taskDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given key.'}, 'taskDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that have one of the passed task definition keys.'}, 'taskDeleteReason': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given delete reason.'}, 'taskDeleteReasonLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a delete reason that has the parameter value as a substring.'}, 'taskAssignee': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the given user is assigned to.'}, 'taskAssigneeLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are assigned to users with the parameter value as a substring.'}, 'taskOwner': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the given user owns.'}, 'taskOwnerLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are owned by users with the parameter value as a substring.'}, 'taskPriority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'Restrict to tasks that have the given priority.'}, 'assigned': {'type': 'boolean', 'nullable': True, 'description': 'If set to true , restricts the query to all tasks that are assigned.'}, 'unassigned': {'type': 'boolean', 'nullable': True, 'description': 'If set to true , restricts the query to all tasks that are unassigned.'}, 'finished': {'type': 'boolean', 'nullable': True, 'description': 'Only include finished tasks. Value may only be true , as false is the default behavior.'}, 'unfinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include unfinished tasks. Value may only be true , as false is the default\\nbehavior.'}, 'processFinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks of finished processes. Value may only be true , as false is the\\ndefault behavior.'}, 'processUnfinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks of unfinished processes. Value may only be true , as false is the\\ndefault behavior.'}, 'taskDueDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due on the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'taskDueDateBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'taskDueDateAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'withoutTaskDueDate': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks which have no due date. Value may only be true , as false is the\\ndefault behavior.'}, 'taskFollowUpDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date on the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'taskFollowUpDateBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'taskFollowUpDateAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were started before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were started after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were finished before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were finished after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of tenant ids. A task instance must have one of the given\\ntenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic task instances that belong to no tenant. Value may only be\\n true , as false is the default behavior.'}, 'taskVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'Only include tasks that have variables with certain values. Variable filtering expressions are\\ncomma-separated and are structured as follows:\\n\\nA valid parameter value has the form key_operator_value .\\n key is the variable name, operator is the comparison operator to be used\\nand value the variable value.\\n**Note:** Values are always treated as String objects on server side.\\n\\n\\nValid operator values are:\\n* eq - equal to;\\n* neq - not equal to;\\n* gt - greater than;\\n* gteq - greater than or equal to;\\n* lt - lower than;\\n* lteq - lower than or equal to;\\n* like .\\n\\n key and value may not contain underscore or comma characters.'}, 'processVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'Only include tasks that belong to process instances that have variables with certain\\nvalues. Variable filtering expressions are comma-separated and are structured as\\nfollows:\\n\\nA valid parameter value has the form key_operator_value .\\n key is the variable name, operator is the comparison operator to be used\\nand value the variable value.\\n**Note:** Values are always treated as String objects on server side.\\n\\n\\nValid operator values are:\\n* eq - equal to;\\n* neq - not equal to;\\n* gt - greater than;\\n* gteq - greater than or equal to;\\n* lt - lower than;\\n* lteq - lower than or equal to;\\n* like ;\\n* notLike .\\n\\n key and value may not contain underscore or comma characters.'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match the variable name provided in taskVariables and processVariables case-\\ninsensitively. If set to true **variableName** and **variablename** are\\ntreated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match the variable value provided in taskVariables and processVariables case-\\ninsensitively. If set to true **variableValue** and **variablevalue** are\\ntreated as equal.'}, 'taskInvolvedUser': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks with a historic identity link to the given user.'}, 'taskInvolvedGroup': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks with a historic identity link to the given group.'}, 'taskHadCandidateUser': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks with a historic identity link to the given candidate user.'}, 'taskHadCandidateGroup': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks with a historic identity link to the given candidate group.'}, 'withCandidateGroups': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks which have a candidate group. Value may only be true ,\\nas false is the default behavior.'}, 'withoutCandidateGroups': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks which have no candidate group. Value may only be true ,\\nas false is the default behavior.'}, 'orQueries': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/HistoricTaskInstanceQueryDto'}, 'description': \"A JSON array of nested historic task instance queries with OR semantics.\\n\\nA task instance matches a nested query if it fulfills at least one of the query's predicates.\\n\\nWith multiple nested queries, a task instance must fulfill at least one predicate of each query\\n([Conjunctive Normal Form](https://en.wikipedia.org/wiki/Conjunctive_normal_form)).\\n\\nAll task instance query properties can be used except for: sorting , withCandidateGroups , withoutCandidateGroups .\\n\\nSee the [User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/process-engine-api/#or-queries) for more information about OR queries.\"}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['taskId', 'activityInstanceId', 'processDefinitionId', 'processInstanceId', 'executionId', 'duration', 'endTime', 'startTime', 'taskName', 'taskDescription', 'assignee', 'owner', 'dueDate', 'followUpDate', 'deleteReason', 'taskDefinitionKey', 'priority', 'caseDefinitionId', 'caseInstanceId', 'caseExecutionId', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryHistoricTaskInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryHistoricTaskInstances"},{"location":"commands/full/#cctl-apply-queryhistorictaskinstancescount","text":"Get Task Count (POST) Queries for the number of historic tasks that fulfill the given parameters. Takes the same parameters as the Get Tasks (Historic) method. Corresponds to the size of the result set of the Get Tasks (Historic) (POST) method and takes the same parameters. URL: /history/task/count Schema: {'type': 'object', 'description': 'A Historic Task instance query which defines a list of Historic Task instances', 'properties': {'taskId': {'type': 'string', 'nullable': True, 'description': 'Filter by task id.'}, 'taskParentTaskId': {'type': 'string', 'nullable': True, 'description': 'Filter by parent task id.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance id.'}, 'processInstanceBusinessKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key.'}, 'processInstanceBusinessKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by process instances with one of the give business keys.\\nThe keys need to be in a comma-separated list.'}, 'processInstanceBusinessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key that has the parameter value as a substring.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the execution that executed the task.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by process definition id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given key.'}, 'processDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given name.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by case instance id.'}, 'caseExecutionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the case execution that executed the task.'}, 'caseDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by case definition id.'}, 'caseDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given key.'}, 'caseDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given name.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which belong to one of the passed activity instance ids.'}, 'taskName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given name.'}, 'taskNameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a name with the given parameter value as substring.'}, 'taskDescription': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given description.'}, 'taskDescriptionLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a description that has the parameter value as a substring.'}, 'taskDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given key.'}, 'taskDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that have one of the passed task definition keys.'}, 'taskDeleteReason': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given delete reason.'}, 'taskDeleteReasonLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a delete reason that has the parameter value as a substring.'}, 'taskAssignee': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the given user is assigned to.'}, 'taskAssigneeLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are assigned to users with the parameter value as a substring.'}, 'taskOwner': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the given user owns.'}, 'taskOwnerLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are owned by users with the parameter value as a substring.'}, 'taskPriority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'Restrict to tasks that have the given priority.'}, 'assigned': {'type': 'boolean', 'nullable': True, 'description': 'If set to true , restricts the query to all tasks that are assigned.'}, 'unassigned': {'type': 'boolean', 'nullable': True, 'description': 'If set to true , restricts the query to all tasks that are unassigned.'}, 'finished': {'type': 'boolean', 'nullable': True, 'description': 'Only include finished tasks. Value may only be true , as false is the default behavior.'}, 'unfinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include unfinished tasks. Value may only be true , as false is the default\\nbehavior.'}, 'processFinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks of finished processes. Value may only be true , as false is the\\ndefault behavior.'}, 'processUnfinished': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks of unfinished processes. Value may only be true , as false is the\\ndefault behavior.'}, 'taskDueDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due on the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'taskDueDateBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'taskDueDateAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'withoutTaskDueDate': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks which have no due date. Value may only be true , as false is the\\ndefault behavior.'}, 'taskFollowUpDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date on the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'taskFollowUpDateBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'taskFollowUpDateAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were started before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'startedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were started after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were finished before the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'finishedAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were finished after the given date. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/),\\nthe date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ ,\\ne.g., 2013-01-23T14:42:45.000+0200 .\"}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of tenant ids. A task instance must have one of the given\\ntenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic task instances that belong to no tenant. Value may only be\\n true , as false is the default behavior.'}, 'taskVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'Only include tasks that have variables with certain values. Variable filtering expressions are\\ncomma-separated and are structured as follows:\\n\\nA valid parameter value has the form key_operator_value .\\n key is the variable name, operator is the comparison operator to be used\\nand value the variable value.\\n**Note:** Values are always treated as String objects on server side.\\n\\n\\nValid operator values are:\\n* eq - equal to;\\n* neq - not equal to;\\n* gt - greater than;\\n* gteq - greater than or equal to;\\n* lt - lower than;\\n* lteq - lower than or equal to;\\n* like .\\n\\n key and value may not contain underscore or comma characters.'}, 'processVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'Only include tasks that belong to process instances that have variables with certain\\nvalues. Variable filtering expressions are comma-separated and are structured as\\nfollows:\\n\\nA valid parameter value has the form key_operator_value .\\n key is the variable name, operator is the comparison operator to be used\\nand value the variable value.\\n**Note:** Values are always treated as String objects on server side.\\n\\n\\nValid operator values are:\\n* eq - equal to;\\n* neq - not equal to;\\n* gt - greater than;\\n* gteq - greater than or equal to;\\n* lt - lower than;\\n* lteq - lower than or equal to;\\n* like ;\\n* notLike .\\n\\n key and value may not contain underscore or comma characters.'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match the variable name provided in taskVariables and processVariables case-\\ninsensitively. If set to true **variableName** and **variablename** are\\ntreated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match the variable value provided in taskVariables and processVariables case-\\ninsensitively. If set to true **variableValue** and **variablevalue** are\\ntreated as equal.'}, 'taskInvolvedUser': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks with a historic identity link to the given user.'}, 'taskInvolvedGroup': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks with a historic identity link to the given group.'}, 'taskHadCandidateUser': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks with a historic identity link to the given candidate user.'}, 'taskHadCandidateGroup': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks with a historic identity link to the given candidate group.'}, 'withCandidateGroups': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks which have a candidate group. Value may only be true ,\\nas false is the default behavior.'}, 'withoutCandidateGroups': {'type': 'boolean', 'nullable': True, 'description': 'Only include tasks which have no candidate group. Value may only be true ,\\nas false is the default behavior.'}, 'orQueries': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/HistoricTaskInstanceQueryDto'}, 'description': \"A JSON array of nested historic task instance queries with OR semantics.\\n\\nA task instance matches a nested query if it fulfills at least one of the query's predicates.\\n\\nWith multiple nested queries, a task instance must fulfill at least one predicate of each query\\n([Conjunctive Normal Form](https://en.wikipedia.org/wiki/Conjunctive_normal_form)).\\n\\nAll task instance query properties can be used except for: sorting , withCandidateGroups , withoutCandidateGroups .\\n\\nSee the [User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/process-engine-api/#or-queries) for more information about OR queries.\"}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['taskId', 'activityInstanceId', 'processDefinitionId', 'processInstanceId', 'executionId', 'duration', 'endTime', 'startTime', 'taskName', 'taskDescription', 'assignee', 'owner', 'dueDate', 'followUpDate', 'deleteReason', 'taskDefinitionKey', 'priority', 'caseDefinitionId', 'caseInstanceId', 'caseExecutionId', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryHistoricTaskInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryHistoricTaskInstancesCount"},{"location":"commands/full/#cctl-apply-queryhistoricvariableinstances","text":"Get Variable Instances (POST) Queries for historic variable instances that fulfill the given parameters. This method is slightly more powerful than the Get Variable Instances method because it allows filtering by variable values of the different types String , Number or Boolean . URL: /history/variable-instance Schema: {'type': 'object', 'description': 'A Historic Variable Instance instance query which defines a list of Historic Variable Instance instances', 'properties': {'variableName': {'type': 'string', 'nullable': True, 'description': 'Filter by variable name.'}, 'variableNameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to variables with a name like the parameter.'}, 'variableValue': {'type': 'object', 'description': 'Filter by variable value. May be String , Number or Boolean .'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match the variable name provided in variableName and variableNameLike case-\\ninsensitively. If set to true **variableName** and **variablename** are\\ntreated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match the variable value provided in variableValue case-insensitively. If set to true \\n**variableValue** and **variablevalue** are treated as equal.'}, 'variableTypeIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': \"Only include historic variable instances which belong to one of the passed and comma-\\nseparated variable types. A list of all supported variable types can be found\\n[here](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#supported-variable-values).\\n**Note:** All non-primitive variables are associated with the type\\n'serializable'.\"}, 'includeDeleted': {'type': 'boolean', 'nullable': True, 'description': 'Include variables that has already been deleted during the execution.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process instance the variable belongs to.'}, 'processInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed process instance ids.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process definition the variable belongs to.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by a key of the process definition the variable belongs to.'}, 'executionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and execution ids.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by the case instance the variable belongs to.'}, 'caseExecutionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and case execution ids.'}, 'caseActivityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and case activity ids.'}, 'taskIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and task ids.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and activity instance ids.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and comma-\\nseparated tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic variable instances that belong to no tenant. Value may only be\\n true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'variableName', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryHistoricVariableInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --max-results | text | Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. | None | | --first-result | text | Pagination of results. Specifies the index of the first result to return. | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -o , --output | choice ( template ) | N/A | template | | --skip-validation | boolean | ignore validation | False | | -f , --file | filename | input as yaml | None | | --help | boolean | Show this message and exit. | False |","title":"queryHistoricVariableInstances"},{"location":"commands/full/#cctl-apply-queryhistoricvariableinstancescount","text":"Get Variable Instance Count (POST) Queries for historic variable instances that fulfill the given parameters. This method takes the same message body as the Get Variable Instances (POST) method and therefore it is more powerful regarding variable values than the Get Variable Instance Count method. URL: /history/variable-instance/count Schema: {'type': 'object', 'description': 'A Historic Variable Instance instance query which defines a list of Historic Variable Instance instances', 'properties': {'variableName': {'type': 'string', 'nullable': True, 'description': 'Filter by variable name.'}, 'variableNameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to variables with a name like the parameter.'}, 'variableValue': {'type': 'object', 'description': 'Filter by variable value. May be String , Number or Boolean .'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match the variable name provided in variableName and variableNameLike case-\\ninsensitively. If set to true **variableName** and **variablename** are\\ntreated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match the variable value provided in variableValue case-insensitively. If set to true \\n**variableValue** and **variablevalue** are treated as equal.'}, 'variableTypeIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': \"Only include historic variable instances which belong to one of the passed and comma-\\nseparated variable types. A list of all supported variable types can be found\\n[here](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#supported-variable-values).\\n**Note:** All non-primitive variables are associated with the type\\n'serializable'.\"}, 'includeDeleted': {'type': 'boolean', 'nullable': True, 'description': 'Include variables that has already been deleted during the execution.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process instance the variable belongs to.'}, 'processInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed process instance ids.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process definition the variable belongs to.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by a key of the process definition the variable belongs to.'}, 'executionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and execution ids.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by the case instance the variable belongs to.'}, 'caseExecutionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and case execution ids.'}, 'caseActivityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and case activity ids.'}, 'taskIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and task ids.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and activity instance ids.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include historic variable instances which belong to one of the passed and comma-\\nseparated tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include historic variable instances that belong to no tenant. Value may only be\\n true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'variableName', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryHistoricVariableInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryHistoricVariableInstancesCount"},{"location":"commands/full/#cctl-apply-queryjobdefinitions","text":"Get Job Definitions (POST) Queries for job definitions that fulfill given parameters. This method is slightly more powerful than the Get Job Definitions method because it allows filtering by multiple job definitions of types String , Number or Boolean . URL: /job-definition Schema: {'type': 'object', 'description': 'A Job definition query which defines a list of Job definitions', 'properties': {'jobDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by job definition id.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include job definitions which belong to one of the passed activity ids.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Only include job definitions which exist for the given process definition id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Only include job definitions which exist for the given process definition key.'}, 'jobType': {'type': 'string', 'nullable': True, 'description': 'Only include job definitions which exist for the given job type. See the\\n[User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/the-job-executor/#job-creation)\\nfor more information about job types.'}, 'jobConfiguration': {'type': 'string', 'nullable': True, 'description': 'Only include job definitions which exist for the given job configuration. For example: for\\ntimer jobs it is the timer configuration.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active job definitions. Value may only be true , as false is the default\\nbehavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended job definitions. Value may only be true , as false is the\\ndefault behavior.'}, 'withOverridingJobPriority': {'type': 'boolean', 'nullable': True, 'description': 'Only include job definitions that have an overriding job priority defined. The only\\neffective value is true . If set to false , this filter is not applied.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include job definitions which belong to one of the passed tenant\\nids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include job definitions which belong to no tenant. Value may only be true , as\\n false is the default behavior.'}, 'includeJobDefinitionsWithoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Include job definitions which belong to no tenant. Can be used in combination with\\n tenantIdIn . Value may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints.', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['jobDefinitionId', 'activityId', 'processDefinitionId', 'processDefinitionKey', 'jobType', 'jobConfiguration', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryJobDefinitions [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryJobDefinitions"},{"location":"commands/full/#cctl-apply-queryjobdefinitionscount","text":"Get Job Definition Count (POST) Queries for the number of job definitions that fulfill given parameters. This method takes the same message body as the Get Job Definitions (POST) method and therefore it is slightly more powerful than the Get Job Definition Count method. URL: /job-definition/count Schema: {'type': 'object', 'description': 'A Job definition query which defines a list of Job definitions', 'properties': {'jobDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by job definition id.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include job definitions which belong to one of the passed activity ids.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Only include job definitions which exist for the given process definition id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Only include job definitions which exist for the given process definition key.'}, 'jobType': {'type': 'string', 'nullable': True, 'description': 'Only include job definitions which exist for the given job type. See the\\n[User Guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/the-job-executor/#job-creation)\\nfor more information about job types.'}, 'jobConfiguration': {'type': 'string', 'nullable': True, 'description': 'Only include job definitions which exist for the given job configuration. For example: for\\ntimer jobs it is the timer configuration.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active job definitions. Value may only be true , as false is the default\\nbehavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended job definitions. Value may only be true , as false is the\\ndefault behavior.'}, 'withOverridingJobPriority': {'type': 'boolean', 'nullable': True, 'description': 'Only include job definitions that have an overriding job priority defined. The only\\neffective value is true . If set to false , this filter is not applied.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include job definitions which belong to one of the passed tenant\\nids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include job definitions which belong to no tenant. Value may only be true , as\\n false is the default behavior.'}, 'includeJobDefinitionsWithoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Include job definitions which belong to no tenant. Can be used in combination with\\n tenantIdIn . Value may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Sorting has no effect for count endpoints.', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['jobDefinitionId', 'activityId', 'processDefinitionId', 'processDefinitionKey', 'jobType', 'jobConfiguration', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryJobDefinitionsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryJobDefinitionsCount"},{"location":"commands/full/#cctl-apply-queryjobs","text":"Get Jobs (POST) Queries for jobs that fulfill given parameters. This method is slightly more powerful than the Get Jobs method because it allows filtering by multiple jobs of types String , Number or Boolean . URL: /job Schema: {'type': 'object', 'description': 'A Job instance query which defines a list of Job instances', 'properties': {'jobId': {'type': 'string', 'nullable': True, 'description': 'Filter by job id.'}, 'jobIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of job ids.'}, 'jobDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs which exist for the given job definition.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs which exist for the given process instance.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only select jobs which exist for the given list of process instance ids.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs which exist for the given execution.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the process definition the jobs run on.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the key of the process definition the jobs run on.'}, 'activityId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs which exist for an activity with the given id.'}, 'withRetriesLeft': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs which have retries left. Value may only be true , as false is the\\ndefault behavior.'}, 'executable': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs which are executable, i.e., retries > 0 and due date is null or due\\ndate is in the past. Value may only be true , as false is the default\\nbehavior.'}, 'timers': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs that are timers. Cannot be used together with messages . Value may only\\nbe true , as false is the default behavior.'}, 'messages': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs that are messages. Cannot be used together with timers . Value may only\\nbe true , as false is the default behavior.'}, 'dueDates': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/JobConditionQueryParameterDto'}, 'description': 'Only select jobs where the due date is lower or higher than the given date.\\n'}, 'createTimes': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/JobConditionQueryParameterDto'}, 'description': 'Only select jobs created before or after the given date.\\n'}, 'withException': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs that failed due to an exception. Value may only be true , as false is\\nthe default behavior.'}, 'exceptionMessage': {'type': 'string', 'nullable': True, 'description': 'Only select jobs that failed due to an exception with the given message.'}, 'failedActivityId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs that failed due to an exception at an activity with the given id.'}, 'noRetriesLeft': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs which have no retries left. Value may only be true , as false is the\\ndefault behavior.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active jobs. Value may only be true , as false is the default behavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended jobs. Value may only be true , as false is the default behavior.'}, 'priorityLowerThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include jobs with a priority lower than or equal to the given value. Value must be a\\nvalid long value.'}, 'priorityHigherThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include jobs with a priority higher than or equal to the given value. Value must be a\\nvalid long value.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include jobs which belong to one of the passed tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include jobs which belong to no tenant. Value may only be true , as false is the\\ndefault behavior.'}, 'includeJobsWithoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Include jobs which belong to no tenant. Can be used in combination with tenantIdIn .\\nValue may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Does not have an effect for the count endpoint.', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['jobId', 'executionId', 'processInstanceId', 'processDefinitionId', 'processDefinitionKey', 'jobPriority', 'jobRetries', 'jobDueDate', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryJobs [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryJobs"},{"location":"commands/full/#cctl-apply-queryjobscount","text":"Get Job Count (POST) Queries for jobs that fulfill given parameters. This method takes the same message body as the Get Jobs POST method and therefore it is slightly more powerful than the Get Job Count method. URL: /job/count Schema: {'type': 'object', 'description': 'A Job instance query which defines a list of Job instances', 'properties': {'jobId': {'type': 'string', 'nullable': True, 'description': 'Filter by job id.'}, 'jobIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of job ids.'}, 'jobDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs which exist for the given job definition.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs which exist for the given process instance.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only select jobs which exist for the given list of process instance ids.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs which exist for the given execution.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the id of the process definition the jobs run on.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the key of the process definition the jobs run on.'}, 'activityId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs which exist for an activity with the given id.'}, 'withRetriesLeft': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs which have retries left. Value may only be true , as false is the\\ndefault behavior.'}, 'executable': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs which are executable, i.e., retries > 0 and due date is null or due\\ndate is in the past. Value may only be true , as false is the default\\nbehavior.'}, 'timers': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs that are timers. Cannot be used together with messages . Value may only\\nbe true , as false is the default behavior.'}, 'messages': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs that are messages. Cannot be used together with timers . Value may only\\nbe true , as false is the default behavior.'}, 'dueDates': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/JobConditionQueryParameterDto'}, 'description': 'Only select jobs where the due date is lower or higher than the given date.\\n'}, 'createTimes': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/JobConditionQueryParameterDto'}, 'description': 'Only select jobs created before or after the given date.\\n'}, 'withException': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs that failed due to an exception. Value may only be true , as false is\\nthe default behavior.'}, 'exceptionMessage': {'type': 'string', 'nullable': True, 'description': 'Only select jobs that failed due to an exception with the given message.'}, 'failedActivityId': {'type': 'string', 'nullable': True, 'description': 'Only select jobs that failed due to an exception at an activity with the given id.'}, 'noRetriesLeft': {'type': 'boolean', 'nullable': True, 'description': 'Only select jobs which have no retries left. Value may only be true , as false is the\\ndefault behavior.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active jobs. Value may only be true , as false is the default behavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended jobs. Value may only be true , as false is the default behavior.'}, 'priorityLowerThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include jobs with a priority lower than or equal to the given value. Value must be a\\nvalid long value.'}, 'priorityHigherThanOrEquals': {'type': 'integer', 'format': 'int64', 'nullable': True, 'description': 'Only include jobs with a priority higher than or equal to the given value. Value must be a\\nvalid long value.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include jobs which belong to one of the passed tenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include jobs which belong to no tenant. Value may only be true , as false is the\\ndefault behavior.'}, 'includeJobsWithoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Include jobs which belong to no tenant. Can be used in combination with tenantIdIn .\\nValue may only be true , as false is the default behavior.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is\\n an object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. Does not have an effect for the count endpoint.', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['jobId', 'executionId', 'processInstanceId', 'processDefinitionId', 'processDefinitionKey', 'jobPriority', 'jobRetries', 'jobDueDate', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryJobsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryJobsCount"},{"location":"commands/full/#cctl-apply-queryprocessinstances","text":"Get List (POST) Queries for process instances that fulfill given parameters through a JSON object. This method is slightly more powerful than the Get Instances method because it allows filtering by multiple process variables of types string , number or boolean . URL: /process-instance Schema: {'type': 'object', 'description': 'A process instance query which defines a group of process instances', 'properties': {'deploymentId': {'type': 'string', 'nullable': True, 'description': 'Filter by the deployment the id belongs to.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process definition the instances run on.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the key of the process definition the instances run on.'}, 'processDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of process definition keys.\\nA process instance must have one of the given process definition keys. Must be a JSON array of Strings.'}, 'processDefinitionKeyNotIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Exclude instances by a list of process definition keys.\\nA process instance must not have one of the given process definition keys. Must be a JSON array of Strings.'}, 'businessKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key.'}, 'businessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key that the parameter is a substring of.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by case instance id.'}, 'superProcessInstance': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given process instance.\\nTakes a process instance id.'}, 'subProcessInstance': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that have the given process instance as a sub process instance.\\nTakes a process instance id.'}, 'superCaseInstance': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given case instance.\\nTakes a case instance id.'}, 'subCaseInstance': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that have the given case instance as a sub case instance.\\nTakes a case instance id.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active process instances. Value may only be true, as false is the default behavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended process instances. Value may only be true, as false is the default behavior.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of process instance ids. Must be a JSON array of Strings.'}, 'withIncident': {'type': 'boolean', 'nullable': True, 'description': 'Filter by presence of incidents. Selects only process instances that have an incident.'}, 'incidentId': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident id.'}, 'incidentType': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident type. See the User Guide for a list of incident types.'}, 'incidentMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message. Exact match.'}, 'incidentMessageLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message that the parameter is a substring of.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of tenant ids. A process instance must have one of the given tenant ids.\\nMust be a JSON array of Strings.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include process instances which belong to no tenant.\\nValue may only be true, as false is the default behavior.'}, 'processDefinitionWithoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include process instances which process definition has no tenant id.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of activity ids.\\nA process instance must currently wait in a leaf activity with one of the given activity ids.'}, 'rootProcessInstances': {'type': 'boolean', 'nullable': True, 'description': 'Restrict the query to all process instances that are top level process instances.'}, 'leafProcessInstances': {'type': 'boolean', 'nullable': True, 'description': \"Restrict the query to all process instances that are leaf instances. (i.e. don't have any sub instances)\"}, 'variables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include process instances that have variables with certain values.\\nThe array consists of objects with the three properties name , operator and value .\\n name (String) is the variable name,\\n operator (String) is the comparison operator to be used and value the variable value.\\nThe value may be String, Number or Boolean.\\n\\nValid operator values are: eq - equal to; neq - not equal to; gt - greater than;\\n gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like .'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable names in this query case-insensitively.\\nIf set to true variableName and variablename are treated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable values in this query case-insensitively.\\nIf set to true variableValue and variablevalue are treated as equal.'}, 'orQueries': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'description': \"A JSON array of nested process instance queries with OR semantics.\\nA process instance matches a nested query if it fulfills at least one of the query's predicates.\\nWith multiple nested queries, a process instance must fulfill at least one predicate of each query (Conjunctive Normal Form).\\nAll process instance query properties can be used except for: sorting \\nSee the [User guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/process-engine-api/#or-queries) for more information about OR queries.\"}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'definitionId', 'definitionKey', 'businessKey', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryProcessInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryProcessInstances"},{"location":"commands/full/#cctl-apply-queryprocessinstancescount","text":"Get List Count (POST) Queries for the number of process instances that fulfill the given parameters. This method takes the same message body as the Get Instances (POST) method and therefore it is slightly more powerful than the Get Instance Count method. URL: /process-instance/count Schema: {'type': 'object', 'description': 'A process instance query which defines a group of process instances', 'properties': {'deploymentId': {'type': 'string', 'nullable': True, 'description': 'Filter by the deployment the id belongs to.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Filter by the process definition the instances run on.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Filter by the key of the process definition the instances run on.'}, 'processDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of process definition keys.\\nA process instance must have one of the given process definition keys. Must be a JSON array of Strings.'}, 'processDefinitionKeyNotIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Exclude instances by a list of process definition keys.\\nA process instance must not have one of the given process definition keys. Must be a JSON array of Strings.'}, 'businessKey': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key.'}, 'businessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Filter by process instance business key that the parameter is a substring of.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Filter by case instance id.'}, 'superProcessInstance': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given process instance.\\nTakes a process instance id.'}, 'subProcessInstance': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that have the given process instance as a sub process instance.\\nTakes a process instance id.'}, 'superCaseInstance': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that are sub process instances of the given case instance.\\nTakes a case instance id.'}, 'subCaseInstance': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all process instances that have the given case instance as a sub case instance.\\nTakes a case instance id.'}, 'active': {'type': 'boolean', 'nullable': True, 'description': 'Only include active process instances. Value may only be true, as false is the default behavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Only include suspended process instances. Value may only be true, as false is the default behavior.'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of process instance ids. Must be a JSON array of Strings.'}, 'withIncident': {'type': 'boolean', 'nullable': True, 'description': 'Filter by presence of incidents. Selects only process instances that have an incident.'}, 'incidentId': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident id.'}, 'incidentType': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident type. See the User Guide for a list of incident types.'}, 'incidentMessage': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message. Exact match.'}, 'incidentMessageLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the incident message that the parameter is a substring of.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of tenant ids. A process instance must have one of the given tenant ids.\\nMust be a JSON array of Strings.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include process instances which belong to no tenant.\\nValue may only be true, as false is the default behavior.'}, 'processDefinitionWithoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only include process instances which process definition has no tenant id.'}, 'activityIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Filter by a list of activity ids.\\nA process instance must currently wait in a leaf activity with one of the given activity ids.'}, 'rootProcessInstances': {'type': 'boolean', 'nullable': True, 'description': 'Restrict the query to all process instances that are top level process instances.'}, 'leafProcessInstances': {'type': 'boolean', 'nullable': True, 'description': \"Restrict the query to all process instances that are leaf instances. (i.e. don't have any sub instances)\"}, 'variables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include process instances that have variables with certain values.\\nThe array consists of objects with the three properties name , operator and value .\\n name (String) is the variable name,\\n operator (String) is the comparison operator to be used and value the variable value.\\nThe value may be String, Number or Boolean.\\n\\nValid operator values are: eq - equal to; neq - not equal to; gt - greater than;\\n gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like .'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable names in this query case-insensitively.\\nIf set to true variableName and variablename are treated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable values in this query case-insensitively.\\nIf set to true variableValue and variablevalue are treated as equal.'}, 'orQueries': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'description': \"A JSON array of nested process instance queries with OR semantics.\\nA process instance matches a nested query if it fulfills at least one of the query's predicates.\\nWith multiple nested queries, a process instance must fulfill at least one predicate of each query (Conjunctive Normal Form).\\nAll process instance query properties can be used except for: sorting \\nSee the [User guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/process-engine-api/#or-queries) for more information about OR queries.\"}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'definitionId', 'definitionKey', 'businessKey', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryProcessInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryProcessInstancesCount"},{"location":"commands/full/#cctl-apply-queryschemalog","text":"Get List (POST) Queries for schema log entries that fulfill given parameters. URL: /schema/log Schema: {'type': 'object', 'properties': {'version': {'type': 'string', 'nullable': True, 'description': 'The version of the schema.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'A JSON array of criteria to sort the result by. Each element of the array is\\n a JSON object that specifies one ordering. The position in the array\\n identifies the rank of an ordering, i.e., whether it is primary, secondary,\\n etc. ', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['timestamp'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply querySchemaLog [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"querySchemaLog"},{"location":"commands/full/#cctl-apply-querytasks","text":"Get List (POST) Queries for tasks that fulfill a given filter. This method is slightly more powerful than the Get Tasks method because it allows filtering by multiple process or task variables of types String , Number or Boolean . The size of the result set can be retrieved by using the Get Task Count (POST) method. Security Consideration : There are several parameters (such as assigneeExpression ) for specifying an EL expression. These are disabled by default to prevent remote code execution. See the section on security considerations for custom code in the user guide for details. URL: /task Schema: {'type': 'object', 'description': 'A Task query which defines a group of Tasks.', 'properties': {'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to process instances with the given id.'}, 'processInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that belong to process instances with the given ids.'}, 'processInstanceBusinessKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to process instances with the given business key.'}, 'processInstanceBusinessKeyExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to process instances with the given business key which \\nis described by an expression. See the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions.'}, 'processInstanceBusinessKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that belong to process instances with one of the give business keys. \\nThe keys need to be in a comma-separated list.'}, 'processInstanceBusinessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a process instance business key that has the parameter \\nvalue as a substring.'}, 'processInstanceBusinessKeyLikeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a process instance business key that has the parameter \\nvalue as a substring and is described by an expression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given key.'}, 'processDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that belong to a process definition with one of the given keys. The \\nkeys need to be in a comma-separated list.'}, 'processDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given name.'}, 'processDefinitionNameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a process definition name that has the parameter value as \\na substring.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to an execution with the given id.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to case instances with the given id.'}, 'caseInstanceBusinessKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to case instances with the given business key.'}, 'caseInstanceBusinessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a case instance business key that has the parameter value \\nas a substring.'}, 'caseDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given id.'}, 'caseDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given key.'}, 'caseDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given name.'}, 'caseDefinitionNameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a case definition name that has the parameter value as a \\nsubstring.'}, 'caseExecutionId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case execution with the given id.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which belong to one of the passed and comma-separated activity \\ninstance ids.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which belong to one of the passed and comma-separated \\ntenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which belong to no tenant. Value may only be true , \\nas false is the default behavior.'}, 'assignee': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the given user is assigned to.'}, 'assigneeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the user described by the given expression is assigned to. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'assigneeLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have an assignee that has the parameter \\nvalue as a substring.'}, 'assigneeLikeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have an assignee that has the parameter value described by the \\ngiven expression as a substring. See the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'assigneeIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which are assigned to one of the passed and comma-separated user ids.'}, 'assigneeNotIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which are not assigned to one of the passed and comma-separated user ids.'}, 'owner': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the given user owns.'}, 'ownerExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the user described by the given expression owns. See the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'candidateGroup': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that are offered to the given group.'}, 'candidateGroupExpression': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that are offered to the group described by the given expression. \\nSee the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'candidateUser': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that are offered to the given user or to one of his groups.'}, 'candidateUserExpression': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that are offered to the user described by the given expression. \\nSee the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'includeAssignedTasks': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Also include tasks that are assigned to users in candidate queries. Default is to only \\ninclude tasks that are not assigned to any user if you query by candidate user or\\ngroup(s).'}, 'involvedUser': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that the given user is involved in. A user is involved in a task if \\nan identity link exists between task and user (e.g., the user is the assignee).'}, 'involvedUserExpression': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that the user described by the given expression is involved in.\\nA user is involved in a task if an identity link exists between task and user\\n(e.g., the user is the assignee). See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions.'}, 'assigned': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'If set to true , restricts the query to all tasks that are assigned.'}, 'unassigned': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'If set to true , restricts the query to all tasks that are unassigned.'}, 'taskDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given key.'}, 'taskDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that have one of the given keys. The keys need to be in a comma-separated list.'}, 'taskDefinitionKeyLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a key that has the parameter value as a substring.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given name.'}, 'nameNotEqual': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that do not have the given name.'}, 'nameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a name with the given parameter value as substring.'}, 'nameNotLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that do not have a name with the given parameter\\nvalue as substring.'}, 'description': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given description.'}, 'descriptionLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a description that has the parameter\\nvalue as a substring.'}, 'priority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'Restrict to tasks that have the given priority.'}, 'maxPriority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'Restrict to tasks that have a lower or equal priority.'}, 'minPriority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'Restrict to tasks that have a higher or equal priority.'}, 'dueDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due on the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.546+0200 .\"}, 'dueDateExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are due on the date described by the given expression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'dueAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due after the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.435+0200 .\"}, 'dueAfterExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are due after the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'dueBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due before the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.243+0200 .\"}, 'dueBeforeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are due before the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'withoutDueDate': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have no due date. Value may only be true , \\nas false is the default behavior.'}, 'followUpDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date on the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date\\nmust have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.342+0200 .\"}, 'followUpDateExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a followUp date on the date described by the given\\nexpression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'followUpAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date after the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.542+0200 .\"}, 'followUpAfterExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a followUp date after the date described by the given\\nexpression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'followUpBefore': {'type': 'string', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date before the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.234+0200 .\"}, 'followUpBeforeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a followUp date before the date described by the given\\nexpression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'followUpBeforeOrNotExistent': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have no followUp date or a followUp date before the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.432+0200 . The typical use case\\nis to query all active tasks for a user for a given date.\"}, 'followUpBeforeOrNotExistentExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have no followUp date or a followUp date before the date\\ndescribed by the given expression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'createdOn': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were created on the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.324+0200 .\"}, 'createdOnExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that were created on the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'createdAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were created after the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must\\nhave the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.342+0200 .\"}, 'createdAfterExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that were created after the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'createdBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were created before the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must\\nhave the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.332+0200 .\"}, 'createdBeforeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that were created before the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'delegationState': {'type': 'string', 'nullable': True, 'enum': ['PENDING', 'RESOLVED'], 'description': 'Restrict to tasks that are in the given delegation state. Valid values are\\n PENDING and RESOLVED .'}, 'candidateGroups': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that are offered to any of the given candidate groups. Takes a\\ncomma-separated list of group names, so for example\\n developers,support,sales .'}, 'candidateGroupsExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are offered to any of the candidate groups described by the\\ngiven expression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to\\n java.util.List of Strings.'}, 'withCandidateGroups': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have a candidate group. Value may only be true ,\\nas false is the default behavior.'}, 'withoutCandidateGroups': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have no candidate group. Value may only be true ,\\nas false is the default behavior.'}, 'withCandidateUsers': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have a candidate user. Value may only be true ,\\nas false is the default behavior.'}, 'withoutCandidateUsers': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have no candidate users. Value may only be true ,\\nas false is the default behavior.'}, 'active': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include active tasks. Value may only be true , as false \\nis the default behavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include suspended tasks. Value may only be true , as\\n false is the default behavior.'}, 'taskVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include tasks that have variables with certain values. The\\narray consists of JSON objects with three properties name , operator and value .\\n name is the variable name, operator is the comparison operator to be used and\\n value the variable value. value may be of type String , Number or Boolean .\\n\\nValid operator values are:\\n eq - equal to;\\n neq - not equal to;\\n gt - greater than;\\n gteq - greater than or equal to;\\n lt - lower than;\\n lteq - lower than or equal to;\\n like .\\n key and value may not contain underscore or comma characters.'}, 'processVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include tasks that belong to a process instance with variables\\nwith certain values. The array consists of JSON objects with three properties\\n name , operator and value . name is the variable name, operator is the\\ncomparison operator to be used and value the variable value. value may be of\\ntype String , Number or Boolean .\\n\\nValid operator values are:\\n eq - equal to;\\n neq - not equal to;\\n gt - greater than;\\n gteq - greater than or equal to;\\n lt - lower than;\\n lteq - lower than or equal to;\\n like ;\\n notLike .\\n key and value may not contain underscore or comma characters.'}, 'caseInstanceVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include tasks that belong to a case instance with variables\\nwith certain values. The array consists of JSON objects with three properties\\n name , operator and value . name is the variable name, operator is the\\ncomparison operator to be used and value the variable value. value may be of\\ntype String , Number or Boolean .\\n\\nValid operator values are:\\n eq - equal to;\\n neq - not equal to;\\n gt - greater than;\\n gteq - greater than or equal to;\\n lt - lower than;\\n lteq - lower than or equal to;\\n like .\\n key and value may not contain underscore or comma characters.'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Match all variable names in this query case-insensitively. If set\\n variableName and variablename are treated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Match all variable values in this query case-insensitively. If set\\n variableValue and variablevalue are treated as equal.'}, 'parentTaskId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all tasks that are sub tasks of the given task. Takes a task id.'}, 'orQueries': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/TaskQueryDto'}, 'description': \"A JSON array of nested task queries with OR semantics. A task matches a nested query if it fulfills\\n*at least one* of the query's predicates. With multiple nested queries, a task must fulfill at least one predicate of *each* query ([Conjunctive Normal Form](https://en.wikipedia.org/wiki/Conjunctive_normal_form)).\\n\\nAll task query properties can be used except for: sorting , withCandidateGroups ,\\n withoutCandidateGroups , withCandidateUsers , withoutCandidateUsers \\n\\nSee the [User guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/process-engine-api/#or-queries)\\nfor more information about OR queries.\"}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'caseInstanceId', 'dueDate', 'executionId', 'caseExecutionId', 'assignee', 'created', 'description', 'id', 'name', 'nameCaseInsensitive', 'priority', 'processVariable', 'executionVariable', 'taskVariable', 'caseExecutionVariable', 'caseInstanceVariable'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}, 'parameters': {'$ref': '#/components/schemas/SortTaskQueryParametersDto'}}}}}} Usage: cctl apply queryTasks [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryTasks"},{"location":"commands/full/#cctl-apply-querytaskscount","text":"Get List Count (POST) Retrieves the number of tasks that fulfill the given filter. Corresponds to the size of the result set of the Get Tasks (POST) method and takes the same parameters. Security Consideration : There are several parameters (such as assigneeExpression ) for specifying an EL expression. These are disabled by default to prevent remote code execution. See the section on security considerations for custom code in the user guide for details. URL: /task/count Schema: {'type': 'object', 'description': 'A Task query which defines a group of Tasks.', 'properties': {'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to process instances with the given id.'}, 'processInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that belong to process instances with the given ids.'}, 'processInstanceBusinessKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to process instances with the given business key.'}, 'processInstanceBusinessKeyExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to process instances with the given business key which \\nis described by an expression. See the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions.'}, 'processInstanceBusinessKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that belong to process instances with one of the give business keys. \\nThe keys need to be in a comma-separated list.'}, 'processInstanceBusinessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a process instance business key that has the parameter \\nvalue as a substring.'}, 'processInstanceBusinessKeyLikeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a process instance business key that has the parameter \\nvalue as a substring and is described by an expression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given id.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given key.'}, 'processDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that belong to a process definition with one of the given keys. The \\nkeys need to be in a comma-separated list.'}, 'processDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a process definition with the given name.'}, 'processDefinitionNameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a process definition name that has the parameter value as \\na substring.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to an execution with the given id.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to case instances with the given id.'}, 'caseInstanceBusinessKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to case instances with the given business key.'}, 'caseInstanceBusinessKeyLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a case instance business key that has the parameter value \\nas a substring.'}, 'caseDefinitionId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given id.'}, 'caseDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given key.'}, 'caseDefinitionName': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case definition with the given name.'}, 'caseDefinitionNameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a case definition name that has the parameter value as a \\nsubstring.'}, 'caseExecutionId': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that belong to a case execution with the given id.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which belong to one of the passed and comma-separated activity \\ninstance ids.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which belong to one of the passed and comma-separated \\ntenant ids.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which belong to no tenant. Value may only be true , \\nas false is the default behavior.'}, 'assignee': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the given user is assigned to.'}, 'assigneeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the user described by the given expression is assigned to. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'assigneeLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have an assignee that has the parameter \\nvalue as a substring.'}, 'assigneeLikeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have an assignee that has the parameter value described by the \\ngiven expression as a substring. See the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'assigneeIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which are assigned to one of the passed and comma-separated user ids.'}, 'assigneeNotIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include tasks which are not assigned to one of the passed and comma-separated user ids.'}, 'owner': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the given user owns.'}, 'ownerExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that the user described by the given expression owns. See the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'candidateGroup': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that are offered to the given group.'}, 'candidateGroupExpression': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that are offered to the group described by the given expression. \\nSee the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'candidateUser': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that are offered to the given user or to one of his groups.'}, 'candidateUserExpression': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that are offered to the user described by the given expression. \\nSee the \\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions) \\nfor more information on available functions.'}, 'includeAssignedTasks': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Also include tasks that are assigned to users in candidate queries. Default is to only \\ninclude tasks that are not assigned to any user if you query by candidate user or\\ngroup(s).'}, 'involvedUser': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that the given user is involved in. A user is involved in a task if \\nan identity link exists between task and user (e.g., the user is the assignee).'}, 'involvedUserExpression': {'type': 'string', 'nullable': True, 'description': 'Only include tasks that the user described by the given expression is involved in.\\nA user is involved in a task if an identity link exists between task and user\\n(e.g., the user is the assignee). See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions.'}, 'assigned': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'If set to true , restricts the query to all tasks that are assigned.'}, 'unassigned': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'If set to true , restricts the query to all tasks that are unassigned.'}, 'taskDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given key.'}, 'taskDefinitionKeyIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that have one of the given keys. The keys need to be in a comma-separated list.'}, 'taskDefinitionKeyLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a key that has the parameter value as a substring.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given name.'}, 'nameNotEqual': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that do not have the given name.'}, 'nameLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a name with the given parameter value as substring.'}, 'nameNotLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that do not have a name with the given parameter\\nvalue as substring.'}, 'description': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have the given description.'}, 'descriptionLike': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a description that has the parameter\\nvalue as a substring.'}, 'priority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'Restrict to tasks that have the given priority.'}, 'maxPriority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'Restrict to tasks that have a lower or equal priority.'}, 'minPriority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': 'Restrict to tasks that have a higher or equal priority.'}, 'dueDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due on the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.546+0200 .\"}, 'dueDateExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are due on the date described by the given expression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'dueAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due after the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.435+0200 .\"}, 'dueAfterExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are due after the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'dueBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that are due before the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.243+0200 .\"}, 'dueBeforeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are due before the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'withoutDueDate': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have no due date. Value may only be true , \\nas false is the default behavior.'}, 'followUpDate': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date on the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date\\nmust have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.342+0200 .\"}, 'followUpDateExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a followUp date on the date described by the given\\nexpression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'followUpAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date after the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.542+0200 .\"}, 'followUpAfterExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a followUp date after the date described by the given\\nexpression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'followUpBefore': {'type': 'string', 'nullable': True, 'description': \"Restrict to tasks that have a followUp date before the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.234+0200 .\"}, 'followUpBeforeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have a followUp date before the date described by the given\\nexpression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'followUpBeforeOrNotExistent': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that have no followUp date or a followUp date before the given date.\\nBy [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.432+0200 . The typical use case\\nis to query all active tasks for a user for a given date.\"}, 'followUpBeforeOrNotExistentExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that have no followUp date or a followUp date before the date\\ndescribed by the given expression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'createdOn': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were created on the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have\\nthe format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.324+0200 .\"}, 'createdOnExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that were created on the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'createdAfter': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were created after the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must\\nhave the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.342+0200 .\"}, 'createdAfterExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that were created after the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'createdBefore': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"Restrict to tasks that were created before the given date. By\\n[default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must\\nhave the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.332+0200 .\"}, 'createdBeforeExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that were created before the date described by the given expression.\\nSee the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to a\\n java.util.Date or org.joda.time.DateTime object.'}, 'delegationState': {'type': 'string', 'nullable': True, 'enum': ['PENDING', 'RESOLVED'], 'description': 'Restrict to tasks that are in the given delegation state. Valid values are\\n PENDING and RESOLVED .'}, 'candidateGroups': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Restrict to tasks that are offered to any of the given candidate groups. Takes a\\ncomma-separated list of group names, so for example\\n developers,support,sales .'}, 'candidateGroupsExpression': {'type': 'string', 'nullable': True, 'description': 'Restrict to tasks that are offered to any of the candidate groups described by the\\ngiven expression. See the\\n[user guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/expression-language/#internal-context-functions)\\nfor more information on available functions. The expression must evaluate to\\n java.util.List of Strings.'}, 'withCandidateGroups': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have a candidate group. Value may only be true ,\\nas false is the default behavior.'}, 'withoutCandidateGroups': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have no candidate group. Value may only be true ,\\nas false is the default behavior.'}, 'withCandidateUsers': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have a candidate user. Value may only be true ,\\nas false is the default behavior.'}, 'withoutCandidateUsers': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include tasks which have no candidate users. Value may only be true ,\\nas false is the default behavior.'}, 'active': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include active tasks. Value may only be true , as false \\nis the default behavior.'}, 'suspended': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Only include suspended tasks. Value may only be true , as\\n false is the default behavior.'}, 'taskVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include tasks that have variables with certain values. The\\narray consists of JSON objects with three properties name , operator and value .\\n name is the variable name, operator is the comparison operator to be used and\\n value the variable value. value may be of type String , Number or Boolean .\\n\\nValid operator values are:\\n eq - equal to;\\n neq - not equal to;\\n gt - greater than;\\n gteq - greater than or equal to;\\n lt - lower than;\\n lteq - lower than or equal to;\\n like .\\n key and value may not contain underscore or comma characters.'}, 'processVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include tasks that belong to a process instance with variables\\nwith certain values. The array consists of JSON objects with three properties\\n name , operator and value . name is the variable name, operator is the\\ncomparison operator to be used and value the variable value. value may be of\\ntype String , Number or Boolean .\\n\\nValid operator values are:\\n eq - equal to;\\n neq - not equal to;\\n gt - greater than;\\n gteq - greater than or equal to;\\n lt - lower than;\\n lteq - lower than or equal to;\\n like ;\\n notLike .\\n key and value may not contain underscore or comma characters.'}, 'caseInstanceVariables': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'A JSON array to only include tasks that belong to a case instance with variables\\nwith certain values. The array consists of JSON objects with three properties\\n name , operator and value . name is the variable name, operator is the\\ncomparison operator to be used and value the variable value. value may be of\\ntype String , Number or Boolean .\\n\\nValid operator values are:\\n eq - equal to;\\n neq - not equal to;\\n gt - greater than;\\n gteq - greater than or equal to;\\n lt - lower than;\\n lteq - lower than or equal to;\\n like .\\n key and value may not contain underscore or comma characters.'}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Match all variable names in this query case-insensitively. If set\\n variableName and variablename are treated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'default': False, 'description': 'Match all variable values in this query case-insensitively. If set\\n variableValue and variablevalue are treated as equal.'}, 'parentTaskId': {'type': 'string', 'nullable': True, 'description': 'Restrict query to all tasks that are sub tasks of the given task. Takes a task id.'}, 'orQueries': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/TaskQueryDto'}, 'description': \"A JSON array of nested task queries with OR semantics. A task matches a nested query if it fulfills\\n*at least one* of the query's predicates. With multiple nested queries, a task must fulfill at least one predicate of *each* query ([Conjunctive Normal Form](https://en.wikipedia.org/wiki/Conjunctive_normal_form)).\\n\\nAll task query properties can be used except for: sorting , withCandidateGroups ,\\n withoutCandidateGroups , withCandidateUsers , withoutCandidateUsers \\n\\nSee the [User guide](https://docs.camunda.org/manual/latest/user-guide/process-engine/process-engine-api/#or-queries)\\nfor more information about OR queries.\"}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'Apply sorting of the result', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['instanceId', 'caseInstanceId', 'dueDate', 'executionId', 'caseExecutionId', 'assignee', 'created', 'description', 'id', 'name', 'nameCaseInsensitive', 'priority', 'processVariable', 'executionVariable', 'taskVariable', 'caseExecutionVariable', 'caseInstanceVariable'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}, 'parameters': {'$ref': '#/components/schemas/SortTaskQueryParametersDto'}}}}}} Usage: cctl apply queryTasksCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryTasksCount"},{"location":"commands/full/#cctl-apply-queryvariableinstances","text":"Get Variable Instances (POST) Query for variable instances that fulfill given parameters through a JSON object. This method is slightly more powerful than the Get Variable Instances method because it allows filtering by multiple variable instances of types String , Number or Boolean . URL: /variable-instance Schema: {'type': 'object', 'description': 'A variable instance query which defines a list of variable instances', 'properties': {'variableName': {'type': 'string', 'nullable': True, 'description': 'Filter by variable instance name.'}, 'variableNameLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the variable instance name. The parameter can include the wildcard % to\\nexpress like-strategy such as: starts with ( % name), ends with (name % ) or\\ncontains ( % name % ).'}, 'processInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\nprocess instance ids.'}, 'executionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\nexecution ids.'}, 'caseInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed case instance ids.'}, 'caseExecutionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed case execution ids.'}, 'taskIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed task\\nids.'}, 'batchIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\nbatch ids.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\nactivity instance ids.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\ntenant ids.'}, 'variableValues': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'An array to only include variable instances that have the certain values.\\nThe array consists of objects with the three properties name , operator and value . name (String) is the\\nvariable name, operator (String) is the comparison operator to be used and value the variable value.\\n value may be String , Number or Boolean .\\n\\nValid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater\\nthan or equal to; lt - lower than; lteq - lower than or equal to; like '}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable names provided in variableValues case-insensitively. If set to true \\n**variableName** and **variablename** are treated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable values provided in variableValues case-insensitively. If set to\\n true **variableValue** and **variablevalue** are treated as equal.'}, 'variableScopeIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of passed scope ids.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is an object that specifies one ordering.\\n The position in the array identifies the rank of an ordering, i.e., whether it is primary, secondary, etc.\\n Sorting has no effect for count endpoints', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['variableName', 'variableType', 'activityInstanceId', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryVariableInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --max-results | text | Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. | None | | --first-result | text | Pagination of results. Specifies the index of the first result to return. | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -o , --output | choice ( template ) | N/A | template | | --skip-validation | boolean | ignore validation | False | | -f , --file | filename | input as yaml | None | | --help | boolean | Show this message and exit. | False |","title":"queryVariableInstances"},{"location":"commands/full/#cctl-apply-queryvariableinstancescount","text":"Get Variable Instance Count (POST) Query for the number of variable instances that fulfill given parameters. This method takes the same message body as the Get Variable Instances POST method and therefore it is slightly more powerful than the Get Variable Instance Count method. URL: /variable-instance/count Schema: {'type': 'object', 'description': 'A variable instance query which defines a list of variable instances', 'properties': {'variableName': {'type': 'string', 'nullable': True, 'description': 'Filter by variable instance name.'}, 'variableNameLike': {'type': 'string', 'nullable': True, 'description': 'Filter by the variable instance name. The parameter can include the wildcard % to\\nexpress like-strategy such as: starts with ( % name), ends with (name % ) or\\ncontains ( % name % ).'}, 'processInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\nprocess instance ids.'}, 'executionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\nexecution ids.'}, 'caseInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed case instance ids.'}, 'caseExecutionIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed case execution ids.'}, 'taskIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed task\\nids.'}, 'batchIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\nbatch ids.'}, 'activityInstanceIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\nactivity instance ids.'}, 'tenantIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of the passed \\ntenant ids.'}, 'variableValues': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/VariableQueryParameterDto'}, 'description': 'An array to only include variable instances that have the certain values.\\nThe array consists of objects with the three properties name , operator and value . name (String) is the\\nvariable name, operator (String) is the comparison operator to be used and value the variable value.\\n value may be String , Number or Boolean .\\n\\nValid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater\\nthan or equal to; lt - lower than; lteq - lower than or equal to; like '}, 'variableNamesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable names provided in variableValues case-insensitively. If set to true \\n**variableName** and **variablename** are treated as equal.'}, 'variableValuesIgnoreCase': {'type': 'boolean', 'nullable': True, 'description': 'Match all variable values provided in variableValues case-insensitively. If set to\\n true **variableValue** and **variablevalue** are treated as equal.'}, 'variableScopeIdIn': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'Only include variable instances which belong to one of passed scope ids.'}, 'sorting': {'type': 'array', 'nullable': True, 'description': 'An array of criteria to sort the result by. Each element of the array is an object that specifies one ordering.\\n The position in the array identifies the rank of an ordering, i.e., whether it is primary, secondary, etc.\\n Sorting has no effect for count endpoints', 'items': {'type': 'object', 'properties': {'sortBy': {'type': 'string', 'nullable': True, 'enum': ['variableName', 'variableType', 'activityInstanceId', 'tenantId'], 'description': 'Sort the results lexicographically by a given criterion.\\nMust be used in conjunction with the sortOrder parameter.'}, 'sortOrder': {'type': 'string', 'nullable': True, 'enum': ['asc', 'desc'], 'description': 'Sort the results in a given order. Values may be asc for ascending order or desc for\\ndescending order. Must be used in conjunction with the sortBy parameter.'}}}}}} Usage: cctl apply queryVariableInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"queryVariableInstancesCount"},{"location":"commands/full/#cctl-apply-recalculateduedate","text":"Recalculate Job Due Date Recalculates the due date of a job by id. URL: /job/{id}/duedate/recalculate Schema: - Usage: cctl apply recalculateDuedate [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --creation-date-based / --not-creation-date-based boolean Recalculate the due date based on the creation date of the job or the current date. Value may only be false , as true is the default behavior. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"recalculateDuedate"},{"location":"commands/full/#cctl-apply-redeploy","text":"Redeploy Re-deploys an existing deployment. The deployment resources to re-deploy can be restricted by using the properties resourceIds or resourceNames . If no deployment resources to re-deploy are passed then all existing resources of the given deployment are re-deployed. Warning : Deployments can contain custom code in form of scripts or EL expressions to customize process behavior. This may be abused for remote execution of arbitrary code. See the section on security considerations for custom code in the user guide for details. URL: /deployment/{id}/redeploy Schema: {'title': 'RedeploymentDto', 'type': 'object', 'description': 'A JSON object with the following properties:', 'properties': {'resourceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of deployment resource ids to re-deploy.'}, 'resourceNames': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of deployment resource names to re-deploy.'}, 'source': {'type': 'string', 'nullable': True, 'description': 'Sets the source of the deployment.'}}} Usage: cctl apply redeploy [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"redeploy"},{"location":"commands/full/#cctl-apply-removaltimeasync","text":"Set Removal Time Async (POST) Sets the removal time to multiple historic process instances asynchronously (batch). At least historicProcessInstanceIds or historicProcessInstanceQuery has to be provided. If both are provided, all instances matching query criterion and instances from the list will be updated with a removal time. URL: /history/process-instance/set-removal-time Schema: {'allOf': [{'type': 'object', 'properties': {'historicProcessInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'The id of the process instance.'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}, 'hierarchical': {'type': 'boolean', 'nullable': True, 'description': 'Sets the removal time to all historic process instances in the hierarchy.\\nValue may only be true , as false is the default behavior.'}}}, {'$ref': '#/components/schemas/AbstractSetRemovalTimeDto'}]} Usage: cctl apply removalTimeAsync [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"removalTimeAsync"},{"location":"commands/full/#cctl-apply-removaltimeasynchistoricbatch","text":"Set Removal Time Async (POST) Sets the removal time to multiple historic batches asynchronously (batch). At least historicBatchIds or historicBatchQuery has to be provided. If both are provided, all instances matching query criterion and instances from the list will be updated with a removal time. URL: /history/batch/set-removal-time Schema: {'allOf': [{'type': 'object', 'properties': {'historicBatchQuery': {'type': 'object', 'nullable': True, 'description': 'Query for the historic batches to set the removal time for.'}, 'historicBatchIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'The ids of the historic batches to set the removal time for.'}}}, {'$ref': '#/components/schemas/AbstractSetRemovalTimeDto'}]} Usage: cctl apply removalTimeAsyncHistoricBatch [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"removalTimeAsyncHistoricBatch"},{"location":"commands/full/#cctl-apply-removaltimeasynchistoricdecisioninstance","text":"Set Removal Time Async (POST) Sets the removal time to multiple historic decision instances asynchronously (batch). At least historicDecisionInstanceIds or historicDecisionInstanceQuery has to be provided. If both are provided, all instances matching query criterion and instances from the list will be updated with a removal time. URL: /history/decision-instance/set-removal-time Schema: {'allOf': [{'type': 'object', 'properties': {'hierarchical': {'type': 'boolean', 'nullable': True, 'description': 'Sets the removal time to all historic decision instances in the hierarchy.\\nValue may only be true , as false is the default behavior.'}, 'historicDecisionInstanceQuery': {'$ref': '#/components/schemas/HistoricDecisionInstanceQueryDto'}, 'historicDecisionInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'The ids of the historic decision instances to set the removal time for.'}}}, {'$ref': '#/components/schemas/AbstractSetRemovalTimeDto'}]} Usage: cctl apply removalTimeAsyncHistoricDecisionInstance [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"removalTimeAsyncHistoricDecisionInstance"},{"location":"commands/full/#cctl-apply-resolve","text":"Resolve Resolves a task and updates execution variables. Resolving a task marks that the assignee is done with the task delegated to them, and that it can be sent back to the owner. Can only be executed when the task has been delegated. The assignee will be set to the owner, who performed the delegation. URL: /task/{id}/resolve Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs.'}, 'withVariablesInReturn': {'type': 'boolean', 'nullable': True, 'default': False, 'description': \"Indicates whether the response should contain the process variables or not. The\\ndefault is false with a response code of 204 . If set to true the response\\ncontains the process variables and has a response code of 200 . If the task is not\\nassociated with a process instance (e.g. if it's part of a case instance) no\\nvariables will be returned.\"}}} Usage: cctl apply resolve [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"resolve"},{"location":"commands/full/#cctl-apply-restartprocessinstance","text":"Restart Process Instance Restarts process instances that were canceled or terminated synchronously. Can also restart completed process instances. It will create a new instance using the original instance information. To execute the restart asynchronously, use the Restart Process Instance Async method. For more information about the difference between synchronous and asynchronous execution, please refer to the related section of the User Guide . URL: /process-definition/{id}/restart Schema: {'type': 'object', 'properties': {'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids to restart.'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started as part of this request.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution of\\n[input/output variable mappings](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#input-output-variable-mapping)\\nfor activities that are started as part of this request.'}, 'initialVariables': {'type': 'boolean', 'nullable': True, 'description': 'Set the initial set of variables during restart. By default, the last set of variables is used.'}, 'withoutBusinessKey': {'type': 'boolean', 'nullable': True, 'description': 'Do not take over the business key of the historic process instance.'}, 'instructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/RestartProcessInstanceModificationInstructionDto'}, 'description': '**Optional**. A JSON array of instructions that specify which activities to start the process instance at.\\nIf this property is omitted, the process instance starts at its default blank start event.'}}} Usage: cctl apply restartProcessInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"restartProcessInstance"},{"location":"commands/full/#cctl-apply-restartprocessinstanceasyncoperation","text":"Restart Process Instance Async Restarts process instances that were canceled or terminated asynchronously. Can also restart completed process instances. It will create a new instance using the original instance information. To execute the restart asynchronously, use the Restart Process Instance method. For more information about the difference between synchronous and asynchronous execution, please refer to the related section of the User Guide . URL: /process-definition/{id}/restart-async Schema: {'type': 'object', 'properties': {'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids to restart.'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started as part of this request.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution of\\n[input/output variable mappings](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#input-output-variable-mapping)\\nfor activities that are started as part of this request.'}, 'initialVariables': {'type': 'boolean', 'nullable': True, 'description': 'Set the initial set of variables during restart. By default, the last set of variables is used.'}, 'withoutBusinessKey': {'type': 'boolean', 'nullable': True, 'description': 'Do not take over the business key of the historic process instance.'}, 'instructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/RestartProcessInstanceModificationInstructionDto'}, 'description': '**Optional**. A JSON array of instructions that specify which activities to start the process instance at.\\nIf this property is omitted, the process instance starts at its default blank start event.'}}} Usage: cctl apply restartProcessInstanceAsyncOperation [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"restartProcessInstanceAsyncOperation"},{"location":"commands/full/#cctl-apply-retriesbyprocess","text":"Set Job Retries Async (POST) Create a batch to set retries of jobs associated with given processes asynchronously. URL: /process-instance/job-retries Schema: {'type': 'object', 'properties': {'processInstances': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids to fetch jobs, for which retries will be set.'}, 'retries': {'type': 'integer', 'format': 'int32', 'nullable': True, 'minimum': 0, 'description': 'An integer representing the number of retries. Please note that the value cannot be negative or null.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}}} Usage: cctl apply retriesByProcess [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"retriesByProcess"},{"location":"commands/full/#cctl-apply-retriesbyprocesshistoricquerybased","text":"Set Job Retries Async Historic Query Based (POST) Create a batch to set retries of jobs asynchronously based on a historic process instance query. URL: /process-instance/job-retries-historic-query-based Schema: {'type': 'object', 'properties': {'processInstances': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids to fetch jobs, for which retries will be set.'}, 'retries': {'type': 'integer', 'format': 'int32', 'nullable': True, 'minimum': 0, 'description': 'An integer representing the number of retries. Please note that the value cannot be negative or null.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}}} Usage: cctl apply retriesByProcessHistoricQueryBased [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"retriesByProcessHistoricQueryBased"},{"location":"commands/full/#cctl-apply-signalexecution","text":"Trigger Execution Signals an execution by id. Can for example be used to explicitly skip user tasks or signal asynchronous continuations. URL: /execution/{id}/signal Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs. Each key is a variable name and\\neach value a JSON variable value object.'}}} Usage: cctl apply signalExecution [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"signalExecution"},{"location":"commands/full/#cctl-apply-startprocessinstance","text":"Start Instance Instantiates a given process definition. Process variables and business key may be supplied in the request body. URL: /process-definition/{id}/start Schema: {'type': 'object', 'properties': {'businessKey': {'type': 'string', 'nullable': True, 'description': 'The business key of the process instance.'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': ''}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'The case instance id the process instance is to be initialized with.'}, 'startInstructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/ProcessInstanceModificationInstructionDto'}, 'description': '**Optional**. A JSON array of instructions that specify which activities to start the process instance at.\\nIf this property is omitted, the process instance starts at its default blank start event.'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started or ended as part of this request.\\n**Note**: This option is currently only respected when start instructions are submitted\\nvia the startInstructions property.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution of\\n[input/output variable mappings](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#input-output-variable-mapping)\\nfor activities that are started or ended as part of this request.\\n**Note**: This option is currently only respected when start instructions are submitted\\nvia the startInstructions property.'}, 'withVariablesInReturn': {'type': 'boolean', 'nullable': True, 'description': 'Indicates if the variables, which was used by the process instance during execution, should be returned.\\nDefault value: false '}}} Usage: cctl apply startProcessInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"startProcessInstance"},{"location":"commands/full/#cctl-apply-startprocessinstancebykey","text":"Start Instance Instantiates a given process definition, starts the latest version of the process definition which belongs to no tenant. Process variables and business key may be supplied in the request body. URL: /process-definition/key/{key}/start Schema: {'type': 'object', 'properties': {'businessKey': {'type': 'string', 'nullable': True, 'description': 'The business key of the process instance.'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': ''}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'The case instance id the process instance is to be initialized with.'}, 'startInstructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/ProcessInstanceModificationInstructionDto'}, 'description': '**Optional**. A JSON array of instructions that specify which activities to start the process instance at.\\nIf this property is omitted, the process instance starts at its default blank start event.'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started or ended as part of this request.\\n**Note**: This option is currently only respected when start instructions are submitted\\nvia the startInstructions property.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution of\\n[input/output variable mappings](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#input-output-variable-mapping)\\nfor activities that are started or ended as part of this request.\\n**Note**: This option is currently only respected when start instructions are submitted\\nvia the startInstructions property.'}, 'withVariablesInReturn': {'type': 'boolean', 'nullable': True, 'description': 'Indicates if the variables, which was used by the process instance during execution, should be returned.\\nDefault value: false '}}} Usage: cctl apply startProcessInstanceByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"startProcessInstanceByKey"},{"location":"commands/full/#cctl-apply-startprocessinstancebykeyandtenantid","text":"Start Instance Instantiates a given process definition, starts the latest version of the process definition for tenant. Process variables and business key may be supplied in the request body. URL: /process-definition/key/{key}/tenant-id/{tenant-id}/start Schema: {'type': 'object', 'properties': {'businessKey': {'type': 'string', 'nullable': True, 'description': 'The business key of the process instance.'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': ''}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'The case instance id the process instance is to be initialized with.'}, 'startInstructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/ProcessInstanceModificationInstructionDto'}, 'description': '**Optional**. A JSON array of instructions that specify which activities to start the process instance at.\\nIf this property is omitted, the process instance starts at its default blank start event.'}, 'skipCustomListeners': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution listener invocation for activities that are started or ended as part of this request.\\n**Note**: This option is currently only respected when start instructions are submitted\\nvia the startInstructions property.'}, 'skipIoMappings': {'type': 'boolean', 'nullable': True, 'description': 'Skip execution of\\n[input/output variable mappings](https://docs.camunda.org/manual/latest/user-guide/process-engine/variables/#input-output-variable-mapping)\\nfor activities that are started or ended as part of this request.\\n**Note**: This option is currently only respected when start instructions are submitted\\nvia the startInstructions property.'}, 'withVariablesInReturn': {'type': 'boolean', 'nullable': True, 'description': 'Indicates if the variables, which was used by the process instance during execution, should be returned.\\nDefault value: false '}}} Usage: cctl apply startProcessInstanceByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"startProcessInstanceByKeyAndTenantId"},{"location":"commands/full/#cctl-apply-submit","text":"Submit Form Completes a task and updates process variables using a form submit. There are two difference between this method and the complete method: If the task is in state PENDING - i.e., has been delegated before, it is not completed but resolved. Otherwise it will be completed. If the task has Form Field Metadata defined, the process engine will perform backend validation for any form fields which have validators defined. See the Generated Task Forms section of the User Guide for more information. URL: /task/{id}/submit-form Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs.'}, 'withVariablesInReturn': {'type': 'boolean', 'nullable': True, 'default': False, 'description': \"Indicates whether the response should contain the process variables or not. The\\ndefault is false with a response code of 204 . If set to true the response\\ncontains the process variables and has a response code of 200 . If the task is not\\nassociated with a process instance (e.g. if it's part of a case instance) no\\nvariables will be returned.\"}}} Usage: cctl apply submit [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"submit"},{"location":"commands/full/#cctl-apply-submitform","text":"Submit Start Form Starts a process instance using a set of process variables and the business key. If the start event has Form Field Metadata defined, the process engine will perform backend validation for any form fields which have validators defined. See Documentation on Generated Task Forms . URL: /process-definition/{id}/submit-form Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': ''}, 'businessKey': {'type': 'string', 'nullable': True, 'description': 'The business key the process instance is to be initialized with.\\nThe business key uniquely identifies the process instance in the context of the given process definition.'}}} Usage: cctl apply submitForm [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"submitForm"},{"location":"commands/full/#cctl-apply-submitformbykey","text":"Submit Start Form Starts the latest version of the process definition which belongs to no tenant using a set of process variables and the business key. If the start event has Form Field Metadata defined, the process engine will perform backend validation for any form fields which have validators defined. See Documentation on Generated Task Forms . URL: /process-definition/key/{key}/submit-form Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': ''}, 'businessKey': {'type': 'string', 'nullable': True, 'description': 'The business key the process instance is to be initialized with.\\nThe business key uniquely identifies the process instance in the context of the given process definition.'}}} Usage: cctl apply submitFormByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"submitFormByKey"},{"location":"commands/full/#cctl-apply-submitformbykeyandtenantid","text":"Submit Start Form Starts the latest version of the process definition for a tenant using a set of process variables and the business key. If the start event has Form Field Metadata defined, the process engine will perform backend validation for any form fields which have validators defined. See Documentation on Generated Task Forms . URL: /process-definition/key/{key}/tenant-id/{tenant-id}/submit-form Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': ''}, 'businessKey': {'type': 'string', 'nullable': True, 'description': 'The business key the process instance is to be initialized with.\\nThe business key uniquely identifies the process instance in the context of the given process definition.'}}} Usage: cctl apply submitFormByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"submitFormByKeyAndTenantId"},{"location":"commands/full/#cctl-apply-suspensionstate","text":"Activate/Suspend In Group Activates or suspends process instances by providing certain criteria:","title":"suspensionState"},{"location":"commands/full/#activatesuspend-process-instance-by-process-definition-id","text":"suspend processDefinitionId","title":"Activate/Suspend Process Instance By Process Definition Id"},{"location":"commands/full/#activatesuspend-process-instance-by-process-definition-key","text":"suspend processDefinitionKey processDefinitionTenantId processDefinitionWithoutTenantId","title":"Activate/Suspend Process Instance By Process Definition Key"},{"location":"commands/full/#activatesuspend-process-instance-in-group","text":"suspend processInstanceIds processInstanceQuery historicProcessInstanceQuery URL: /process-instance/suspended Schema: {'allOf': [{'type': 'object', 'properties': {'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The process definition id of the process instances to activate or suspend.\\n\\n**Note**: This parameter can be used only with combination of suspended .'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'The process definition key of the process instances to activate or suspend.\\n\\n**Note**: This parameter can be used only with combination of suspended , processDefinitionTenantId , and processDefinitionWithoutTenantId .'}, 'processDefinitionTenantId': {'type': 'string', 'nullable': True, 'description': 'Only activate or suspend process instances of a process definition which belongs to a tenant with the given id.\\n\\n**Note**: This parameter can be used only with combination of suspended , processDefinitionKey , and processDefinitionWithoutTenantId .'}, 'processDefinitionWithoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only activate or suspend process instances of a process definition which belongs to no tenant.\\nValue may only be true, as false is the default behavior.\\n\\n**Note**: This parameter can be used only with combination of suspended , processDefinitionKey , and processDefinitionTenantId .'}, 'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids which defines a group of process instances\\nwhich will be activated or suspended by the operation.\\n\\n**Note**: This parameter can be used only with combination of suspended , processInstanceQuery , and historicProcessInstanceQuery .'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}}}, {'$ref': '#/components/schemas/SuspensionStateDto'}]} Usage: cctl apply suspensionState [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"Activate/Suspend Process Instance In Group"},{"location":"commands/full/#cctl-apply-suspensionstateasyncoperation","text":"Activate/Suspend In Batch Activates or suspends process instances asynchronously with a list of process instance ids, a process instance query, and/or a historical process instance query. URL: /process-instance/suspended-async Schema: {'allOf': [{'type': 'object', 'properties': {'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids which defines a group of process instances\\nwhich will be activated or suspended by the operation.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}}}, {'$ref': '#/components/schemas/SuspensionStateDto'}]} Usage: cctl apply suspensionStateAsyncOperation [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"suspensionStateAsyncOperation"},{"location":"commands/full/#cctl-apply-suspensionstateby","text":"Activate/Suspend Jobs Activates or suspends jobs matching the given criterion. This can only be on of: * jobDefinitionId * processDefinitionId * processInstanceId * processDefinitionKey URL: /job/suspended Schema: {'allOf': [{'type': 'object', 'description': 'Defines by which selection criterion to activate or suspend jobs.\\nThis selection criterion are mutually exclusive and can only be on of:\\n* jobDefinitionId \\n* processDefinitionId \\n* processInstanceId \\n* processDefinitionKey ', 'properties': {'jobDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The job definition id of the jobs to activate or suspend.'}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The process definition id of the jobs to activate or suspend.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'The process instance id of the jobs to activate or suspend.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'The process definition key of the jobs to activate or suspend.'}, 'processDefinitionTenantId': {'type': 'string', 'nullable': True, 'description': 'Only activate or suspend jobs of a process definition which belongs to a tenant\\nwith the given id. Works only when selecting with processDefinitionKey .'}, 'processDefinitionWithoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only activate or suspend jobs of a process definition which belongs to no tenant.\\nValue may only be true , as false is the default behavior. Works only when selecting with processDefinitionKey .'}}}, {'$ref': '#/components/schemas/SuspensionStateDto'}]} Usage: cctl apply suspensionStateBy [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"suspensionStateBy"},{"location":"commands/full/#cctl-apply-suspensionstatebyid","text":"Activate/Suspend Process Instance By Id Activates or suspends a given process instance by id. URL: /process-instance/{id}/suspended Schema: {'type': 'object', 'properties': {'suspended': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend a given instance \\n(e.g. process instance, job, job definition, or batch). When the value is set to true, \\nthe given instance will be suspended and when the value is set to false, \\nthe given instance will be activated.'}}} Usage: cctl apply suspensionStateById [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"suspensionStateById"},{"location":"commands/full/#cctl-apply-suspensionstatejobdefinition","text":"Activate/Suspend Job Definition By Id Activates or suspends a given job definition by id. URL: /job-definition/{id}/suspended Schema: {'allOf': [{'type': 'object', 'properties': {'includeJobs': {'type': 'boolean', 'nullable': True, 'description': 'A Boolean value which indicates whether to activate or suspend also all jobs of\\nthe referenced job definitions. When the value is set to true , all jobs\\nof the provided job definitions will be activated or suspended and\\nwhen the value is set to false , the suspension state of all jobs\\nof the provided job definitions will not be updated.'}, 'executionDate': {'type': 'string', 'nullable': True, 'description': \"The date on which the referenced job definitions will be activated or suspended. If null,\\nthe suspension state of the given job definitions is updated\\nimmediately. By [default](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/), the date must have the format yyyy-MM-\\ndd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 .\"}}}, {'$ref': '#/components/schemas/SuspensionStateDto'}]} Usage: cctl apply suspensionStateJobDefinition [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"suspensionStateJobDefinition"},{"location":"commands/full/#cctl-apply-suspensionstatejobdefinitions","text":"Activate/Suspend Job Definitions Activates or suspends job definitions with the given process definition id or process definition key. URL: /job-definition/suspended Schema: {'allOf': [{'type': 'object', 'description': 'Defines by which selection criterion to activate or suspend job definitions.\\nThe selection criteria are mutually exclusive and can only be one of:\\n* processDefinitionId \\n* processDefinitionKey ', 'properties': {'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The process definition id of the job definitions to activate or suspend.'}, 'processDefinitionKey': {'type': 'string', 'nullable': True, 'description': 'The process definition key of the job definitions to activate or suspend.'}, 'processDefinitionTenantId': {'type': 'string', 'nullable': True, 'description': 'Only activate or suspend job definitions of a process definition which belongs to a\\ntenant with the given id.\\n\\nNote that this parameter will only be considered \\nin combination with processDefinitionKey .'}, 'processDefinitionWithoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'Only activate or suspend job definitions of a process definition which belongs to\\nno tenant. Value may only be true , as false is the default\\nbehavior.\\n\\nNote that this parameter will only be considered \\nin combination with processDefinitionKey .'}}}, {'$ref': '#/components/schemas/JobDefinitionSuspensionStateDto'}]} Usage: cctl apply suspensionStateJobDefinitions [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"suspensionStateJobDefinitions"},{"location":"commands/full/#cctl-apply-task","text":"Update Updates a task. URL: /task/{id} Schema: {'type': 'object', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'The task id.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'The task name.'}, 'assignee': {'type': 'string', 'nullable': True, 'description': \"The assignee's id.\"}, 'owner': {'type': 'string', 'nullable': True, 'description': \"The owner's id.\"}, 'created': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The date the task was created on.\\n[Default format](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ .\"}, 'due': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The task's due date.\\n[Default format](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ .\"}, 'followUp': {'type': 'string', 'format': 'date-time', 'nullable': True, 'description': \"The follow-up date for the task.\\n[Default format](https://docs.camunda.org/manual/latest/reference/rest/overview/date-format/)\\n yyyy-MM-dd'T'HH:mm:ss.SSSZ .\"}, 'delegationState': {'type': 'string', 'nullable': True, 'enum': ['PENDING', 'RESOLVED'], 'description': \"The task's delegation state. Possible values are PENDING and RESOLVED .\"}, 'description': {'type': 'string', 'nullable': True, 'description': \"The task's description.\"}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'The id of the execution the task belongs to.'}, 'parentTaskId': {'type': 'string', 'nullable': True, 'description': 'The id the parent task, if this task is a subtask.'}, 'priority': {'type': 'integer', 'format': 'int32', 'nullable': True, 'description': \"The task's priority.\"}, 'processDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the process definition the task belongs to.'}, 'processInstanceId': {'type': 'string', 'nullable': True, 'description': 'The id of the process instance the task belongs to.'}, 'caseExecutionId': {'type': 'string', 'nullable': True, 'description': 'The id of the case execution the task belongs to.'}, 'caseDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the case definition the task belongs to.'}, 'caseInstanceId': {'type': 'string', 'nullable': True, 'description': 'The id of the case instance the task belongs to.'}, 'taskDefinitionKey': {'type': 'string', 'nullable': True, 'description': \"The task's key.\"}, 'suspended': {'type': 'boolean', 'nullable': True, 'description': 'Whether the task belongs to a process instance that is suspended.'}, 'formKey': {'type': 'string', 'nullable': True, 'description': 'If not null , the form key for the task.'}, 'camundaFormRef': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/CamundaFormRef'}, 'description': 'A reference to a specific version of a Camunda Form.'}, 'tenantId': {'type': 'string', 'nullable': True, 'description': 'If not null , the tenant id of the task.'}}} Usage: cctl apply task [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"task"},{"location":"commands/full/#cctl-apply-tenant","text":"Update Tenant Updates a given tenant. URL: /tenant/{id} Schema: {'type': 'object', 'properties': {'id': {'type': 'string', 'nullable': True, 'description': 'The id of the tenant.'}, 'name': {'type': 'string', 'nullable': True, 'description': 'The name of the tenant.'}}} Usage: cctl apply tenant [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"tenant"},{"location":"commands/full/#cctl-apply-throwsignal","text":"Event A signal is an event of global scope (broadcast semantics) and is delivered to all active handlers. Internally this maps to the engine's signal event received builder method RuntimeService#createSignalEvent() . For more information about the signal behavior, see the Signal Events section of the BPMN 2.0 Implementation Reference . URL: /signal Schema: {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of the signal to deliver.\\n\\n**Note**: This property is mandatory.'}, 'executionId': {'type': 'string', 'nullable': True, 'description': 'Optionally specifies a single execution which is notified by the signal.\\n\\n**Note**: If no execution id is defined the signal is broadcasted to all subscribed\\nhandlers. '}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs. Each key is a variable name and\\neach value a JSON variable value object.'}, 'tenantId': {'type': 'string', 'nullable': True, 'description': 'Specifies a tenant to deliver the signal. The signal can only be received on\\nexecutions or process definitions which belongs to the given tenant.\\n\\n**Note**: Cannot be used in combination with executionId.'}, 'withoutTenantId': {'type': 'boolean', 'nullable': True, 'description': 'If true the signal can only be received on executions or process definitions which\\nbelongs to no tenant. Value may not be false as this is the default behavior.\\n\\n**Note**: Cannot be used in combination with executionId .'}}} Usage: cctl apply throwSignal [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"throwSignal"},{"location":"commands/full/#cctl-apply-triggerevent","text":"Trigger Message Event Subscription Delivers a message to a specific execution by id, to trigger an existing message event subscription. Inject process variables as the message's payload. URL: /execution/{id}/messageSubscriptions/{messageName}/trigger Schema: {'type': 'object', 'properties': {'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A JSON object containing variable key-value pairs. Each key is a variable name and\\neach value a JSON variable value object.'}}} Usage: cctl apply triggerEvent [OPTIONS] MESSAGENAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"triggerEvent"},{"location":"commands/full/#cctl-apply-unclaim","text":"Unclaim Resets a task's assignee. If successful, the task is not assigned to a user. URL: /task/{id}/unclaim Schema: - Usage: cctl apply unclaim [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"unclaim"},{"location":"commands/full/#cctl-apply-unlock","text":"Unlock Unlocks an external task by id. Clears the task's lock expiration time and worker id. URL: /external-task/{id}/unlock Schema: - Usage: cctl apply unlock [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"unlock"},{"location":"commands/full/#cctl-apply-unlockuser","text":"Unlock User Unlocks a user by id. URL: /user/{id}/unlock Schema: - Usage: cctl apply unlockUser [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"unlockUser"},{"location":"commands/full/#cctl-apply-validatemigrationplan","text":"Validate Migration Plan Validates a migration plan statically without executing it. This corresponds to the creation time validation described in the user guide. URL: /migration/validate Schema: {'type': 'object', 'properties': {'sourceProcessDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the source process definition for the migration.'}, 'targetProcessDefinitionId': {'type': 'string', 'nullable': True, 'description': 'The id of the target process definition for the migration.'}, 'instructions': {'type': 'array', 'nullable': True, 'items': {'$ref': '#/components/schemas/MigrationInstructionDto'}, 'description': 'A list of migration instructions which map equal activities. Each\\nmigration instruction is a JSON object with the following properties:'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': \"A map of variables which will be set into the process instances' scope.\\nEach key is a variable name and each value a JSON variable value object.\"}}} Usage: cctl apply validateMigrationPlan [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"validateMigrationPlan"},{"location":"commands/full/#cctl-apply-variablesasyncoperation","text":"Set Variables Async (POST) Update or create runtime process variables in the root scope of process instances. URL: /process-instance/variables-async Schema: {'type': 'object', 'properties': {'processInstanceIds': {'type': 'array', 'nullable': True, 'items': {'type': 'string'}, 'description': 'A list of process instance ids that define a group of process instances\\nto which the operation will set variables.\\n\\nPlease note that if processInstanceIds , processInstanceQuery and historicProcessInstanceQuery \\nare defined, the resulting operation will be performed on the union of these sets.'}, 'processInstanceQuery': {'$ref': '#/components/schemas/ProcessInstanceQueryDto'}, 'historicProcessInstanceQuery': {'$ref': '#/components/schemas/HistoricProcessInstanceQueryDto'}, 'variables': {'type': 'object', 'nullable': True, 'additionalProperties': {'$ref': '#/components/schemas/VariableValueDto'}, 'description': 'A variables the operation will set in the root scope of the process instances.'}}} Usage: cctl apply variablesAsyncOperation [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"variablesAsyncOperation"},{"location":"commands/full/#cctl-apply-verifyuser","text":"Verify User Verifies that user credentials are valid. URL: /identity/verify Schema: {'type': 'object', 'properties': {'username': {'type': 'string', 'nullable': True, 'description': 'The username of a user.'}, 'password': {'type': 'string', 'nullable': True, 'description': 'A password of a user.'}}} Usage: cctl apply verifyUser [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --skip-validation boolean ignore validation False -f , --file filename input as yaml None --help boolean Show this message and exit. False","title":"verifyUser"},{"location":"commands/full/#cctl-delete","text":"delete ressources Usage: cctl delete [OPTIONS] COMMAND [ARGS]... Options: Name Type Description Default -e , --engine text N/A None --help boolean Show this message and exit. False","title":"delete"},{"location":"commands/full/#cctl-delete-attachment","text":"Delete Removes an attachment from a task by id. URL: /task/{id}/attachment/{attachmentId} Schema: - Usage: cctl delete attachment [OPTIONS] ATTACHMENTID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"attachment"},{"location":"commands/full/#cctl-delete-authorization","text":"Delete Authorization Deletes an authorization by id. URL: /authorization/{id} Schema: - Usage: cctl delete authorization [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"authorization"},{"location":"commands/full/#cctl-delete-batch","text":"Delete Deletes a batch by id, including all related jobs and job definitions. Optionally also deletes the batch history. URL: /batch/{id} Schema: - Usage: cctl delete batch [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --cascade / --not-cascade boolean true , if the historic batch and historic job logs for this batch should also be deleted. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"batch"},{"location":"commands/full/#cctl-delete-clearincidentannotation","text":"Clear Incident Annotation Clears the annotation of an incident with given id. URL: /incident/{id}/annotation Schema: - Usage: cctl delete clearIncidentAnnotation [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"clearIncidentAnnotation"},{"location":"commands/full/#cctl-delete-deployment","text":"Delete Deletes a deployment by id. URL: /deployment/{id} Schema: - Usage: cctl delete deployment [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --skip-io-mappings / --not-skip-io-mappings boolean true , if all input/output mappings should not be invoked. None --skip-custom-listeners / --not-skip-custom-listeners boolean true , if only the built-in ExecutionListeners should be notified with the end event. None --cascade / --not-cascade boolean true , if all process instances, historic process instances and jobs for this deployment should be deleted. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"deployment"},{"location":"commands/full/#cctl-delete-filter","text":"Delete Filter Deletes a filter by id. URL: /filter/{id} Schema: - Usage: cctl delete filter [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"filter"},{"location":"commands/full/#cctl-delete-group","text":"Delete Group Deletes a group by id. URL: /group/{id} Schema: - Usage: cctl delete group [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"group"},{"location":"commands/full/#cctl-delete-groupmember","text":"Delete a Group Member Removes a member from a group. URL: /group/{id}/members/{userId} Schema: - Usage: cctl delete groupMember [OPTIONS] USERID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"groupMember"},{"location":"commands/full/#cctl-delete-groupmembership","text":"Create Tenant Group Membership Creates a membership between a tenant and a group. URL: /tenant/{id}/group-members/{groupId} Schema: - Usage: cctl delete groupMembership [OPTIONS] GROUPID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"groupMembership"},{"location":"commands/full/#cctl-delete-historicbatch","text":"Delete Historic Batch Deletes a historic batch by id, including related historic job logs. URL: /history/batch/{id} Schema: - Usage: cctl delete historicBatch [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"historicBatch"},{"location":"commands/full/#cctl-delete-historicprocessinstance","text":"Delete Deletes a process instance from the history by id. URL: /history/process-instance/{id} Schema: - Usage: cctl delete historicProcessInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --fail-if-not-exists / --not-fail-if-not-exists boolean If set to false , the request will still be successful if the process id is not found. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"historicProcessInstance"},{"location":"commands/full/#cctl-delete-historicvariableinstance","text":"Delete Variable Instance Deletes a historic variable instance by id. URL: /history/variable-instance/{id} Schema: - Usage: cctl delete historicVariableInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"historicVariableInstance"},{"location":"commands/full/#cctl-delete-historicvariableinstancesofhistoricprocessinstance","text":"Delete Variable Instances Deletes all variables of a process instance from the history by id. URL: /history/process-instance/{id}/variable-instances Schema: - Usage: cctl delete historicVariableInstancesOfHistoricProcessInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"historicVariableInstancesOfHistoricProcessInstance"},{"location":"commands/full/#cctl-delete-incident","text":"Resolve Incident Resolves an incident with given id. URL: /incident/{id} Schema: - Usage: cctl delete incident [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"incident"},{"location":"commands/full/#cctl-delete-localexecutionvariable","text":"Delete Local Execution Variable Deletes a variable in the context of a given execution by id. Deletion does not propagate upwards in the execution hierarchy. URL: /execution/{id}/localVariables/{varName} Schema: - Usage: cctl delete localExecutionVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"localExecutionVariable"},{"location":"commands/full/#cctl-delete-processdefinition","text":"Delete Deletes a running process instance by id. URL: /process-definition/{id} Schema: - Usage: cctl delete processDefinition [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --skip-io-mappings / --not-skip-io-mappings boolean A boolean value to control whether input/output mappings should be executed during deletion. true , if input/output mappings should not be invoked. None --skip-custom-listeners / --not-skip-custom-listeners boolean true , if only the built-in ExecutionListeners should be notified with the end event. None --cascade / --not-cascade boolean true , if all process instances, historic process instances and jobs for this process definition should be deleted. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"processDefinition"},{"location":"commands/full/#cctl-delete-processdefinitionsbykey","text":"Delete By Key Deletes process definitions by a given key which belong to no tenant id. URL: /process-definition/key/{key} Schema: - Usage: cctl delete processDefinitionsByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --skip-io-mappings / --not-skip-io-mappings boolean A boolean value to control whether input/output mappings should be executed during deletion. true , if input/output mappings should not be invoked. None --skip-custom-listeners / --not-skip-custom-listeners boolean true , if only the built-in ExecutionListeners should be notified with the end event. None --cascade / --not-cascade boolean true , if all process instances, historic process instances and jobs for this process definition should be deleted. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"processDefinitionsByKey"},{"location":"commands/full/#cctl-delete-processdefinitionsbykeyandtenantid","text":"Delete By Key Deletes process definitions by a given key and which belong to a tenant id. URL: /process-definition/key/{key}/tenant-id/{tenant-id} Schema: - Usage: cctl delete processDefinitionsByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --skip-io-mappings / --not-skip-io-mappings boolean A boolean value to control whether input/output mappings should be executed during deletion. true , if input/output mappings should not be invoked. None --skip-custom-listeners / --not-skip-custom-listeners boolean true , if only the built-in ExecutionListeners should be notified with the end event. None --cascade / --not-cascade boolean true , if all process instances, historic process instances and jobs for this process definition should be deleted. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"processDefinitionsByKeyAndTenantId"},{"location":"commands/full/#cctl-delete-processinstance","text":"Delete Deletes a running process instance by id. URL: /process-instance/{id} Schema: - Usage: cctl delete processInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --fail-if-not-exists / --not-fail-if-not-exists boolean If set to false, the request will still be successful if the process id is not found. None --skip-subprocesses / --not-skip-subprocesses boolean If set to true, subprocesses related to deleted processes will be skipped. None --skip-io-mappings / --not-skip-io-mappings boolean If set to true, the input/output mappings will be skipped. None --skip-custom-listeners / --not-skip-custom-listeners boolean If set to true, the custom listeners will be skipped. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"processInstance"},{"location":"commands/full/#cctl-delete-processinstancevariable","text":"Delete Process Variable Deletes a variable of a process instance by id. URL: /process-instance/{id}/variables/{varName} Schema: - Usage: cctl delete processInstanceVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"processInstanceVariable"},{"location":"commands/full/#cctl-delete-task","text":"Delete Removes a task by id. URL: /task/{id} Schema: - Usage: cctl delete task [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"task"},{"location":"commands/full/#cctl-delete-tasklocalvariable","text":"Delete Local Task Variable Removes a local variable from a task by id. URL: /task/{id}/localVariables/{varName} Schema: - Usage: cctl delete taskLocalVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"taskLocalVariable"},{"location":"commands/full/#cctl-delete-taskmetrics","text":"Delete Task Worker Metrics Deletes all task worker metrics prior to the given date or all if no date is provided. URL: /metrics/task-worker Schema: - Usage: cctl delete taskMetrics [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --date text The date prior to which all task worker metrics should be deleted. None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"taskMetrics"},{"location":"commands/full/#cctl-delete-taskvariable","text":"Delete Task Variable Removes a variable that is visible to a task. A variable is visible to a task if it is a local task variable or declared in a parent scope of the task. See documentation on visiblity of variables . URL: /task/{id}/variables/{varName} Schema: - Usage: cctl delete taskVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"taskVariable"},{"location":"commands/full/#cctl-delete-tenant","text":"Delete Tenant Deletes a tenant by id. URL: /tenant/{id} Schema: - Usage: cctl delete tenant [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"tenant"},{"location":"commands/full/#cctl-delete-user","text":"Delete Deletes a user by id. URL: /user/{id} Schema: - Usage: cctl delete user [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"user"},{"location":"commands/full/#cctl-delete-usermembership","text":"Delete a Tenant User Membership Deletes a membership between a tenant and an user. URL: /tenant/{id}/user-members/{userId} Schema: - Usage: cctl delete userMembership [OPTIONS] USERID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"userMembership"},{"location":"commands/full/#cctl-describe","text":"get complex collected information about engine ressources Usage: cctl describe [OPTIONS] COMMAND [ARGS]... Options: Name Type Description Default -e , --engine text N/A None --help boolean Show this message and exit. False","title":"describe"},{"location":"commands/full/#cctl-get","text":"query resources of camunda engine Usage: cctl get [OPTIONS] COMMAND [ARGS]... Options: Name Type Description Default -e , --engine text N/A None --help boolean Show this message and exit. False","title":"get"},{"location":"commands/full/#cctl-get-activityinstancetree","text":"Get Activity Instance Retrieves an Activity Instance (Tree) for a given process instance by id. URL: /process-instance/{id}/activity-instances Schema: - Usage: cctl get activityInstanceTree [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"activityInstanceTree"},{"location":"commands/full/#cctl-get-activitystatistics","text":"Get Activity Instance Statistics Retrieves runtime statistics of a given process definition, grouped by activities. These statistics include the number of running activity instances, optionally the number of failed jobs and also optionally the number of incidents either grouped by incident types or for a specific incident type. Note : This does not include historic data. URL: /process-definition/{id}/statistics Schema: - Usage: cctl get activityStatistics [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --incidents-for-type text If this property has been set with any incident type (i.e., a string value) the result will only include the number of incidents for the assigned incident type. Cannot be used in combination with incidents . See the User Guide for a list of incident types. None --incidents / --not-incidents boolean Valid values for this property are true or false . If this property has been set to true the result will include the corresponding number of incidents for each occurred incident type. If it is set to false , the incidents will not be included in the result. Cannot be used in combination with incidentsForType . None --failed-jobs / --not-failed-jobs boolean Whether to include the number of failed jobs in the result or not. Valid values are true or false . None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"activityStatistics"},{"location":"commands/full/#cctl-get-activitystatisticsbyprocessdefinitionkey","text":"Get Activity Instance Statistics Retrieves runtime statistics of the latest version of the given process definition which belongs to no tenant, grouped by activities. These statistics include the number of running activity instances, optionally the number of failed jobs and also optionally the number of incidents either grouped by incident types or for a specific incident type. Note : This does not include historic data. URL: /process-definition/key/{key}/statistics Schema: - Usage: cctl get activityStatisticsByProcessDefinitionKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --incidents-for-type text If this property has been set with any incident type (i.e., a string value) the result will only include the number of incidents for the assigned incident type. Cannot be used in combination with incidents . See the User Guide for a list of incident types. None --incidents / --not-incidents boolean Valid values for this property are true or false . If this property has been set to true the result will include the corresponding number of incidents for each occurred incident type. If it is set to false , the incidents will not be included in the result. Cannot be used in combination with incidentsForType . None --failed-jobs / --not-failed-jobs boolean Whether to include the number of failed jobs in the result or not. Valid values are true or false . None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"activityStatisticsByProcessDefinitionKey"},{"location":"commands/full/#cctl-get-activitystatisticsbyprocessdefinitionkeyandtenantid","text":"Get Activity Instance Statistics Retrieves runtime statistics of the latest version of the given process definition for a tenant, grouped by activities. These statistics include the number of running activity instances, optionally the number of failed jobs and also optionally the number of incidents either grouped by incident types or for a specific incident type. Note : This does not include historic data. URL: /process-definition/key/{key}/tenant-id/{tenant-id}/statistics Schema: - Usage: cctl get activityStatisticsByProcessDefinitionKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --incidents-for-type text If this property has been set with any incident type (i.e., a string value) the result will only include the number of incidents for the assigned incident type. Cannot be used in combination with incidents . See the User Guide for a list of incident types. None --incidents / --not-incidents boolean Valid values for this property are true or false . If this property has been set to true the result will include the corresponding number of incidents for each occurred incident type. If it is set to false , the incidents will not be included in the result. Cannot be used in combination with incidentsForType . None --failed-jobs / --not-failed-jobs boolean Whether to include the number of failed jobs in the result or not. Valid values are true or false . None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"activityStatisticsByProcessDefinitionKeyAndTenantId"},{"location":"commands/full/#cctl-get-attachment","text":"Get Retrieves a task attachment by task id and attachment id. URL: /task/{id}/attachment/{attachmentId} Schema: - Usage: cctl get attachment [OPTIONS] ATTACHMENTID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"attachment"},{"location":"commands/full/#cctl-get-attachmentdata","text":"Get (Binary) Retrieves the binary content of a task attachment by task id and attachment id. URL: /task/{id}/attachment/{attachmentId}/data Schema: - Usage: cctl get attachmentData [OPTIONS] ATTACHMENTID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"attachmentData"},{"location":"commands/full/#cctl-get-attachments","text":"Get List Gets the attachments for a task. URL: /task/{id}/attachment Schema: - Usage: cctl get attachments [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"attachments"},{"location":"commands/full/#cctl-get-authorization","text":"Get Authorization Retrieves an authorization by id. URL: /authorization/{id} Schema: - Usage: cctl get authorization [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"authorization"},{"location":"commands/full/#cctl-get-authorizationcount","text":"Get Authorization Count Queries for authorizations using a list of parameters and retrieves the count. URL: /authorization/count Schema: - Usage: cctl get authorizationCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --resource-id text Filter by resource id. None --resource-type text Filter by an integer representation of the resource type. See the User Guide for a list of integer representations of resource types. None --group-id-in text Filter by a comma-separated list of groupIds. None --user-id-in text Filter by a comma-separated list of userIds. None --type text Filter by authorization type. (0=global, 1=grant, 2=revoke). See the User Guide for more information about authorization types. None --id text Filter by the id of the authorization. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"authorizationCount"},{"location":"commands/full/#cctl-get-batch","text":"Get Retrieves a batch by id, according to the Batch interface in the engine. URL: /batch/{id} Schema: - Usage: cctl get batch [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"batch"},{"location":"commands/full/#cctl-get-batchstatistics","text":"Get Statistics Queries for batch statistics that fulfill given parameters. Parameters may be the properties of batches, such as the id or type. The size of the result set can be retrieved by using the Get Batch Statistics Count method. URL: /batch/statistics Schema: - Usage: cctl get batchStatistics [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --suspended / --not-suspended boolean A Boolean value which indicates whether only active or suspended batches should be included. When the value is set to true , only suspended batches will be returned and when the value is set to false , only active batches will be returned. None --without-tenant-id / --not-without-tenant-id boolean Only include batches which belong to no tenant. Value can effectively only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of Strings . A batch matches if it has one of the given tenant ids. None --type text Filter by batch type. See the User Guide for more information about batch types. None --batch-id text Filter by batch id. None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"batchStatistics"},{"location":"commands/full/#cctl-get-batchstatisticscount","text":"Get Statistics Count Requests the number of batch statistics that fulfill the query criteria. Takes the same filtering parameters as the Get Batch Statistics method. URL: /batch/statistics/count Schema: - Usage: cctl get batchStatisticsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --suspended / --not-suspended boolean A Boolean value which indicates whether only active or suspended batches should be included. When the value is set to true , only suspended batches will be returned and when the value is set to false , only active batches will be returned. None --without-tenant-id / --not-without-tenant-id boolean Only include batches which belong to no tenant. Value can effectively only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of Strings . A batch matches if it has one of the given tenant ids. None --type text Filter by batch type. See the User Guide for more information about batch types. None --batch-id text Filter by batch id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"batchStatisticsCount"},{"location":"commands/full/#cctl-get-batches","text":"Get List Queries for batches that fulfill given parameters. Parameters may be the properties of batches, such as the id or type. The size of the result set can be retrieved by using the Get Batch Count method. URL: /batch Schema: - Usage: cctl get batches [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --suspended / --not-suspended boolean A Boolean value which indicates whether only active or suspended batches should be included. When the value is set to true , only suspended batches will be returned and when the value is set to false , only active batches will be returned. None --without-tenant-id / --not-without-tenant-id boolean Only include batches which belong to no tenant. Value can effectively only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of Strings . A batch matches if it has one of the given tenant ids. None --type text Filter by batch type. See the User Guide for more information about batch types. None --batch-id text Filter by batch id. None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"batches"},{"location":"commands/full/#cctl-get-batchescount","text":"Get List Count Requests the number of batches that fulfill the query criteria. Takes the same filtering parameters as the Get Batches method. URL: /batch/count Schema: - Usage: cctl get batchesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --suspended / --not-suspended boolean A Boolean value which indicates whether only active or suspended batches should be included. When the value is set to true , only suspended batches will be returned and when the value is set to false , only active batches will be returned. None --without-tenant-id / --not-without-tenant-id boolean Only include batches which belong to no tenant. Value can effectively only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of Strings . A batch matches if it has one of the given tenant ids. None --type text Filter by batch type. See the User Guide for more information about batch types. None --batch-id text Filter by batch id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"batchesCount"},{"location":"commands/full/#cctl-get-cleanablehistoricbatchesreport","text":"Get Cleanable Batch Report Retrieves a report about a historic batch operations relevant to history cleanup (see History cleanup ) so that you can tune the history time to live. These reports include the count of the finished batches, cleanable batches and type of the batch. The size of the result set can be retrieved by using the Get Cleanable Batch Report Count method. Please note: The history time to live for batch operations does not support Multi-Tenancy . The report will return an information for all batch operations (for all tenants) if you have permissions to see the history. URL: /history/batch/cleanable-batch-report Schema: - Usage: cctl get cleanableHistoricBatchesReport [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"cleanableHistoricBatchesReport"},{"location":"commands/full/#cctl-get-cleanablehistoricbatchesreportcount","text":"Get Cleanable Batch Report Count Queries for the number of report results about a historic batch operations relevant to history cleanup (see History cleanup ). Takes the same parameters as the Get Cleanable Batch Report method. URL: /history/batch/cleanable-batch-report/count Schema: - Usage: cctl get cleanableHistoricBatchesReportCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"cleanableHistoricBatchesReportCount"},{"location":"commands/full/#cctl-get-cleanablehistoricdecisioninstancereport","text":"Get Cleanable Decision Instance Report Retrieves a report about a decision definition and finished decision instances relevant to history cleanup (see History cleanup ), so that you can tune the history time to live. These reports include the count of the finished historic decision instances, cleanable decision instances and basic decision definition data - id, key, name and version. The size of the result set can be retrieved by using the Get Cleanable Decision Instance Report Count method. URL: /history/decision-definition/cleanable-decision-instance-report Schema: - Usage: cctl get cleanableHistoricDecisionInstanceReport [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --compact / --not-compact boolean Only include decision instances which have more than zero finished instances. Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include decision definitions which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A decision definition must have one of the given tenant ids. None --decision-definition-key-in text Filter by decision definition keys. Must be a comma-separated list of decision definition keys. None --decision-definition-id-in text Filter by decision definition ids. Must be a comma-separated list of decision definition ids. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"cleanableHistoricDecisionInstanceReport"},{"location":"commands/full/#cctl-get-cleanablehistoricdecisioninstancereportcount","text":"Get Cleanable Decision Instance Report Count Queries for the number of report results about a decision definition and finished decision instances relevant to history cleanup (see History cleanup ). Takes the same parameters as the Get Cleanable Decision Instance Report method. URL: /history/decision-definition/cleanable-decision-instance-report/count Schema: - Usage: cctl get cleanableHistoricDecisionInstanceReportCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --compact / --not-compact boolean Only include decision instances which have more than zero finished instances. Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include decision definitions which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A decision definition must have one of the given tenant ids. None --decision-definition-key-in text Filter by decision definition keys. Must be a comma-separated list of decision definition keys. None --decision-definition-id-in text Filter by decision definition ids. Must be a comma-separated list of decision definition ids. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"cleanableHistoricDecisionInstanceReportCount"},{"location":"commands/full/#cctl-get-cleanablehistoricprocessinstancereport","text":"Get Cleanable Process Instance Report Retrieves a report about a process definition and finished process instances relevant to history cleanup (see History cleanup ) so that you can tune the history time to live. These reports include the count of the finished historic process instances, cleanable process instances and basic process definition data - id, key, name and version. The size of the result set can be retrieved by using the Get Cleanable Process Instance Report Count method. URL: /history/process-definition/cleanable-process-instance-report Schema: - Usage: cctl get cleanableHistoricProcessInstanceReport [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --compact / --not-compact boolean Only include process instances which have more than zero finished instances. Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include process definitions which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A process definition must have one of the given tenant ids. None --process-definition-key-in text Filter by process definition keys. Must be a comma-separated list of process definition keys. None --process-definition-id-in text Filter by process definition ids. Must be a comma-separated list of process definition ids. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"cleanableHistoricProcessInstanceReport"},{"location":"commands/full/#cctl-get-cleanablehistoricprocessinstancereportcount","text":"Get Cleanable Process Instance Report Count Queries for the number of report results about a process definition and finished process instances relevant to history cleanup (see History cleanup ). Takes the same parameters as the Get Cleanable Process Instance Report method. URL: /history/process-definition/cleanable-process-instance-report/count Schema: - Usage: cctl get cleanableHistoricProcessInstanceReportCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --compact / --not-compact boolean Only include process instances which have more than zero finished instances. Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include process definitions which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A process definition must have one of the given tenant ids. None --process-definition-key-in text Filter by process definition keys. Must be a comma-separated list of process definition keys. None --process-definition-id-in text Filter by process definition ids. Must be a comma-separated list of process definition ids. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"cleanableHistoricProcessInstanceReportCount"},{"location":"commands/full/#cctl-get-comment","text":"Get Retrieves a task comment by task id and comment id. URL: /task/{id}/comment/{commentId} Schema: - Usage: cctl get comment [OPTIONS] COMMENTID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"comment"},{"location":"commands/full/#cctl-get-comments","text":"Get List Gets the comments for a task by id. URL: /task/{id}/comment Schema: - Usage: cctl get comments [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"comments"},{"location":"commands/full/#cctl-get-decisiondefinitionbyid","text":"Get Decision Definition By Id Retrieves a decision definition by id, according to the DecisionDefinition interface in the engine. URL: /decision-definition/{id} Schema: - Usage: cctl get decisionDefinitionById [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionDefinitionById"},{"location":"commands/full/#cctl-get-decisiondefinitionbykey","text":"Get Decision Definition By Key Retrieves the latest version of the decision definition which belongs to no tenant. URL: /decision-definition/key/{key} Schema: - Usage: cctl get decisionDefinitionByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionDefinitionByKey"},{"location":"commands/full/#cctl-get-decisiondefinitionbykeyandtenantid","text":"Get Decision Definition By Key And Tenant Id Retrieves the latest version of the decision definition for tenant URL: /decision-definition/key/{key}/tenant-id/{tenant-id} Schema: - Usage: cctl get decisionDefinitionByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionDefinitionByKeyAndTenantId"},{"location":"commands/full/#cctl-get-decisiondefinitiondiagram","text":"Get Diagram Retrieves the diagram of a decision definition. URL: /decision-definition/{id}/diagram Schema: - Usage: cctl get decisionDefinitionDiagram [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionDefinitionDiagram"},{"location":"commands/full/#cctl-get-decisiondefinitiondiagrambykey","text":"Get Diagram By Key Returns the diagram for the latest version of the decision definition which belongs to no tenant URL: /decision-definition/key/{key}/diagram Schema: - Usage: cctl get decisionDefinitionDiagramByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionDefinitionDiagramByKey"},{"location":"commands/full/#cctl-get-decisiondefinitiondiagrambykeyandtenant","text":"Get Diagram By Key And Tenant Returns the XML of the latest version of the decision definition for tenant. URL: /decision-definition/key/{key}/tenant-id/{tenant-id}/diagram Schema: - Usage: cctl get decisionDefinitionDiagramByKeyAndTenant [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionDefinitionDiagramByKeyAndTenant"},{"location":"commands/full/#cctl-get-decisiondefinitiondmnxmlbyid","text":"Get XML By Id Retrieves the DMN XML of a decision definition. URL: /decision-definition/{id}/xml Schema: - Usage: cctl get decisionDefinitionDmnXmlById [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionDefinitionDmnXmlById"},{"location":"commands/full/#cctl-get-decisiondefinitiondmnxmlbykey","text":"Get XML By Key Retrieves the XML for the latest version of the decision definition which belongs to no tenant. URL: /decision-definition/key/{key}/xml Schema: - Usage: cctl get decisionDefinitionDmnXmlByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionDefinitionDmnXmlByKey"},{"location":"commands/full/#cctl-get-decisiondefinitiondmnxmlbykeyandtenant","text":"Get XML By Key and Tenant Retrieves the XML of the latest version of the decision definition for tenant URL: /decision-definition/key/{key}/tenant-id/{tenant-id}/xml Schema: - Usage: cctl get decisionDefinitionDmnXmlByKeyAndTenant [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionDefinitionDmnXmlByKeyAndTenant"},{"location":"commands/full/#cctl-get-decisiondefinitions","text":"Get List Queries for decision definitions that fulfill given parameters. Parameters may be the properties of decision definitions, such as the name, key or version. The size of the result set can be retrieved by using the Get Decision Definition Count method. URL: /decision-definition Schema: - Usage: cctl get decisionDefinitions [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --version-tag-like text Filter by the version tags of those decision definition resources that the parameter is a substring of. None --version-tag text Filter by the version tag. None --include-decision-definitions-without-tenant-id / --not-include-decision-definitions-without-tenant-id boolean Include decision definitions which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include decision definitions which belong to no tenant. Value can effectively only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of Strings . A decision definition must have one of the given tenant ids. None --without-decision-requirements-definition / --not-without-decision-requirements-definition boolean Only include decision definitions which does not belongs to any decision requirements definition. Value may only be true , as false is the default behavior. None --decision-requirements-definition-key text Filter by the key of the decision requirements definition this decision definition belongs to. None --decision-requirements-definition-id text Filter by the id of the decision requirements definition this decision definition belongs to. None --resource-name-like text Filter by names of those decision definition resources that the parameter is a substring of. None --resource-name text Filter by the name of the decision definition resource. Exact match. None --latest-version / --not-latest-version boolean Only include those decision definitions that are latest versions. Value may only be true , as false is the default behavior. None --version text Filter by decision definition version. None --category-like text Filter by decision definition categories that the parameter is a substring of. None --category text Filter by decision definition category. Exact match. None --key-like text Filter by decision definition keys that the parameter is a substring of. None --key text Filter by decision definition key, i.e., the id in the DMN 1.0 XML. Exact match. None --deployed-at text Filter by the deploy time of the deployment the decision definition belongs to. Only selects decision definitions that have been deployed at a specific time (exact match). None --deployed-after text Filter by the deploy time of the deployment the decision definition belongs to. Only selects decision definitions that have been deployed after (exclusive) a specific time. None --deployment-id text Filter by the deployment the id belongs to. None --name-like text Filter by decision definition names that the parameter is a substring of. None --name text Filter by decision definition name. None --decision-definition-id-in text Filter by decision definition ids. None --decision-definition-id text Filter by decision definition id. None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionDefinitions"},{"location":"commands/full/#cctl-get-decisiondefinitionscount","text":"Get List Count Requests the number of decision definitions that fulfill the query criteria. Takes the same filtering parameters as the Get Decision Definition method. URL: /decision-definition/count Schema: - Usage: cctl get decisionDefinitionsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --version-tag-like text Filter by the version tags of those decision definition resources that the parameter is a substring of. None --version-tag text Filter by the version tag. None --include-decision-definitions-without-tenant-id / --not-include-decision-definitions-without-tenant-id boolean Include decision definitions which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include decision definitions which belong to no tenant. Value can effectively only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of Strings . A decision definition must have one of the given tenant ids. None --without-decision-requirements-definition / --not-without-decision-requirements-definition boolean Only include decision definitions which does not belongs to any decision requirements definition. Value may only be true , as false is the default behavior. None --decision-requirements-definition-key text Filter by the key of the decision requirements definition this decision definition belongs to. None --decision-requirements-definition-id text Filter by the id of the decision requirements definition this decision definition belongs to. None --resource-name-like text Filter by names of those decision definition resources that the parameter is a substring of. None --resource-name text Filter by the name of the decision definition resource. Exact match. None --latest-version / --not-latest-version boolean Only include those decision definitions that are latest versions. Value may only be true , as false is the default behavior. None --version text Filter by decision definition version. None --category-like text Filter by decision definition categories that the parameter is a substring of. None --category text Filter by decision definition category. Exact match. None --key-like text Filter by decision definition keys that the parameter is a substring of. None --key text Filter by decision definition key, i.e., the id in the DMN 1.0 XML. Exact match. None --deployed-at text Filter by the deploy time of the deployment the decision definition belongs to. Only selects decision definitions that have been deployed at a specific time (exact match). None --deployed-after text Filter by the deploy time of the deployment the decision definition belongs to. Only selects decision definitions that have been deployed after (exclusive) a specific time. None --deployment-id text Filter by the deployment the id belongs to. None --name-like text Filter by decision definition names that the parameter is a substring of. None --name text Filter by decision definition name. None --decision-definition-id-in text Filter by decision definition ids. None --decision-definition-id text Filter by decision definition id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionDefinitionsCount"},{"location":"commands/full/#cctl-get-decisionrequirementsdefinitionbyid","text":"Get Decision Requirements Definition by ID Retrieves a decision requirements definition according to the DecisionRequirementsDefinition interface in the engine. URL: /decision-requirements-definition/{id} Schema: - Usage: cctl get decisionRequirementsDefinitionById [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionRequirementsDefinitionById"},{"location":"commands/full/#cctl-get-decisionrequirementsdefinitionbykey","text":"Get Decision Requirements Definition by Key Retrieves a decision requirements definition according to the DecisionRequirementsDefinition interface in the engine. Returns the latest version of the decision requirements definition which belongs to no tenant. URL: /decision-requirements-definition/key/{key} Schema: - Usage: cctl get decisionRequirementsDefinitionByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionRequirementsDefinitionByKey"},{"location":"commands/full/#cctl-get-decisionrequirementsdefinitionbykeyandtenantid","text":"Get Decision Requirements Definition by Key and Tenant ID Retrieves a decision requirements definition according to the DecisionRequirementsDefinition interface in the engine. Returns the latest version of the decision requirements definition for a tenant. URL: /decision-requirements-definition/key/{key}/tenant-id/{tenant-id} Schema: - Usage: cctl get decisionRequirementsDefinitionByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionRequirementsDefinitionByKeyAndTenantId"},{"location":"commands/full/#cctl-get-decisionrequirementsdefinitiondiagrambyid","text":"Get Decision Requirements Diagram by ID Retrieves the diagram of a decision requirements definition. URL: /decision-requirements-definition/{id}/diagram Schema: - Usage: cctl get decisionRequirementsDefinitionDiagramById [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionRequirementsDefinitionDiagramById"},{"location":"commands/full/#cctl-get-decisionrequirementsdefinitiondiagrambykey","text":"Get Decision Requirements Diagram by Key Retrieves the diagram of a decision requirements definition. Returns the diagram for the latest version of the decision requirements definition which belongs to no tenant. URL: /decision-requirements-definition/key/{key}/diagram Schema: - Usage: cctl get decisionRequirementsDefinitionDiagramByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionRequirementsDefinitionDiagramByKey"},{"location":"commands/full/#cctl-get-decisionrequirementsdefinitiondiagrambykeyandtenantid","text":"Get Decision Requirements Diagram by Key and Tenant ID Retrieves the diagram of a decision requirements definition. Returns the diagram of the latest version of the decision requirements definition for a tenant. URL: /decision-requirements-definition/key/{key}/tenant-id/{tenant-id}/diagram Schema: - Usage: cctl get decisionRequirementsDefinitionDiagramByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionRequirementsDefinitionDiagramByKeyAndTenantId"},{"location":"commands/full/#cctl-get-decisionrequirementsdefinitiondmnxmlbyid","text":"Get DMN XML by ID Retrieves the DMN XML of a decision requirements definition. URL: /decision-requirements-definition/{id}/xml Schema: - Usage: cctl get decisionRequirementsDefinitionDmnXmlById [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionRequirementsDefinitionDmnXmlById"},{"location":"commands/full/#cctl-get-decisionrequirementsdefinitiondmnxmlbykey","text":"Get DMN XML by Key Retrieves the DMN XML of a decision requirements definition. Returns the XML for the latest version of the decision requirements definition which belongs to no tenant. URL: /decision-requirements-definition/key/{key}/xml Schema: - Usage: cctl get decisionRequirementsDefinitionDmnXmlByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionRequirementsDefinitionDmnXmlByKey"},{"location":"commands/full/#cctl-get-decisionrequirementsdefinitiondmnxmlbykeyandtenantid","text":"Get DMN XML by Key and Tenant ID Retrieves the DMN XML of a decision requirements definition. Returns the XML of the latest version of the decision requirements definition for a tenant. URL: /decision-requirements-definition/key/{key}/tenant-id/{tenant-id}/xml Schema: - Usage: cctl get decisionRequirementsDefinitionDmnXmlByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionRequirementsDefinitionDmnXmlByKeyAndTenantId"},{"location":"commands/full/#cctl-get-decisionrequirementsdefinitions","text":"Get Decision Requirements Definitions Queries for decision requirements definitions that fulfill given parameters. Parameters may be the properties of decision requirements definitions, such as the name, key or version. The size of the result set can be retrieved by using the Get Decision Requirements Definition Count method. URL: /decision-requirements-definition Schema: - Usage: cctl get decisionRequirementsDefinitions [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --include-decision-requirements-definitions-without-tenant-id / --not-include-decision-requirements-definitions-without-tenant-id boolean Include decision requirements definitions which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include decision requirements definitions which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A decision requirements definition must have one of the given tenant ids. None --resource-name-like text Filter by names of those decision requirements definition resources that the parameter is a substring of. None --resource-name text Filter by the name of the decision requirements definition resource. Exact match. None --latest-version / --not-latest-version boolean Only include those decision requirements definitions that are latest versions. Value may only be true , as false is the default behavior. None --version text Filter by decision requirements definition version. None --category-like text Filter by decision requirements definition categories that the parameter is a substring of. None --category text Filter by decision requirements definition category. Exact match. None --key-like text Filter by decision requirements definition keys that the parameter is a substring of. None --key text Filter by decision requirements definition key, i.e., the id in the DMN 1.3 XML. Exact match. None --deployment-id text Filter by the id of the deployment a decision requirement definition belongs to. None --name-like text Filter by decision requirements definition names that the parameter is a substring of. None --name text Filter by decision requirements definition name. None --decision-requirements-definition-id-in text Filter by decision requirements definition ids. None --decision-requirements-definition-id text Filter by decision requirements definition id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionRequirementsDefinitions"},{"location":"commands/full/#cctl-get-decisionrequirementsdefinitionscount","text":"Get Decision Requirements Definition Count Requests the number of decision requirements definitions that fulfill the query criteria. Takes the same filtering parameters as the Get Decision Requirements Definitions method. URL: /decision-requirements-definition/count Schema: - Usage: cctl get decisionRequirementsDefinitionsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --include-decision-requirements-definitions-without-tenant-id / --not-include-decision-requirements-definitions-without-tenant-id boolean Include decision requirements definitions which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include decision requirements definitions which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A decision requirements definition must have one of the given tenant ids. None --resource-name-like text Filter by names of those decision requirements definition resources that the parameter is a substring of. None --resource-name text Filter by the name of the decision requirements definition resource. Exact match. None --latest-version / --not-latest-version boolean Only include those decision requirements definitions that are latest versions. Value may only be true , as false is the default behavior. None --version text Filter by decision requirements definition version. None --category-like text Filter by decision requirements definition categories that the parameter is a substring of. None --category text Filter by decision requirements definition category. Exact match. None --key-like text Filter by decision requirements definition keys that the parameter is a substring of. None --key text Filter by decision requirements definition key, i.e., the id in the DMN 1.3 XML. Exact match. None --deployment-id text Filter by the id of the deployment a decision requirement definition belongs to. None --name-like text Filter by decision requirements definition names that the parameter is a substring of. None --name text Filter by decision requirements definition name. None --decision-requirements-definition-id-in text Filter by decision requirements definition ids. None --decision-requirements-definition-id text Filter by decision requirements definition id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionRequirementsDefinitionsCount"},{"location":"commands/full/#cctl-get-decisionstatistics","text":"Get DRD Statistics Retrieves evaluation statistics of a given decision requirements definition. URL: /history/decision-requirements-definition/{id}/statistics Schema: - Usage: cctl get decisionStatistics [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --decision-instance-id text Restrict query results to be based only on specific evaluation instance of a given decision requirements definition. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionStatistics"},{"location":"commands/full/#cctl-get-deployedform","text":"Get Deployed Form Retrieves the deployed form that is referenced from a given task. For further information please refer to the User Guide . URL: /task/{id}/deployed-form Schema: - Usage: cctl get deployedForm [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"deployedForm"},{"location":"commands/full/#cctl-get-deployedstartform","text":"Get Deployed Start Form Retrieves the deployed form that can be referenced from a start event. For further information please refer to User Guide . URL: /process-definition/{id}/deployed-start-form Schema: - Usage: cctl get deployedStartForm [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"deployedStartForm"},{"location":"commands/full/#cctl-get-deployedstartformbykey","text":"Get Deployed Start Form Retrieves the deployed form that can be referenced from a start event. For further information please refer to User Guide . URL: /process-definition/key/{key}/deployed-start-form Schema: - Usage: cctl get deployedStartFormByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"deployedStartFormByKey"},{"location":"commands/full/#cctl-get-deployedstartformbykeyandtenantid","text":"Get Deployed Start Form Retrieves the deployed form that can be referenced from a start event. For further information please refer to User Guide . URL: /process-definition/key/{key}/tenant-id/{tenant-id}/deployed-start-form Schema: - Usage: cctl get deployedStartFormByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"deployedStartFormByKeyAndTenantId"},{"location":"commands/full/#cctl-get-deployment","text":"Get Retrieves a deployment by id, according to the Deployment interface of the engine. URL: /deployment/{id} Schema: - Usage: cctl get deployment [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"deployment"},{"location":"commands/full/#cctl-get-deploymentresource","text":"Get Resource Retrieves a deployment resource by resource id for the given deployment. URL: /deployment/{id}/resources/{resourceId} Schema: - Usage: cctl get deploymentResource [OPTIONS] RESOURCEID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"deploymentResource"},{"location":"commands/full/#cctl-get-deploymentresourcedata","text":"Get Resource (Binary) Retrieves the binary content of a deployment resource for the given deployment by id. URL: /deployment/{id}/resources/{resourceId}/data Schema: - Usage: cctl get deploymentResourceData [OPTIONS] RESOURCEID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"deploymentResourceData"},{"location":"commands/full/#cctl-get-deploymentresources","text":"Get Resources Retrieves all deployment resources of a given deployment. URL: /deployment/{id}/resources Schema: - Usage: cctl get deploymentResources [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"deploymentResources"},{"location":"commands/full/#cctl-get-deployments","text":"Get List Queries for deployments that fulfill given parameters. Parameters may be the properties of deployments, such as the id or name or a range of the deployment time. The size of the result set can be retrieved by using the Get Deployment count method. URL: /deployment Schema: - Usage: cctl get deployments [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --before text Restricts to all deployments before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --after text Restricts to all deployments after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --include-deployments-without-tenant-id / --not-include-deployments-without-tenant-id boolean Include deployments which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include deployments which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A deployment must have one of the given tenant ids. None --without-source / --not-without-source boolean Filter by the deployment source whereby source is equal to null . None --source text Filter by the deployment source. None --name-like text Filter by the deployment name that the parameter is a substring of. The parameter can include the wildcard % to express like-strategy such as: starts with ( % name), ends with (name % ) or contains ( % name % ). None --name text Filter by the deployment name. Exact match. None --id text Filter by deployment id None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"deployments"},{"location":"commands/full/#cctl-get-deploymentscount","text":"Get List Count Queries for the number of deployments that fulfill given parameters. Takes the same parameters as the Get Deployments method. URL: /deployment/count Schema: - Usage: cctl get deploymentsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --before text Restricts to all deployments before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --after text Restricts to all deployments after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --include-deployments-without-tenant-id / --not-include-deployments-without-tenant-id boolean Include deployments which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include deployments which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A deployment must have one of the given tenant ids. None --without-source / --not-without-source boolean Filter by the deployment source whereby source is equal to null . None --source text Filter by the deployment source. None --name-like text Filter by the deployment name that the parameter is a substring of. The parameter can include the wildcard % to express like-strategy such as: starts with ( % name), ends with (name % ) or contains ( % name % ). None --name text Filter by the deployment name. Exact match. None --id text Filter by deployment id None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"deploymentsCount"},{"location":"commands/full/#cctl-get-errordetailshistoricexternaltasklog","text":"Get External Task Log Error Details Retrieves the corresponding error details of the passed historic external task log by id. URL: /history/external-task-log/{id}/error-details Schema: - Usage: cctl get errorDetailsHistoricExternalTaskLog [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"errorDetailsHistoricExternalTaskLog"},{"location":"commands/full/#cctl-get-eventsubscriptions","text":"Get List Queries for event subscriptions that fulfill given parameters. The size of the result set can be retrieved by using the Get Event Subscriptions count method. URL: /event-subscription Schema: - Usage: cctl get eventSubscriptions [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --include-event-subscriptions-without-tenant-id / --not-include-event-subscriptions-without-tenant-id boolean Select event subscriptions which have no tenant id. Can be used in combination with tenantIdIn parameter. Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only select subscriptions which have no tenant id. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. Only select subscriptions that belong to one of the given tenant ids. None --activity-id text Only select subscriptions that belong to an activity with the given id. None --process-instance-id text Only select subscriptions that belong to a process instance with the given id. None --execution-id text Only select subscriptions that belong to an execution with the given id. None --event-type text Only select subscriptions for events with the given type. Valid values: message , signal , compensate and conditional . None --event-name text Only select subscriptions for events with the given name. None --event-subscription-id text Only select subscription with the given id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"eventSubscriptions"},{"location":"commands/full/#cctl-get-eventsubscriptionscount","text":"Get List Count Queries for the number of event subscriptions that fulfill given parameters. Takes the same parameters as the Get Event Subscriptions method. URL: /event-subscription/count Schema: - Usage: cctl get eventSubscriptionsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --include-event-subscriptions-without-tenant-id / --not-include-event-subscriptions-without-tenant-id boolean Select event subscriptions which have no tenant id. Can be used in combination with tenantIdIn parameter. Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only select subscriptions which have no tenant id. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. Only select subscriptions that belong to one of the given tenant ids. None --activity-id text Only select subscriptions that belong to an activity with the given id. None --process-instance-id text Only select subscriptions that belong to a process instance with the given id. None --execution-id text Only select subscriptions that belong to an execution with the given id. None --event-type text Only select subscriptions for events with the given type. Valid values: message , signal , compensate and conditional . None --event-name text Only select subscriptions for events with the given name. None --event-subscription-id text Only select subscription with the given id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"eventSubscriptionsCount"},{"location":"commands/full/#cctl-get-executefiltercount","text":"Execute Filter Count Executes the saved query of the filter by id and returns the count. URL: /filter/{id}/count Schema: - Usage: cctl get executeFilterCount [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"executeFilterCount"},{"location":"commands/full/#cctl-get-executefilterlist","text":"Execute Filter List Executes the saved query of the filter by id and returns the result list. URL: /filter/{id}/list Schema: - Usage: cctl get executeFilterList [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"executeFilterList"},{"location":"commands/full/#cctl-get-executefiltersingleresult","text":"Execute Filter Single Result Executes the saved query of the filter by id and returns the single result. URL: /filter/{id}/singleResult Schema: - Usage: cctl get executeFilterSingleResult [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"executeFilterSingleResult"},{"location":"commands/full/#cctl-get-execution","text":"Get Execution Retrieves an execution by id, according to the Execution interface in the engine. URL: /execution/{id} Schema: - Usage: cctl get execution [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"execution"},{"location":"commands/full/#cctl-get-executions","text":"Get Executions Queries for the executions that fulfill given parameters. Parameters may be static as well as dynamic runtime properties of executions. The size of the result set can be retrieved by using the Get Execution Count method. URL: /execution Schema: - Usage: cctl get executions [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match all variable values provided in variables and processVariables case- insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match all variable names provided in variables and processVariables case- insensitively. If set to true variableName and variablename are treated as equal. None --process-variables text Only include executions that belong to a process instance with variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to. key and value may not contain underscore or comma characters. | None | | --variables | text | Only include executions that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --tenant-id-in | text | Filter by a comma-separated list of tenant ids. An execution must have one of the given tenant ids. | None | | --incident-message-like | text | Filter by the incident message that the parameter is a substring of. | None | | --incident-message | text | Filter by the incident message. Exact match. | None | | --incident-type | text | Filter by the incident type. See the User Guide for a list of incident types. | None | | --incident-id | text | Filter by the incident id. | None | | --suspended / --not-suspended | boolean | Only include suspended executions. Value may only be true , as false is the default behavior. | None | | --active / --not-active | boolean | Only include active executions. Value may only be true , as false is the default behavior. | None | | --message-event-subscription-name | text | Select only those executions that expect a message of the given name. | None | | --signal-event-subscription-name | text | Select only those executions that expect a signal of the given name. | None | | --activity-id | text | Filter by the id of the activity the execution currently executes. | None | | --process-instance-id | text | Filter by the id of the process instance the execution belongs to. | None | | --process-definition-key | text | Filter by the key of the process definition the executions run on. | None | | --process-definition-id | text | Filter by the process definition the executions run on. | None | | --business-key | text | Filter by the business key of the process instances the executions belong to. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"executions"},{"location":"commands/full/#cctl-get-executionscount","text":"Get Execution Count Queries for the number of executions that fulfill given parameters. Takes the same parameters as the Get Executions method. URL: /execution/count Schema: - Usage: cctl get executionsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match all variable values provided in variables and processVariables case- insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match all variable names provided in variables and processVariables case- insensitively. If set to true variableName and variablename are treated as equal. None --process-variables text Only include executions that belong to a process instance with variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to. key and value may not contain underscore or comma characters. | None | | --variables | text | Only include executions that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --tenant-id-in | text | Filter by a comma-separated list of tenant ids. An execution must have one of the given tenant ids. | None | | --incident-message-like | text | Filter by the incident message that the parameter is a substring of. | None | | --incident-message | text | Filter by the incident message. Exact match. | None | | --incident-type | text | Filter by the incident type. See the User Guide for a list of incident types. | None | | --incident-id | text | Filter by the incident id. | None | | --suspended / --not-suspended | boolean | Only include suspended executions. Value may only be true , as false is the default behavior. | None | | --active / --not-active | boolean | Only include active executions. Value may only be true , as false is the default behavior. | None | | --message-event-subscription-name | text | Select only those executions that expect a message of the given name. | None | | --signal-event-subscription-name | text | Select only those executions that expect a signal of the given name. | None | | --activity-id | text | Filter by the id of the activity the execution currently executes. | None | | --process-instance-id | text | Filter by the id of the process instance the execution belongs to. | None | | --process-definition-key | text | Filter by the key of the process definition the executions run on. | None | | --process-definition-id | text | Filter by the process definition the executions run on. | None | | --business-key | text | Filter by the business key of the process instances the executions belong to. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"executionsCount"},{"location":"commands/full/#cctl-get-externaltask","text":"Get Retrieves an external task by id, corresponding to the ExternalTask interface in the engine. URL: /external-task/{id} Schema: - Usage: cctl get externalTask [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"externalTask"},{"location":"commands/full/#cctl-get-externaltaskerrordetails","text":"Get Error Details Retrieves the error details in the context of a running external task by id. URL: /external-task/{id}/errorDetails Schema: - Usage: cctl get externalTaskErrorDetails [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"externalTaskErrorDetails"},{"location":"commands/full/#cctl-get-externaltasks","text":"Get List Queries for the external tasks that fulfill given parameters. Parameters may be static as well as dynamic runtime properties of executions. The size of the result set can be retrieved by using the Get External Task Count method. URL: /external-task Schema: - Usage: cctl get externalTasks [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --priority-lower-than-or-equals text Only include jobs with a priority lower than or equal to the given value. Value must be a valid long value. None --priority-higher-than-or-equals text Only include jobs with a priority higher than or equal to the given value. Value must be a valid long value. None --suspended / --not-suspended boolean Only include suspended tasks. Value may only be true , as false matches any external task. None --active / --not-active boolean Only include active tasks. Value may only be true , as false matches any external task. None --tenant-id-in text Filter by a comma-separated list of tenant ids. An external task must have one of the given tenant ids. None --process-definition-id text Filter by the id of the process definition that an external task belongs to. None --process-instance-id-in text Filter by a comma-separated list of process instance ids that an external task may belong to. None --process-instance-id text Filter by the id of the process instance that an external task belongs to. None --execution-id text Filter by the id of the execution that an external task belongs to. None --activity-id-in text Filter by the comma-separated list of ids of the activities that an external task is created for. None --activity-id text Filter by the id of the activity that an external task is created for. None --lock-expiration-before text Restrict to external tasks that have a lock that expires before a given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --lock-expiration-after text Restrict to external tasks that have a lock that expires after a given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --no-retries-left / --not-no-retries-left boolean Only include external tasks that have 0 retries. Value may only be true , as false matches any external task. None --with-retries-left / --not-with-retries-left boolean Only include external tasks that have a positive (> 0) number of retries (or null ). Value may only be true , as false matches any external task. None --not-locked / --not-not-locked boolean Only include external tasks that are currently not locked (i.e., they have no lock or it has expired). Value may only be true , as false matches any external task. None --locked / --not-locked boolean Only include external tasks that are currently locked (i.e., they have a lock time and it has not expired). Value may only be true , as false matches any external task. None --worker-id text Filter by the id of the worker that the task was most recently locked by. None --topic-name text Filter by an external task topic. None --external-task-id-in text Filter by the comma-separated list of external task ids. None --external-task-id text Filter by an external task's id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"externalTasks"},{"location":"commands/full/#cctl-get-externaltaskscount","text":"Get List Count Queries for the number of external tasks that fulfill given parameters. Takes the same parameters as the Get External Tasks method. URL: /external-task/count Schema: - Usage: cctl get externalTasksCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --priority-lower-than-or-equals text Only include jobs with a priority lower than or equal to the given value. Value must be a valid long value. None --priority-higher-than-or-equals text Only include jobs with a priority higher than or equal to the given value. Value must be a valid long value. None --suspended / --not-suspended boolean Only include suspended tasks. Value may only be true , as false matches any external task. None --active / --not-active boolean Only include active tasks. Value may only be true , as false matches any external task. None --tenant-id-in text Filter by a comma-separated list of tenant ids. An external task must have one of the given tenant ids. None --process-definition-id text Filter by the id of the process definition that an external task belongs to. None --process-instance-id-in text Filter by a comma-separated list of process instance ids that an external task may belong to. None --process-instance-id text Filter by the id of the process instance that an external task belongs to. None --execution-id text Filter by the id of the execution that an external task belongs to. None --activity-id-in text Filter by the comma-separated list of ids of the activities that an external task is created for. None --activity-id text Filter by the id of the activity that an external task is created for. None --lock-expiration-before text Restrict to external tasks that have a lock that expires before a given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --lock-expiration-after text Restrict to external tasks that have a lock that expires after a given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --no-retries-left / --not-no-retries-left boolean Only include external tasks that have 0 retries. Value may only be true , as false matches any external task. None --with-retries-left / --not-with-retries-left boolean Only include external tasks that have a positive (> 0) number of retries (or null ). Value may only be true , as false matches any external task. None --not-locked / --not-not-locked boolean Only include external tasks that are currently not locked (i.e., they have no lock or it has expired). Value may only be true , as false matches any external task. None --locked / --not-locked boolean Only include external tasks that are currently locked (i.e., they have a lock time and it has not expired). Value may only be true , as false matches any external task. None --worker-id text Filter by the id of the worker that the task was most recently locked by. None --topic-name text Filter by an external task topic. None --external-task-id-in text Filter by the comma-separated list of external task ids. None --external-task-id text Filter by an external task's id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"externalTasksCount"},{"location":"commands/full/#cctl-get-filtercount","text":"Get Filter Count Retrieves the number of filters that fulfill a provided query. Corresponds to the size of the result set when using the Get Filters method. URL: /filter/count Schema: - Usage: cctl get filterCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --owner text Filter by the user id of the owner of the filter. None --name-like text Filter by the name that the parameter is a substring of. None --name text Filter by the name of the filter. None --resource-type text Filter by the resource type of the filter, e.g., Task . None --filter-id text Filter by the id of the filter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"filterCount"},{"location":"commands/full/#cctl-get-filterlist","text":"Get Filters Queries for a list of filters using a list of parameters. The size of the result set can be retrieved by using the Get Filter Count method. URL: /filter Schema: - Usage: cctl get filterList [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --item-count / --not-item-count boolean If set to true , each filter result will contain an itemCount property with the number of items matched by the filter itself. None --owner text Filter by the user id of the owner of the filter. None --name-like text Filter by the name that the parameter is a substring of. None --name text Filter by the name of the filter. None --resource-type text Filter by the resource type of the filter, e.g., Task . None --filter-id text Filter by the id of the filter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"filterList"},{"location":"commands/full/#cctl-get-findcleanupjob","text":"Find clean up history job (GET) Deprecated! Use GET /history/cleanup/jobs instead. Finds history cleanup job (See History cleanup ). URL: /history/cleanup/job Schema: - Usage: cctl get findCleanupJob [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"findCleanupJob"},{"location":"commands/full/#cctl-get-findcleanupjobs","text":"Find clean up history jobs (GET) Finds history cleanup jobs (See History cleanup ). URL: /history/cleanup/jobs Schema: - Usage: cctl get findCleanupJobs [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"findCleanupJobs"},{"location":"commands/full/#cctl-get-form","text":"Get Form Key Retrieves the form key for a task. The form key corresponds to the FormData#formKey property in the engine. This key can be used to do task-specific form rendering in client applications. Additionally, the context path of the containing process application is returned. URL: /task/{id}/form Schema: - Usage: cctl get form [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"form"},{"location":"commands/full/#cctl-get-formvariables","text":"Get Task Form Variables Retrieves the form variables for a task. The form variables take form data specified on the task into account. If form fields are defined, the variable types and default values of the form fields are taken into account. URL: /task/{id}/form-variables Schema: - Usage: cctl get formVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true). If set to true, a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false, a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --variable-names | text | A comma-separated list of variable names. Allows restricting the list of requested variables to the variable names in the list. It is best practice to restrict the list of variables to the variables actually required by the form in order to minimize fetching of data. If the query parameter is ommitted all variables are fetched. If the query parameter contains non-existent variable names, the variable names are ignored. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"formVariables"},{"location":"commands/full/#cctl-get-group","text":"Get Group Retrieves a group by id. URL: /group/{id} Schema: - Usage: cctl get group [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"group"},{"location":"commands/full/#cctl-get-groupcount","text":"Get List Count Queries for groups using a list of parameters and retrieves the count. URL: /group/count Schema: - Usage: cctl get groupCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --member-of-tenant text Only retrieve groups which are members of the given tenant. None --member text Only retrieve groups where the given user id is a member of. None --type text Filter by the type of the group. None --name-like text Filter by the name that the parameter is a substring of. None --name text Filter by the name of the group. None --id-in text Filter by a comma seperated list of group ids. None --id text Filter by the id of the group. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"groupCount"},{"location":"commands/full/#cctl-get-groupinfo","text":"Get a User's Groups Gets the groups of a user by id and includes all users that share a group with the given user. URL: /identity/groups Schema: - Usage: cctl get groupInfo [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --user-id text The id of the user to get the groups for. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"groupInfo"},{"location":"commands/full/#cctl-get-historicactivityinstance","text":"Get Retrieves a historic activity instance by id, according to the HistoricActivityInstance interface in the engine. URL: /history/activity-instance/{id} Schema: - Usage: cctl get historicActivityInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicActivityInstance"},{"location":"commands/full/#cctl-get-historicactivityinstances","text":"Get List Queries for historic activity instances that fulfill the given parameters. The size of the result set can be retrieved by using the Get Historic Activity Instance Count method. URL: /history/activity-instance Schema: - Usage: cctl get historicActivityInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --without-tenant-id / --not-without-tenant-id boolean Only include historic activity instances that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of ids. An activity instance must have one of the given tenant ids. None --finished-after text Restrict to instances that were finished after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --finished-before text Restrict to instances that were finished before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --started-after text Restrict to instances that were started after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --started-before text Restrict to instances that were started before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --complete-scope / --not-complete-scope boolean Only include activity instances which completed a scope. Value may only be true , as false behaves the same as when the property is not set. None --canceled / --not-canceled boolean Only include canceled activity instances. Value may only be true , as false behaves the same as when the property is not set. None --unfinished / --not-unfinished boolean Only include unfinished activity instances. Value may only be true , as false behaves the same as when the property is not set. None --finished / --not-finished boolean Only include finished activity instances. Value may only be true , as false behaves the same as when the property is not set. None --task-assignee text Only include activity instances that are user tasks and assigned to a given user. None --activity-type text Filter by activity type. None --activity-name text Filter by the activity name (according to BPMN 2.0 XML). None --activity-id text Filter by the activity id (according to BPMN 2.0 XML). None --execution-id text Filter by the id of the execution that executed the activity instance. None --process-definition-id text Filter by process definition id. None --process-instance-id text Filter by process instance id. None --activity-instance-id text Filter by activity instance id. None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicActivityInstances"},{"location":"commands/full/#cctl-get-historicactivityinstancescount","text":"Get List Count Queries for the number of historic activity instances that fulfill the given parameters. Takes the same parameters as the Get Historic Activity Instance method. URL: /history/activity-instance/count Schema: - Usage: cctl get historicActivityInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --without-tenant-id / --not-without-tenant-id boolean Only include historic activity instances that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of ids. An activity instance must have one of the given tenant ids. None --finished-after text Restrict to instances that were finished after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --finished-before text Restrict to instances that were finished before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --started-after text Restrict to instances that were started after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --started-before text Restrict to instances that were started before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --complete-scope / --not-complete-scope boolean Only include activity instances which completed a scope. Value may only be true , as false behaves the same as when the property is not set. None --canceled / --not-canceled boolean Only include canceled activity instances. Value may only be true , as false behaves the same as when the property is not set. None --unfinished / --not-unfinished boolean Only include unfinished activity instances. Value may only be true , as false behaves the same as when the property is not set. None --finished / --not-finished boolean Only include finished activity instances. Value may only be true , as false behaves the same as when the property is not set. None --task-assignee text Only include activity instances that are user tasks and assigned to a given user. None --activity-type text Filter by activity type. None --activity-name text Filter by the activity name (according to BPMN 2.0 XML). None --activity-id text Filter by the activity id (according to BPMN 2.0 XML). None --execution-id text Filter by the id of the execution that executed the activity instance. None --process-definition-id text Filter by process definition id. None --process-instance-id text Filter by process instance id. None --activity-instance-id text Filter by activity instance id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicActivityInstancesCount"},{"location":"commands/full/#cctl-get-historicactivitystatistics","text":"Get Historic Activity Statistics Retrieves historic statistics of a given process definition, grouped by activities. These statistics include the number of running activity instances and, optionally, the number of canceled activity instances, finished activity instances and activity instances which completed a scope (i.e., in BPMN 2.0 manner: a scope is completed by an activity instance when the activity instance consumed a token but did not emit a new token). Note: This only includes historic data. URL: /history/process-definition/{id}/statistics Schema: - Usage: cctl get historicActivityStatistics [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --process-instance-id-in text Restrict to process instances with the given IDs. The IDs must be provided as a comma- separated list. None --finished-after text Restrict to process instances that were finished after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --finished-before text Restrict to process instances that were finished before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --started-after text Restrict to process instances that were started after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --started-before text Restrict to process instances that were started before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --incidents / --not-incidents boolean Whether to include the number of incidents. Valid values are true or false . Default: false . None --complete-scope / --not-complete-scope boolean Whether to include the number of activity instances which completed a scope in the result or not. Valid values are true or false . Default: false . None --finished / --not-finished boolean Whether to include the number of finished activity instances in the result or not. Valid values are true or false . Default: false . None --canceled / --not-canceled boolean Whether to include the number of canceled activity instances in the result or not. Valid values are true or false . Default: false . None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicActivityStatistics"},{"location":"commands/full/#cctl-get-historicbatch","text":"Get Historic Batch Retrieves a historic batch by id, according to the HistoricBatch interface in the engine. URL: /history/batch/{id} Schema: - Usage: cctl get historicBatch [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicBatch"},{"location":"commands/full/#cctl-get-historicbatches","text":"Get Historic Batches Queries for historic batches that fulfill given parameters. Parameters may be the properties of batches, such as the id or type. The size of the result set can be retrieved by using the Get Historic Batch Count method. URL: /history/batch Schema: - Usage: cctl get historicBatches [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --without-tenant-id / --not-without-tenant-id boolean Only include batches which belong to no tenant. Value can effectively only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A batch matches if it has one of the given tenant ids. None --completed / --not-completed boolean Filter completed or not completed batches. If the value is true , only completed batches, i.e., end time is set, are returned. Otherwise, if the value is false , only running batches, i.e., end time is null, are returned. None --type text Filter by batch type. See the User Guide for more information about batch types. None --batch-id text Filter by batch id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicBatches"},{"location":"commands/full/#cctl-get-historicbatchescount","text":"Get Historic Batch Count Requests the number of historic batches that fulfill the query criteria. Takes the same filtering parameters as the Get Historic Batches method. URL: /history/batch/count Schema: - Usage: cctl get historicBatchesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --without-tenant-id / --not-without-tenant-id boolean Only include batches which belong to no tenant. Value can effectively only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A batch matches if it has one of the given tenant ids. None --completed / --not-completed boolean Filter completed or not completed batches. If the value is true , only completed batches, i.e., end time is set, are returned. Otherwise, if the value is false , only running batches, i.e., end time is null, are returned. None --type text Filter by batch type. See the User Guide for more information about batch types. None --batch-id text Filter by batch id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicBatchesCount"},{"location":"commands/full/#cctl-get-historicdecisioninstance","text":"Get Historic Decision Instance Retrieves a historic decision instance by id, according to the HistoricDecisionInstance interface in the engine. URL: /history/decision-instance/{id} Schema: - Usage: cctl get historicDecisionInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --disable-custom-object-deserialization / --not-disable-custom-object-deserialization boolean Disables deserialization of input and output values that are custom objects. Value may only be true , as false is the default behavior. None --disable-binary-fetching / --not-disable-binary-fetching boolean Disables fetching of byte array input and output values. Value may only be true , as false is the default behavior. None --include-outputs / --not-include-outputs boolean Include output values in the result. Value may only be true , as false is the default behavior. None --include-inputs / --not-include-inputs boolean Include input values in the result. Value may only be true , as false is the default behavior. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicDecisionInstance"},{"location":"commands/full/#cctl-get-historicdecisioninstances","text":"Get Historic Decision Instances Queries for historic decision instances that fulfill the given parameters. The size of the result set can be retrieved by using the Get Historic Decision Instance Count method. URL: /history/decision-instance Schema: - Usage: cctl get historicDecisionInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --disable-custom-object-deserialization / --not-disable-custom-object-deserialization boolean Disables deserialization of input and output values that are custom objects. Value may only be true , as false is the default behavior. None --disable-binary-fetching / --not-disable-binary-fetching boolean Disables fetching of byte array input and output values. Value may only be true , as false is the default behavior. None --include-outputs / --not-include-outputs boolean Include output values in the result. Value may only be true , as false is the default behavior. None --include-inputs / --not-include-inputs boolean Include input values in the result. Value may only be true , as false is the default behavior. None --decision-requirements-definition-key text Filter by the key of the decision requirements definition the instances belongs to. None --decision-requirements-definition-id text Filter by the decision requirements definition the instances belongs to. None --root-decision-instances-only / --not-root-decision-instances-only boolean Restrict to instances those are the root decision instance of an evaluation. Value may only be true , as false is the default behavior. None --root-decision-instance-id text Restrict to instances that have a given root decision instance id. This also includes the decision instance with the given id. None --user-id text Restrict to instances that were evaluated by the given user. None --evaluated-after text Restrict to instances that were evaluated after the given date. By default , the date must have the format `yyyy-MM- dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200`. None --evaluated-before text Restrict to instances that were evaluated before the given date. By default , the date must have the format `yyyy-MM- dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200`. None --without-tenant-id / --not-without-tenant-id boolean Only include historic decision instances that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A historic decision instance must have one of the given tenant ids. None --activity-instance-id-in text Filter by the activity instance ids the instances belongs to. Must be a comma-separated list of acitvity instance ids. None --activity-id-in text Filter by the activity ids the instances belongs to. Must be a comma-separated list of acitvity ids. None --case-instance-id text Filter by the case instance the instances belongs to. None --case-definition-key text Filter by the key of the case definition the instances belongs to. None --case-definition-id text Filter by the case definition the instances belongs to. None --process-instance-id text Filter by the process instance the instances belongs to. None --process-definition-key text Filter by the key of the process definition the instances belongs to. None --process-definition-id text Filter by the process definition the instances belongs to. None --decision-definition-name-like text Filter by the name of the decision definition the instances belongs to, that the parameter is a substring of. None --decision-definition-name text Filter by the name of the decision definition the instances belongs to. None --decision-definition-key-in text Filter by the keys of the decision definition the instances belongs to. Must be a comma- separated list of decision definition keys. None --decision-definition-key text Filter by the key of the decision definition the instances belongs to. None --decision-definition-id-in text Filter by the decision definitions the instances belongs to. Must be a comma-separated list of decision definition ids. None --decision-definition-id text Filter by the decision definition the instances belongs to. None --decision-instance-id-in text Filter by decision instance ids. Must be a comma-separated list of decision instance ids. None --decision-instance-id text Filter by decision instance id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicDecisionInstances"},{"location":"commands/full/#cctl-get-historicdecisioninstancescount","text":"Get Historic Decision Instance Count Queries for the number of historic decision instances that fulfill the given parameters. Takes the same parameters as the Get Historic Decision Instances method. URL: /history/decision-instance/count Schema: - Usage: cctl get historicDecisionInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --decision-requirements-definition-key text Filter by the key of the decision requirements definition the instances belongs to. None --decision-requirements-definition-id text Filter by the decision requirements definition the instances belongs to. None --root-decision-instances-only / --not-root-decision-instances-only boolean Restrict to instances those are the root decision instance of an evaluation. Value may only be true , as false is the default behavior. None --root-decision-instance-id text Restrict to instances that have a given root decision instance id. This also includes the decision instance with the given id. None --user-id text Restrict to instances that were evaluated by the given user. None --evaluated-after text Restrict to instances that were evaluated after the given date. By default , the date must have the format `yyyy-MM- dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200`. None --evaluated-before text Restrict to instances that were evaluated before the given date. By default , the date must have the format `yyyy-MM- dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200`. None --without-tenant-id / --not-without-tenant-id boolean Only include historic decision instances that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A historic decision instance must have one of the given tenant ids. None --activity-instance-id-in text Filter by the activity instance ids the instances belongs to. Must be a comma-separated list of acitvity instance ids. None --activity-id-in text Filter by the activity ids the instances belongs to. Must be a comma-separated list of acitvity ids. None --case-instance-id text Filter by the case instance the instances belongs to. None --case-definition-key text Filter by the key of the case definition the instances belongs to. None --case-definition-id text Filter by the case definition the instances belongs to. None --process-instance-id text Filter by the process instance the instances belongs to. None --process-definition-key text Filter by the key of the process definition the instances belongs to. None --process-definition-id text Filter by the process definition the instances belongs to. None --decision-definition-name-like text Filter by the name of the decision definition the instances belongs to, that the parameter is a substring of. None --decision-definition-name text Filter by the name of the decision definition the instances belongs to. None --decision-definition-key-in text Filter by the keys of the decision definition the instances belongs to. Must be a comma- separated list of decision definition keys. None --decision-definition-key text Filter by the key of the decision definition the instances belongs to. None --decision-definition-id-in text Filter by the decision definitions the instances belongs to. Must be a comma-separated list of decision definition ids. None --decision-definition-id text Filter by the decision definition the instances belongs to. None --decision-instance-id-in text Filter by decision instance ids. Must be a comma-separated list of decision instance ids. None --decision-instance-id text Filter by decision instance id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicDecisionInstancesCount"},{"location":"commands/full/#cctl-get-historicdetail","text":"Get Historic Detail Retrieves a historic detail by id. URL: /history/detail/{id} Schema: - Usage: cctl get historicDetail [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-value / --not-deserialize-value boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"historicDetail"},{"location":"commands/full/#cctl-get-historicdetailbinary","text":"Get Historic Detail (Binary) Retrieves the content of a historic variable update by id. Applicable for byte array and file variables. URL: /history/detail/{id}/data Schema: - Usage: cctl get historicDetailBinary [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicDetailBinary"},{"location":"commands/full/#cctl-get-historicdetails","text":"Get Historic Details Queries for historic details that fulfill the given parameters. The size of the result set can be retrieved by using the Get Historic Detail Count method. URL: /history/detail Schema: - Usage: cctl get historicDetails [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --max-results | text | Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. | None | | --first-result | text | Pagination of results. Specifies the index of the first result to return. | None | | --sort-order | text | Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. | None | | --sort-by | text | Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. | None | | --occurred-after | text | Restrict to historic details that occured after the given date (including the date). Default format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200. | None | | --occurred-before | text | Restrict to historic details that occured before the given date (including the date). Default format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200. | None | | --initial / --not-initial | boolean | Restrict to historic variable updates that contain only initial variable values. Value may only be true , as false is the default behavior. | None | | --exclude-task-details / --not-exclude-task-details | boolean | Excludes all task-related HistoricDetails , so only items which have no task id set will be selected. When this parameter is used together with taskId , this call is ignored and task details are not excluded. Value may only be true , as false is the default behavior. | None | | --variable-updates / --not-variable-updates | boolean | Only include HistoricVariableUpdates . Value may only be true , as false is the default behavior. | None | | --form-fields / --not-form-fields | boolean | Only include HistoricFormFields . Value may only be true , as false is the default behavior. | None | | --user-operation-id | text | Filter by a user operation id. | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include historic details that belong to no tenant. Value may only be true , as false is the default behavior. | None | | --tenant-id-in | text | Filter by a comma-separated list of tenant ids. | None | | --variable-type-in | text | Only include historic details where the variable updates belong to one of the passed comma-separated list of variable types. A list of all supported variable types can be found here . Note: All non-primitive variables are associated with the type serializable . | None | | --variable-instance-id | text | Filter by variable instance id. | None | | --case-execution-id | text | Filter by case execution id. | None | | --case-instance-id | text | Filter by case instance id. | None | | --activity-instance-id | text | Filter by activity instance id. | None | | --task-id | text | Filter by task id. | None | | --execution-id | text | Filter by execution id. | None | | --process-instance-id-in | text | Only include historic details which belong to one of the passed comma-separated process instance ids. | None | | --process-instance-id | text | Filter by process instance id. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"historicDetails"},{"location":"commands/full/#cctl-get-historicdetailscount","text":"Get Historic Detail Count Queries for the number of historic details that fulfill the given parameters. Takes the same parameters as the Get Historic Details method. URL: /history/detail/count Schema: - Usage: cctl get historicDetailsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --occurred-after text Restrict to historic details that occured after the given date (including the date). Default format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200. None --occurred-before text Restrict to historic details that occured before the given date (including the date). Default format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200. None --initial / --not-initial boolean Restrict to historic variable updates that contain only initial variable values. Value may only be true , as false is the default behavior. None --exclude-task-details / --not-exclude-task-details boolean Excludes all task-related HistoricDetails , so only items which have no task id set will be selected. When this parameter is used together with taskId , this call is ignored and task details are not excluded. Value may only be true , as false is the default behavior. None --variable-updates / --not-variable-updates boolean Only include HistoricVariableUpdates . Value may only be true , as false is the default behavior. None --form-fields / --not-form-fields boolean Only include HistoricFormFields . Value may only be true , as false is the default behavior. None --user-operation-id text Filter by a user operation id. None --without-tenant-id / --not-without-tenant-id boolean Only include historic details that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. None --variable-type-in text Only include historic details where the variable updates belong to one of the passed comma-separated list of variable types. A list of all supported variable types can be found here . Note: All non-primitive variables are associated with the type serializable . None --variable-instance-id text Filter by variable instance id. None --case-execution-id text Filter by case execution id. None --case-instance-id text Filter by case instance id. None --activity-instance-id text Filter by activity instance id. None --task-id text Filter by task id. None --execution-id text Filter by execution id. None --process-instance-id-in text Only include historic details which belong to one of the passed comma-separated process instance ids. None --process-instance-id text Filter by process instance id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicDetailsCount"},{"location":"commands/full/#cctl-get-historicexternaltasklog","text":"Get External Task Log Retrieves a historic external task log by id. URL: /history/external-task-log/{id} Schema: - Usage: cctl get historicExternalTaskLog [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicExternalTaskLog"},{"location":"commands/full/#cctl-get-historicexternaltasklogs","text":"Get External Task Logs Queries for historic external task logs that fulfill the given parameters. The size of the result set can be retrieved by using the Get External Task Log Count method. URL: /history/external-task-log Schema: - Usage: cctl get historicExternalTaskLogs [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --deletion-log / --not-deletion-log boolean Only include deletion logs. Value may only be true , as false is the default behavior. None --success-log / --not-success-log boolean Only include success logs. Value may only be true , as false is the default behavior. None --failure-log / --not-failure-log boolean Only include failure logs. Value may only be true , as false is the default behavior. None --creation-log / --not-creation-log boolean Only include creation logs. Value may only be true , as false is the default behavior. None --priority-higher-than-or-equals text Only include logs for which the associated external task had a priority higher than or equal to the given value. Value must be a valid long value. None --priority-lower-than-or-equals text Only include logs for which the associated external task had a priority lower than or equal to the given value. Value must be a valid long value. None --without-tenant-id / --not-without-tenant-id boolean Only include historic external task log entries that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Only include historic external task log entries which belong to one of the passed and comma-separated tenant ids. None --process-definition-key text Filter by process definition key. None --process-definition-id text Filter by process definition id. None --process-instance-id text Filter by process instance id. None --execution-id-in text Only include historic external task logs which belong to one of the passed execution ids. None --activity-instance-id-in text Only include historic external task logs which belong to one of the passed activity instance ids. None --activity-id-in text Only include historic external task logs which belong to one of the passed activity ids. None --error-message text Filter by external task exception message. None --worker-id text Filter by the id of the worker that the task was most recently locked by. None --topic-name text Filter by an external task topic. None --external-task-id text Filter by external task id. None --log-id text Filter by historic external task log id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicExternalTaskLogs"},{"location":"commands/full/#cctl-get-historicexternaltasklogscount","text":"Get External Task Log Count Queries for the number of historic external task logs that fulfill the given parameters. Takes the same parameters as the Get External Task Logs method. URL: /history/external-task-log/count Schema: - Usage: cctl get historicExternalTaskLogsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deletion-log / --not-deletion-log boolean Only include deletion logs. Value may only be true , as false is the default behavior. None --success-log / --not-success-log boolean Only include success logs. Value may only be true , as false is the default behavior. None --failure-log / --not-failure-log boolean Only include failure logs. Value may only be true , as false is the default behavior. None --creation-log / --not-creation-log boolean Only include creation logs. Value may only be true , as false is the default behavior. None --priority-higher-than-or-equals text Only include logs for which the associated external task had a priority higher than or equal to the given value. Value must be a valid long value. None --priority-lower-than-or-equals text Only include logs for which the associated external task had a priority lower than or equal to the given value. Value must be a valid long value. None --without-tenant-id / --not-without-tenant-id boolean Only include historic external task log entries that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Only include historic external task log entries which belong to one of the passed and comma-separated tenant ids. None --process-definition-key text Filter by process definition key. None --process-definition-id text Filter by process definition id. None --process-instance-id text Filter by process instance id. None --execution-id-in text Only include historic external task logs which belong to one of the passed execution ids. None --activity-instance-id-in text Only include historic external task logs which belong to one of the passed activity instance ids. None --activity-id-in text Only include historic external task logs which belong to one of the passed activity ids. None --error-message text Filter by external task exception message. None --worker-id text Filter by the id of the worker that the task was most recently locked by. None --topic-name text Filter by an external task topic. None --external-task-id text Filter by external task id. None --log-id text Filter by historic external task log id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicExternalTaskLogsCount"},{"location":"commands/full/#cctl-get-historicidentitylinks","text":"Get Identity Link Logs Queries for historic identity link logs that fulfill given parameters. The size of the result set can be retrieved by using the Get Identity-Link-Log Count method. URL: /history/identity-link-log Schema: - Usage: cctl get historicIdentityLinks [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --without-tenant-id / --not-without-tenant-id boolean Only include historic identity links that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. None --assigner-id text Restricts to identity links that have the given assigner id. None --operation-type text Restricts to identity links that have the given operationType (add/delete). None --process-definition-key text Restricts to identity links that have the given process definition key. None --process-definition-id text Restricts to identity links that have the given process definition id. None --task-id text Restricts to identity links that have the given task id. None --date-after text Restricts to identity links that have the time after the given time. None --date-before text Restricts to identity links that have the time before the given time. None --group-id text Restricts to identity links that have the given group id. None --user-id text Restricts to identity links that have the given user id. None --type text Restricts to identity links that have the given type (candidate/assignee/owner). None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicIdentityLinks"},{"location":"commands/full/#cctl-get-historicidentitylinkscount","text":"Get Identity Link Log Count Queries for the number of historic identity link logs that fulfill the given parameters. Takes the same parameters as the Get Identity-Link-Logs method. URL: /history/identity-link-log/count Schema: - Usage: cctl get historicIdentityLinksCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --without-tenant-id / --not-without-tenant-id boolean Only include historic identity links that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. None --assigner-id text Restricts to identity links that have the given assigner id. None --operation-type text Restricts to identity links that have the given operationType (add/delete). None --process-definition-key text Restricts to identity links that have the given process definition key. None --process-definition-id text Restricts to identity links that have the given process definition id. None --task-id text Restricts to identity links that have the given task id. None --date-after text Restricts to identity links that have the time after the given time. None --date-before text Restricts to identity links that have the time before the given time. None --group-id text Restricts to identity links that have the given group id. None --user-id text Restricts to identity links that have the given user id. None --type text Restricts to identity links that have the given type (candidate/assignee/owner). None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicIdentityLinksCount"},{"location":"commands/full/#cctl-get-historicincidents","text":"Get Incidents Queries for historic incidents that fulfill given parameters. The size of the result set can be retrieved by using the Get Incident Count method. URL: /history/incident Schema: - Usage: cctl get historicIncidents [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --job-definition-id-in text Restricts to incidents that have one of the given comma-separated job definition ids. None --without-tenant-id / --not-without-tenant-id boolean Only include historic incidents that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Restricts to incidents that have one of the given comma-separated tenant ids. None --deleted / --not-deleted boolean Restricts to incidents that are deleted. None --resolved / --not-resolved boolean Restricts to incidents that are resolved. None --open / --not-open boolean Restricts to incidents that are open. None --history-configuration text Restricts to incidents that have the given parameter set as history configuration. None --configuration text Restricts to incidents that have the given parameter set as configuration. None --root-cause-incident-id text Restricts to incidents that have the given incident id as root cause incident. None --cause-incident-id text Restricts to incidents that have the given incident id as cause incident. None --failed-activity-id text Restricts to incidents that were created due to the failure of an activity with the given id. None --activity-id text Restricts to incidents that belong to an activity with the given id. None --end-time-after text Restricts to incidents that have an endTimeAfter date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --end-time-before text Restricts to incidents that have an endTimeBefore date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --create-time-after text Restricts to incidents that have a createTime date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --create-time-before text Restricts to incidents that have a createTime date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --execution-id text Restricts to incidents that belong to an execution with the given id. None --process-instance-id text Restricts to incidents that belong to a process instance with the given id. None --process-definition-key-in text Restricts to incidents that have one of the given process definition keys. None --process-definition-key text Restricts to incidents that have the given processDefinitionKey. None --process-definition-id text Restricts to incidents that belong to a process definition with the given id. None --incident-message-like text Restricts to incidents that incidents message is a substring of the given value. The string can include the wildcard character '%' to express like-strategy: starts with (string%), ends with (%string) or contains (%string%). None --incident-message text Restricts to incidents that have the given incident message. None --incident-type text Restricts to incidents that belong to the given incident type. See the [User Guide](/manual/develop/user-guide/process-engine/incidents/#incident-types) for a list of incident types. None --incident-id text Restricts to incidents that have the given id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicIncidents"},{"location":"commands/full/#cctl-get-historicincidentscount","text":"Get Incident Count Queries for the number of historic incidents that fulfill the given parameters. Takes the same parameters as the Get Incidents method. URL: /history/incident/count Schema: - Usage: cctl get historicIncidentsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --job-definition-id-in text Restricts to incidents that have one of the given comma-separated job definition ids. None --without-tenant-id / --not-without-tenant-id boolean Only include historic incidents that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Restricts to incidents that have one of the given comma-separated tenant ids. None --deleted / --not-deleted boolean Restricts to incidents that are deleted. None --resolved / --not-resolved boolean Restricts to incidents that are resolved. None --open / --not-open boolean Restricts to incidents that are open. None --history-configuration text Restricts to incidents that have the given parameter set as history configuration. None --configuration text Restricts to incidents that have the given parameter set as configuration. None --root-cause-incident-id text Restricts to incidents that have the given incident id as root cause incident. None --cause-incident-id text Restricts to incidents that have the given incident id as cause incident. None --failed-activity-id text Restricts to incidents that were created due to the failure of an activity with the given id. None --activity-id text Restricts to incidents that belong to an activity with the given id. None --end-time-after text Restricts to incidents that have an endTimeAfter date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --end-time-before text Restricts to incidents that have an endTimeBefore date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --create-time-after text Restricts to incidents that have a createTime date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --create-time-before text Restricts to incidents that have a createTime date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --execution-id text Restricts to incidents that belong to an execution with the given id. None --process-instance-id text Restricts to incidents that belong to a process instance with the given id. None --process-definition-key-in text Restricts to incidents that have one of the given process definition keys. None --process-definition-key text Restricts to incidents that have the given processDefinitionKey. None --process-definition-id text Restricts to incidents that belong to a process definition with the given id. None --incident-message-like text Restricts to incidents that incidents message is a substring of the given value. The string can include the wildcard character '%' to express like-strategy: starts with (string%), ends with (%string) or contains (%string%). None --incident-message text Restricts to incidents that have the given incident message. None --incident-type text Restricts to incidents that belong to the given incident type. See the [User Guide](/manual/develop/user-guide/process-engine/incidents/#incident-types) for a list of incident types. None --incident-id text Restricts to incidents that have the given id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicIncidentsCount"},{"location":"commands/full/#cctl-get-historicjoblog","text":"Get Job Log Retrieves a historic job log by id. URL: /history/job-log/{id} Schema: - Usage: cctl get historicJobLog [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicJobLog"},{"location":"commands/full/#cctl-get-historicjoblogs","text":"Get Job Logs Queries for historic job logs that fulfill the given parameters. The size of the result set can be retrieved by using the Get Job Log Count method. URL: /history/job-log Schema: - Usage: cctl get historicJobLogs [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --deletion-log / --not-deletion-log boolean Only include deletion logs. Value may only be true , as false is the default behavior. None --success-log / --not-success-log boolean Only include success logs. Value may only be true , as false is the default behavior. None --failure-log / --not-failure-log boolean Only include failure logs. Value may only be true , as false is the default behavior. None --creation-log / --not-creation-log boolean Only include creation logs. Value may only be true , as false is the default behavior. None --job-priority-higher-than-or-equals text Only include logs for which the associated job had a priority higher than or equal to the given value. Value must be a valid long value. None --job-priority-lower-than-or-equals text Only include logs for which the associated job had a priority lower than or equal to the given value. Value must be a valid long value. None --hostname text Filter by hostname. None --without-tenant-id / --not-without-tenant-id boolean Only include historic job log entries that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Only include historic job log entries which belong to one of the passed and comma- separated tenant ids. None --deployment-id text Filter by deployment id. None --process-definition-key text Filter by process definition key. None --process-definition-id text Filter by process definition id. None --process-instance-id text Filter by process instance id. None --execution-id-in text Only include historic job logs which belong to one of the passed execution ids. None --failed-activity-id-in text Only include historic job logs which belong to failures of one of the passed activity ids. None --activity-id-in text Only include historic job logs which belong to one of the passed activity ids. None --job-definition-configuration text Filter by job definition configuration. None --job-definition-type text Filter by job definition type. See the User Guide for more information about job definition types. None --job-definition-id text Filter by job definition id. None --job-exception-message text Filter by job exception message. None --job-id text Filter by job id. None --log-id text Filter by historic job log id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicJobLogs"},{"location":"commands/full/#cctl-get-historicjoblogscount","text":"Get Job Log Count Queries for the number of historic job logs that fulfill the given parameters. Takes the same parameters as the Get Job Logs method. URL: /history/job-log/count Schema: - Usage: cctl get historicJobLogsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deletion-log / --not-deletion-log boolean Only include deletion logs. Value may only be true , as false is the default behavior. None --success-log / --not-success-log boolean Only include success logs. Value may only be true , as false is the default behavior. None --failure-log / --not-failure-log boolean Only include failure logs. Value may only be true , as false is the default behavior. None --creation-log / --not-creation-log boolean Only include creation logs. Value may only be true , as false is the default behavior. None --job-priority-higher-than-or-equals text Only include logs for which the associated job had a priority higher than or equal to the given value. Value must be a valid long value. None --job-priority-lower-than-or-equals text Only include logs for which the associated job had a priority lower than or equal to the given value. Value must be a valid long value. None --hostname text Filter by hostname. None --without-tenant-id / --not-without-tenant-id boolean Only include historic job log entries that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Only include historic job log entries which belong to one of the passed and comma- separated tenant ids. None --deployment-id text Filter by deployment id. None --process-definition-key text Filter by process definition key. None --process-definition-id text Filter by process definition id. None --process-instance-id text Filter by process instance id. None --execution-id-in text Only include historic job logs which belong to one of the passed execution ids. None --failed-activity-id-in text Only include historic job logs which belong to failures of one of the passed activity ids. None --activity-id-in text Only include historic job logs which belong to one of the passed activity ids. None --job-definition-configuration text Filter by job definition configuration. None --job-definition-type text Filter by job definition type. See the User Guide for more information about job definition types. None --job-definition-id text Filter by job definition id. None --job-exception-message text Filter by job exception message. None --job-id text Filter by job id. None --log-id text Filter by historic job log id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicJobLogsCount"},{"location":"commands/full/#cctl-get-historicprocessinstance","text":"Get Retrieves a historic process instance by id, according to the HistoricProcessInstance interface in the engine. URL: /history/process-instance/{id} Schema: - Usage: cctl get historicProcessInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicProcessInstance"},{"location":"commands/full/#cctl-get-historicprocessinstancedurationreport","text":"Get Duration Report Retrieves a report about the duration of completed process instances, grouped by a period. These reports include the maximum, minimum and average duration of all completed process instances which were started in a given period. Note: This only includes historic data. URL: /history/process-instance/report Schema: - Usage: cctl get historicProcessInstanceDurationReport [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --started-after text Restrict to instances that were started after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2016-01-23T14:42:45.000+0200 . None --started-before text Restrict to instances that were started before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2016-01-23T14:42:45.000+0200 . None --process-definition-key-in text Filter by process definition keys. Must be a comma-separated list of process definition keys. None --process-definition-id-in text Filter by process definition ids. Must be a comma-separated list of process definition ids. None --period-unit text Mandatory. Specifies the granularity of the report. Valid values are month and quarter . None --report-type text Mandatory. Specifies the type of the report to retrieve. To retrieve a report about the duration of process instances, the value must be set to duration . None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicProcessInstanceDurationReport"},{"location":"commands/full/#cctl-get-historicprocessinstances","text":"Get List Queries for historic process instances that fulfill the given parameters. The size of the result set can be retrieved by using the Get Process Instance Count method. URL: /history/process-instance Schema: - Usage: cctl get historicProcessInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match all variable values provided in variables case-insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match all variable names provided in variables case-insensitively. If set to true variableName and variablename are treated as equal. None --variables text Only include process instances that have/had variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . Key and value may not contain underscore or comma characters. | None | | --internally-terminated / --not-internally-terminated | boolean | Restrict to instances that are internallyTerminated. | None | | --externally-terminated / --not-externally-terminated | boolean | Restrict to instances that are externallyTerminated. | None | | --completed / --not-completed | boolean | Restrict to instances that are completed. | None | | --suspended / --not-suspended | boolean | Restrict to instances that are suspended. | None | | --active / --not-active | boolean | Restrict to instances that are active. | None | | --active-activity-id-in | text | Restrict to instances that have an active activity with one of given ids. Filter by a comma-separated list of Strings | None | | --executed-activity-id-in | text | Restrict to instances that executed an activity with one of given ids. Filter by a comma-separated list of Strings | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include historic process instances which belong to no tenant. Value may only be true , as false is the default behavior. | None | | --tenant-id-in | text | Filter by a list of tenant ids. A process instance must have one of the given tenant ids. Filter by a comma-separated list of Strings | None | | --case-instance-id | text | Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id. | None | | --sub-case-instance-id | text | Restrict query to one process instance that has a sub case instance with the given id. | None | | --super-case-instance-id | text | Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id. | None | | --sub-process-instance-id | text | Restrict query to one process instance that has a sub process instance with the given id. | None | | --super-process-instance-id | text | Restrict query to all process instances that are sub process instances of the given process instance. Takes a process instance id. | None | | --started-by | text | Only include process instances that were started by the given user. | None | | --executed-job-before | text | Restrict to instances that executed an job before the given date (inclusive). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --executed-job-after | text | Restrict to instances that executed an job after the given date (inclusive). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --executed-activity-before | text | Restrict to instances that executed an activity before the given date (inclusive). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --executed-activity-after | text | Restrict to instances that executed an activity after the given date (inclusive). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --finished-after | text | Restrict to instances that were finished after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --finished-before | text | Restrict to instances that were finished before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --started-after | text | Restrict to instances that were started after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --started-before | text | Restrict to instances that were started before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --incident-message-like | text | Filter by the incident message that the parameter is a substring of. | None | | --incident-message | text | Filter by the incident message. Exact match. | None | | --incident-status | text | Only include process instances which have an incident in status either open or resolved. To get all process instances, use the query parameter withIncidents. | None | | --incident-type | text | Filter by the incident type. See the User Guide for a list of incident types. | None | | --with-root-incidents / --not-with-root-incidents | boolean | Only include process instances which have a root incident. Value may only be true , as false is the default behavior. | None | | --with-incidents / --not-with-incidents | boolean | Only include process instances which have an incident. Value may only be true , as false is the default behavior. | None | | --unfinished / --not-unfinished | boolean | Only include unfinished process instances. Value may only be true , as false is the default behavior. | None | | --finished / --not-finished | boolean | Only include finished process instances. This flag includes all process instances that are completed or terminated. Value may only be true , as false is the default behavior. | None | | --root-process-instances / --not-root-process-instances | boolean | Restrict the query to all process instances that are top level process instances. | None | | --process-instance-business-key-like | text | Filter by process instance business key that the parameter is a substring of. | None | | --process-instance-business-key | text | Filter by process instance business key. | None | | --process-definition-key-not-in | text | Exclude instances that belong to a set of process definitions. Filter by a comma-separated list of Strings . | None | | --process-definition-name-like | text | Filter by process definition names that the parameter is a substring of. | None | | --process-definition-name | text | Filter by the name of the process definition the instances run on. | None | | --process-definition-key-in | text | Filter by a list of process definition keys. A process instance must have one of the given process definition keys. Filter by a comma-separated list of Strings . | None | | --process-definition-key | text | Filter by the key of the process definition the instances run on. | None | | --process-definition-id | text | Filter by the process definition the instances run on. | None | | --process-instance-ids | text | Filter by process instance ids. Filter by a comma-separated list of Strings . | None | | --process-instance-id | text | Filter by process instance id. | None | | --max-results | text | Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. | None | | --first-result | text | Pagination of results. Specifies the index of the first result to return. | None | | --sort-order | text | Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. | None | | --sort-by | text | Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"historicProcessInstances"},{"location":"commands/full/#cctl-get-historicprocessinstancescount","text":"Get List Count Queries for the number of historic process instances that fulfill the given parameters. Takes the same parameters as the Get Process Instances method. URL: /history/process-instance/count Schema: - Usage: cctl get historicProcessInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match all variable values provided in variables case-insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match all variable names provided in variables case-insensitively. If set to true variableName and variablename are treated as equal. None --variables text Only include process instances that have/had variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . Key and value may not contain underscore or comma characters. | None | | --internally-terminated / --not-internally-terminated | boolean | Restrict to instances that are internallyTerminated. | None | | --externally-terminated / --not-externally-terminated | boolean | Restrict to instances that are externallyTerminated. | None | | --completed / --not-completed | boolean | Restrict to instances that are completed. | None | | --suspended / --not-suspended | boolean | Restrict to instances that are suspended. | None | | --active / --not-active | boolean | Restrict to instances that are active. | None | | --active-activity-id-in | text | Restrict to instances that have an active activity with one of given ids. Filter by a comma-separated list of Strings | None | | --executed-activity-id-in | text | Restrict to instances that executed an activity with one of given ids. Filter by a comma-separated list of Strings | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include historic process instances which belong to no tenant. Value may only be true , as false is the default behavior. | None | | --tenant-id-in | text | Filter by a list of tenant ids. A process instance must have one of the given tenant ids. Filter by a comma-separated list of Strings | None | | --case-instance-id | text | Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id. | None | | --sub-case-instance-id | text | Restrict query to one process instance that has a sub case instance with the given id. | None | | --super-case-instance-id | text | Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id. | None | | --sub-process-instance-id | text | Restrict query to one process instance that has a sub process instance with the given id. | None | | --super-process-instance-id | text | Restrict query to all process instances that are sub process instances of the given process instance. Takes a process instance id. | None | | --started-by | text | Only include process instances that were started by the given user. | None | | --executed-job-before | text | Restrict to instances that executed an job before the given date (inclusive). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --executed-job-after | text | Restrict to instances that executed an job after the given date (inclusive). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --executed-activity-before | text | Restrict to instances that executed an activity before the given date (inclusive). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --executed-activity-after | text | Restrict to instances that executed an activity after the given date (inclusive). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --finished-after | text | Restrict to instances that were finished after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --finished-before | text | Restrict to instances that were finished before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --started-after | text | Restrict to instances that were started after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --started-before | text | Restrict to instances that were started before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --incident-message-like | text | Filter by the incident message that the parameter is a substring of. | None | | --incident-message | text | Filter by the incident message. Exact match. | None | | --incident-status | text | Only include process instances which have an incident in status either open or resolved. To get all process instances, use the query parameter withIncidents. | None | | --incident-type | text | Filter by the incident type. See the User Guide for a list of incident types. | None | | --with-root-incidents / --not-with-root-incidents | boolean | Only include process instances which have a root incident. Value may only be true , as false is the default behavior. | None | | --with-incidents / --not-with-incidents | boolean | Only include process instances which have an incident. Value may only be true , as false is the default behavior. | None | | --unfinished / --not-unfinished | boolean | Only include unfinished process instances. Value may only be true , as false is the default behavior. | None | | --finished / --not-finished | boolean | Only include finished process instances. This flag includes all process instances that are completed or terminated. Value may only be true , as false is the default behavior. | None | | --root-process-instances / --not-root-process-instances | boolean | Restrict the query to all process instances that are top level process instances. | None | | --process-instance-business-key-like | text | Filter by process instance business key that the parameter is a substring of. | None | | --process-instance-business-key | text | Filter by process instance business key. | None | | --process-definition-key-not-in | text | Exclude instances that belong to a set of process definitions. Filter by a comma-separated list of Strings . | None | | --process-definition-name-like | text | Filter by process definition names that the parameter is a substring of. | None | | --process-definition-name | text | Filter by the name of the process definition the instances run on. | None | | --process-definition-key-in | text | Filter by a list of process definition keys. A process instance must have one of the given process definition keys. Filter by a comma-separated list of Strings . | None | | --process-definition-key | text | Filter by the key of the process definition the instances run on. | None | | --process-definition-id | text | Filter by the process definition the instances run on. | None | | --process-instance-ids | text | Filter by process instance ids. Filter by a comma-separated list of Strings . | None | | --process-instance-id | text | Filter by process instance id. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"historicProcessInstancesCount"},{"location":"commands/full/#cctl-get-historictaskinstancereport","text":"Get Task Report (Historic) Retrieves a report of completed tasks. When the report type is set to count , the report contains a list of completed task counts where an entry contains the task name, the definition key of the task, the process definition id, the process definition key, the process definition name and the count of how many tasks were completed for the specified key in a given period. When the report type is set to duration , the report contains a minimum, maximum and average duration value of all completed task instances in a given period. URL: /history/task/report Schema: - Usage: cctl get historicTaskInstanceReport [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --group-by text When the report type is set to count , this parameter is mandatory . Groups the tasks report by a given criterion. Valid values are taskName and processDefinition . None --completed-after text Restrict to tasks that were completed after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --completed-before text Restrict to tasks that were completed before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --period-unit text When the report type is set to duration , this parameter is mandatory . Specifies the granularity of the report. Valid values are month and quarter . None --report-type text Mandatory. Specifies the kind of the report to execute. To retrieve a report about the duration of process instances the value must be set to duration . For a report of the completed tasks in a specific timespan the value must be set to count . None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicTaskInstanceReport"},{"location":"commands/full/#cctl-get-historictaskinstances","text":"Get Tasks (Historic) Queries for historic tasks that fulfill the given parameters. The size of the result set can be retrieved by using the Get Task Count method. URL: /history/task Schema: - Usage: cctl get historicTaskInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --without-candidate-groups / --not-without-candidate-groups boolean Only include tasks which have no candidate group. Value may only be true , as false is the default behavior. None --with-candidate-groups / --not-with-candidate-groups boolean Only include tasks which have a candidate group. Value may only be true , as false is the default behavior. None --task-had-candidate-group text Restrict to tasks with a historic identity link to the given candidate group. None --task-had-candidate-user text Restrict to tasks with a historic identity link to the given candidate user. None --task-involved-group text Restrict to tasks with a historic identity link to the given group. None --task-involved-user text Restrict to tasks with a historic identity link to the given user. None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match the variable value provided in taskVariables and processVariables case- insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match the variable name provided in taskVariables and processVariables case- insensitively. If set to true variableName and variablename are treated as equal. None --process-variables text Only include tasks that belong to process instances that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: * eq - equal to; * neq - not equal to; * gt - greater than; * gteq - greater than or equal to; * lt - lower than; * lteq - lower than or equal to; * like ; * notLike . key and value may not contain underscore or comma characters. | None | | --task-variables | text | Only include tasks that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: * eq - equal to; * neq - not equal to; * gt - greater than; * gteq - greater than or equal to; * lt - lower than; * lteq - lower than or equal to; * like . key and value may not contain underscore or comma characters. | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include historic task instances that belong to no tenant. Value may only be true , as false is the default behavior. | None | | --tenant-id-in | text | Filter by a comma-separated list of tenant ids. A task instance must have one of the given tenant ids. | None | | --finished-after | text | Restrict to tasks that were finished after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --finished-before | text | Restrict to tasks that were finished before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --started-after | text | Restrict to tasks that were started after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --started-before | text | Restrict to tasks that were started before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-follow-up-date-after | text | Restrict to tasks that have a followUp date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-follow-up-date-before | text | Restrict to tasks that have a followUp date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-follow-up-date | text | Restrict to tasks that have a followUp date on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --without-task-due-date / --not-without-task-due-date | boolean | Only include tasks which have no due date. Value may only be true , as false is the default behavior. | None | | --task-due-date-after | text | Restrict to tasks that are due after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-due-date-before | text | Restrict to tasks that are due before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-due-date | text | Restrict to tasks that are due on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --process-unfinished / --not-process-unfinished | boolean | Only include tasks of unfinished processes. Value may only be true , as false is the default behavior. | None | | --process-finished / --not-process-finished | boolean | Only include tasks of finished processes. Value may only be true , as false is the default behavior. | None | | --unfinished / --not-unfinished | boolean | Only include unfinished tasks. Value may only be true , as false is the default behavior. | None | | --finished / --not-finished | boolean | Only include finished tasks. Value may only be true , as false is the default behavior. | None | | --unassigned / --not-unassigned | boolean | If set to true , restricts the query to all tasks that are unassigned. | None | | --assigned / --not-assigned | boolean | If set to true , restricts the query to all tasks that are assigned. | None | | --task-priority | text | Restrict to tasks that have the given priority. | None | | --task-owner-like | text | Restrict to tasks that are owned by users with the parameter value as a substring. | None | | --task-owner | text | Restrict to tasks that the given user owns. | None | | --task-assignee-like | text | Restrict to tasks that are assigned to users with the parameter value as a substring. | None | | --task-assignee | text | Restrict to tasks that the given user is assigned to. | None | | --task-delete-reason-like | text | Restrict to tasks that have a delete reason that has the parameter value as a substring. | None | | --task-delete-reason | text | Restrict to tasks that have the given delete reason. | None | | --task-definition-key-in | text | Restrict to tasks that have one of the passed comma-separated task definition keys. | None | | --task-definition-key | text | Restrict to tasks that have the given key. | None | | --task-description-like | text | Restrict to tasks that have a description that has the parameter value as a substring. | None | | --task-description | text | Restrict to tasks that have the given description. | None | | --task-name-like | text | Restrict to tasks that have a name with the given parameter value as substring. | None | | --task-name | text | Restrict to tasks that have the given name. | None | | --activity-instance-id-in | text | Only include tasks which belong to one of the passed comma-separated activity instance ids. | None | | --case-definition-name | text | Restrict to tasks that belong to a case definition with the given name. | None | | --case-definition-key | text | Restrict to tasks that belong to a case definition with the given key. | None | | --case-definition-id | text | Filter by case definition id. | None | | --case-execution-id | text | Filter by the id of the case execution that executed the task. | None | | --case-instance-id | text | Filter by case instance id. | None | | --process-definition-name | text | Restrict to tasks that belong to a process definition with the given name. | None | | --process-definition-key | text | Restrict to tasks that belong to a process definition with the given key. | None | | --process-definition-id | text | Filter by process definition id. | None | | --execution-id | text | Filter by the id of the execution that executed the task. | None | | --process-instance-business-key-like | text | Filter by process instance business key that has the parameter value as a substring. | None | | --process-instance-business-key-in | text | Filter by process instances with one of the give business keys. The keys need to be in a comma-separated list. | None | | --process-instance-business-key | text | Filter by process instance business key. | None | | --process-instance-id | text | Filter by process instance id. | None | | --task-parent-task-id | text | Filter by parent task id. | None | | --task-id | text | Filter by task id. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"historicTaskInstances"},{"location":"commands/full/#cctl-get-historictaskinstancescount","text":"Get Task Count Queries for the number of historic tasks that fulfill the given parameters. Takes the same parameters as the Get Tasks (Historic) method. URL: /history/task/count Schema: - Usage: cctl get historicTaskInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --without-candidate-groups / --not-without-candidate-groups boolean Only include tasks which have no candidate group. Value may only be true , as false is the default behavior. None --with-candidate-groups / --not-with-candidate-groups boolean Only include tasks which have a candidate group. Value may only be true , as false is the default behavior. None --task-had-candidate-group text Restrict to tasks with a historic identity link to the given candidate group. None --task-had-candidate-user text Restrict to tasks with a historic identity link to the given candidate user. None --task-involved-group text Restrict to tasks with a historic identity link to the given group. None --task-involved-user text Restrict to tasks with a historic identity link to the given user. None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match the variable value provided in taskVariables and processVariables case- insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match the variable name provided in taskVariables and processVariables case- insensitively. If set to true variableName and variablename are treated as equal. None --process-variables text Only include tasks that belong to process instances that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: * eq - equal to; * neq - not equal to; * gt - greater than; * gteq - greater than or equal to; * lt - lower than; * lteq - lower than or equal to; * like ; * notLike . key and value may not contain underscore or comma characters. | None | | --task-variables | text | Only include tasks that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: * eq - equal to; * neq - not equal to; * gt - greater than; * gteq - greater than or equal to; * lt - lower than; * lteq - lower than or equal to; * like . key and value may not contain underscore or comma characters. | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include historic task instances that belong to no tenant. Value may only be true , as false is the default behavior. | None | | --tenant-id-in | text | Filter by a comma-separated list of tenant ids. A task instance must have one of the given tenant ids. | None | | --finished-after | text | Restrict to tasks that were finished after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --finished-before | text | Restrict to tasks that were finished before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --started-after | text | Restrict to tasks that were started after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --started-before | text | Restrict to tasks that were started before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-follow-up-date-after | text | Restrict to tasks that have a followUp date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-follow-up-date-before | text | Restrict to tasks that have a followUp date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-follow-up-date | text | Restrict to tasks that have a followUp date on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --without-task-due-date / --not-without-task-due-date | boolean | Only include tasks which have no due date. Value may only be true , as false is the default behavior. | None | | --task-due-date-after | text | Restrict to tasks that are due after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-due-date-before | text | Restrict to tasks that are due before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-due-date | text | Restrict to tasks that are due on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --process-unfinished / --not-process-unfinished | boolean | Only include tasks of unfinished processes. Value may only be true , as false is the default behavior. | None | | --process-finished / --not-process-finished | boolean | Only include tasks of finished processes. Value may only be true , as false is the default behavior. | None | | --unfinished / --not-unfinished | boolean | Only include unfinished tasks. Value may only be true , as false is the default behavior. | None | | --finished / --not-finished | boolean | Only include finished tasks. Value may only be true , as false is the default behavior. | None | | --unassigned / --not-unassigned | boolean | If set to true , restricts the query to all tasks that are unassigned. | None | | --assigned / --not-assigned | boolean | If set to true , restricts the query to all tasks that are assigned. | None | | --task-priority | text | Restrict to tasks that have the given priority. | None | | --task-owner-like | text | Restrict to tasks that are owned by users with the parameter value as a substring. | None | | --task-owner | text | Restrict to tasks that the given user owns. | None | | --task-assignee-like | text | Restrict to tasks that are assigned to users with the parameter value as a substring. | None | | --task-assignee | text | Restrict to tasks that the given user is assigned to. | None | | --task-delete-reason-like | text | Restrict to tasks that have a delete reason that has the parameter value as a substring. | None | | --task-delete-reason | text | Restrict to tasks that have the given delete reason. | None | | --task-definition-key-in | text | Restrict to tasks that have one of the passed comma-separated task definition keys. | None | | --task-definition-key | text | Restrict to tasks that have the given key. | None | | --task-description-like | text | Restrict to tasks that have a description that has the parameter value as a substring. | None | | --task-description | text | Restrict to tasks that have the given description. | None | | --task-name-like | text | Restrict to tasks that have a name with the given parameter value as substring. | None | | --task-name | text | Restrict to tasks that have the given name. | None | | --activity-instance-id-in | text | Only include tasks which belong to one of the passed comma-separated activity instance ids. | None | | --case-definition-name | text | Restrict to tasks that belong to a case definition with the given name. | None | | --case-definition-key | text | Restrict to tasks that belong to a case definition with the given key. | None | | --case-definition-id | text | Filter by case definition id. | None | | --case-execution-id | text | Filter by the id of the case execution that executed the task. | None | | --case-instance-id | text | Filter by case instance id. | None | | --process-definition-name | text | Restrict to tasks that belong to a process definition with the given name. | None | | --process-definition-key | text | Restrict to tasks that belong to a process definition with the given key. | None | | --process-definition-id | text | Filter by process definition id. | None | | --execution-id | text | Filter by the id of the execution that executed the task. | None | | --process-instance-business-key-like | text | Filter by process instance business key that has the parameter value as a substring. | None | | --process-instance-business-key-in | text | Filter by process instances with one of the give business keys. The keys need to be in a comma-separated list. | None | | --process-instance-business-key | text | Filter by process instance business key. | None | | --process-instance-id | text | Filter by process instance id. | None | | --task-parent-task-id | text | Filter by parent task id. | None | | --task-id | text | Filter by task id. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"historicTaskInstancesCount"},{"location":"commands/full/#cctl-get-historicvariableinstance","text":"Get Variable Instance Retrieves a historic variable by id. URL: /history/variable-instance/{id} Schema: - Usage: cctl get historicVariableInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"historicVariableInstance"},{"location":"commands/full/#cctl-get-historicvariableinstancebinary","text":"Get Variable Instance (Binary) Retrieves the content of a historic variable by id. Applicable for variables that are serialized as binary data. URL: /history/variable-instance/{id}/data Schema: - Usage: cctl get historicVariableInstanceBinary [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicVariableInstanceBinary"},{"location":"commands/full/#cctl-get-historicvariableinstances","text":"Get Variable Instances Queries for historic variable instances that fulfill the given parameters. The size of the result set can be retrieved by using the Get Variable Instance Count method. URL: /history/variable-instance Schema: - Usage: cctl get historicVariableInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --max-results | text | Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. | None | | --first-result | text | Pagination of results. Specifies the index of the first result to return. | None | | --sort-order | text | Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. | None | | --sort-by | text | Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include historic variable instances that belong to no tenant. Value may only be true , as false is the default behavior. | None | | --tenant-id-in | text | Only include historic variable instances which belong to one of the passed and comma- separated tenant ids. | None | | --activity-instance-id-in | text | Only include historic variable instances which belong to one of the passed and and comma-separated activity instance ids. | None | | --task-id-in | text | Only include historic variable instances which belong to one of the passed and and comma-separated task ids. | None | | --case-activity-id-in | text | Only include historic variable instances which belong to one of the passed and and comma-separated case activity ids. | None | | --case-execution-id-in | text | Only include historic variable instances which belong to one of the passed and and comma-separated case execution ids. | None | | --case-instance-id | text | Filter by the case instance the variable belongs to. | None | | --execution-id-in | text | Only include historic variable instances which belong to one of the passed and and comma-separated execution ids. | None | | --process-definition-key | text | Filter by a key of the process definition the variable belongs to. | None | | --process-definition-id | text | Filter by the process definition the variable belongs to. | None | | --process-instance-id-in | text | Only include historic variable instances which belong to one of the passed and comma-separated process instance ids. | None | | --process-instance-id | text | Filter by the process instance the variable belongs to. | None | | --include-deleted / --not-include-deleted | boolean | Include variables that has already been deleted during the execution. | None | | --variable-type-in | text | Only include historic variable instances which belong to one of the passed and comma- separated variable types. A list of all supported variable types can be found here . Note: All non-primitive variables are associated with the type 'serializable'. | None | | --variable-values-ignore-case / --not-variable-values-ignore-case | boolean | Match the variable value provided in variableValue case-insensitively. If set to true variableValue and variablevalue are treated as equal. | None | | --variable-names-ignore-case / --not-variable-names-ignore-case | boolean | Match the variable name provided in variableName and variableNameLike case- insensitively. If set to true variableName and variablename are treated as equal. | None | | --variable-value | text | Filter by variable value. Is treated as a String object on server side. | None | | --variable-name-like | text | Restrict to variables with a name like the parameter. | None | | --variable-name | text | Filter by variable name. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"historicVariableInstances"},{"location":"commands/full/#cctl-get-historicvariableinstancescount","text":"Get Variable Instance Count Queries for the number of historic variable instances that fulfill the given parameters. Takes the same parameters as the Get Variable Instances method. URL: /history/variable-instance/count Schema: - Usage: cctl get historicVariableInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --without-tenant-id / --not-without-tenant-id boolean Only include historic variable instances that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Only include historic variable instances which belong to one of the passed and comma- separated tenant ids. None --activity-instance-id-in text Only include historic variable instances which belong to one of the passed and and comma-separated activity instance ids. None --task-id-in text Only include historic variable instances which belong to one of the passed and and comma-separated task ids. None --case-activity-id-in text Only include historic variable instances which belong to one of the passed and and comma-separated case activity ids. None --case-execution-id-in text Only include historic variable instances which belong to one of the passed and and comma-separated case execution ids. None --case-instance-id text Filter by the case instance the variable belongs to. None --execution-id-in text Only include historic variable instances which belong to one of the passed and and comma-separated execution ids. None --process-definition-key text Filter by a key of the process definition the variable belongs to. None --process-definition-id text Filter by the process definition the variable belongs to. None --process-instance-id-in text Only include historic variable instances which belong to one of the passed and comma-separated process instance ids. None --process-instance-id text Filter by the process instance the variable belongs to. None --include-deleted / --not-include-deleted boolean Include variables that has already been deleted during the execution. None --variable-type-in text Only include historic variable instances which belong to one of the passed and comma- separated variable types. A list of all supported variable types can be found here . Note: All non-primitive variables are associated with the type 'serializable'. None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match the variable value provided in variableValue case-insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match the variable name provided in variableName and variableNameLike case- insensitively. If set to true variableName and variablename are treated as equal. None --variable-value text Filter by variable value. Is treated as a String object on server side. None --variable-name-like text Restrict to variables with a name like the parameter. None --variable-name text Filter by variable name. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicVariableInstancesCount"},{"location":"commands/full/#cctl-get-historycleanupconfiguration","text":"Get History Cleanup Configuration Retrieves history cleanup batch window configuration (See History cleanup ). URL: /history/cleanup/configuration Schema: - Usage: cctl get historyCleanupConfiguration [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historyCleanupConfiguration"},{"location":"commands/full/#cctl-get-identitylinks","text":"Get List Gets the identity links for a task by id, which are the users and groups that are in some relation to it (including assignee and owner). URL: /task/{id}/identity-links Schema: - Usage: cctl get identityLinks [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --type text Filter by the type of links to include. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"identityLinks"},{"location":"commands/full/#cctl-get-incident","text":"Get Incident Retrieves an incident by ID. URL: /incident/{id} Schema: - Usage: cctl get incident [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"incident"},{"location":"commands/full/#cctl-get-incidents","text":"Get List Queries for incidents that fulfill given parameters. The size of the result set can be retrieved by using the Get Incident Count method. URL: /incident Schema: - Usage: cctl get incidents [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --job-definition-id-in text Restricts to incidents that have one of the given comma-separated job definition ids. None --tenant-id-in text Restricts to incidents that have one of the given comma-separated tenant ids. None --configuration text Restricts to incidents that have the given parameter set as configuration. None --root-cause-incident-id text Restricts to incidents that have the given incident id as root cause incident. None --cause-incident-id text Restricts to incidents that have the given incident id as cause incident. None --failed-activity-id text Restricts to incidents that were created due to the failure of an activity with the given id. None --activity-id text Restricts to incidents that belong to an activity with the given id. None --incident-timestamp-after text Restricts to incidents that have an incidentTimestamp date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --incident-timestamp-before text Restricts to incidents that have an incidentTimestamp date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --execution-id text Restricts to incidents that belong to an execution with the given id. None --process-instance-id text Restricts to incidents that belong to a process instance with the given id. None --process-definition-key-in text Restricts to incidents that belong to a process definition with the given keys. Must be a comma-separated list. None --process-definition-id text Restricts to incidents that belong to a process definition with the given id. None --incident-message-like text Restricts to incidents that incidents message is a substring of the given value. The string can include the wildcard character '%' to express like-strategy: starts with ( string% ), ends with ( %string ) or contains ( %string% ). None --incident-message text Restricts to incidents that have the given incident message. None --incident-type text Restricts to incidents that belong to the given incident type. See the User Guide for a list of incident types. None --incident-id text Restricts to incidents that have the given id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"incidents"},{"location":"commands/full/#cctl-get-incidentscount","text":"Get List Count Queries for the number of incidents that fulfill given parameters. Takes the same parameters as the Get Incidents method. URL: /incident/count Schema: - Usage: cctl get incidentsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --job-definition-id-in text Restricts to incidents that have one of the given comma-separated job definition ids. None --tenant-id-in text Restricts to incidents that have one of the given comma-separated tenant ids. None --configuration text Restricts to incidents that have the given parameter set as configuration. None --root-cause-incident-id text Restricts to incidents that have the given incident id as root cause incident. None --cause-incident-id text Restricts to incidents that have the given incident id as cause incident. None --failed-activity-id text Restricts to incidents that were created due to the failure of an activity with the given id. None --activity-id text Restricts to incidents that belong to an activity with the given id. None --incident-timestamp-after text Restricts to incidents that have an incidentTimestamp date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --incident-timestamp-before text Restricts to incidents that have an incidentTimestamp date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --execution-id text Restricts to incidents that belong to an execution with the given id. None --process-instance-id text Restricts to incidents that belong to a process instance with the given id. None --process-definition-key-in text Restricts to incidents that belong to a process definition with the given keys. Must be a comma-separated list. None --process-definition-id text Restricts to incidents that belong to a process definition with the given id. None --incident-message-like text Restricts to incidents that incidents message is a substring of the given value. The string can include the wildcard character '%' to express like-strategy: starts with ( string% ), ends with ( %string ) or contains ( %string% ). None --incident-message text Restricts to incidents that have the given incident message. None --incident-type text Restricts to incidents that belong to the given incident type. See the User Guide for a list of incident types. None --incident-id text Restricts to incidents that have the given id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"incidentsCount"},{"location":"commands/full/#cctl-get-interval","text":"Get Metrics in Interval Retrieves a list of metrics, aggregated for a given interval. URL: /metrics Schema: - Usage: cctl get interval [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --aggregate-by-reporter text Aggregate metrics by reporter. None --interval text The interval for which the metrics should be aggregated. Time unit is seconds. Default: The interval is set to 15 minutes (900 seconds). None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --end-date text The end date (exclusive). None --start-date text The start date (inclusive). None --reporter text The name of the reporter (host), on which the metrics was logged. This will have value provided by the hostname configuration property . None --name text The name of the metric. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"interval"},{"location":"commands/full/#cctl-get-isuserauthorized","text":"Perform an Authorization Check Performs an authorization check for the currently authenticated user. URL: /authorization/check Schema: - Usage: cctl get isUserAuthorized [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --user-id text The id of the user to check permissions for. The currently authenticated user must have a READ permission for the Authorization resource. If userId is blank, a check for the currently authenticated user is performed. None --resource-id text The id of the resource to check permissions for. If left blank, a check for global permissions on the resource is performed. None --resource-type text An integer representing the resource type to check permissions for. See the User Guide for a list of integer representations of resource types. None --resource-name text String value for the name of the resource to check permissions for. None --permission-name text String value representing the permission name to check for. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"isUserAuthorized"},{"location":"commands/full/#cctl-get-job","text":"Get Job Retrieves a job by id, according to the Job interface in the engine. URL: /job/{id} Schema: - Usage: cctl get job [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"job"},{"location":"commands/full/#cctl-get-jobdefinition","text":"Get Job Definition Retrieves a job definition by id, according to the JobDefinition interface in the engine. URL: /job-definition/{id} Schema: - Usage: cctl get jobDefinition [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"jobDefinition"},{"location":"commands/full/#cctl-get-jobdefinitions","text":"Get Job Definitions Queries for job definitions that fulfill given parameters. The size of the result set can be retrieved by using the Get Job Definition Count method. URL: /job-definition Schema: - Usage: cctl get jobDefinitions [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --include-job-definitions-without-tenant-id / --not-include-job-definitions-without-tenant-id boolean Include job definitions which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include job definitions which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Only include job definitions which belong to one of the passed and comma-separated tenant ids. None --with-overriding-job-priority / --not-with-overriding-job-priority boolean Only include job definitions that have an overriding job priority defined. The only effective value is true . If set to false , this filter is not applied. None --suspended / --not-suspended boolean Only include suspended job definitions. Value may only be true , as false is the default behavior. None --active / --not-active boolean Only include active job definitions. Value may only be true , as false is the default behavior. None --job-configuration text Only include job definitions which exist for the given job configuration. For example: for timer jobs it is the timer configuration. None --job-type text Only include job definitions which exist for the given job type. See the User Guide for more information about job types. None --process-definition-key text Only include job definitions which exist for the given process definition key. None --process-definition-id text Only include job definitions which exist for the given process definition id. None --activity-id-in text Only include job definitions which belong to one of the passed and comma-separated activity ids. None --job-definition-id text Filter by job definition id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"jobDefinitions"},{"location":"commands/full/#cctl-get-jobdefinitionscount","text":"Get Job Definition Count Queries for the number of job definitions that fulfill given parameters. Takes the same parameters as the Get Job Definitions method. URL: /job-definition/count Schema: - Usage: cctl get jobDefinitionsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --include-job-definitions-without-tenant-id / --not-include-job-definitions-without-tenant-id boolean Include job definitions which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include job definitions which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Only include job definitions which belong to one of the passed and comma-separated tenant ids. None --with-overriding-job-priority / --not-with-overriding-job-priority boolean Only include job definitions that have an overriding job priority defined. The only effective value is true . If set to false , this filter is not applied. None --suspended / --not-suspended boolean Only include suspended job definitions. Value may only be true , as false is the default behavior. None --active / --not-active boolean Only include active job definitions. Value may only be true , as false is the default behavior. None --job-configuration text Only include job definitions which exist for the given job configuration. For example: for timer jobs it is the timer configuration. None --job-type text Only include job definitions which exist for the given job type. See the User Guide for more information about job types. None --process-definition-key text Only include job definitions which exist for the given process definition key. None --process-definition-id text Only include job definitions which exist for the given process definition id. None --activity-id-in text Only include job definitions which belong to one of the passed and comma-separated activity ids. None --job-definition-id text Filter by job definition id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"jobDefinitionsCount"},{"location":"commands/full/#cctl-get-jobs","text":"Get Jobs Queries for jobs that fulfill given parameters. The size of the result set can be retrieved by using the Get Job Count method. URL: /job Schema: - Usage: cctl get jobs [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --include-jobs-without-tenant-id / --not-include-jobs-without-tenant-id boolean Include jobs which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include jobs which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Only include jobs which belong to one of the passed comma-separated tenant ids. None --priority-higher-than-or-equals text Only include jobs with a priority higher than or equal to the given value. Value must be a valid long value. None --priority-lower-than-or-equals text Only include jobs with a priority lower than or equal to the given value. Value must be a valid long value. None --suspended / --not-suspended boolean Only include suspended jobs. Value may only be true , as false is the default behavior. None --active / --not-active boolean Only include active jobs. Value may only be true , as false is the default behavior. None --no-retries-left / --not-no-retries-left boolean Only select jobs which have no retries left. Value may only be true , as false is the default behavior. None --failed-activity-id text Only select jobs that failed due to an exception at an activity with the given id. None --exception-message text Only select jobs that failed due to an exception with the given message. None --with-exception / --not-with-exception boolean Only select jobs that failed due to an exception. Value may only be true , as false is the default behavior. None --create-times text Only select jobs created before or after the given date. Create time expressions are comma-separated and are structured as follows: A valid condition value has the form operator_value . operator is the comparison operator to be used and value the date value as string. Valid operator values are: gt - greater than; lt - lower than. value may not contain underscore or comma characters. | None | | --due-dates | text | Only select jobs where the due date is lower or higher than the given date. Due date expressions are comma-separated and are structured as follows: A valid condition value has the form operator_value . operator is the comparison operator to be used and value the date value as string. Valid operator values are: gt - greater than; lt - lower than. value may not contain underscore or comma characters. | None | | --messages / --not-messages | boolean | Only select jobs that are messages. Cannot be used together with timers . Value may only be true , as false is the default behavior. | None | | --timers / --not-timers | boolean | Only select jobs that are timers. Cannot be used together with messages . Value may only be true , as false is the default behavior. | None | | --executable / --not-executable | boolean | Only select jobs which are executable, i.e., retries > 0 and due date is null or due date is in the past. Value may only be true , as false is the default behavior. | None | | --with-retries-left / --not-with-retries-left | boolean | Only select jobs which have retries left. Value may only be true , as false is the default behavior. | None | | --activity-id | text | Only select jobs which exist for an activity with the given id. | None | | --process-definition-key | text | Filter by the key of the process definition the jobs run on. | None | | --process-definition-id | text | Filter by the id of the process definition the jobs run on. | None | | --execution-id | text | Only select jobs which exist for the given execution. | None | | --process-instance-ids | text | Only select jobs which exist for the given comma-separated list of process instance ids. | None | | --process-instance-id | text | Only select jobs which exist for the given process instance. | None | | --job-definition-id | text | Only select jobs which exist for the given job definition. | None | | --job-ids | text | Filter by a comma-separated list of job ids. | None | | --job-id | text | Filter by job id. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"jobs"},{"location":"commands/full/#cctl-get-jobscount","text":"Get Job Count Queries for the number of jobs that fulfill given parameters. Takes the same parameters as the Get Jobs method. URL: /job/count Schema: - Usage: cctl get jobsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --include-jobs-without-tenant-id / --not-include-jobs-without-tenant-id boolean Include jobs which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include jobs which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Only include jobs which belong to one of the passed comma-separated tenant ids. None --priority-higher-than-or-equals text Only include jobs with a priority higher than or equal to the given value. Value must be a valid long value. None --priority-lower-than-or-equals text Only include jobs with a priority lower than or equal to the given value. Value must be a valid long value. None --suspended / --not-suspended boolean Only include suspended jobs. Value may only be true , as false is the default behavior. None --active / --not-active boolean Only include active jobs. Value may only be true , as false is the default behavior. None --no-retries-left / --not-no-retries-left boolean Only select jobs which have no retries left. Value may only be true , as false is the default behavior. None --failed-activity-id text Only select jobs that failed due to an exception at an activity with the given id. None --exception-message text Only select jobs that failed due to an exception with the given message. None --with-exception / --not-with-exception boolean Only select jobs that failed due to an exception. Value may only be true , as false is the default behavior. None --create-times text Only select jobs created before or after the given date. Create time expressions are comma-separated and are structured as follows: A valid condition value has the form operator_value . operator is the comparison operator to be used and value the date value as string. Valid operator values are: gt - greater than; lt - lower than. value may not contain underscore or comma characters. | None | | --due-dates | text | Only select jobs where the due date is lower or higher than the given date. Due date expressions are comma-separated and are structured as follows: A valid condition value has the form operator_value . operator is the comparison operator to be used and value the date value as string. Valid operator values are: gt - greater than; lt - lower than. value may not contain underscore or comma characters. | None | | --messages / --not-messages | boolean | Only select jobs that are messages. Cannot be used together with timers . Value may only be true , as false is the default behavior. | None | | --timers / --not-timers | boolean | Only select jobs that are timers. Cannot be used together with messages . Value may only be true , as false is the default behavior. | None | | --executable / --not-executable | boolean | Only select jobs which are executable, i.e., retries > 0 and due date is null or due date is in the past. Value may only be true , as false is the default behavior. | None | | --with-retries-left / --not-with-retries-left | boolean | Only select jobs which have retries left. Value may only be true , as false is the default behavior. | None | | --activity-id | text | Only select jobs which exist for an activity with the given id. | None | | --process-definition-key | text | Filter by the key of the process definition the jobs run on. | None | | --process-definition-id | text | Filter by the id of the process definition the jobs run on. | None | | --execution-id | text | Only select jobs which exist for the given execution. | None | | --process-instance-ids | text | Only select jobs which exist for the given comma-separated list of process instance ids. | None | | --process-instance-id | text | Only select jobs which exist for the given process instance. | None | | --job-definition-id | text | Only select jobs which exist for the given job definition. | None | | --job-ids | text | Filter by a comma-separated list of job ids. | None | | --job-id | text | Filter by job id. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"jobsCount"},{"location":"commands/full/#cctl-get-latestprocessdefinitionbytenantid","text":"Get Retrieves the latest version of the process definition for tenant according to the ProcessDefinition interface in the engine. URL: /process-definition/key/{key}/tenant-id/{tenant-id} Schema: - Usage: cctl get latestProcessDefinitionByTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"latestProcessDefinitionByTenantId"},{"location":"commands/full/#cctl-get-localexecutionvariable","text":"Get Local Execution Variable Retrieves a variable from the context of a given execution by id. Does not traverse the parent execution hierarchy. URL: /execution/{id}/localVariables/{varName} Schema: - Usage: cctl get localExecutionVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-value / --not-deserialize-value boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"localExecutionVariable"},{"location":"commands/full/#cctl-get-localexecutionvariablebinary","text":"Get Local Execution Variable (Binary) Retrieves a binary variable from the context of a given execution by id. Does not traverse the parent execution hierarchy. Applicable for byte array and file variables. URL: /execution/{id}/localVariables/{varName}/data Schema: - Usage: cctl get localExecutionVariableBinary [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"localExecutionVariableBinary"},{"location":"commands/full/#cctl-get-localexecutionvariables","text":"Get Local Execution Variables Retrieves all variables of a given execution by id. URL: /execution/{id}/localVariables Schema: - Usage: cctl get localExecutionVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"localExecutionVariables"},{"location":"commands/full/#cctl-get-messageeventsubscription","text":"Get Message Event Subscription Retrieves a message event subscription for a given execution by id and a message name. URL: /execution/{id}/messageSubscriptions/{messageName} Schema: - Usage: cctl get messageEventSubscription [OPTIONS] MESSAGENAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"messageEventSubscription"},{"location":"commands/full/#cctl-get-metrics","text":"Get Sum Retrieves the sum (count) for a given metric. URL: /metrics/{metrics-name}/sum Schema: - Usage: cctl get metrics [OPTIONS] METRICS_NAME Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --end-date text The end date (exclusive). None --start-date text The start date (inclusive). None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"metrics"},{"location":"commands/full/#cctl-get-passwordpolicy","text":"Get Password Policy A password policy consists of a list of rules that new passwords must follow to be policy compliant. This end point returns a JSON representation of the list of policy rules. More information on password policies in Camunda can be found in the password policy user guide and in the security instructions . URL: /identity/password-policy Schema: - Usage: cctl get passwordPolicy [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"passwordPolicy"},{"location":"commands/full/#cctl-get-processdefinition","text":"Get Retrieves a process definition according to the ProcessDefinition interface in the engine. URL: /process-definition/{id} Schema: - Usage: cctl get processDefinition [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"processDefinition"},{"location":"commands/full/#cctl-get-processdefinitionbpmn20xml","text":"Get XML Retrieves the BPMN 2.0 XML of a process definition. URL: /process-definition/{id}/xml Schema: - Usage: cctl get processDefinitionBpmn20Xml [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"processDefinitionBpmn20Xml"},{"location":"commands/full/#cctl-get-processdefinitionbpmn20xmlbykey","text":"Get XML Retrieves latest version the BPMN 2.0 XML of a process definition. URL: /process-definition/key/{key}/xml Schema: - Usage: cctl get processDefinitionBpmn20XmlByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"processDefinitionBpmn20XmlByKey"},{"location":"commands/full/#cctl-get-processdefinitionbpmn20xmlbykeyandtenantid","text":"Get XML Retrieves latest version the BPMN 2.0 XML of a process definition. Returns the XML for the latest version of the process definition for tenant. URL: /process-definition/key/{key}/tenant-id/{tenant-id}/xml Schema: - Usage: cctl get processDefinitionBpmn20XmlByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"processDefinitionBpmn20XmlByKeyAndTenantId"},{"location":"commands/full/#cctl-get-processdefinitionbykey","text":"Get Retrieves the latest version of the process definition which belongs to no tenant according to the ProcessDefinition interface in the engine. URL: /process-definition/key/{key} Schema: - Usage: cctl get processDefinitionByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"processDefinitionByKey"},{"location":"commands/full/#cctl-get-processdefinitiondiagram","text":"Get Diagram Retrieves the diagram of a process definition. If the process definition's deployment contains an image resource with the same file name as the process definition, the deployed image will be returned by the Get Diagram endpoint. Example: someProcess.bpmn and someProcess.png . Supported file extentions for the image are: svg , png , jpg , and gif . URL: /process-definition/{id}/diagram Schema: - Usage: cctl get processDefinitionDiagram [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"processDefinitionDiagram"},{"location":"commands/full/#cctl-get-processdefinitiondiagrambykey","text":"Get Diagram Retrieves the diagram for the latest version of the process definition which belongs to no tenant. If the process definition's deployment contains an image resource with the same file name as the process definition, the deployed image will be returned by the Get Diagram endpoint. Example: someProcess.bpmn and someProcess.png . Supported file extentions for the image are: svg , png , jpg , and gif . URL: /process-definition/key/{key}/diagram Schema: - Usage: cctl get processDefinitionDiagramByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"processDefinitionDiagramByKey"},{"location":"commands/full/#cctl-get-processdefinitiondiagrambykeyandtenantid","text":"Get Diagram Retrieves the diagram for the latest version of the process definition for tenant. If the process definition's deployment contains an image resource with the same file name as the process definition, the deployed image will be returned by the Get Diagram endpoint. Example: someProcess.bpmn and someProcess.png . Supported file extentions for the image are: svg , png , jpg , and gif . URL: /process-definition/key/{key}/tenant-id/{tenant-id}/diagram Schema: - Usage: cctl get processDefinitionDiagramByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"processDefinitionDiagramByKeyAndTenantId"},{"location":"commands/full/#cctl-get-processdefinitionstatistics","text":"Get Process Instance Statistics Retrieves runtime statistics of the process engine, grouped by process definitions. These statistics include the number of running process instances, optionally the number of failed jobs and also optionally the number of incidents either grouped by incident types or for a specific incident type. Note : This does not include historic data. URL: /process-definition/statistics Schema: - Usage: cctl get processDefinitionStatistics [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --root-incidents / --not-root-incidents boolean Valid values for this property are true or false . If this property has been set to true the result will include the corresponding number of root incidents for each occurred incident type. If it is set to false , the incidents will not be included in the result. Cannot be used in combination with incidentsForType or incidents . None --incidents-for-type text If this property has been set with any incident type (i.e., a string value) the result will only include the number of incidents for the assigned incident type. Cannot be used in combination with incidents . See the User Guide for a list of incident types. None --incidents / --not-incidents boolean Valid values for this property are true or false . If this property has been set to true the result will include the corresponding number of incidents for each occurred incident type. If it is set to false , the incidents will not be included in the result. Cannot be used in combination with incidentsForType . None --failed-jobs / --not-failed-jobs boolean Whether to include the number of failed jobs in the result or not. Valid values are true or false . None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"processDefinitionStatistics"},{"location":"commands/full/#cctl-get-processdefinitions","text":"Get List Queries for process definitions that fulfill given parameters. Parameters may be the properties of process definitions, such as the name, key or version. The size of the result set can be retrieved by using the Get Definition Count method. URL: /process-definition Schema: - Usage: cctl get processDefinitions [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --startable-permission-check / --not-startable-permission-check boolean Filter by process definitions which the user is allowed to start in Tasklist. If the user doesn't have these permissions the result will be empty list. The permissions are: * CREATE permission for all Process instances * CREATE_INSTANCE and READ permission on Process definition level None --not-startable-in-tasklist / --not-not-startable-in-tasklist boolean Filter by process definitions which are not startable in Tasklist. None --startable-in-tasklist / --not-startable-in-tasklist boolean Filter by process definitions which are startable in Tasklist.. None --without-version-tag / --not-without-version-tag boolean Only include process definitions without a versionTag . None --version-tag-like text Filter by the version tag that the parameter is a substring of. None --version-tag text Filter by the version tag. None --include-process-definitions-without-tenant-id / --not-include-process-definitions-without-tenant-id boolean Include process definitions which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include process definitions which belong to no tenant. Value may only be true, as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A process definition must have one of the given tenant ids. None --incident-message-like text Filter by the incident message that the parameter is a substring of. None --incident-message text Filter by the incident message. Exact match. None --incident-type text Filter by the incident type. See the User Guide for a list of incident types. None --incident-id text Filter by the incident id. None --suspended / --not-suspended boolean Only include suspended process definitions. Value may only be true , as false is the default behavior. None --active / --not-active boolean Only include active process definitions. Value may only be true , as false is the default behavior. None --startable-by text Filter by a user name who is allowed to start the process. None --resource-name-like text Filter by names of those process definition resources that the parameter is a substring of. None --resource-name text Filter by the name of the process definition resource. Exact match. None --latest-version / --not-latest-version boolean Only include those process definitions that are latest versions. Value may only be true , as false is the default behavior. None --version text Filter by process definition version. None --category-like text Filter by process definition categories that the parameter is a substring of. None --category text Filter by process definition category. Exact match. None --key-like text Filter by process definition keys that the parameter is a substring of. None --keys-in text Filter by a comma-separated list of process definition keys. None --key text Filter by process definition key, i.e., the id in the BPMN 2.0 XML. Exact match. None --deployed-at text Filter by the deploy time of the deployment the process definition belongs to. Only selects process definitions that have been deployed at a specific time (exact match). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.546+0200 . None --deployed-after text Filter by the deploy time of the deployment the process definition belongs to. Only selects process definitions that have been deployed after (exclusive) a specific time. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.546+0200 . None --deployment-id text Filter by the deployment the id belongs to. None --name-like text Filter by process definition names that the parameter is a substring of. None --name text Filter by process definition name. None --process-definition-id-in text Filter by a comma-separated list of process definition ids. None --process-definition-id text Filter by process definition id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"processDefinitions"},{"location":"commands/full/#cctl-get-processdefinitionscount","text":"Get List Count Requests the number of process definitions that fulfill the query criteria. Takes the same filtering parameters as the Get Definitions method. URL: /process-definition/count Schema: - Usage: cctl get processDefinitionsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --startable-permission-check / --not-startable-permission-check boolean Filter by process definitions which the user is allowed to start in Tasklist. If the user doesn't have these permissions the result will be empty list. The permissions are: * CREATE permission for all Process instances * CREATE_INSTANCE and READ permission on Process definition level None --not-startable-in-tasklist / --not-not-startable-in-tasklist boolean Filter by process definitions which are not startable in Tasklist. None --startable-in-tasklist / --not-startable-in-tasklist boolean Filter by process definitions which are startable in Tasklist.. None --without-version-tag / --not-without-version-tag boolean Only include process definitions without a versionTag . None --version-tag-like text Filter by the version tag that the parameter is a substring of. None --version-tag text Filter by the version tag. None --include-process-definitions-without-tenant-id / --not-include-process-definitions-without-tenant-id boolean Include process definitions which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include process definitions which belong to no tenant. Value may only be true, as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A process definition must have one of the given tenant ids. None --incident-message-like text Filter by the incident message that the parameter is a substring of. None --incident-message text Filter by the incident message. Exact match. None --incident-type text Filter by the incident type. See the User Guide for a list of incident types. None --incident-id text Filter by the incident id. None --suspended / --not-suspended boolean Only include suspended process definitions. Value may only be true , as false is the default behavior. None --active / --not-active boolean Only include active process definitions. Value may only be true , as false is the default behavior. None --startable-by text Filter by a user name who is allowed to start the process. None --resource-name-like text Filter by names of those process definition resources that the parameter is a substring of. None --resource-name text Filter by the name of the process definition resource. Exact match. None --latest-version / --not-latest-version boolean Only include those process definitions that are latest versions. Value may only be true , as false is the default behavior. None --version text Filter by process definition version. None --category-like text Filter by process definition categories that the parameter is a substring of. None --category text Filter by process definition category. Exact match. None --key-like text Filter by process definition keys that the parameter is a substring of. None --keys-in text Filter by a comma-separated list of process definition keys. None --key text Filter by process definition key, i.e., the id in the BPMN 2.0 XML. Exact match. None --deployed-at text Filter by the deploy time of the deployment the process definition belongs to. Only selects process definitions that have been deployed at a specific time (exact match). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.546+0200 . None --deployed-after text Filter by the deploy time of the deployment the process definition belongs to. Only selects process definitions that have been deployed after (exclusive) a specific time. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.546+0200 . None --deployment-id text Filter by the deployment the id belongs to. None --name-like text Filter by process definition names that the parameter is a substring of. None --name text Filter by process definition name. None --process-definition-id-in text Filter by a comma-separated list of process definition ids. None --process-definition-id text Filter by process definition id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"processDefinitionsCount"},{"location":"commands/full/#cctl-get-processenginenames","text":"Get List Retrieves the names of all process engines available on your platform. Note : You cannot prepend /engine/{name} to this method. URL: /engine Schema: - Usage: cctl get processEngineNames [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"processEngineNames"},{"location":"commands/full/#cctl-get-processinstance","text":"Get Process Instance Retrieves a process instance by id, according to the ProcessInstance interface in the engine. URL: /process-instance/{id} Schema: - Usage: cctl get processInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"processInstance"},{"location":"commands/full/#cctl-get-processinstancevariable","text":"Get Process Variable Retrieves a variable of a given process instance by id. URL: /process-instance/{id}/variables/{varName} Schema: - Usage: cctl get processInstanceVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-value / --not-deserialize-value boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true). If set to true, a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false, a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"processInstanceVariable"},{"location":"commands/full/#cctl-get-processinstancevariablebinary","text":"Get Process Variable (Binary) Retrieves the content of a Process Variable by the Process Instance id and the Process Variable name. Applicable for byte array or file Process Variables. URL: /process-instance/{id}/variables/{varName}/data Schema: - Usage: cctl get processInstanceVariableBinary [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"processInstanceVariableBinary"},{"location":"commands/full/#cctl-get-processinstancevariables","text":"Get Process Variables Retrieves all variables of a given process instance by id. URL: /process-instance/{id}/variables Schema: - Usage: cctl get processInstanceVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true). If set to true, a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false, a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"processInstanceVariables"},{"location":"commands/full/#cctl-get-processinstances","text":"Get List Queries for process instances that fulfill given parameters. Parameters may be static as well as dynamic runtime properties of process instances. The size of the result set can be retrieved by using the Get Instance Count method. URL: /process-instance Schema: - Usage: cctl get processInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match all variable values in this query case-insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match all variable names in this query case-insensitively. If set to true variableName and variablename are treated as equal. None --variables text Only include process instances that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note : Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --leaf-process-instances / --not-leaf-process-instances | boolean | Restrict the query to all process instances that are leaf instances. (i.e. don't have any sub instances). | None | | --root-process-instances / --not-root-process-instances | boolean | Restrict the query to all process instances that are top level process instances. | None | | --activity-id-in | text | Filter by a comma-separated list of activity ids. A process instance must currently wait in a leaf activity with one of the given activity ids. | None | | --process-definition-without-tenant-id / --not-process-definition-without-tenant-id | boolean | Only include process instances which process definition has no tenant id. | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include process instances which belong to no tenant. | None | | --tenant-id-in | text | Filter by a comma-separated list of tenant ids. A process instance must have one of the given tenant ids. | None | | --incident-message-like | text | Filter by the incident message that the parameter is a substring of. | None | | --incident-message | text | Filter by the incident message. Exact match. | None | | --incident-type | text | Filter by the incident type. See the User Guide for a list of incident types. | None | | --incident-id | text | Filter by the incident id. | None | | --with-incident / --not-with-incident | boolean | Filter by presence of incidents. Selects only process instances that have an incident. | None | | --suspended / --not-suspended | boolean | Only include suspended process instances. Value may only be true, as false is the default behavior. | None | | --active / --not-active | boolean | Only include active process instances. Value may only be true, as false is the default behavior. | None | | --sub-case-instance | text | Restrict query to all process instances that have the given case instance as a sub case instance. Takes a case instance id. | None | | --super-case-instance | text | Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id. | None | | --sub-process-instance | text | Restrict query to all process instances that have the given process instance as a sub process instance. Takes a process instance id. | None | | --super-process-instance | text | Restrict query to all process instances that are sub process instances of the given process instance. Takes a process instance id. | None | | --deployment-id | text | Filter by the deployment the id belongs to. | None | | --process-definition-key-not-in | text | Exclude instances by a comma-separated list of process definition keys. A process instance must not have one of the given process definition keys. | None | | --process-definition-key-in | text | Filter by a comma-separated list of process definition keys. A process instance must have one of the given process definition keys. | None | | --process-definition-key | text | Filter by the key of the process definition the instances run on. | None | | --process-definition-id | text | Filter by the deployment the id belongs to. | None | | --case-instance-id | text | Filter by case instance id. | None | | --business-key-like | text | Filter by process instance business key that the parameter is a substring of. | None | | --business-key | text | Filter by process instance business key. | None | | --process-instance-ids | text | Filter by a comma-separated list of process instance ids. | None | | --max-results | text | Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. | None | | --first-result | text | Pagination of results. Specifies the index of the first result to return. | None | | --sort-order | text | Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. | None | | --sort-by | text | Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"processInstances"},{"location":"commands/full/#cctl-get-processinstancescount","text":"Get List Count Queries for the number of process instances that fulfill given parameters. URL: /process-instance/count Schema: - Usage: cctl get processInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match all variable values in this query case-insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match all variable names in this query case-insensitively. If set to true variableName and variablename are treated as equal. None --variables text Only include process instances that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note : Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --leaf-process-instances / --not-leaf-process-instances | boolean | Restrict the query to all process instances that are leaf instances. (i.e. don't have any sub instances). | None | | --root-process-instances / --not-root-process-instances | boolean | Restrict the query to all process instances that are top level process instances. | None | | --activity-id-in | text | Filter by a comma-separated list of activity ids. A process instance must currently wait in a leaf activity with one of the given activity ids. | None | | --process-definition-without-tenant-id / --not-process-definition-without-tenant-id | boolean | Only include process instances which process definition has no tenant id. | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include process instances which belong to no tenant. | None | | --tenant-id-in | text | Filter by a comma-separated list of tenant ids. A process instance must have one of the given tenant ids. | None | | --incident-message-like | text | Filter by the incident message that the parameter is a substring of. | None | | --incident-message | text | Filter by the incident message. Exact match. | None | | --incident-type | text | Filter by the incident type. See the User Guide for a list of incident types. | None | | --incident-id | text | Filter by the incident id. | None | | --with-incident / --not-with-incident | boolean | Filter by presence of incidents. Selects only process instances that have an incident. | None | | --suspended / --not-suspended | boolean | Only include suspended process instances. Value may only be true, as false is the default behavior. | None | | --active / --not-active | boolean | Only include active process instances. Value may only be true, as false is the default behavior. | None | | --sub-case-instance | text | Restrict query to all process instances that have the given case instance as a sub case instance. Takes a case instance id. | None | | --super-case-instance | text | Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id. | None | | --sub-process-instance | text | Restrict query to all process instances that have the given process instance as a sub process instance. Takes a process instance id. | None | | --super-process-instance | text | Restrict query to all process instances that are sub process instances of the given process instance. Takes a process instance id. | None | | --deployment-id | text | Filter by the deployment the id belongs to. | None | | --process-definition-key-not-in | text | Exclude instances by a comma-separated list of process definition keys. A process instance must not have one of the given process definition keys. | None | | --process-definition-key-in | text | Filter by a comma-separated list of process definition keys. A process instance must have one of the given process definition keys. | None | | --process-definition-key | text | Filter by the key of the process definition the instances run on. | None | | --process-definition-id | text | Filter by the deployment the id belongs to. | None | | --case-instance-id | text | Filter by case instance id. | None | | --business-key-like | text | Filter by process instance business key that the parameter is a substring of. | None | | --business-key | text | Filter by process instance business key. | None | | --process-instance-ids | text | Filter by a comma-separated list of process instance ids. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"processInstancesCount"},{"location":"commands/full/#cctl-get-queryauthorizations","text":"Get Authorizations Queries for a list of authorizations using a list of parameters. The size of the result set can be retrieved by using the Get Authorization Count method. URL: /authorization Schema: - Usage: cctl get queryAuthorizations [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --resource-id text Filter by resource id. None --resource-type text Filter by an integer representation of the resource type. See the User Guide for a list of integer representations of resource types. None --group-id-in text Filter by a comma-separated list of groupIds. None --user-id-in text Filter by a comma-separated list of userIds. None --type text Filter by authorization type. (0=global, 1=grant, 2=revoke). See the User Guide for more information about authorization types. None --id text Filter by the id of the authorization. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"queryAuthorizations"},{"location":"commands/full/#cctl-get-querygroups","text":"Get List Queries for a list of groups using a list of parameters. The size of the result set can be retrieved by using the Get Group Count method. URL: /group Schema: - Usage: cctl get queryGroups [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --member-of-tenant text Only retrieve groups which are members of the given tenant. None --member text Only retrieve groups where the given user id is a member of. None --type text Filter by the type of the group. None --name-like text Filter by the name that the parameter is a substring of. None --name text Filter by the name of the group. None --id-in text Filter by a comma seperated list of group ids. None --id text Filter by the id of the group. None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"queryGroups"},{"location":"commands/full/#cctl-get-querytenants","text":"Get Tenants Query for a list of tenants using a list of parameters. The size of the result set can be retrieved by using the Get Tenant Count method. URL: /tenant Schema: - Usage: cctl get queryTenants [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --including-groups-of-user / --not-including-groups-of-user boolean Select only tenants where the user or one of his groups is a member of. Can only be used in combination with the userMember parameter. Value may only be true , as false is the default behavior. None --group-member text Select only tenants where the given group is a member of. None --user-member text Select only tenants where the given user is a member of. None --name-like text Filter by the name that the parameter is a substring of. None --name text Filter by the name of the tenant. None --id text Filter by the id of the tenant. None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"queryTenants"},{"location":"commands/full/#cctl-get-queryuseroperationcount","text":"Get User Operation Log Count Queries for the number of user operation log entries that fulfill the given parameters. Takes the same parameters as the Get User Operation Log (Historic) method. URL: /history/user-operation/count Schema: - Usage: cctl get queryUserOperationCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --before-timestamp text Restrict to entries that were created before the given timestamp. By default , the timestamp must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200. None --after-timestamp text Restrict to entries that were created after the given timestamp. By default , the timestamp must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200. None --property text Only include operations that changed this property, e.g., owner or assignee . None --category-in text Filter by a comma-separated list of categories that this operation is associated with, possible values are TaskWorker , Admin or Operator . None --category text Filter by the category that this operation is associated with, possible values are TaskWorker , Admin or Operator . None --entity-type-in text Filter by a comma-separated list of types of the entities that was affected by this operation, possible values are Task , Attachment or IdentityLink . None --entity-type text Filter by the type of the entity that was affected by this operation, possible values are Task , Attachment or IdentityLink . None --operation-type text Filter by the type of the operation like Claim or Delegate . See the Javadoc for a list of available operation types. None --operation-id text Filter by the id of the operation. This allows fetching of multiple entries which are part of a composite operation. None --user-id text Only include operations of this user. None --job-definition-id text Filter by job definition id. None --job-id text Filter by job id. None --batch-id text Only include operations on this batch. None --external-task-id text Only include operations on this external task. None --task-id text Only include operations on this task. None --case-execution-id text Filter by case execution id. None --case-instance-id text Filter by case instance id. None --case-definition-id text Filter by case definition id. None --execution-id text Filter by execution id. None --process-instance-id text Filter by process instance id. None --process-definition-key text Filter by process definition key. None --process-definition-id text Filter by process definition id. None --deployment-id text Filter by deployment id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"queryUserOperationCount"},{"location":"commands/full/#cctl-get-queryuseroperationentries","text":"Get User Operation Log (Historic) Queries for user operation log entries that fulfill the given parameters. The size of the result set can be retrieved by using the Get User Operation Log Count method. Note that the properties of operation log entries are interpreted as restrictions on the entities they apply to. That means, if a single process instance is updated, the field processInstanceId is populated. If a single operation updates all process instances of the same process definition, the field processInstanceId is null (a null restriction is viewed as a wildcard, i.e., matches a process instance with any id) and the field processDefinitionId is populated. This way, which entities were changed by a user operation can easily be reconstructed. URL: /history/user-operation Schema: - Usage: cctl get queryUserOperationEntries [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --before-timestamp text Restrict to entries that were created before the given timestamp. By default , the timestamp must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200. None --after-timestamp text Restrict to entries that were created after the given timestamp. By default , the timestamp must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200. None --property text Only include operations that changed this property, e.g., owner or assignee . None --category-in text Filter by a comma-separated list of categories that this operation is associated with, possible values are TaskWorker , Admin or Operator . None --category text Filter by the category that this operation is associated with, possible values are TaskWorker , Admin or Operator . None --entity-type-in text Filter by a comma-separated list of types of the entities that was affected by this operation, possible values are Task , Attachment or IdentityLink . None --entity-type text Filter by the type of the entity that was affected by this operation, possible values are Task , Attachment or IdentityLink . None --operation-type text Filter by the type of the operation like Claim or Delegate . See the Javadoc for a list of available operation types. None --operation-id text Filter by the id of the operation. This allows fetching of multiple entries which are part of a composite operation. None --user-id text Only include operations of this user. None --job-definition-id text Filter by job definition id. None --job-id text Filter by job id. None --batch-id text Only include operations on this batch. None --external-task-id text Only include operations on this external task. None --task-id text Only include operations on this task. None --case-execution-id text Filter by case execution id. None --case-instance-id text Filter by case instance id. None --case-definition-id text Filter by case definition id. None --execution-id text Filter by execution id. None --process-instance-id text Filter by process instance id. None --process-definition-key text Filter by process definition key. None --process-definition-id text Filter by process definition id. None --deployment-id text Filter by deployment id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"queryUserOperationEntries"},{"location":"commands/full/#cctl-get-renderedform","text":"Get Rendered Form Retrieves the rendered form for a task. This method can be used to get the HTML rendering of a Generated Task Form . URL: /task/{id}/rendered-form Schema: - Usage: cctl get renderedForm [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"renderedForm"},{"location":"commands/full/#cctl-get-renderedstartform","text":"Get Rendered Start Form Retrieves the rendered form for a process definition. This method can be used to get the HTML rendering of a Generated Task Form . URL: /process-definition/{id}/rendered-form Schema: - Usage: cctl get renderedStartForm [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"renderedStartForm"},{"location":"commands/full/#cctl-get-renderedstartformbykey","text":"Get Rendered Start Form Retrieves the rendered form for the latest version of the process definition which belongs to no tenant. This method can be used to get the HTML rendering of a Generated Task Form . URL: /process-definition/key/{key}/rendered-form Schema: - Usage: cctl get renderedStartFormByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"renderedStartFormByKey"},{"location":"commands/full/#cctl-get-renderedstartformbykeyandtenantid","text":"Get Rendered Start Form Retrieves the rendered form for the latest version of the process definition for a tenant. This method can be used to get the HTML rendering of a Generated Task Form . URL: /process-definition/key/{key}/tenant-id/{tenant-id}/rendered-form Schema: - Usage: cctl get renderedStartFormByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"renderedStartFormByKeyAndTenantId"},{"location":"commands/full/#cctl-get-restapiversion","text":"Get Rest API version Retrieves the version of the Rest API. URL: /version Schema: - Usage: cctl get restAPIVersion [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"restAPIVersion"},{"location":"commands/full/#cctl-get-schemalog","text":"Get List Queries for schema log entries that fulfill given parameters. URL: /schema/log Schema: - Usage: cctl get schemaLog [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --version text Only return schema log entries with a specific version. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"schemaLog"},{"location":"commands/full/#cctl-get-singlefilter","text":"Get Single Filter Retrieves a single filter by id, according to the Filter interface in the engine. URL: /filter/{id} Schema: - Usage: cctl get singleFilter [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --item-count / --not-item-count boolean If set to true , each filter result will contain an itemCount property with the number of items matched by the filter itself. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"singleFilter"},{"location":"commands/full/#cctl-get-stacktrace","text":"Get Exception Stacktrace Retrieves the exception stacktrace corresponding to the passed job id. URL: /job/{id}/stacktrace Schema: - Usage: cctl get stacktrace [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"stacktrace"},{"location":"commands/full/#cctl-get-stacktracehistoricjoblog","text":"Get Job Log Exception Stacktrace Retrieves the corresponding exception stacktrace to the passed historic job log by id. URL: /history/job-log/{id}/stacktrace Schema: - Usage: cctl get stacktraceHistoricJobLog [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"stacktraceHistoricJobLog"},{"location":"commands/full/#cctl-get-startform","text":"Get Start Form Key Retrieves the key of the start form for a process definition. The form key corresponds to the FormData#formKey property in the engine. URL: /process-definition/{id}/startForm Schema: - Usage: cctl get startForm [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"startForm"},{"location":"commands/full/#cctl-get-startformbykey","text":"Get Start Form Key Retrieves the key of the start form for the latest version of the process definition which belongs to no tenant. The form key corresponds to the FormData#formKey property in the engine. URL: /process-definition/key/{key}/startForm Schema: - Usage: cctl get startFormByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"startFormByKey"},{"location":"commands/full/#cctl-get-startformbykeyandtenantid","text":"Get Start Form Key Retrieves the key of the start form for the latest version of the process definition for a tenant. The form key corresponds to the FormData#formKey property in the engine. URL: /process-definition/key/{key}/tenant-id/{tenant-id}/startForm Schema: - Usage: cctl get startFormByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"startFormByKeyAndTenantId"},{"location":"commands/full/#cctl-get-startformvariables","text":"Get Start Form Variables Retrieves the start form variables for a process definition (only if they are defined via the Generated Task Form approach). The start form variables take form data specified on the start event into account. If form fields are defined, the variable types and default values of the form fields are taken into account. URL: /process-definition/{id}/form-variables Schema: - Usage: cctl get startFormVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true). If set to true, a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false, a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note : While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --variable-names | text | A comma-separated list of variable names. Allows restricting the list of requested variables to the variable names in the list. It is best practice to restrict the list of variables to the variables actually required by the form in order to minimize fetching of data. If the query parameter is ommitted all variables are fetched. If the query parameter contains non-existent variable names, the variable names are ignored. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"startFormVariables"},{"location":"commands/full/#cctl-get-startformvariablesbykey","text":"Get Start Form Variables Retrieves the start form variables for the latest process definition which belongs to no tenant (only if they are defined via the Generated Task Form approach). The start form variables take form data specified on the start event into account. If form fields are defined, the variable types and default values of the form fields are taken into account. URL: /process-definition/key/{key}/form-variables Schema: - Usage: cctl get startFormVariablesByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true). If set to true, a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false, a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note : While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --variable-names | text | A comma-separated list of variable names. Allows restricting the list of requested variables to the variable names in the list. It is best practice to restrict the list of variables to the variables actually required by the form in order to minimize fetching of data. If the query parameter is ommitted all variables are fetched. If the query parameter contains non-existent variable names, the variable names are ignored. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"startFormVariablesByKey"},{"location":"commands/full/#cctl-get-startformvariablesbykeyandtenantid","text":"Get Start Form Variables Retrieves the start form variables for the latest process definition for a tenant (only if they are defined via the Generated Task Form approach). The start form variables take form data specified on the start event into account. If form fields are defined, the variable types and default values of the form fields are taken into account. URL: /process-definition/key/{key}/tenant-id/{tenant-id}/form-variables Schema: - Usage: cctl get startFormVariablesByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true). If set to true, a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false, a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note : While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --variable-names | text | A comma-separated list of variable names. Allows restricting the list of requested variables to the variable names in the list. It is best practice to restrict the list of variables to the variables actually required by the form in order to minimize fetching of data. If the query parameter is ommitted all variables are fetched. If the query parameter contains non-existent variable names, the variable names are ignored. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"startFormVariablesByKeyAndTenantId"},{"location":"commands/full/#cctl-get-staticcalledprocessdefinitions","text":"Get Static Called Process Definitions For the given process, returns a list of called process definitions corresponding to the CalledProcessDefinition interface in the engine. The list contains all process definitions that are referenced statically by call activities in the given process. This endpoint does not resolve process definitions that are referenced with expressions. Each called process definition contains a list of call activity ids, which specifies the call activities that are calling that process. This endpoint does not resolve references to case definitions. URL: /process-definition/{id}/static-called-process-definitions Schema: - Usage: cctl get staticCalledProcessDefinitions [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"staticCalledProcessDefinitions"},{"location":"commands/full/#cctl-get-task","text":"Get Retrieves a task by id. URL: /task/{id} Schema: - Usage: cctl get task [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"task"},{"location":"commands/full/#cctl-get-tasklocalvariable","text":"Get Local Task Variable Retrieves a variable from the context of a given task by id. URL: /task/{id}/localVariables/{varName} Schema: - Usage: cctl get taskLocalVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-value / --not-deserialize-value boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on the server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"taskLocalVariable"},{"location":"commands/full/#cctl-get-tasklocalvariablebinary","text":"Get Local Task Variable (Binary) Retrieves a binary variable from the context of a given task by id. Applicable for byte array and file variables. URL: /task/{id}/localVariables/{varName}/data Schema: - Usage: cctl get taskLocalVariableBinary [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"taskLocalVariableBinary"},{"location":"commands/full/#cctl-get-tasklocalvariables","text":"Get Local Task Variables Retrieves all variables of a given task by id. URL: /task/{id}/localVariables Schema: - Usage: cctl get taskLocalVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on the server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"taskLocalVariables"},{"location":"commands/full/#cctl-get-taskvariable","text":"Get Task Variable Retrieves a variable from the context of a given task. The variable must be visible from the task. It is visible from the task if it is a local task variable or declared in a parent scope of the task. See documentation on visiblity of variables . URL: /task/{id}/variables/{varName} Schema: - Usage: cctl get taskVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-value / --not-deserialize-value boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on the server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"taskVariable"},{"location":"commands/full/#cctl-get-taskvariablebinary","text":"Get Task Variable (Binary) Retrieves a binary variable from the context of a given task. Applicable for byte array and file variables. The variable must be visible from the task. It is visible from the task if it is a local task variable or declared in a parent scope of the task. See documentation on visiblity of variables . URL: /task/{id}/variables/{varName}/data Schema: - Usage: cctl get taskVariableBinary [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"taskVariableBinary"},{"location":"commands/full/#cctl-get-taskvariables","text":"Get Task Variables Retrieves all variables visible from the task. A variable is visible from the task if it is a local task variable or declared in a parent scope of the task. See documentation on visiblity of variables . URL: /task/{id}/variables Schema: - Usage: cctl get taskVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on the server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"taskVariables"},{"location":"commands/full/#cctl-get-tasks","text":"Get List Queries for tasks that fulfill a given filter. The size of the result set can be retrieved by using the Get Task Count method. Security Consideration: There are several query parameters (such as assigneeExpression) for specifying an EL expression. These are disabled by default to prevent remote code execution. See the section on security considerations for custom code in the user guide for details. URL: /task Schema: - Usage: cctl get tasks [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --parent-task-id text Restrict query to all tasks that are sub tasks of the given task. Takes a task id. None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match all variable values in this query case-insensitively. If set variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match all variable names in this query case-insensitively. If set variableName and variablename are treated as equal. None --case-instance-variables text Only include tasks that belong to case instances that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note : Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --process-variables | text | Only include tasks that belong to process instances that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note : Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like ; notLike . key and value may not contain underscore or comma characters. | None | | --task-variables | text | Only include tasks that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note : Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --suspended / --not-suspended | boolean | Only include suspended tasks. Value may only be true , as false is the default behavior. | None | | --active / --not-active | boolean | Only include active tasks. Value may only be true , as false is the default behavior. | None | | --without-candidate-users / --not-without-candidate-users | boolean | Only include tasks which have no candidate users. Value may only be true , as false is the default behavior. | None | | --with-candidate-users / --not-with-candidate-users | boolean | Only include tasks which have a candidate user. Value may only be true , as false is the default behavior. | None | | --without-candidate-groups / --not-without-candidate-groups | boolean | Only include tasks which have no candidate group. Value may only be true , as false is the default behavior. | None | | --with-candidate-groups / --not-with-candidate-groups | boolean | Only include tasks which have a candidate group. Value may only be true , as false is the default behavior. | None | | --candidate-groups-expression | text | Restrict to tasks that are offered to any of the candidate groups described by the given expression. See the user guide for more information on available functions. The expression must evaluate to java.util.List of Strings. | None | | --candidate-groups | text | Restrict to tasks that are offered to any of the given candidate groups. Takes a comma-separated list of group names, so for example developers,support,sales . | None | | --delegation-state | text | Restrict to tasks that are in the given delegation state. Valid values are PENDING and RESOLVED . | None | | --created-before-expression | text | Restrict to tasks that were created before the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --created-before | text | Restrict to tasks that were created before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.332+0200 . | None | | --created-after-expression | text | Restrict to tasks that were created after the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --created-after | text | Restrict to tasks that were created after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.342+0200 . | None | | --created-on-expression | text | Restrict to tasks that were created on the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --created-on | text | Restrict to tasks that were created on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.324+0200 . | None | | --follow-up-before-or-not-existent-expression | text | Restrict to tasks that have no followUp date or a followUp date before the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --follow-up-before-or-not-existent | text | Restrict to tasks that have no followUp date or a followUp date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.432+0200 . The typical use case is to query all active tasks for a user for a given date. | None | | --follow-up-before-expression | text | Restrict to tasks that have a followUp date before the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --follow-up-before | text | Restrict to tasks that have a followUp date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.234+0200 . | None | | --follow-up-after-expression | text | Restrict to tasks that have a followUp date after the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --follow-up-after | text | Restrict to tasks that have a followUp date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.542+0200 . | None | | --follow-up-date-expression | text | Restrict to tasks that have a followUp date on the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --follow-up-date | text | Restrict to tasks that have a followUp date on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.342+0200 . | None | | --without-due-date / --not-without-due-date | boolean | Only include tasks which have no due date. Value may only be true , as false is the default behavior. | None | | --due-before-expression | text | Restrict to tasks that are due before the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --due-before | text | Restrict to tasks that are due before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.243+0200 . | None | | --due-after-expression | text | Restrict to tasks that are due after the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --due-after | text | Restrict to tasks that are due after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.435+0200 . | None | | --due-date-expression | text | Restrict to tasks that are due on the date described by the given expression. See the User Guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --due-date | text | Restrict to tasks that are due on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.546+0200 . | None | | --min-priority | text | Restrict to tasks that have a higher or equal priority. | None | | --max-priority | text | Restrict to tasks that have a lower or equal priority. | None | | --priority | text | Restrict to tasks that have the given priority. | None | | --description-like | text | Restrict to tasks that have a description that has the parameter value as a substring. | None | | --description | text | Restrict to tasks that have the given description. | None | | --name-not-like | text | Restrict to tasks that do not have a name with the given parameter value as substring. | None | | --name-like | text | Restrict to tasks that have a name with the given parameter value as substring. | None | | --name-not-equal | text | Restrict to tasks that do not have the given name. | None | | --name | text | Restrict to tasks that have the given name. | None | | --task-definition-key-like | text | Restrict to tasks that have a key that has the parameter value as a substring. | None | | --task-definition-key-in | text | Restrict to tasks that have one of the given keys. The keys need to be in a comma-separated list. | None | | --task-definition-key | text | Restrict to tasks that have the given key. | None | | --unassigned / --not-unassigned | boolean | If set to true , restricts the query to all tasks that are unassigned. | None | | --assigned / --not-assigned | boolean | If set to true , restricts the query to all tasks that are assigned. | None | | --involved-user-expression | text | Only include tasks that the user described by the given expression is involved in. A user is involved in a task if an identity link exists between task and user (e.g., the user is the assignee). See the user guide for more information on available functions. | None | | --involved-user | text | Only include tasks that the given user is involved in. A user is involved in a task if an identity link exists between task and user (e.g., the user is the assignee). | None | | --include-assigned-tasks / --not-include-assigned-tasks | boolean | Also include tasks that are assigned to users in candidate queries. Default is to only include tasks that are not assigned to any user if you query by candidate user or group(s). | None | | --candidate-user-expression | text | Only include tasks that are offered to the user described by the given expression. See the user guide for more information on available functions. | None | | --candidate-user | text | Only include tasks that are offered to the given user or to one of his groups. | None | | --candidate-group-expression | text | Only include tasks that are offered to the group described by the given expression. See the user guide for more information on available functions. | None | | --candidate-group | text | Only include tasks that are offered to the given group. | None | | --owner-expression | text | Restrict to tasks that the user described by the given expression owns. See the user guide for more information on available functions. | None | | --owner | text | Restrict to tasks that the given user owns. | None | | --assignee-not-in | text | Only include tasks which are not assigned to one of the passed and comma-separated user ids. | None | | --assignee-in | text | Only include tasks which are assigned to one of the passed and comma-separated user ids. | None | | --assignee-like-expression | text | Restrict to tasks that have an assignee that has the parameter value described by the given expression as a substring. See the user guide for more information on available functions. | None | | --assignee-like | text | Restrict to tasks that have an assignee that has the parameter value as a substring. | None | | --assignee-expression | text | Restrict to tasks that the user described by the given expression is assigned to. See the user guide for more information on available functions. | None | | --assignee | text | Restrict to tasks that the given user is assigned to. | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include tasks which belong to no tenant. Value may only be true , as false is the default behavior. | None | | --tenant-id-in | text | Only include tasks which belong to one of the passed and comma-separated tenant ids. | None | | --activity-instance-id-in | text | Only include tasks which belong to one of the passed and comma-separated activity instance ids. | None | | --case-execution-id | text | Restrict to tasks that belong to a case execution with the given id. | None | | --case-definition-name-like | text | Restrict to tasks that have a case definition name that has the parameter value as a substring. | None | | --case-definition-name | text | Restrict to tasks that belong to a case definition with the given name. | None | | --case-definition-key | text | Restrict to tasks that belong to a case definition with the given key. | None | | --case-definition-id | text | Restrict to tasks that belong to a case definition with the given id. | None | | --case-instance-business-key-like | text | Restrict to tasks that have a case instance business key that has the parameter value as a substring. | None | | --case-instance-business-key | text | Restrict to tasks that belong to case instances with the given business key. | None | | --case-instance-id | text | Restrict to tasks that belong to case instances with the given id. | None | | --execution-id | text | Restrict to tasks that belong to an execution with the given id. | None | | --process-definition-name-like | text | Restrict to tasks that have a process definition name that has the parameter value as a substring. | None | | --process-definition-name | text | Restrict to tasks that belong to a process definition with the given name. | None | | --process-definition-key-in | text | Restrict to tasks that belong to a process definition with one of the given keys. The keys need to be in a comma-separated list. | None | | --process-definition-key | text | Restrict to tasks that belong to a process definition with the given key. | None | | --process-definition-id | text | Restrict to tasks that belong to a process definition with the given id. | None | | --process-instance-business-key-like-expression | text | Restrict to tasks that have a process instance business key that has the parameter value as a substring and is described by an expression. See the user guide for more information on available functions. | None | | --process-instance-business-key-like | text | Restrict to tasks that have a process instance business key that has the parameter value as a substring. | None | | --process-instance-business-key-in | text | Restrict to tasks that belong to process instances with one of the give business keys. The keys need to be in a comma-separated list. | None | | --process-instance-business-key-expression | text | Restrict to tasks that belong to process instances with the given business key which is described by an expression. See the user guide for more information on available functions. | None | | --process-instance-business-key | text | Restrict to tasks that belong to process instances with the given business key. | None | | --process-instance-id-in | text | Restrict to tasks that belong to process instances with the given ids. | None | | --process-instance-id | text | Restrict to tasks that belong to process instances with the given id. | None | | --task-id-in | text | Restrict to tasks with any of the given ids. | None | | --task-id | text | Restrict to task with the given id. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"tasks"},{"location":"commands/full/#cctl-get-taskscount","text":"Get List Count Retrieves the number of tasks that fulfill a provided filter. Corresponds to the size of the result set when using the Get Tasks method. Security Consideration: There are several query parameters (such as assigneeExpression) for specifying an EL expression. These are disabled by default to prevent remote code execution. See the section on security considerations for custom code in the user guide for details. URL: /task/count Schema: - Usage: cctl get tasksCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --parent-task-id text Restrict query to all tasks that are sub tasks of the given task. Takes a task id. None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match all variable values in this query case-insensitively. If set variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match all variable names in this query case-insensitively. If set variableName and variablename are treated as equal. None --case-instance-variables text Only include tasks that belong to case instances that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note : Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --process-variables | text | Only include tasks that belong to process instances that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note : Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like ; notLike . key and value may not contain underscore or comma characters. | None | | --task-variables | text | Only include tasks that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note : Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --suspended / --not-suspended | boolean | Only include suspended tasks. Value may only be true , as false is the default behavior. | None | | --active / --not-active | boolean | Only include active tasks. Value may only be true , as false is the default behavior. | None | | --without-candidate-users / --not-without-candidate-users | boolean | Only include tasks which have no candidate users. Value may only be true , as false is the default behavior. | None | | --with-candidate-users / --not-with-candidate-users | boolean | Only include tasks which have a candidate user. Value may only be true , as false is the default behavior. | None | | --without-candidate-groups / --not-without-candidate-groups | boolean | Only include tasks which have no candidate group. Value may only be true , as false is the default behavior. | None | | --with-candidate-groups / --not-with-candidate-groups | boolean | Only include tasks which have a candidate group. Value may only be true , as false is the default behavior. | None | | --candidate-groups-expression | text | Restrict to tasks that are offered to any of the candidate groups described by the given expression. See the user guide for more information on available functions. The expression must evaluate to java.util.List of Strings. | None | | --candidate-groups | text | Restrict to tasks that are offered to any of the given candidate groups. Takes a comma-separated list of group names, so for example developers,support,sales . | None | | --delegation-state | text | Restrict to tasks that are in the given delegation state. Valid values are PENDING and RESOLVED . | None | | --created-before-expression | text | Restrict to tasks that were created before the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --created-before | text | Restrict to tasks that were created before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.332+0200 . | None | | --created-after-expression | text | Restrict to tasks that were created after the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --created-after | text | Restrict to tasks that were created after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.342+0200 . | None | | --created-on-expression | text | Restrict to tasks that were created on the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --created-on | text | Restrict to tasks that were created on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.324+0200 . | None | | --follow-up-before-or-not-existent-expression | text | Restrict to tasks that have no followUp date or a followUp date before the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --follow-up-before-or-not-existent | text | Restrict to tasks that have no followUp date or a followUp date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.432+0200 . The typical use case is to query all active tasks for a user for a given date. | None | | --follow-up-before-expression | text | Restrict to tasks that have a followUp date before the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --follow-up-before | text | Restrict to tasks that have a followUp date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.234+0200 . | None | | --follow-up-after-expression | text | Restrict to tasks that have a followUp date after the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --follow-up-after | text | Restrict to tasks that have a followUp date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.542+0200 . | None | | --follow-up-date-expression | text | Restrict to tasks that have a followUp date on the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --follow-up-date | text | Restrict to tasks that have a followUp date on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.342+0200 . | None | | --without-due-date / --not-without-due-date | boolean | Only include tasks which have no due date. Value may only be true , as false is the default behavior. | None | | --due-before-expression | text | Restrict to tasks that are due before the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --due-before | text | Restrict to tasks that are due before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.243+0200 . | None | | --due-after-expression | text | Restrict to tasks that are due after the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --due-after | text | Restrict to tasks that are due after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.435+0200 . | None | | --due-date-expression | text | Restrict to tasks that are due on the date described by the given expression. See the User Guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --due-date | text | Restrict to tasks that are due on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.546+0200 . | None | | --min-priority | text | Restrict to tasks that have a higher or equal priority. | None | | --max-priority | text | Restrict to tasks that have a lower or equal priority. | None | | --priority | text | Restrict to tasks that have the given priority. | None | | --description-like | text | Restrict to tasks that have a description that has the parameter value as a substring. | None | | --description | text | Restrict to tasks that have the given description. | None | | --name-not-like | text | Restrict to tasks that do not have a name with the given parameter value as substring. | None | | --name-like | text | Restrict to tasks that have a name with the given parameter value as substring. | None | | --name-not-equal | text | Restrict to tasks that do not have the given name. | None | | --name | text | Restrict to tasks that have the given name. | None | | --task-definition-key-like | text | Restrict to tasks that have a key that has the parameter value as a substring. | None | | --task-definition-key-in | text | Restrict to tasks that have one of the given keys. The keys need to be in a comma-separated list. | None | | --task-definition-key | text | Restrict to tasks that have the given key. | None | | --unassigned / --not-unassigned | boolean | If set to true , restricts the query to all tasks that are unassigned. | None | | --assigned / --not-assigned | boolean | If set to true , restricts the query to all tasks that are assigned. | None | | --involved-user-expression | text | Only include tasks that the user described by the given expression is involved in. A user is involved in a task if an identity link exists between task and user (e.g., the user is the assignee). See the user guide for more information on available functions. | None | | --involved-user | text | Only include tasks that the given user is involved in. A user is involved in a task if an identity link exists between task and user (e.g., the user is the assignee). | None | | --include-assigned-tasks / --not-include-assigned-tasks | boolean | Also include tasks that are assigned to users in candidate queries. Default is to only include tasks that are not assigned to any user if you query by candidate user or group(s). | None | | --candidate-user-expression | text | Only include tasks that are offered to the user described by the given expression. See the user guide for more information on available functions. | None | | --candidate-user | text | Only include tasks that are offered to the given user or to one of his groups. | None | | --candidate-group-expression | text | Only include tasks that are offered to the group described by the given expression. See the user guide for more information on available functions. | None | | --candidate-group | text | Only include tasks that are offered to the given group. | None | | --owner-expression | text | Restrict to tasks that the user described by the given expression owns. See the user guide for more information on available functions. | None | | --owner | text | Restrict to tasks that the given user owns. | None | | --assignee-not-in | text | Only include tasks which are not assigned to one of the passed and comma-separated user ids. | None | | --assignee-in | text | Only include tasks which are assigned to one of the passed and comma-separated user ids. | None | | --assignee-like-expression | text | Restrict to tasks that have an assignee that has the parameter value described by the given expression as a substring. See the user guide for more information on available functions. | None | | --assignee-like | text | Restrict to tasks that have an assignee that has the parameter value as a substring. | None | | --assignee-expression | text | Restrict to tasks that the user described by the given expression is assigned to. See the user guide for more information on available functions. | None | | --assignee | text | Restrict to tasks that the given user is assigned to. | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include tasks which belong to no tenant. Value may only be true , as false is the default behavior. | None | | --tenant-id-in | text | Only include tasks which belong to one of the passed and comma-separated tenant ids. | None | | --activity-instance-id-in | text | Only include tasks which belong to one of the passed and comma-separated activity instance ids. | None | | --case-execution-id | text | Restrict to tasks that belong to a case execution with the given id. | None | | --case-definition-name-like | text | Restrict to tasks that have a case definition name that has the parameter value as a substring. | None | | --case-definition-name | text | Restrict to tasks that belong to a case definition with the given name. | None | | --case-definition-key | text | Restrict to tasks that belong to a case definition with the given key. | None | | --case-definition-id | text | Restrict to tasks that belong to a case definition with the given id. | None | | --case-instance-business-key-like | text | Restrict to tasks that have a case instance business key that has the parameter value as a substring. | None | | --case-instance-business-key | text | Restrict to tasks that belong to case instances with the given business key. | None | | --case-instance-id | text | Restrict to tasks that belong to case instances with the given id. | None | | --execution-id | text | Restrict to tasks that belong to an execution with the given id. | None | | --process-definition-name-like | text | Restrict to tasks that have a process definition name that has the parameter value as a substring. | None | | --process-definition-name | text | Restrict to tasks that belong to a process definition with the given name. | None | | --process-definition-key-in | text | Restrict to tasks that belong to a process definition with one of the given keys. The keys need to be in a comma-separated list. | None | | --process-definition-key | text | Restrict to tasks that belong to a process definition with the given key. | None | | --process-definition-id | text | Restrict to tasks that belong to a process definition with the given id. | None | | --process-instance-business-key-like-expression | text | Restrict to tasks that have a process instance business key that has the parameter value as a substring and is described by an expression. See the user guide for more information on available functions. | None | | --process-instance-business-key-like | text | Restrict to tasks that have a process instance business key that has the parameter value as a substring. | None | | --process-instance-business-key-in | text | Restrict to tasks that belong to process instances with one of the give business keys. The keys need to be in a comma-separated list. | None | | --process-instance-business-key-expression | text | Restrict to tasks that belong to process instances with the given business key which is described by an expression. See the user guide for more information on available functions. | None | | --process-instance-business-key | text | Restrict to tasks that belong to process instances with the given business key. | None | | --process-instance-id-in | text | Restrict to tasks that belong to process instances with the given ids. | None | | --process-instance-id | text | Restrict to tasks that belong to process instances with the given id. | None | | --task-id-in | text | Restrict to tasks with any of the given ids. | None | | --task-id | text | Restrict to task with the given id. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"tasksCount"},{"location":"commands/full/#cctl-get-telemetryconfiguration","text":"Fetch Telemetry Configuration Fetches Telemetry Configuration. URL: /telemetry/configuration Schema: - Usage: cctl get telemetryConfiguration [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"telemetryConfiguration"},{"location":"commands/full/#cctl-get-tenant","text":"Get Tenant Retrieves a tenant. URL: /tenant/{id} Schema: - Usage: cctl get tenant [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"tenant"},{"location":"commands/full/#cctl-get-tenantcount","text":"Get Tenant Count Query for tenants using a list of parameters and retrieves the count. URL: /tenant/count Schema: - Usage: cctl get tenantCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --including-groups-of-user / --not-including-groups-of-user boolean Select only tenants where the user or one of his groups is a member of. Can only be used in combination with the userMember parameter. Value may only be true , as false is the default behavior. None --group-member text Select only tenants where the given group is a member of. None --user-member text Select only tenants where the given user is a member of. None --name-like text Filter by the name that the parameter is a substring of. None --name text Filter by the name of the tenant. None --id text Filter by the id of the tenant. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"tenantCount"},{"location":"commands/full/#cctl-get-topicnames","text":"Get External Task Topic Names Queries for distinct topic names of external tasks that fulfill given parameters. Query can be restricted to only tasks with retries left, tasks that are locked, or tasks that are unlocked. The parameters withLockedTasks and withUnlockedTasks are exclusive. Setting them both to true will return an empty list. Providing no parameters will return a list of all distinct topic names with external tasks. URL: /external-task/topic-names Schema: - Usage: cctl get topicNames [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --with-retries-left / --not-with-retries-left boolean Only include external tasks that have a positive (> 0) number of retries (or null ). Value may only be true , as false matches any external task. None --with-unlocked-tasks / --not-with-unlocked-tasks boolean Only include external tasks that are currently not locked (i.e., they have no lock or it has expired). Value may only be true , as false matches any external task. None --with-locked-tasks / --not-with-locked-tasks boolean Only include external tasks that are currently locked (i.e., they have a lock time and it has not expired). Value may only be true , as false matches any external task. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"topicNames"},{"location":"commands/full/#cctl-get-usercount","text":"Get List Count Queries for the number of deployments that fulfill given parameters. Takes the same parameters as the Get Users method. URL: /user/count Schema: - Usage: cctl get userCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --potential-starter text Only select Users that are potential starter for the given process definition. None --member-of-tenant text Filter for users which are members of the given tenant. None --member-of-group text Filter for users which are members of the given group. None --email-like text Filter by the email that the parameter is a substring of. None --email text Filter by the email of the user. Exact match. None --last-name-like text Filter by the last name that the parameter is a substring of. None --last-name text Filter by the last name of the user. Exact match. None --first-name-like text Filter by the first name that the parameter is a substring of. None --first-name text Filter by the first name of the user. Exact match. None --id-in text Filter by a comma-separated list of user ids. None --id text Filter by user id None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"userCount"},{"location":"commands/full/#cctl-get-userprofile","text":"Get Profile Retrieves a user's profile. URL: /user/{id}/profile Schema: - Usage: cctl get userProfile [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"userProfile"},{"location":"commands/full/#cctl-get-users","text":"Get List Query for a list of users using a list of parameters. The size of the result set can be retrieved by using the Get User Count method. Get User Count method. URL: /user Schema: - Usage: cctl get users [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --potential-starter text Only select Users that are potential starter for the given process definition. None --member-of-tenant text Filter for users which are members of the given tenant. None --member-of-group text Filter for users which are members of the given group. None --email-like text Filter by the email that the parameter is a substring of. None --email text Filter by the email of the user. Exact match. None --last-name-like text Filter by the last name that the parameter is a substring of. None --last-name text Filter by the last name of the user. Exact match. None --first-name-like text Filter by the first name that the parameter is a substring of. None --first-name text Filter by the first name of the user. Exact match. None --id-in text Filter by a comma-separated list of user ids. None --id text Filter by user id None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"users"},{"location":"commands/full/#cctl-get-variableinstance","text":"Get Variable Instance Retrieves a variable by id. URL: /variable-instance/{id} Schema: - Usage: cctl get variableInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-value / --not-deserialize-value boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"variableInstance"},{"location":"commands/full/#cctl-get-variableinstancebinary","text":"Get Variable Instance (Binary) Retrieves the content of a variable by id. Applicable for byte array and file variables. URL: /variable-instance/{id}/data Schema: - Usage: cctl get variableInstanceBinary [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"variableInstanceBinary"},{"location":"commands/full/#cctl-get-variableinstances","text":"Get Variable Instances Query for variable instances that fulfill given parameters. Parameters may be the properties of variable instances, such as the name or type. The size of the result set can be retrieved by using the Get Variable Instance Count method. URL: /variable-instance Schema: - Usage: cctl get variableInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --max-results | text | Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. | None | | --first-result | text | Pagination of results. Specifies the index of the first result to return. | None | | --sort-order | text | Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. | None | | --sort-by | text | Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. | None | | --variable-scope-id-in | text | Only include variable instances which belong to one of passed scope ids. | None | | --variable-values-ignore-case / --not-variable-values-ignore-case | boolean | Match all variable values provided in variableValues case-insensitively. If set to true variableValue and variablevalue are treated as equal. | None | | --variable-names-ignore-case / --not-variable-names-ignore-case | boolean | Match all variable names provided in variableValues case-insensitively. If set to true variableName and variablename are treated as equal. | None | | --variable-values | text | Only include variable instances that have the certain values. Value filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --tenant-id-in | text | Only include variable instances which belong to one of the passed and comma-separated tenant ids. | None | | --activity-instance-id-in | text | Only include variable instances which belong to one of the passed and comma-separated activity instance ids. | None | | --batch-id-in | text | Only include variable instances which belong to one of the passed and comma-separated batch ids. | None | | --task-id-in | text | Only include variable instances which belong to one of the passed and comma-separated task ids. | None | | --case-execution-id-in | text | Only include variable instances which belong to one of the passed and comma-separated case execution ids. | None | | --case-instance-id-in | text | Only include variable instances which belong to one of the passed and comma-separated case instance ids. | None | | --execution-id-in | text | Only include variable instances which belong to one of the passed and comma-separated execution ids. | None | | --process-instance-id-in | text | Only include variable instances which belong to one of the passed and comma-separated process instance ids. | None | | --variable-name-like | text | Filter by the variable instance name. The parameter can include the wildcard % to express like-strategy such as: starts with ( % name), ends with (name % ) or contains ( % name % ). | None | | --variable-name | text | Filter by variable instance name. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"variableInstances"},{"location":"commands/full/#cctl-get-variableinstancescount","text":"Get Variable Instance Count Query for the number of variable instances that fulfill given parameters. Takes the same parameters as the Get Variable Instances method. URL: /variable-instance/count Schema: - Usage: cctl get variableInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --variable-scope-id-in text Only include variable instances which belong to one of passed scope ids. None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match all variable values provided in variableValues case-insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match all variable names provided in variableValues case-insensitively. If set to true variableName and variablename are treated as equal. None --variable-values text Only include variable instances that have the certain values. Value filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --tenant-id-in | text | Only include variable instances which belong to one of the passed and comma-separated tenant ids. | None | | --activity-instance-id-in | text | Only include variable instances which belong to one of the passed and comma-separated activity instance ids. | None | | --batch-id-in | text | Only include variable instances which belong to one of the passed and comma-separated batch ids. | None | | --task-id-in | text | Only include variable instances which belong to one of the passed and comma-separated task ids. | None | | --case-execution-id-in | text | Only include variable instances which belong to one of the passed and comma-separated case execution ids. | None | | --case-instance-id-in | text | Only include variable instances which belong to one of the passed and comma-separated case instance ids. | None | | --execution-id-in | text | Only include variable instances which belong to one of the passed and comma-separated execution ids. | None | | --process-instance-id-in | text | Only include variable instances which belong to one of the passed and comma-separated process instance ids. | None | | --variable-name-like | text | Filter by the variable instance name. The parameter can include the wildcard % to express like-strategy such as: starts with ( % name), ends with (name % ) or contains ( % name % ). | None | | --variable-name | text | Filter by variable instance name. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"variableInstancesCount"},{"location":"commands/get/","text":"CLI Reference ( get ) \u00b6 All get commands. cctl get \u00b6 query resources of camunda engine Usage: cctl&nbsp;get [OPTIONS] COMMAND [ARGS]... Options: Name Type Description Default -e , --engine text N/A None --help boolean Show this message and exit. False cctl get activityInstanceTree \u00b6 Get Activity Instance Retrieves an Activity Instance (Tree) for a given process instance by id. URL: /process-instance/{id}/activity-instances Schema: - Usage: cctl&nbsp;get activityInstanceTree [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get activityStatistics \u00b6 Get Activity Instance Statistics Retrieves runtime statistics of a given process definition, grouped by activities. These statistics include the number of running activity instances, optionally the number of failed jobs and also optionally the number of incidents either grouped by incident types or for a specific incident type. Note : This does not include historic data. URL: /process-definition/{id}/statistics Schema: - Usage: cctl&nbsp;get activityStatistics [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --incidents-for-type text If this property has been set with any incident type (i.e., a string value) the result will only include the number of incidents for the assigned incident type. Cannot be used in combination with incidents . See the User Guide for a list of incident types. None --incidents / --not-incidents boolean Valid values for this property are true or false . If this property has been set to true the result will include the corresponding number of incidents for each occurred incident type. If it is set to false , the incidents will not be included in the result. Cannot be used in combination with incidentsForType . None --failed-jobs / --not-failed-jobs boolean Whether to include the number of failed jobs in the result or not. Valid values are true or false . None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get activityStatisticsByProcessDefinitionKey \u00b6 Get Activity Instance Statistics Retrieves runtime statistics of the latest version of the given process definition which belongs to no tenant, grouped by activities. These statistics include the number of running activity instances, optionally the number of failed jobs and also optionally the number of incidents either grouped by incident types or for a specific incident type. Note : This does not include historic data. URL: /process-definition/key/{key}/statistics Schema: - Usage: cctl&nbsp;get activityStatisticsByProcessDefinitionKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --incidents-for-type text If this property has been set with any incident type (i.e., a string value) the result will only include the number of incidents for the assigned incident type. Cannot be used in combination with incidents . See the User Guide for a list of incident types. None --incidents / --not-incidents boolean Valid values for this property are true or false . If this property has been set to true the result will include the corresponding number of incidents for each occurred incident type. If it is set to false , the incidents will not be included in the result. Cannot be used in combination with incidentsForType . None --failed-jobs / --not-failed-jobs boolean Whether to include the number of failed jobs in the result or not. Valid values are true or false . None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get activityStatisticsByProcessDefinitionKeyAndTenantId \u00b6 Get Activity Instance Statistics Retrieves runtime statistics of the latest version of the given process definition for a tenant, grouped by activities. These statistics include the number of running activity instances, optionally the number of failed jobs and also optionally the number of incidents either grouped by incident types or for a specific incident type. Note : This does not include historic data. URL: /process-definition/key/{key}/tenant-id/{tenant-id}/statistics Schema: - Usage: cctl&nbsp;get activityStatisticsByProcessDefinitionKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --incidents-for-type text If this property has been set with any incident type (i.e., a string value) the result will only include the number of incidents for the assigned incident type. Cannot be used in combination with incidents . See the User Guide for a list of incident types. None --incidents / --not-incidents boolean Valid values for this property are true or false . If this property has been set to true the result will include the corresponding number of incidents for each occurred incident type. If it is set to false , the incidents will not be included in the result. Cannot be used in combination with incidentsForType . None --failed-jobs / --not-failed-jobs boolean Whether to include the number of failed jobs in the result or not. Valid values are true or false . None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get attachment \u00b6 Get Retrieves a task attachment by task id and attachment id. URL: /task/{id}/attachment/{attachmentId} Schema: - Usage: cctl&nbsp;get attachment [OPTIONS] ATTACHMENTID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get attachmentData \u00b6 Get (Binary) Retrieves the binary content of a task attachment by task id and attachment id. URL: /task/{id}/attachment/{attachmentId}/data Schema: - Usage: cctl&nbsp;get attachmentData [OPTIONS] ATTACHMENTID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get attachments \u00b6 Get List Gets the attachments for a task. URL: /task/{id}/attachment Schema: - Usage: cctl&nbsp;get attachments [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get authorization \u00b6 Get Authorization Retrieves an authorization by id. URL: /authorization/{id} Schema: - Usage: cctl&nbsp;get authorization [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get authorizationCount \u00b6 Get Authorization Count Queries for authorizations using a list of parameters and retrieves the count. URL: /authorization/count Schema: - Usage: cctl&nbsp;get authorizationCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --resource-id text Filter by resource id. None --resource-type text Filter by an integer representation of the resource type. See the User Guide for a list of integer representations of resource types. None --group-id-in text Filter by a comma-separated list of groupIds. None --user-id-in text Filter by a comma-separated list of userIds. None --type text Filter by authorization type. (0=global, 1=grant, 2=revoke). See the User Guide for more information about authorization types. None --id text Filter by the id of the authorization. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get batch \u00b6 Get Retrieves a batch by id, according to the Batch interface in the engine. URL: /batch/{id} Schema: - Usage: cctl&nbsp;get batch [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get batchStatistics \u00b6 Get Statistics Queries for batch statistics that fulfill given parameters. Parameters may be the properties of batches, such as the id or type. The size of the result set can be retrieved by using the Get Batch Statistics Count method. URL: /batch/statistics Schema: - Usage: cctl&nbsp;get batchStatistics [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --suspended / --not-suspended boolean A Boolean value which indicates whether only active or suspended batches should be included. When the value is set to true , only suspended batches will be returned and when the value is set to false , only active batches will be returned. None --without-tenant-id / --not-without-tenant-id boolean Only include batches which belong to no tenant. Value can effectively only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of Strings . A batch matches if it has one of the given tenant ids. None --type text Filter by batch type. See the User Guide for more information about batch types. None --batch-id text Filter by batch id. None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get batchStatisticsCount \u00b6 Get Statistics Count Requests the number of batch statistics that fulfill the query criteria. Takes the same filtering parameters as the Get Batch Statistics method. URL: /batch/statistics/count Schema: - Usage: cctl&nbsp;get batchStatisticsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --suspended / --not-suspended boolean A Boolean value which indicates whether only active or suspended batches should be included. When the value is set to true , only suspended batches will be returned and when the value is set to false , only active batches will be returned. None --without-tenant-id / --not-without-tenant-id boolean Only include batches which belong to no tenant. Value can effectively only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of Strings . A batch matches if it has one of the given tenant ids. None --type text Filter by batch type. See the User Guide for more information about batch types. None --batch-id text Filter by batch id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get batches \u00b6 Get List Queries for batches that fulfill given parameters. Parameters may be the properties of batches, such as the id or type. The size of the result set can be retrieved by using the Get Batch Count method. URL: /batch Schema: - Usage: cctl&nbsp;get batches [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --suspended / --not-suspended boolean A Boolean value which indicates whether only active or suspended batches should be included. When the value is set to true , only suspended batches will be returned and when the value is set to false , only active batches will be returned. None --without-tenant-id / --not-without-tenant-id boolean Only include batches which belong to no tenant. Value can effectively only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of Strings . A batch matches if it has one of the given tenant ids. None --type text Filter by batch type. See the User Guide for more information about batch types. None --batch-id text Filter by batch id. None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get batchesCount \u00b6 Get List Count Requests the number of batches that fulfill the query criteria. Takes the same filtering parameters as the Get Batches method. URL: /batch/count Schema: - Usage: cctl&nbsp;get batchesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --suspended / --not-suspended boolean A Boolean value which indicates whether only active or suspended batches should be included. When the value is set to true , only suspended batches will be returned and when the value is set to false , only active batches will be returned. None --without-tenant-id / --not-without-tenant-id boolean Only include batches which belong to no tenant. Value can effectively only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of Strings . A batch matches if it has one of the given tenant ids. None --type text Filter by batch type. See the User Guide for more information about batch types. None --batch-id text Filter by batch id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get cleanableHistoricBatchesReport \u00b6 Get Cleanable Batch Report Retrieves a report about a historic batch operations relevant to history cleanup (see History cleanup ) so that you can tune the history time to live. These reports include the count of the finished batches, cleanable batches and type of the batch. The size of the result set can be retrieved by using the Get Cleanable Batch Report Count method. Please note: The history time to live for batch operations does not support Multi-Tenancy . The report will return an information for all batch operations (for all tenants) if you have permissions to see the history. URL: /history/batch/cleanable-batch-report Schema: - Usage: cctl&nbsp;get cleanableHistoricBatchesReport [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get cleanableHistoricBatchesReportCount \u00b6 Get Cleanable Batch Report Count Queries for the number of report results about a historic batch operations relevant to history cleanup (see History cleanup ). Takes the same parameters as the Get Cleanable Batch Report method. URL: /history/batch/cleanable-batch-report/count Schema: - Usage: cctl&nbsp;get cleanableHistoricBatchesReportCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get cleanableHistoricDecisionInstanceReport \u00b6 Get Cleanable Decision Instance Report Retrieves a report about a decision definition and finished decision instances relevant to history cleanup (see History cleanup ), so that you can tune the history time to live. These reports include the count of the finished historic decision instances, cleanable decision instances and basic decision definition data - id, key, name and version. The size of the result set can be retrieved by using the Get Cleanable Decision Instance Report Count method. URL: /history/decision-definition/cleanable-decision-instance-report Schema: - Usage: cctl&nbsp;get cleanableHistoricDecisionInstanceReport [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --compact / --not-compact boolean Only include decision instances which have more than zero finished instances. Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include decision definitions which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A decision definition must have one of the given tenant ids. None --decision-definition-key-in text Filter by decision definition keys. Must be a comma-separated list of decision definition keys. None --decision-definition-id-in text Filter by decision definition ids. Must be a comma-separated list of decision definition ids. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get cleanableHistoricDecisionInstanceReportCount \u00b6 Get Cleanable Decision Instance Report Count Queries for the number of report results about a decision definition and finished decision instances relevant to history cleanup (see History cleanup ). Takes the same parameters as the Get Cleanable Decision Instance Report method. URL: /history/decision-definition/cleanable-decision-instance-report/count Schema: - Usage: cctl&nbsp;get cleanableHistoricDecisionInstanceReportCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --compact / --not-compact boolean Only include decision instances which have more than zero finished instances. Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include decision definitions which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A decision definition must have one of the given tenant ids. None --decision-definition-key-in text Filter by decision definition keys. Must be a comma-separated list of decision definition keys. None --decision-definition-id-in text Filter by decision definition ids. Must be a comma-separated list of decision definition ids. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get cleanableHistoricProcessInstanceReport \u00b6 Get Cleanable Process Instance Report Retrieves a report about a process definition and finished process instances relevant to history cleanup (see History cleanup ) so that you can tune the history time to live. These reports include the count of the finished historic process instances, cleanable process instances and basic process definition data - id, key, name and version. The size of the result set can be retrieved by using the Get Cleanable Process Instance Report Count method. URL: /history/process-definition/cleanable-process-instance-report Schema: - Usage: cctl&nbsp;get cleanableHistoricProcessInstanceReport [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --compact / --not-compact boolean Only include process instances which have more than zero finished instances. Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include process definitions which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A process definition must have one of the given tenant ids. None --process-definition-key-in text Filter by process definition keys. Must be a comma-separated list of process definition keys. None --process-definition-id-in text Filter by process definition ids. Must be a comma-separated list of process definition ids. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get cleanableHistoricProcessInstanceReportCount \u00b6 Get Cleanable Process Instance Report Count Queries for the number of report results about a process definition and finished process instances relevant to history cleanup (see History cleanup ). Takes the same parameters as the Get Cleanable Process Instance Report method. URL: /history/process-definition/cleanable-process-instance-report/count Schema: - Usage: cctl&nbsp;get cleanableHistoricProcessInstanceReportCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --compact / --not-compact boolean Only include process instances which have more than zero finished instances. Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include process definitions which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A process definition must have one of the given tenant ids. None --process-definition-key-in text Filter by process definition keys. Must be a comma-separated list of process definition keys. None --process-definition-id-in text Filter by process definition ids. Must be a comma-separated list of process definition ids. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get comment \u00b6 Get Retrieves a task comment by task id and comment id. URL: /task/{id}/comment/{commentId} Schema: - Usage: cctl&nbsp;get comment [OPTIONS] COMMENTID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get comments \u00b6 Get List Gets the comments for a task by id. URL: /task/{id}/comment Schema: - Usage: cctl&nbsp;get comments [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionDefinitionById \u00b6 Get Decision Definition By Id Retrieves a decision definition by id, according to the DecisionDefinition interface in the engine. URL: /decision-definition/{id} Schema: - Usage: cctl&nbsp;get decisionDefinitionById [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionDefinitionByKey \u00b6 Get Decision Definition By Key Retrieves the latest version of the decision definition which belongs to no tenant. URL: /decision-definition/key/{key} Schema: - Usage: cctl&nbsp;get decisionDefinitionByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionDefinitionByKeyAndTenantId \u00b6 Get Decision Definition By Key And Tenant Id Retrieves the latest version of the decision definition for tenant URL: /decision-definition/key/{key}/tenant-id/{tenant-id} Schema: - Usage: cctl&nbsp;get decisionDefinitionByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionDefinitionDiagram \u00b6 Get Diagram Retrieves the diagram of a decision definition. URL: /decision-definition/{id}/diagram Schema: - Usage: cctl&nbsp;get decisionDefinitionDiagram [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionDefinitionDiagramByKey \u00b6 Get Diagram By Key Returns the diagram for the latest version of the decision definition which belongs to no tenant URL: /decision-definition/key/{key}/diagram Schema: - Usage: cctl&nbsp;get decisionDefinitionDiagramByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionDefinitionDiagramByKeyAndTenant \u00b6 Get Diagram By Key And Tenant Returns the XML of the latest version of the decision definition for tenant. URL: /decision-definition/key/{key}/tenant-id/{tenant-id}/diagram Schema: - Usage: cctl&nbsp;get decisionDefinitionDiagramByKeyAndTenant [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionDefinitionDmnXmlById \u00b6 Get XML By Id Retrieves the DMN XML of a decision definition. URL: /decision-definition/{id}/xml Schema: - Usage: cctl&nbsp;get decisionDefinitionDmnXmlById [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionDefinitionDmnXmlByKey \u00b6 Get XML By Key Retrieves the XML for the latest version of the decision definition which belongs to no tenant. URL: /decision-definition/key/{key}/xml Schema: - Usage: cctl&nbsp;get decisionDefinitionDmnXmlByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionDefinitionDmnXmlByKeyAndTenant \u00b6 Get XML By Key and Tenant Retrieves the XML of the latest version of the decision definition for tenant URL: /decision-definition/key/{key}/tenant-id/{tenant-id}/xml Schema: - Usage: cctl&nbsp;get decisionDefinitionDmnXmlByKeyAndTenant [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionDefinitions \u00b6 Get List Queries for decision definitions that fulfill given parameters. Parameters may be the properties of decision definitions, such as the name, key or version. The size of the result set can be retrieved by using the Get Decision Definition Count method. URL: /decision-definition Schema: - Usage: cctl&nbsp;get decisionDefinitions [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --version-tag-like text Filter by the version tags of those decision definition resources that the parameter is a substring of. None --version-tag text Filter by the version tag. None --include-decision-definitions-without-tenant-id / --not-include-decision-definitions-without-tenant-id boolean Include decision definitions which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include decision definitions which belong to no tenant. Value can effectively only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of Strings . A decision definition must have one of the given tenant ids. None --without-decision-requirements-definition / --not-without-decision-requirements-definition boolean Only include decision definitions which does not belongs to any decision requirements definition. Value may only be true , as false is the default behavior. None --decision-requirements-definition-key text Filter by the key of the decision requirements definition this decision definition belongs to. None --decision-requirements-definition-id text Filter by the id of the decision requirements definition this decision definition belongs to. None --resource-name-like text Filter by names of those decision definition resources that the parameter is a substring of. None --resource-name text Filter by the name of the decision definition resource. Exact match. None --latest-version / --not-latest-version boolean Only include those decision definitions that are latest versions. Value may only be true , as false is the default behavior. None --version text Filter by decision definition version. None --category-like text Filter by decision definition categories that the parameter is a substring of. None --category text Filter by decision definition category. Exact match. None --key-like text Filter by decision definition keys that the parameter is a substring of. None --key text Filter by decision definition key, i.e., the id in the DMN 1.0 XML. Exact match. None --deployed-at text Filter by the deploy time of the deployment the decision definition belongs to. Only selects decision definitions that have been deployed at a specific time (exact match). None --deployed-after text Filter by the deploy time of the deployment the decision definition belongs to. Only selects decision definitions that have been deployed after (exclusive) a specific time. None --deployment-id text Filter by the deployment the id belongs to. None --name-like text Filter by decision definition names that the parameter is a substring of. None --name text Filter by decision definition name. None --decision-definition-id-in text Filter by decision definition ids. None --decision-definition-id text Filter by decision definition id. None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionDefinitionsCount \u00b6 Get List Count Requests the number of decision definitions that fulfill the query criteria. Takes the same filtering parameters as the Get Decision Definition method. URL: /decision-definition/count Schema: - Usage: cctl&nbsp;get decisionDefinitionsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --version-tag-like text Filter by the version tags of those decision definition resources that the parameter is a substring of. None --version-tag text Filter by the version tag. None --include-decision-definitions-without-tenant-id / --not-include-decision-definitions-without-tenant-id boolean Include decision definitions which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include decision definitions which belong to no tenant. Value can effectively only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of Strings . A decision definition must have one of the given tenant ids. None --without-decision-requirements-definition / --not-without-decision-requirements-definition boolean Only include decision definitions which does not belongs to any decision requirements definition. Value may only be true , as false is the default behavior. None --decision-requirements-definition-key text Filter by the key of the decision requirements definition this decision definition belongs to. None --decision-requirements-definition-id text Filter by the id of the decision requirements definition this decision definition belongs to. None --resource-name-like text Filter by names of those decision definition resources that the parameter is a substring of. None --resource-name text Filter by the name of the decision definition resource. Exact match. None --latest-version / --not-latest-version boolean Only include those decision definitions that are latest versions. Value may only be true , as false is the default behavior. None --version text Filter by decision definition version. None --category-like text Filter by decision definition categories that the parameter is a substring of. None --category text Filter by decision definition category. Exact match. None --key-like text Filter by decision definition keys that the parameter is a substring of. None --key text Filter by decision definition key, i.e., the id in the DMN 1.0 XML. Exact match. None --deployed-at text Filter by the deploy time of the deployment the decision definition belongs to. Only selects decision definitions that have been deployed at a specific time (exact match). None --deployed-after text Filter by the deploy time of the deployment the decision definition belongs to. Only selects decision definitions that have been deployed after (exclusive) a specific time. None --deployment-id text Filter by the deployment the id belongs to. None --name-like text Filter by decision definition names that the parameter is a substring of. None --name text Filter by decision definition name. None --decision-definition-id-in text Filter by decision definition ids. None --decision-definition-id text Filter by decision definition id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionRequirementsDefinitionById \u00b6 Get Decision Requirements Definition by ID Retrieves a decision requirements definition according to the DecisionRequirementsDefinition interface in the engine. URL: /decision-requirements-definition/{id} Schema: - Usage: cctl&nbsp;get decisionRequirementsDefinitionById [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionRequirementsDefinitionByKey \u00b6 Get Decision Requirements Definition by Key Retrieves a decision requirements definition according to the DecisionRequirementsDefinition interface in the engine. Returns the latest version of the decision requirements definition which belongs to no tenant. URL: /decision-requirements-definition/key/{key} Schema: - Usage: cctl&nbsp;get decisionRequirementsDefinitionByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionRequirementsDefinitionByKeyAndTenantId \u00b6 Get Decision Requirements Definition by Key and Tenant ID Retrieves a decision requirements definition according to the DecisionRequirementsDefinition interface in the engine. Returns the latest version of the decision requirements definition for a tenant. URL: /decision-requirements-definition/key/{key}/tenant-id/{tenant-id} Schema: - Usage: cctl&nbsp;get decisionRequirementsDefinitionByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionRequirementsDefinitionDiagramById \u00b6 Get Decision Requirements Diagram by ID Retrieves the diagram of a decision requirements definition. URL: /decision-requirements-definition/{id}/diagram Schema: - Usage: cctl&nbsp;get decisionRequirementsDefinitionDiagramById [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionRequirementsDefinitionDiagramByKey \u00b6 Get Decision Requirements Diagram by Key Retrieves the diagram of a decision requirements definition. Returns the diagram for the latest version of the decision requirements definition which belongs to no tenant. URL: /decision-requirements-definition/key/{key}/diagram Schema: - Usage: cctl&nbsp;get decisionRequirementsDefinitionDiagramByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionRequirementsDefinitionDiagramByKeyAndTenantId \u00b6 Get Decision Requirements Diagram by Key and Tenant ID Retrieves the diagram of a decision requirements definition. Returns the diagram of the latest version of the decision requirements definition for a tenant. URL: /decision-requirements-definition/key/{key}/tenant-id/{tenant-id}/diagram Schema: - Usage: cctl&nbsp;get decisionRequirementsDefinitionDiagramByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionRequirementsDefinitionDmnXmlById \u00b6 Get DMN XML by ID Retrieves the DMN XML of a decision requirements definition. URL: /decision-requirements-definition/{id}/xml Schema: - Usage: cctl&nbsp;get decisionRequirementsDefinitionDmnXmlById [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionRequirementsDefinitionDmnXmlByKey \u00b6 Get DMN XML by Key Retrieves the DMN XML of a decision requirements definition. Returns the XML for the latest version of the decision requirements definition which belongs to no tenant. URL: /decision-requirements-definition/key/{key}/xml Schema: - Usage: cctl&nbsp;get decisionRequirementsDefinitionDmnXmlByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionRequirementsDefinitionDmnXmlByKeyAndTenantId \u00b6 Get DMN XML by Key and Tenant ID Retrieves the DMN XML of a decision requirements definition. Returns the XML of the latest version of the decision requirements definition for a tenant. URL: /decision-requirements-definition/key/{key}/tenant-id/{tenant-id}/xml Schema: - Usage: cctl&nbsp;get decisionRequirementsDefinitionDmnXmlByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionRequirementsDefinitions \u00b6 Get Decision Requirements Definitions Queries for decision requirements definitions that fulfill given parameters. Parameters may be the properties of decision requirements definitions, such as the name, key or version. The size of the result set can be retrieved by using the Get Decision Requirements Definition Count method. URL: /decision-requirements-definition Schema: - Usage: cctl&nbsp;get decisionRequirementsDefinitions [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --include-decision-requirements-definitions-without-tenant-id / --not-include-decision-requirements-definitions-without-tenant-id boolean Include decision requirements definitions which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include decision requirements definitions which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A decision requirements definition must have one of the given tenant ids. None --resource-name-like text Filter by names of those decision requirements definition resources that the parameter is a substring of. None --resource-name text Filter by the name of the decision requirements definition resource. Exact match. None --latest-version / --not-latest-version boolean Only include those decision requirements definitions that are latest versions. Value may only be true , as false is the default behavior. None --version text Filter by decision requirements definition version. None --category-like text Filter by decision requirements definition categories that the parameter is a substring of. None --category text Filter by decision requirements definition category. Exact match. None --key-like text Filter by decision requirements definition keys that the parameter is a substring of. None --key text Filter by decision requirements definition key, i.e., the id in the DMN 1.3 XML. Exact match. None --deployment-id text Filter by the id of the deployment a decision requirement definition belongs to. None --name-like text Filter by decision requirements definition names that the parameter is a substring of. None --name text Filter by decision requirements definition name. None --decision-requirements-definition-id-in text Filter by decision requirements definition ids. None --decision-requirements-definition-id text Filter by decision requirements definition id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionRequirementsDefinitionsCount \u00b6 Get Decision Requirements Definition Count Requests the number of decision requirements definitions that fulfill the query criteria. Takes the same filtering parameters as the Get Decision Requirements Definitions method. URL: /decision-requirements-definition/count Schema: - Usage: cctl&nbsp;get decisionRequirementsDefinitionsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --include-decision-requirements-definitions-without-tenant-id / --not-include-decision-requirements-definitions-without-tenant-id boolean Include decision requirements definitions which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include decision requirements definitions which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A decision requirements definition must have one of the given tenant ids. None --resource-name-like text Filter by names of those decision requirements definition resources that the parameter is a substring of. None --resource-name text Filter by the name of the decision requirements definition resource. Exact match. None --latest-version / --not-latest-version boolean Only include those decision requirements definitions that are latest versions. Value may only be true , as false is the default behavior. None --version text Filter by decision requirements definition version. None --category-like text Filter by decision requirements definition categories that the parameter is a substring of. None --category text Filter by decision requirements definition category. Exact match. None --key-like text Filter by decision requirements definition keys that the parameter is a substring of. None --key text Filter by decision requirements definition key, i.e., the id in the DMN 1.3 XML. Exact match. None --deployment-id text Filter by the id of the deployment a decision requirement definition belongs to. None --name-like text Filter by decision requirements definition names that the parameter is a substring of. None --name text Filter by decision requirements definition name. None --decision-requirements-definition-id-in text Filter by decision requirements definition ids. None --decision-requirements-definition-id text Filter by decision requirements definition id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get decisionStatistics \u00b6 Get DRD Statistics Retrieves evaluation statistics of a given decision requirements definition. URL: /history/decision-requirements-definition/{id}/statistics Schema: - Usage: cctl&nbsp;get decisionStatistics [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --decision-instance-id text Restrict query results to be based only on specific evaluation instance of a given decision requirements definition. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get deployedForm \u00b6 Get Deployed Form Retrieves the deployed form that is referenced from a given task. For further information please refer to the User Guide . URL: /task/{id}/deployed-form Schema: - Usage: cctl&nbsp;get deployedForm [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get deployedStartForm \u00b6 Get Deployed Start Form Retrieves the deployed form that can be referenced from a start event. For further information please refer to User Guide . URL: /process-definition/{id}/deployed-start-form Schema: - Usage: cctl&nbsp;get deployedStartForm [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get deployedStartFormByKey \u00b6 Get Deployed Start Form Retrieves the deployed form that can be referenced from a start event. For further information please refer to User Guide . URL: /process-definition/key/{key}/deployed-start-form Schema: - Usage: cctl&nbsp;get deployedStartFormByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get deployedStartFormByKeyAndTenantId \u00b6 Get Deployed Start Form Retrieves the deployed form that can be referenced from a start event. For further information please refer to User Guide . URL: /process-definition/key/{key}/tenant-id/{tenant-id}/deployed-start-form Schema: - Usage: cctl&nbsp;get deployedStartFormByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get deployment \u00b6 Get Retrieves a deployment by id, according to the Deployment interface of the engine. URL: /deployment/{id} Schema: - Usage: cctl&nbsp;get deployment [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get deploymentResource \u00b6 Get Resource Retrieves a deployment resource by resource id for the given deployment. URL: /deployment/{id}/resources/{resourceId} Schema: - Usage: cctl&nbsp;get deploymentResource [OPTIONS] RESOURCEID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get deploymentResourceData \u00b6 Get Resource (Binary) Retrieves the binary content of a deployment resource for the given deployment by id. URL: /deployment/{id}/resources/{resourceId}/data Schema: - Usage: cctl&nbsp;get deploymentResourceData [OPTIONS] RESOURCEID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get deploymentResources \u00b6 Get Resources Retrieves all deployment resources of a given deployment. URL: /deployment/{id}/resources Schema: - Usage: cctl&nbsp;get deploymentResources [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get deployments \u00b6 Get List Queries for deployments that fulfill given parameters. Parameters may be the properties of deployments, such as the id or name or a range of the deployment time. The size of the result set can be retrieved by using the Get Deployment count method. URL: /deployment Schema: - Usage: cctl&nbsp;get deployments [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --before text Restricts to all deployments before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --after text Restricts to all deployments after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --include-deployments-without-tenant-id / --not-include-deployments-without-tenant-id boolean Include deployments which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include deployments which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A deployment must have one of the given tenant ids. None --without-source / --not-without-source boolean Filter by the deployment source whereby source is equal to null . None --source text Filter by the deployment source. None --name-like text Filter by the deployment name that the parameter is a substring of. The parameter can include the wildcard % to express like-strategy such as: starts with ( % name), ends with (name % ) or contains ( % name % ). None --name text Filter by the deployment name. Exact match. None --id text Filter by deployment id None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get deploymentsCount \u00b6 Get List Count Queries for the number of deployments that fulfill given parameters. Takes the same parameters as the Get Deployments method. URL: /deployment/count Schema: - Usage: cctl&nbsp;get deploymentsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --before text Restricts to all deployments before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --after text Restricts to all deployments after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --include-deployments-without-tenant-id / --not-include-deployments-without-tenant-id boolean Include deployments which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include deployments which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A deployment must have one of the given tenant ids. None --without-source / --not-without-source boolean Filter by the deployment source whereby source is equal to null . None --source text Filter by the deployment source. None --name-like text Filter by the deployment name that the parameter is a substring of. The parameter can include the wildcard % to express like-strategy such as: starts with ( % name), ends with (name % ) or contains ( % name % ). None --name text Filter by the deployment name. Exact match. None --id text Filter by deployment id None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get errorDetailsHistoricExternalTaskLog \u00b6 Get External Task Log Error Details Retrieves the corresponding error details of the passed historic external task log by id. URL: /history/external-task-log/{id}/error-details Schema: - Usage: cctl&nbsp;get errorDetailsHistoricExternalTaskLog [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get eventSubscriptions \u00b6 Get List Queries for event subscriptions that fulfill given parameters. The size of the result set can be retrieved by using the Get Event Subscriptions count method. URL: /event-subscription Schema: - Usage: cctl&nbsp;get eventSubscriptions [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --include-event-subscriptions-without-tenant-id / --not-include-event-subscriptions-without-tenant-id boolean Select event subscriptions which have no tenant id. Can be used in combination with tenantIdIn parameter. Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only select subscriptions which have no tenant id. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. Only select subscriptions that belong to one of the given tenant ids. None --activity-id text Only select subscriptions that belong to an activity with the given id. None --process-instance-id text Only select subscriptions that belong to a process instance with the given id. None --execution-id text Only select subscriptions that belong to an execution with the given id. None --event-type text Only select subscriptions for events with the given type. Valid values: message , signal , compensate and conditional . None --event-name text Only select subscriptions for events with the given name. None --event-subscription-id text Only select subscription with the given id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get eventSubscriptionsCount \u00b6 Get List Count Queries for the number of event subscriptions that fulfill given parameters. Takes the same parameters as the Get Event Subscriptions method. URL: /event-subscription/count Schema: - Usage: cctl&nbsp;get eventSubscriptionsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --include-event-subscriptions-without-tenant-id / --not-include-event-subscriptions-without-tenant-id boolean Select event subscriptions which have no tenant id. Can be used in combination with tenantIdIn parameter. Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only select subscriptions which have no tenant id. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. Only select subscriptions that belong to one of the given tenant ids. None --activity-id text Only select subscriptions that belong to an activity with the given id. None --process-instance-id text Only select subscriptions that belong to a process instance with the given id. None --execution-id text Only select subscriptions that belong to an execution with the given id. None --event-type text Only select subscriptions for events with the given type. Valid values: message , signal , compensate and conditional . None --event-name text Only select subscriptions for events with the given name. None --event-subscription-id text Only select subscription with the given id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get executeFilterCount \u00b6 Execute Filter Count Executes the saved query of the filter by id and returns the count. URL: /filter/{id}/count Schema: - Usage: cctl&nbsp;get executeFilterCount [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get executeFilterList \u00b6 Execute Filter List Executes the saved query of the filter by id and returns the result list. URL: /filter/{id}/list Schema: - Usage: cctl&nbsp;get executeFilterList [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get executeFilterSingleResult \u00b6 Execute Filter Single Result Executes the saved query of the filter by id and returns the single result. URL: /filter/{id}/singleResult Schema: - Usage: cctl&nbsp;get executeFilterSingleResult [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get execution \u00b6 Get Execution Retrieves an execution by id, according to the Execution interface in the engine. URL: /execution/{id} Schema: - Usage: cctl&nbsp;get execution [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get executions \u00b6 Get Executions Queries for the executions that fulfill given parameters. Parameters may be static as well as dynamic runtime properties of executions. The size of the result set can be retrieved by using the Get Execution Count method. URL: /execution Schema: - Usage: cctl&nbsp;get executions [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match all variable values provided in variables and processVariables case- insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match all variable names provided in variables and processVariables case- insensitively. If set to true variableName and variablename are treated as equal. None --process-variables text Only include executions that belong to a process instance with variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to. key and value may not contain underscore or comma characters. | None | | --variables | text | Only include executions that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --tenant-id-in | text | Filter by a comma-separated list of tenant ids. An execution must have one of the given tenant ids. | None | | --incident-message-like | text | Filter by the incident message that the parameter is a substring of. | None | | --incident-message | text | Filter by the incident message. Exact match. | None | | --incident-type | text | Filter by the incident type. See the User Guide for a list of incident types. | None | | --incident-id | text | Filter by the incident id. | None | | --suspended / --not-suspended | boolean | Only include suspended executions. Value may only be true , as false is the default behavior. | None | | --active / --not-active | boolean | Only include active executions. Value may only be true , as false is the default behavior. | None | | --message-event-subscription-name | text | Select only those executions that expect a message of the given name. | None | | --signal-event-subscription-name | text | Select only those executions that expect a signal of the given name. | None | | --activity-id | text | Filter by the id of the activity the execution currently executes. | None | | --process-instance-id | text | Filter by the id of the process instance the execution belongs to. | None | | --process-definition-key | text | Filter by the key of the process definition the executions run on. | None | | --process-definition-id | text | Filter by the process definition the executions run on. | None | | --business-key | text | Filter by the business key of the process instances the executions belong to. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get executionsCount \u00b6 Get Execution Count Queries for the number of executions that fulfill given parameters. Takes the same parameters as the Get Executions method. URL: /execution/count Schema: - Usage: cctl&nbsp;get executionsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match all variable values provided in variables and processVariables case- insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match all variable names provided in variables and processVariables case- insensitively. If set to true variableName and variablename are treated as equal. None --process-variables text Only include executions that belong to a process instance with variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to. key and value may not contain underscore or comma characters. | None | | --variables | text | Only include executions that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --tenant-id-in | text | Filter by a comma-separated list of tenant ids. An execution must have one of the given tenant ids. | None | | --incident-message-like | text | Filter by the incident message that the parameter is a substring of. | None | | --incident-message | text | Filter by the incident message. Exact match. | None | | --incident-type | text | Filter by the incident type. See the User Guide for a list of incident types. | None | | --incident-id | text | Filter by the incident id. | None | | --suspended / --not-suspended | boolean | Only include suspended executions. Value may only be true , as false is the default behavior. | None | | --active / --not-active | boolean | Only include active executions. Value may only be true , as false is the default behavior. | None | | --message-event-subscription-name | text | Select only those executions that expect a message of the given name. | None | | --signal-event-subscription-name | text | Select only those executions that expect a signal of the given name. | None | | --activity-id | text | Filter by the id of the activity the execution currently executes. | None | | --process-instance-id | text | Filter by the id of the process instance the execution belongs to. | None | | --process-definition-key | text | Filter by the key of the process definition the executions run on. | None | | --process-definition-id | text | Filter by the process definition the executions run on. | None | | --business-key | text | Filter by the business key of the process instances the executions belong to. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get externalTask \u00b6 Get Retrieves an external task by id, corresponding to the ExternalTask interface in the engine. URL: /external-task/{id} Schema: - Usage: cctl&nbsp;get externalTask [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get externalTaskErrorDetails \u00b6 Get Error Details Retrieves the error details in the context of a running external task by id. URL: /external-task/{id}/errorDetails Schema: - Usage: cctl&nbsp;get externalTaskErrorDetails [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get externalTasks \u00b6 Get List Queries for the external tasks that fulfill given parameters. Parameters may be static as well as dynamic runtime properties of executions. The size of the result set can be retrieved by using the Get External Task Count method. URL: /external-task Schema: - Usage: cctl&nbsp;get externalTasks [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --priority-lower-than-or-equals text Only include jobs with a priority lower than or equal to the given value. Value must be a valid long value. None --priority-higher-than-or-equals text Only include jobs with a priority higher than or equal to the given value. Value must be a valid long value. None --suspended / --not-suspended boolean Only include suspended tasks. Value may only be true , as false matches any external task. None --active / --not-active boolean Only include active tasks. Value may only be true , as false matches any external task. None --tenant-id-in text Filter by a comma-separated list of tenant ids. An external task must have one of the given tenant ids. None --process-definition-id text Filter by the id of the process definition that an external task belongs to. None --process-instance-id-in text Filter by a comma-separated list of process instance ids that an external task may belong to. None --process-instance-id text Filter by the id of the process instance that an external task belongs to. None --execution-id text Filter by the id of the execution that an external task belongs to. None --activity-id-in text Filter by the comma-separated list of ids of the activities that an external task is created for. None --activity-id text Filter by the id of the activity that an external task is created for. None --lock-expiration-before text Restrict to external tasks that have a lock that expires before a given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --lock-expiration-after text Restrict to external tasks that have a lock that expires after a given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --no-retries-left / --not-no-retries-left boolean Only include external tasks that have 0 retries. Value may only be true , as false matches any external task. None --with-retries-left / --not-with-retries-left boolean Only include external tasks that have a positive (> 0) number of retries (or null ). Value may only be true , as false matches any external task. None --not-locked / --not-not-locked boolean Only include external tasks that are currently not locked (i.e., they have no lock or it has expired). Value may only be true , as false matches any external task. None --locked / --not-locked boolean Only include external tasks that are currently locked (i.e., they have a lock time and it has not expired). Value may only be true , as false matches any external task. None --worker-id text Filter by the id of the worker that the task was most recently locked by. None --topic-name text Filter by an external task topic. None --external-task-id-in text Filter by the comma-separated list of external task ids. None --external-task-id text Filter by an external task's id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get externalTasksCount \u00b6 Get List Count Queries for the number of external tasks that fulfill given parameters. Takes the same parameters as the Get External Tasks method. URL: /external-task/count Schema: - Usage: cctl&nbsp;get externalTasksCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --priority-lower-than-or-equals text Only include jobs with a priority lower than or equal to the given value. Value must be a valid long value. None --priority-higher-than-or-equals text Only include jobs with a priority higher than or equal to the given value. Value must be a valid long value. None --suspended / --not-suspended boolean Only include suspended tasks. Value may only be true , as false matches any external task. None --active / --not-active boolean Only include active tasks. Value may only be true , as false matches any external task. None --tenant-id-in text Filter by a comma-separated list of tenant ids. An external task must have one of the given tenant ids. None --process-definition-id text Filter by the id of the process definition that an external task belongs to. None --process-instance-id-in text Filter by a comma-separated list of process instance ids that an external task may belong to. None --process-instance-id text Filter by the id of the process instance that an external task belongs to. None --execution-id text Filter by the id of the execution that an external task belongs to. None --activity-id-in text Filter by the comma-separated list of ids of the activities that an external task is created for. None --activity-id text Filter by the id of the activity that an external task is created for. None --lock-expiration-before text Restrict to external tasks that have a lock that expires before a given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --lock-expiration-after text Restrict to external tasks that have a lock that expires after a given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --no-retries-left / --not-no-retries-left boolean Only include external tasks that have 0 retries. Value may only be true , as false matches any external task. None --with-retries-left / --not-with-retries-left boolean Only include external tasks that have a positive (> 0) number of retries (or null ). Value may only be true , as false matches any external task. None --not-locked / --not-not-locked boolean Only include external tasks that are currently not locked (i.e., they have no lock or it has expired). Value may only be true , as false matches any external task. None --locked / --not-locked boolean Only include external tasks that are currently locked (i.e., they have a lock time and it has not expired). Value may only be true , as false matches any external task. None --worker-id text Filter by the id of the worker that the task was most recently locked by. None --topic-name text Filter by an external task topic. None --external-task-id-in text Filter by the comma-separated list of external task ids. None --external-task-id text Filter by an external task's id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get filterCount \u00b6 Get Filter Count Retrieves the number of filters that fulfill a provided query. Corresponds to the size of the result set when using the Get Filters method. URL: /filter/count Schema: - Usage: cctl&nbsp;get filterCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --owner text Filter by the user id of the owner of the filter. None --name-like text Filter by the name that the parameter is a substring of. None --name text Filter by the name of the filter. None --resource-type text Filter by the resource type of the filter, e.g., Task . None --filter-id text Filter by the id of the filter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get filterList \u00b6 Get Filters Queries for a list of filters using a list of parameters. The size of the result set can be retrieved by using the Get Filter Count method. URL: /filter Schema: - Usage: cctl&nbsp;get filterList [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --item-count / --not-item-count boolean If set to true , each filter result will contain an itemCount property with the number of items matched by the filter itself. None --owner text Filter by the user id of the owner of the filter. None --name-like text Filter by the name that the parameter is a substring of. None --name text Filter by the name of the filter. None --resource-type text Filter by the resource type of the filter, e.g., Task . None --filter-id text Filter by the id of the filter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get findCleanupJob \u00b6 Find clean up history job (GET) Deprecated! Use GET /history/cleanup/jobs instead. Finds history cleanup job (See History cleanup ). URL: /history/cleanup/job Schema: - Usage: cctl&nbsp;get findCleanupJob [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get findCleanupJobs \u00b6 Find clean up history jobs (GET) Finds history cleanup jobs (See History cleanup ). URL: /history/cleanup/jobs Schema: - Usage: cctl&nbsp;get findCleanupJobs [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get form \u00b6 Get Form Key Retrieves the form key for a task. The form key corresponds to the FormData#formKey property in the engine. This key can be used to do task-specific form rendering in client applications. Additionally, the context path of the containing process application is returned. URL: /task/{id}/form Schema: - Usage: cctl&nbsp;get form [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get formVariables \u00b6 Get Task Form Variables Retrieves the form variables for a task. The form variables take form data specified on the task into account. If form fields are defined, the variable types and default values of the form fields are taken into account. URL: /task/{id}/form-variables Schema: - Usage: cctl&nbsp;get formVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true). If set to true, a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false, a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --variable-names | text | A comma-separated list of variable names. Allows restricting the list of requested variables to the variable names in the list. It is best practice to restrict the list of variables to the variables actually required by the form in order to minimize fetching of data. If the query parameter is ommitted all variables are fetched. If the query parameter contains non-existent variable names, the variable names are ignored. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get group \u00b6 Get Group Retrieves a group by id. URL: /group/{id} Schema: - Usage: cctl&nbsp;get group [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get groupCount \u00b6 Get List Count Queries for groups using a list of parameters and retrieves the count. URL: /group/count Schema: - Usage: cctl&nbsp;get groupCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --member-of-tenant text Only retrieve groups which are members of the given tenant. None --member text Only retrieve groups where the given user id is a member of. None --type text Filter by the type of the group. None --name-like text Filter by the name that the parameter is a substring of. None --name text Filter by the name of the group. None --id-in text Filter by a comma seperated list of group ids. None --id text Filter by the id of the group. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get groupInfo \u00b6 Get a User's Groups Gets the groups of a user by id and includes all users that share a group with the given user. URL: /identity/groups Schema: - Usage: cctl&nbsp;get groupInfo [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --user-id text The id of the user to get the groups for. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicActivityInstance \u00b6 Get Retrieves a historic activity instance by id, according to the HistoricActivityInstance interface in the engine. URL: /history/activity-instance/{id} Schema: - Usage: cctl&nbsp;get historicActivityInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicActivityInstances \u00b6 Get List Queries for historic activity instances that fulfill the given parameters. The size of the result set can be retrieved by using the Get Historic Activity Instance Count method. URL: /history/activity-instance Schema: - Usage: cctl&nbsp;get historicActivityInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --without-tenant-id / --not-without-tenant-id boolean Only include historic activity instances that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of ids. An activity instance must have one of the given tenant ids. None --finished-after text Restrict to instances that were finished after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --finished-before text Restrict to instances that were finished before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --started-after text Restrict to instances that were started after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --started-before text Restrict to instances that were started before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --complete-scope / --not-complete-scope boolean Only include activity instances which completed a scope. Value may only be true , as false behaves the same as when the property is not set. None --canceled / --not-canceled boolean Only include canceled activity instances. Value may only be true , as false behaves the same as when the property is not set. None --unfinished / --not-unfinished boolean Only include unfinished activity instances. Value may only be true , as false behaves the same as when the property is not set. None --finished / --not-finished boolean Only include finished activity instances. Value may only be true , as false behaves the same as when the property is not set. None --task-assignee text Only include activity instances that are user tasks and assigned to a given user. None --activity-type text Filter by activity type. None --activity-name text Filter by the activity name (according to BPMN 2.0 XML). None --activity-id text Filter by the activity id (according to BPMN 2.0 XML). None --execution-id text Filter by the id of the execution that executed the activity instance. None --process-definition-id text Filter by process definition id. None --process-instance-id text Filter by process instance id. None --activity-instance-id text Filter by activity instance id. None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicActivityInstancesCount \u00b6 Get List Count Queries for the number of historic activity instances that fulfill the given parameters. Takes the same parameters as the Get Historic Activity Instance method. URL: /history/activity-instance/count Schema: - Usage: cctl&nbsp;get historicActivityInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --without-tenant-id / --not-without-tenant-id boolean Only include historic activity instances that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of ids. An activity instance must have one of the given tenant ids. None --finished-after text Restrict to instances that were finished after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --finished-before text Restrict to instances that were finished before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --started-after text Restrict to instances that were started after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --started-before text Restrict to instances that were started before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --complete-scope / --not-complete-scope boolean Only include activity instances which completed a scope. Value may only be true , as false behaves the same as when the property is not set. None --canceled / --not-canceled boolean Only include canceled activity instances. Value may only be true , as false behaves the same as when the property is not set. None --unfinished / --not-unfinished boolean Only include unfinished activity instances. Value may only be true , as false behaves the same as when the property is not set. None --finished / --not-finished boolean Only include finished activity instances. Value may only be true , as false behaves the same as when the property is not set. None --task-assignee text Only include activity instances that are user tasks and assigned to a given user. None --activity-type text Filter by activity type. None --activity-name text Filter by the activity name (according to BPMN 2.0 XML). None --activity-id text Filter by the activity id (according to BPMN 2.0 XML). None --execution-id text Filter by the id of the execution that executed the activity instance. None --process-definition-id text Filter by process definition id. None --process-instance-id text Filter by process instance id. None --activity-instance-id text Filter by activity instance id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicActivityStatistics \u00b6 Get Historic Activity Statistics Retrieves historic statistics of a given process definition, grouped by activities. These statistics include the number of running activity instances and, optionally, the number of canceled activity instances, finished activity instances and activity instances which completed a scope (i.e., in BPMN 2.0 manner: a scope is completed by an activity instance when the activity instance consumed a token but did not emit a new token). Note: This only includes historic data. URL: /history/process-definition/{id}/statistics Schema: - Usage: cctl&nbsp;get historicActivityStatistics [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --process-instance-id-in text Restrict to process instances with the given IDs. The IDs must be provided as a comma- separated list. None --finished-after text Restrict to process instances that were finished after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --finished-before text Restrict to process instances that were finished before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --started-after text Restrict to process instances that were started after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --started-before text Restrict to process instances that were started before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --incidents / --not-incidents boolean Whether to include the number of incidents. Valid values are true or false . Default: false . None --complete-scope / --not-complete-scope boolean Whether to include the number of activity instances which completed a scope in the result or not. Valid values are true or false . Default: false . None --finished / --not-finished boolean Whether to include the number of finished activity instances in the result or not. Valid values are true or false . Default: false . None --canceled / --not-canceled boolean Whether to include the number of canceled activity instances in the result or not. Valid values are true or false . Default: false . None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicBatch \u00b6 Get Historic Batch Retrieves a historic batch by id, according to the HistoricBatch interface in the engine. URL: /history/batch/{id} Schema: - Usage: cctl&nbsp;get historicBatch [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicBatches \u00b6 Get Historic Batches Queries for historic batches that fulfill given parameters. Parameters may be the properties of batches, such as the id or type. The size of the result set can be retrieved by using the Get Historic Batch Count method. URL: /history/batch Schema: - Usage: cctl&nbsp;get historicBatches [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --without-tenant-id / --not-without-tenant-id boolean Only include batches which belong to no tenant. Value can effectively only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A batch matches if it has one of the given tenant ids. None --completed / --not-completed boolean Filter completed or not completed batches. If the value is true , only completed batches, i.e., end time is set, are returned. Otherwise, if the value is false , only running batches, i.e., end time is null, are returned. None --type text Filter by batch type. See the User Guide for more information about batch types. None --batch-id text Filter by batch id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicBatchesCount \u00b6 Get Historic Batch Count Requests the number of historic batches that fulfill the query criteria. Takes the same filtering parameters as the Get Historic Batches method. URL: /history/batch/count Schema: - Usage: cctl&nbsp;get historicBatchesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --without-tenant-id / --not-without-tenant-id boolean Only include batches which belong to no tenant. Value can effectively only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A batch matches if it has one of the given tenant ids. None --completed / --not-completed boolean Filter completed or not completed batches. If the value is true , only completed batches, i.e., end time is set, are returned. Otherwise, if the value is false , only running batches, i.e., end time is null, are returned. None --type text Filter by batch type. See the User Guide for more information about batch types. None --batch-id text Filter by batch id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicDecisionInstance \u00b6 Get Historic Decision Instance Retrieves a historic decision instance by id, according to the HistoricDecisionInstance interface in the engine. URL: /history/decision-instance/{id} Schema: - Usage: cctl&nbsp;get historicDecisionInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --disable-custom-object-deserialization / --not-disable-custom-object-deserialization boolean Disables deserialization of input and output values that are custom objects. Value may only be true , as false is the default behavior. None --disable-binary-fetching / --not-disable-binary-fetching boolean Disables fetching of byte array input and output values. Value may only be true , as false is the default behavior. None --include-outputs / --not-include-outputs boolean Include output values in the result. Value may only be true , as false is the default behavior. None --include-inputs / --not-include-inputs boolean Include input values in the result. Value may only be true , as false is the default behavior. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicDecisionInstances \u00b6 Get Historic Decision Instances Queries for historic decision instances that fulfill the given parameters. The size of the result set can be retrieved by using the Get Historic Decision Instance Count method. URL: /history/decision-instance Schema: - Usage: cctl&nbsp;get historicDecisionInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --disable-custom-object-deserialization / --not-disable-custom-object-deserialization boolean Disables deserialization of input and output values that are custom objects. Value may only be true , as false is the default behavior. None --disable-binary-fetching / --not-disable-binary-fetching boolean Disables fetching of byte array input and output values. Value may only be true , as false is the default behavior. None --include-outputs / --not-include-outputs boolean Include output values in the result. Value may only be true , as false is the default behavior. None --include-inputs / --not-include-inputs boolean Include input values in the result. Value may only be true , as false is the default behavior. None --decision-requirements-definition-key text Filter by the key of the decision requirements definition the instances belongs to. None --decision-requirements-definition-id text Filter by the decision requirements definition the instances belongs to. None --root-decision-instances-only / --not-root-decision-instances-only boolean Restrict to instances those are the root decision instance of an evaluation. Value may only be true , as false is the default behavior. None --root-decision-instance-id text Restrict to instances that have a given root decision instance id. This also includes the decision instance with the given id. None --user-id text Restrict to instances that were evaluated by the given user. None --evaluated-after text Restrict to instances that were evaluated after the given date. By default , the date must have the format `yyyy-MM- dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200`. None --evaluated-before text Restrict to instances that were evaluated before the given date. By default , the date must have the format `yyyy-MM- dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200`. None --without-tenant-id / --not-without-tenant-id boolean Only include historic decision instances that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A historic decision instance must have one of the given tenant ids. None --activity-instance-id-in text Filter by the activity instance ids the instances belongs to. Must be a comma-separated list of acitvity instance ids. None --activity-id-in text Filter by the activity ids the instances belongs to. Must be a comma-separated list of acitvity ids. None --case-instance-id text Filter by the case instance the instances belongs to. None --case-definition-key text Filter by the key of the case definition the instances belongs to. None --case-definition-id text Filter by the case definition the instances belongs to. None --process-instance-id text Filter by the process instance the instances belongs to. None --process-definition-key text Filter by the key of the process definition the instances belongs to. None --process-definition-id text Filter by the process definition the instances belongs to. None --decision-definition-name-like text Filter by the name of the decision definition the instances belongs to, that the parameter is a substring of. None --decision-definition-name text Filter by the name of the decision definition the instances belongs to. None --decision-definition-key-in text Filter by the keys of the decision definition the instances belongs to. Must be a comma- separated list of decision definition keys. None --decision-definition-key text Filter by the key of the decision definition the instances belongs to. None --decision-definition-id-in text Filter by the decision definitions the instances belongs to. Must be a comma-separated list of decision definition ids. None --decision-definition-id text Filter by the decision definition the instances belongs to. None --decision-instance-id-in text Filter by decision instance ids. Must be a comma-separated list of decision instance ids. None --decision-instance-id text Filter by decision instance id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicDecisionInstancesCount \u00b6 Get Historic Decision Instance Count Queries for the number of historic decision instances that fulfill the given parameters. Takes the same parameters as the Get Historic Decision Instances method. URL: /history/decision-instance/count Schema: - Usage: cctl&nbsp;get historicDecisionInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --decision-requirements-definition-key text Filter by the key of the decision requirements definition the instances belongs to. None --decision-requirements-definition-id text Filter by the decision requirements definition the instances belongs to. None --root-decision-instances-only / --not-root-decision-instances-only boolean Restrict to instances those are the root decision instance of an evaluation. Value may only be true , as false is the default behavior. None --root-decision-instance-id text Restrict to instances that have a given root decision instance id. This also includes the decision instance with the given id. None --user-id text Restrict to instances that were evaluated by the given user. None --evaluated-after text Restrict to instances that were evaluated after the given date. By default , the date must have the format `yyyy-MM- dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200`. None --evaluated-before text Restrict to instances that were evaluated before the given date. By default , the date must have the format `yyyy-MM- dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200`. None --without-tenant-id / --not-without-tenant-id boolean Only include historic decision instances that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A historic decision instance must have one of the given tenant ids. None --activity-instance-id-in text Filter by the activity instance ids the instances belongs to. Must be a comma-separated list of acitvity instance ids. None --activity-id-in text Filter by the activity ids the instances belongs to. Must be a comma-separated list of acitvity ids. None --case-instance-id text Filter by the case instance the instances belongs to. None --case-definition-key text Filter by the key of the case definition the instances belongs to. None --case-definition-id text Filter by the case definition the instances belongs to. None --process-instance-id text Filter by the process instance the instances belongs to. None --process-definition-key text Filter by the key of the process definition the instances belongs to. None --process-definition-id text Filter by the process definition the instances belongs to. None --decision-definition-name-like text Filter by the name of the decision definition the instances belongs to, that the parameter is a substring of. None --decision-definition-name text Filter by the name of the decision definition the instances belongs to. None --decision-definition-key-in text Filter by the keys of the decision definition the instances belongs to. Must be a comma- separated list of decision definition keys. None --decision-definition-key text Filter by the key of the decision definition the instances belongs to. None --decision-definition-id-in text Filter by the decision definitions the instances belongs to. Must be a comma-separated list of decision definition ids. None --decision-definition-id text Filter by the decision definition the instances belongs to. None --decision-instance-id-in text Filter by decision instance ids. Must be a comma-separated list of decision instance ids. None --decision-instance-id text Filter by decision instance id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicDetail \u00b6 Get Historic Detail Retrieves a historic detail by id. URL: /history/detail/{id} Schema: - Usage: cctl&nbsp;get historicDetail [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-value / --not-deserialize-value boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get historicDetailBinary \u00b6 Get Historic Detail (Binary) Retrieves the content of a historic variable update by id. Applicable for byte array and file variables. URL: /history/detail/{id}/data Schema: - Usage: cctl&nbsp;get historicDetailBinary [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicDetails \u00b6 Get Historic Details Queries for historic details that fulfill the given parameters. The size of the result set can be retrieved by using the Get Historic Detail Count method. URL: /history/detail Schema: - Usage: cctl&nbsp;get historicDetails [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --max-results | text | Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. | None | | --first-result | text | Pagination of results. Specifies the index of the first result to return. | None | | --sort-order | text | Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. | None | | --sort-by | text | Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. | None | | --occurred-after | text | Restrict to historic details that occured after the given date (including the date). Default format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200. | None | | --occurred-before | text | Restrict to historic details that occured before the given date (including the date). Default format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200. | None | | --initial / --not-initial | boolean | Restrict to historic variable updates that contain only initial variable values. Value may only be true , as false is the default behavior. | None | | --exclude-task-details / --not-exclude-task-details | boolean | Excludes all task-related HistoricDetails , so only items which have no task id set will be selected. When this parameter is used together with taskId , this call is ignored and task details are not excluded. Value may only be true , as false is the default behavior. | None | | --variable-updates / --not-variable-updates | boolean | Only include HistoricVariableUpdates . Value may only be true , as false is the default behavior. | None | | --form-fields / --not-form-fields | boolean | Only include HistoricFormFields . Value may only be true , as false is the default behavior. | None | | --user-operation-id | text | Filter by a user operation id. | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include historic details that belong to no tenant. Value may only be true , as false is the default behavior. | None | | --tenant-id-in | text | Filter by a comma-separated list of tenant ids. | None | | --variable-type-in | text | Only include historic details where the variable updates belong to one of the passed comma-separated list of variable types. A list of all supported variable types can be found here . Note: All non-primitive variables are associated with the type serializable . | None | | --variable-instance-id | text | Filter by variable instance id. | None | | --case-execution-id | text | Filter by case execution id. | None | | --case-instance-id | text | Filter by case instance id. | None | | --activity-instance-id | text | Filter by activity instance id. | None | | --task-id | text | Filter by task id. | None | | --execution-id | text | Filter by execution id. | None | | --process-instance-id-in | text | Only include historic details which belong to one of the passed comma-separated process instance ids. | None | | --process-instance-id | text | Filter by process instance id. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get historicDetailsCount \u00b6 Get Historic Detail Count Queries for the number of historic details that fulfill the given parameters. Takes the same parameters as the Get Historic Details method. URL: /history/detail/count Schema: - Usage: cctl&nbsp;get historicDetailsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --occurred-after text Restrict to historic details that occured after the given date (including the date). Default format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200. None --occurred-before text Restrict to historic details that occured before the given date (including the date). Default format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200. None --initial / --not-initial boolean Restrict to historic variable updates that contain only initial variable values. Value may only be true , as false is the default behavior. None --exclude-task-details / --not-exclude-task-details boolean Excludes all task-related HistoricDetails , so only items which have no task id set will be selected. When this parameter is used together with taskId , this call is ignored and task details are not excluded. Value may only be true , as false is the default behavior. None --variable-updates / --not-variable-updates boolean Only include HistoricVariableUpdates . Value may only be true , as false is the default behavior. None --form-fields / --not-form-fields boolean Only include HistoricFormFields . Value may only be true , as false is the default behavior. None --user-operation-id text Filter by a user operation id. None --without-tenant-id / --not-without-tenant-id boolean Only include historic details that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. None --variable-type-in text Only include historic details where the variable updates belong to one of the passed comma-separated list of variable types. A list of all supported variable types can be found here . Note: All non-primitive variables are associated with the type serializable . None --variable-instance-id text Filter by variable instance id. None --case-execution-id text Filter by case execution id. None --case-instance-id text Filter by case instance id. None --activity-instance-id text Filter by activity instance id. None --task-id text Filter by task id. None --execution-id text Filter by execution id. None --process-instance-id-in text Only include historic details which belong to one of the passed comma-separated process instance ids. None --process-instance-id text Filter by process instance id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicExternalTaskLog \u00b6 Get External Task Log Retrieves a historic external task log by id. URL: /history/external-task-log/{id} Schema: - Usage: cctl&nbsp;get historicExternalTaskLog [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicExternalTaskLogs \u00b6 Get External Task Logs Queries for historic external task logs that fulfill the given parameters. The size of the result set can be retrieved by using the Get External Task Log Count method. URL: /history/external-task-log Schema: - Usage: cctl&nbsp;get historicExternalTaskLogs [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --deletion-log / --not-deletion-log boolean Only include deletion logs. Value may only be true , as false is the default behavior. None --success-log / --not-success-log boolean Only include success logs. Value may only be true , as false is the default behavior. None --failure-log / --not-failure-log boolean Only include failure logs. Value may only be true , as false is the default behavior. None --creation-log / --not-creation-log boolean Only include creation logs. Value may only be true , as false is the default behavior. None --priority-higher-than-or-equals text Only include logs for which the associated external task had a priority higher than or equal to the given value. Value must be a valid long value. None --priority-lower-than-or-equals text Only include logs for which the associated external task had a priority lower than or equal to the given value. Value must be a valid long value. None --without-tenant-id / --not-without-tenant-id boolean Only include historic external task log entries that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Only include historic external task log entries which belong to one of the passed and comma-separated tenant ids. None --process-definition-key text Filter by process definition key. None --process-definition-id text Filter by process definition id. None --process-instance-id text Filter by process instance id. None --execution-id-in text Only include historic external task logs which belong to one of the passed execution ids. None --activity-instance-id-in text Only include historic external task logs which belong to one of the passed activity instance ids. None --activity-id-in text Only include historic external task logs which belong to one of the passed activity ids. None --error-message text Filter by external task exception message. None --worker-id text Filter by the id of the worker that the task was most recently locked by. None --topic-name text Filter by an external task topic. None --external-task-id text Filter by external task id. None --log-id text Filter by historic external task log id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicExternalTaskLogsCount \u00b6 Get External Task Log Count Queries for the number of historic external task logs that fulfill the given parameters. Takes the same parameters as the Get External Task Logs method. URL: /history/external-task-log/count Schema: - Usage: cctl&nbsp;get historicExternalTaskLogsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deletion-log / --not-deletion-log boolean Only include deletion logs. Value may only be true , as false is the default behavior. None --success-log / --not-success-log boolean Only include success logs. Value may only be true , as false is the default behavior. None --failure-log / --not-failure-log boolean Only include failure logs. Value may only be true , as false is the default behavior. None --creation-log / --not-creation-log boolean Only include creation logs. Value may only be true , as false is the default behavior. None --priority-higher-than-or-equals text Only include logs for which the associated external task had a priority higher than or equal to the given value. Value must be a valid long value. None --priority-lower-than-or-equals text Only include logs for which the associated external task had a priority lower than or equal to the given value. Value must be a valid long value. None --without-tenant-id / --not-without-tenant-id boolean Only include historic external task log entries that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Only include historic external task log entries which belong to one of the passed and comma-separated tenant ids. None --process-definition-key text Filter by process definition key. None --process-definition-id text Filter by process definition id. None --process-instance-id text Filter by process instance id. None --execution-id-in text Only include historic external task logs which belong to one of the passed execution ids. None --activity-instance-id-in text Only include historic external task logs which belong to one of the passed activity instance ids. None --activity-id-in text Only include historic external task logs which belong to one of the passed activity ids. None --error-message text Filter by external task exception message. None --worker-id text Filter by the id of the worker that the task was most recently locked by. None --topic-name text Filter by an external task topic. None --external-task-id text Filter by external task id. None --log-id text Filter by historic external task log id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicIdentityLinks \u00b6 Get Identity Link Logs Queries for historic identity link logs that fulfill given parameters. The size of the result set can be retrieved by using the Get Identity-Link-Log Count method. URL: /history/identity-link-log Schema: - Usage: cctl&nbsp;get historicIdentityLinks [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --without-tenant-id / --not-without-tenant-id boolean Only include historic identity links that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. None --assigner-id text Restricts to identity links that have the given assigner id. None --operation-type text Restricts to identity links that have the given operationType (add/delete). None --process-definition-key text Restricts to identity links that have the given process definition key. None --process-definition-id text Restricts to identity links that have the given process definition id. None --task-id text Restricts to identity links that have the given task id. None --date-after text Restricts to identity links that have the time after the given time. None --date-before text Restricts to identity links that have the time before the given time. None --group-id text Restricts to identity links that have the given group id. None --user-id text Restricts to identity links that have the given user id. None --type text Restricts to identity links that have the given type (candidate/assignee/owner). None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicIdentityLinksCount \u00b6 Get Identity Link Log Count Queries for the number of historic identity link logs that fulfill the given parameters. Takes the same parameters as the Get Identity-Link-Logs method. URL: /history/identity-link-log/count Schema: - Usage: cctl&nbsp;get historicIdentityLinksCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --without-tenant-id / --not-without-tenant-id boolean Only include historic identity links that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. None --assigner-id text Restricts to identity links that have the given assigner id. None --operation-type text Restricts to identity links that have the given operationType (add/delete). None --process-definition-key text Restricts to identity links that have the given process definition key. None --process-definition-id text Restricts to identity links that have the given process definition id. None --task-id text Restricts to identity links that have the given task id. None --date-after text Restricts to identity links that have the time after the given time. None --date-before text Restricts to identity links that have the time before the given time. None --group-id text Restricts to identity links that have the given group id. None --user-id text Restricts to identity links that have the given user id. None --type text Restricts to identity links that have the given type (candidate/assignee/owner). None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicIncidents \u00b6 Get Incidents Queries for historic incidents that fulfill given parameters. The size of the result set can be retrieved by using the Get Incident Count method. URL: /history/incident Schema: - Usage: cctl&nbsp;get historicIncidents [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --job-definition-id-in text Restricts to incidents that have one of the given comma-separated job definition ids. None --without-tenant-id / --not-without-tenant-id boolean Only include historic incidents that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Restricts to incidents that have one of the given comma-separated tenant ids. None --deleted / --not-deleted boolean Restricts to incidents that are deleted. None --resolved / --not-resolved boolean Restricts to incidents that are resolved. None --open / --not-open boolean Restricts to incidents that are open. None --history-configuration text Restricts to incidents that have the given parameter set as history configuration. None --configuration text Restricts to incidents that have the given parameter set as configuration. None --root-cause-incident-id text Restricts to incidents that have the given incident id as root cause incident. None --cause-incident-id text Restricts to incidents that have the given incident id as cause incident. None --failed-activity-id text Restricts to incidents that were created due to the failure of an activity with the given id. None --activity-id text Restricts to incidents that belong to an activity with the given id. None --end-time-after text Restricts to incidents that have an endTimeAfter date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --end-time-before text Restricts to incidents that have an endTimeBefore date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --create-time-after text Restricts to incidents that have a createTime date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --create-time-before text Restricts to incidents that have a createTime date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --execution-id text Restricts to incidents that belong to an execution with the given id. None --process-instance-id text Restricts to incidents that belong to a process instance with the given id. None --process-definition-key-in text Restricts to incidents that have one of the given process definition keys. None --process-definition-key text Restricts to incidents that have the given processDefinitionKey. None --process-definition-id text Restricts to incidents that belong to a process definition with the given id. None --incident-message-like text Restricts to incidents that incidents message is a substring of the given value. The string can include the wildcard character '%' to express like-strategy: starts with (string%), ends with (%string) or contains (%string%). None --incident-message text Restricts to incidents that have the given incident message. None --incident-type text Restricts to incidents that belong to the given incident type. See the [User Guide](/manual/develop/user-guide/process-engine/incidents/#incident-types) for a list of incident types. None --incident-id text Restricts to incidents that have the given id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicIncidentsCount \u00b6 Get Incident Count Queries for the number of historic incidents that fulfill the given parameters. Takes the same parameters as the Get Incidents method. URL: /history/incident/count Schema: - Usage: cctl&nbsp;get historicIncidentsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --job-definition-id-in text Restricts to incidents that have one of the given comma-separated job definition ids. None --without-tenant-id / --not-without-tenant-id boolean Only include historic incidents that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Restricts to incidents that have one of the given comma-separated tenant ids. None --deleted / --not-deleted boolean Restricts to incidents that are deleted. None --resolved / --not-resolved boolean Restricts to incidents that are resolved. None --open / --not-open boolean Restricts to incidents that are open. None --history-configuration text Restricts to incidents that have the given parameter set as history configuration. None --configuration text Restricts to incidents that have the given parameter set as configuration. None --root-cause-incident-id text Restricts to incidents that have the given incident id as root cause incident. None --cause-incident-id text Restricts to incidents that have the given incident id as cause incident. None --failed-activity-id text Restricts to incidents that were created due to the failure of an activity with the given id. None --activity-id text Restricts to incidents that belong to an activity with the given id. None --end-time-after text Restricts to incidents that have an endTimeAfter date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --end-time-before text Restricts to incidents that have an endTimeBefore date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --create-time-after text Restricts to incidents that have a createTime date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --create-time-before text Restricts to incidents that have a createTime date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --execution-id text Restricts to incidents that belong to an execution with the given id. None --process-instance-id text Restricts to incidents that belong to a process instance with the given id. None --process-definition-key-in text Restricts to incidents that have one of the given process definition keys. None --process-definition-key text Restricts to incidents that have the given processDefinitionKey. None --process-definition-id text Restricts to incidents that belong to a process definition with the given id. None --incident-message-like text Restricts to incidents that incidents message is a substring of the given value. The string can include the wildcard character '%' to express like-strategy: starts with (string%), ends with (%string) or contains (%string%). None --incident-message text Restricts to incidents that have the given incident message. None --incident-type text Restricts to incidents that belong to the given incident type. See the [User Guide](/manual/develop/user-guide/process-engine/incidents/#incident-types) for a list of incident types. None --incident-id text Restricts to incidents that have the given id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicJobLog \u00b6 Get Job Log Retrieves a historic job log by id. URL: /history/job-log/{id} Schema: - Usage: cctl&nbsp;get historicJobLog [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicJobLogs \u00b6 Get Job Logs Queries for historic job logs that fulfill the given parameters. The size of the result set can be retrieved by using the Get Job Log Count method. URL: /history/job-log Schema: - Usage: cctl&nbsp;get historicJobLogs [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --deletion-log / --not-deletion-log boolean Only include deletion logs. Value may only be true , as false is the default behavior. None --success-log / --not-success-log boolean Only include success logs. Value may only be true , as false is the default behavior. None --failure-log / --not-failure-log boolean Only include failure logs. Value may only be true , as false is the default behavior. None --creation-log / --not-creation-log boolean Only include creation logs. Value may only be true , as false is the default behavior. None --job-priority-higher-than-or-equals text Only include logs for which the associated job had a priority higher than or equal to the given value. Value must be a valid long value. None --job-priority-lower-than-or-equals text Only include logs for which the associated job had a priority lower than or equal to the given value. Value must be a valid long value. None --hostname text Filter by hostname. None --without-tenant-id / --not-without-tenant-id boolean Only include historic job log entries that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Only include historic job log entries which belong to one of the passed and comma- separated tenant ids. None --deployment-id text Filter by deployment id. None --process-definition-key text Filter by process definition key. None --process-definition-id text Filter by process definition id. None --process-instance-id text Filter by process instance id. None --execution-id-in text Only include historic job logs which belong to one of the passed execution ids. None --failed-activity-id-in text Only include historic job logs which belong to failures of one of the passed activity ids. None --activity-id-in text Only include historic job logs which belong to one of the passed activity ids. None --job-definition-configuration text Filter by job definition configuration. None --job-definition-type text Filter by job definition type. See the User Guide for more information about job definition types. None --job-definition-id text Filter by job definition id. None --job-exception-message text Filter by job exception message. None --job-id text Filter by job id. None --log-id text Filter by historic job log id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicJobLogsCount \u00b6 Get Job Log Count Queries for the number of historic job logs that fulfill the given parameters. Takes the same parameters as the Get Job Logs method. URL: /history/job-log/count Schema: - Usage: cctl&nbsp;get historicJobLogsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deletion-log / --not-deletion-log boolean Only include deletion logs. Value may only be true , as false is the default behavior. None --success-log / --not-success-log boolean Only include success logs. Value may only be true , as false is the default behavior. None --failure-log / --not-failure-log boolean Only include failure logs. Value may only be true , as false is the default behavior. None --creation-log / --not-creation-log boolean Only include creation logs. Value may only be true , as false is the default behavior. None --job-priority-higher-than-or-equals text Only include logs for which the associated job had a priority higher than or equal to the given value. Value must be a valid long value. None --job-priority-lower-than-or-equals text Only include logs for which the associated job had a priority lower than or equal to the given value. Value must be a valid long value. None --hostname text Filter by hostname. None --without-tenant-id / --not-without-tenant-id boolean Only include historic job log entries that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Only include historic job log entries which belong to one of the passed and comma- separated tenant ids. None --deployment-id text Filter by deployment id. None --process-definition-key text Filter by process definition key. None --process-definition-id text Filter by process definition id. None --process-instance-id text Filter by process instance id. None --execution-id-in text Only include historic job logs which belong to one of the passed execution ids. None --failed-activity-id-in text Only include historic job logs which belong to failures of one of the passed activity ids. None --activity-id-in text Only include historic job logs which belong to one of the passed activity ids. None --job-definition-configuration text Filter by job definition configuration. None --job-definition-type text Filter by job definition type. See the User Guide for more information about job definition types. None --job-definition-id text Filter by job definition id. None --job-exception-message text Filter by job exception message. None --job-id text Filter by job id. None --log-id text Filter by historic job log id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicProcessInstance \u00b6 Get Retrieves a historic process instance by id, according to the HistoricProcessInstance interface in the engine. URL: /history/process-instance/{id} Schema: - Usage: cctl&nbsp;get historicProcessInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicProcessInstanceDurationReport \u00b6 Get Duration Report Retrieves a report about the duration of completed process instances, grouped by a period. These reports include the maximum, minimum and average duration of all completed process instances which were started in a given period. Note: This only includes historic data. URL: /history/process-instance/report Schema: - Usage: cctl&nbsp;get historicProcessInstanceDurationReport [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --started-after text Restrict to instances that were started after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2016-01-23T14:42:45.000+0200 . None --started-before text Restrict to instances that were started before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2016-01-23T14:42:45.000+0200 . None --process-definition-key-in text Filter by process definition keys. Must be a comma-separated list of process definition keys. None --process-definition-id-in text Filter by process definition ids. Must be a comma-separated list of process definition ids. None --period-unit text Mandatory. Specifies the granularity of the report. Valid values are month and quarter . None --report-type text Mandatory. Specifies the type of the report to retrieve. To retrieve a report about the duration of process instances, the value must be set to duration . None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicProcessInstances \u00b6 Get List Queries for historic process instances that fulfill the given parameters. The size of the result set can be retrieved by using the Get Process Instance Count method. URL: /history/process-instance Schema: - Usage: cctl&nbsp;get historicProcessInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match all variable values provided in variables case-insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match all variable names provided in variables case-insensitively. If set to true variableName and variablename are treated as equal. None --variables text Only include process instances that have/had variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . Key and value may not contain underscore or comma characters. | None | | --internally-terminated / --not-internally-terminated | boolean | Restrict to instances that are internallyTerminated. | None | | --externally-terminated / --not-externally-terminated | boolean | Restrict to instances that are externallyTerminated. | None | | --completed / --not-completed | boolean | Restrict to instances that are completed. | None | | --suspended / --not-suspended | boolean | Restrict to instances that are suspended. | None | | --active / --not-active | boolean | Restrict to instances that are active. | None | | --active-activity-id-in | text | Restrict to instances that have an active activity with one of given ids. Filter by a comma-separated list of Strings | None | | --executed-activity-id-in | text | Restrict to instances that executed an activity with one of given ids. Filter by a comma-separated list of Strings | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include historic process instances which belong to no tenant. Value may only be true , as false is the default behavior. | None | | --tenant-id-in | text | Filter by a list of tenant ids. A process instance must have one of the given tenant ids. Filter by a comma-separated list of Strings | None | | --case-instance-id | text | Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id. | None | | --sub-case-instance-id | text | Restrict query to one process instance that has a sub case instance with the given id. | None | | --super-case-instance-id | text | Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id. | None | | --sub-process-instance-id | text | Restrict query to one process instance that has a sub process instance with the given id. | None | | --super-process-instance-id | text | Restrict query to all process instances that are sub process instances of the given process instance. Takes a process instance id. | None | | --started-by | text | Only include process instances that were started by the given user. | None | | --executed-job-before | text | Restrict to instances that executed an job before the given date (inclusive). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --executed-job-after | text | Restrict to instances that executed an job after the given date (inclusive). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --executed-activity-before | text | Restrict to instances that executed an activity before the given date (inclusive). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --executed-activity-after | text | Restrict to instances that executed an activity after the given date (inclusive). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --finished-after | text | Restrict to instances that were finished after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --finished-before | text | Restrict to instances that were finished before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --started-after | text | Restrict to instances that were started after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --started-before | text | Restrict to instances that were started before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --incident-message-like | text | Filter by the incident message that the parameter is a substring of. | None | | --incident-message | text | Filter by the incident message. Exact match. | None | | --incident-status | text | Only include process instances which have an incident in status either open or resolved. To get all process instances, use the query parameter withIncidents. | None | | --incident-type | text | Filter by the incident type. See the User Guide for a list of incident types. | None | | --with-root-incidents / --not-with-root-incidents | boolean | Only include process instances which have a root incident. Value may only be true , as false is the default behavior. | None | | --with-incidents / --not-with-incidents | boolean | Only include process instances which have an incident. Value may only be true , as false is the default behavior. | None | | --unfinished / --not-unfinished | boolean | Only include unfinished process instances. Value may only be true , as false is the default behavior. | None | | --finished / --not-finished | boolean | Only include finished process instances. This flag includes all process instances that are completed or terminated. Value may only be true , as false is the default behavior. | None | | --root-process-instances / --not-root-process-instances | boolean | Restrict the query to all process instances that are top level process instances. | None | | --process-instance-business-key-like | text | Filter by process instance business key that the parameter is a substring of. | None | | --process-instance-business-key | text | Filter by process instance business key. | None | | --process-definition-key-not-in | text | Exclude instances that belong to a set of process definitions. Filter by a comma-separated list of Strings . | None | | --process-definition-name-like | text | Filter by process definition names that the parameter is a substring of. | None | | --process-definition-name | text | Filter by the name of the process definition the instances run on. | None | | --process-definition-key-in | text | Filter by a list of process definition keys. A process instance must have one of the given process definition keys. Filter by a comma-separated list of Strings . | None | | --process-definition-key | text | Filter by the key of the process definition the instances run on. | None | | --process-definition-id | text | Filter by the process definition the instances run on. | None | | --process-instance-ids | text | Filter by process instance ids. Filter by a comma-separated list of Strings . | None | | --process-instance-id | text | Filter by process instance id. | None | | --max-results | text | Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. | None | | --first-result | text | Pagination of results. Specifies the index of the first result to return. | None | | --sort-order | text | Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. | None | | --sort-by | text | Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get historicProcessInstancesCount \u00b6 Get List Count Queries for the number of historic process instances that fulfill the given parameters. Takes the same parameters as the Get Process Instances method. URL: /history/process-instance/count Schema: - Usage: cctl&nbsp;get historicProcessInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match all variable values provided in variables case-insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match all variable names provided in variables case-insensitively. If set to true variableName and variablename are treated as equal. None --variables text Only include process instances that have/had variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . Key and value may not contain underscore or comma characters. | None | | --internally-terminated / --not-internally-terminated | boolean | Restrict to instances that are internallyTerminated. | None | | --externally-terminated / --not-externally-terminated | boolean | Restrict to instances that are externallyTerminated. | None | | --completed / --not-completed | boolean | Restrict to instances that are completed. | None | | --suspended / --not-suspended | boolean | Restrict to instances that are suspended. | None | | --active / --not-active | boolean | Restrict to instances that are active. | None | | --active-activity-id-in | text | Restrict to instances that have an active activity with one of given ids. Filter by a comma-separated list of Strings | None | | --executed-activity-id-in | text | Restrict to instances that executed an activity with one of given ids. Filter by a comma-separated list of Strings | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include historic process instances which belong to no tenant. Value may only be true , as false is the default behavior. | None | | --tenant-id-in | text | Filter by a list of tenant ids. A process instance must have one of the given tenant ids. Filter by a comma-separated list of Strings | None | | --case-instance-id | text | Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id. | None | | --sub-case-instance-id | text | Restrict query to one process instance that has a sub case instance with the given id. | None | | --super-case-instance-id | text | Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id. | None | | --sub-process-instance-id | text | Restrict query to one process instance that has a sub process instance with the given id. | None | | --super-process-instance-id | text | Restrict query to all process instances that are sub process instances of the given process instance. Takes a process instance id. | None | | --started-by | text | Only include process instances that were started by the given user. | None | | --executed-job-before | text | Restrict to instances that executed an job before the given date (inclusive). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --executed-job-after | text | Restrict to instances that executed an job after the given date (inclusive). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --executed-activity-before | text | Restrict to instances that executed an activity before the given date (inclusive). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --executed-activity-after | text | Restrict to instances that executed an activity after the given date (inclusive). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --finished-after | text | Restrict to instances that were finished after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --finished-before | text | Restrict to instances that were finished before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --started-after | text | Restrict to instances that were started after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --started-before | text | Restrict to instances that were started before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --incident-message-like | text | Filter by the incident message that the parameter is a substring of. | None | | --incident-message | text | Filter by the incident message. Exact match. | None | | --incident-status | text | Only include process instances which have an incident in status either open or resolved. To get all process instances, use the query parameter withIncidents. | None | | --incident-type | text | Filter by the incident type. See the User Guide for a list of incident types. | None | | --with-root-incidents / --not-with-root-incidents | boolean | Only include process instances which have a root incident. Value may only be true , as false is the default behavior. | None | | --with-incidents / --not-with-incidents | boolean | Only include process instances which have an incident. Value may only be true , as false is the default behavior. | None | | --unfinished / --not-unfinished | boolean | Only include unfinished process instances. Value may only be true , as false is the default behavior. | None | | --finished / --not-finished | boolean | Only include finished process instances. This flag includes all process instances that are completed or terminated. Value may only be true , as false is the default behavior. | None | | --root-process-instances / --not-root-process-instances | boolean | Restrict the query to all process instances that are top level process instances. | None | | --process-instance-business-key-like | text | Filter by process instance business key that the parameter is a substring of. | None | | --process-instance-business-key | text | Filter by process instance business key. | None | | --process-definition-key-not-in | text | Exclude instances that belong to a set of process definitions. Filter by a comma-separated list of Strings . | None | | --process-definition-name-like | text | Filter by process definition names that the parameter is a substring of. | None | | --process-definition-name | text | Filter by the name of the process definition the instances run on. | None | | --process-definition-key-in | text | Filter by a list of process definition keys. A process instance must have one of the given process definition keys. Filter by a comma-separated list of Strings . | None | | --process-definition-key | text | Filter by the key of the process definition the instances run on. | None | | --process-definition-id | text | Filter by the process definition the instances run on. | None | | --process-instance-ids | text | Filter by process instance ids. Filter by a comma-separated list of Strings . | None | | --process-instance-id | text | Filter by process instance id. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get historicTaskInstanceReport \u00b6 Get Task Report (Historic) Retrieves a report of completed tasks. When the report type is set to count , the report contains a list of completed task counts where an entry contains the task name, the definition key of the task, the process definition id, the process definition key, the process definition name and the count of how many tasks were completed for the specified key in a given period. When the report type is set to duration , the report contains a minimum, maximum and average duration value of all completed task instances in a given period. URL: /history/task/report Schema: - Usage: cctl&nbsp;get historicTaskInstanceReport [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --group-by text When the report type is set to count , this parameter is mandatory . Groups the tasks report by a given criterion. Valid values are taskName and processDefinition . None --completed-after text Restrict to tasks that were completed after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --completed-before text Restrict to tasks that were completed before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --period-unit text When the report type is set to duration , this parameter is mandatory . Specifies the granularity of the report. Valid values are month and quarter . None --report-type text Mandatory. Specifies the kind of the report to execute. To retrieve a report about the duration of process instances the value must be set to duration . For a report of the completed tasks in a specific timespan the value must be set to count . None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicTaskInstances \u00b6 Get Tasks (Historic) Queries for historic tasks that fulfill the given parameters. The size of the result set can be retrieved by using the Get Task Count method. URL: /history/task Schema: - Usage: cctl&nbsp;get historicTaskInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --without-candidate-groups / --not-without-candidate-groups boolean Only include tasks which have no candidate group. Value may only be true , as false is the default behavior. None --with-candidate-groups / --not-with-candidate-groups boolean Only include tasks which have a candidate group. Value may only be true , as false is the default behavior. None --task-had-candidate-group text Restrict to tasks with a historic identity link to the given candidate group. None --task-had-candidate-user text Restrict to tasks with a historic identity link to the given candidate user. None --task-involved-group text Restrict to tasks with a historic identity link to the given group. None --task-involved-user text Restrict to tasks with a historic identity link to the given user. None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match the variable value provided in taskVariables and processVariables case- insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match the variable name provided in taskVariables and processVariables case- insensitively. If set to true variableName and variablename are treated as equal. None --process-variables text Only include tasks that belong to process instances that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: * eq - equal to; * neq - not equal to; * gt - greater than; * gteq - greater than or equal to; * lt - lower than; * lteq - lower than or equal to; * like ; * notLike . key and value may not contain underscore or comma characters. | None | | --task-variables | text | Only include tasks that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: * eq - equal to; * neq - not equal to; * gt - greater than; * gteq - greater than or equal to; * lt - lower than; * lteq - lower than or equal to; * like . key and value may not contain underscore or comma characters. | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include historic task instances that belong to no tenant. Value may only be true , as false is the default behavior. | None | | --tenant-id-in | text | Filter by a comma-separated list of tenant ids. A task instance must have one of the given tenant ids. | None | | --finished-after | text | Restrict to tasks that were finished after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --finished-before | text | Restrict to tasks that were finished before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --started-after | text | Restrict to tasks that were started after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --started-before | text | Restrict to tasks that were started before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-follow-up-date-after | text | Restrict to tasks that have a followUp date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-follow-up-date-before | text | Restrict to tasks that have a followUp date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-follow-up-date | text | Restrict to tasks that have a followUp date on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --without-task-due-date / --not-without-task-due-date | boolean | Only include tasks which have no due date. Value may only be true , as false is the default behavior. | None | | --task-due-date-after | text | Restrict to tasks that are due after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-due-date-before | text | Restrict to tasks that are due before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-due-date | text | Restrict to tasks that are due on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --process-unfinished / --not-process-unfinished | boolean | Only include tasks of unfinished processes. Value may only be true , as false is the default behavior. | None | | --process-finished / --not-process-finished | boolean | Only include tasks of finished processes. Value may only be true , as false is the default behavior. | None | | --unfinished / --not-unfinished | boolean | Only include unfinished tasks. Value may only be true , as false is the default behavior. | None | | --finished / --not-finished | boolean | Only include finished tasks. Value may only be true , as false is the default behavior. | None | | --unassigned / --not-unassigned | boolean | If set to true , restricts the query to all tasks that are unassigned. | None | | --assigned / --not-assigned | boolean | If set to true , restricts the query to all tasks that are assigned. | None | | --task-priority | text | Restrict to tasks that have the given priority. | None | | --task-owner-like | text | Restrict to tasks that are owned by users with the parameter value as a substring. | None | | --task-owner | text | Restrict to tasks that the given user owns. | None | | --task-assignee-like | text | Restrict to tasks that are assigned to users with the parameter value as a substring. | None | | --task-assignee | text | Restrict to tasks that the given user is assigned to. | None | | --task-delete-reason-like | text | Restrict to tasks that have a delete reason that has the parameter value as a substring. | None | | --task-delete-reason | text | Restrict to tasks that have the given delete reason. | None | | --task-definition-key-in | text | Restrict to tasks that have one of the passed comma-separated task definition keys. | None | | --task-definition-key | text | Restrict to tasks that have the given key. | None | | --task-description-like | text | Restrict to tasks that have a description that has the parameter value as a substring. | None | | --task-description | text | Restrict to tasks that have the given description. | None | | --task-name-like | text | Restrict to tasks that have a name with the given parameter value as substring. | None | | --task-name | text | Restrict to tasks that have the given name. | None | | --activity-instance-id-in | text | Only include tasks which belong to one of the passed comma-separated activity instance ids. | None | | --case-definition-name | text | Restrict to tasks that belong to a case definition with the given name. | None | | --case-definition-key | text | Restrict to tasks that belong to a case definition with the given key. | None | | --case-definition-id | text | Filter by case definition id. | None | | --case-execution-id | text | Filter by the id of the case execution that executed the task. | None | | --case-instance-id | text | Filter by case instance id. | None | | --process-definition-name | text | Restrict to tasks that belong to a process definition with the given name. | None | | --process-definition-key | text | Restrict to tasks that belong to a process definition with the given key. | None | | --process-definition-id | text | Filter by process definition id. | None | | --execution-id | text | Filter by the id of the execution that executed the task. | None | | --process-instance-business-key-like | text | Filter by process instance business key that has the parameter value as a substring. | None | | --process-instance-business-key-in | text | Filter by process instances with one of the give business keys. The keys need to be in a comma-separated list. | None | | --process-instance-business-key | text | Filter by process instance business key. | None | | --process-instance-id | text | Filter by process instance id. | None | | --task-parent-task-id | text | Filter by parent task id. | None | | --task-id | text | Filter by task id. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get historicTaskInstancesCount \u00b6 Get Task Count Queries for the number of historic tasks that fulfill the given parameters. Takes the same parameters as the Get Tasks (Historic) method. URL: /history/task/count Schema: - Usage: cctl&nbsp;get historicTaskInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --without-candidate-groups / --not-without-candidate-groups boolean Only include tasks which have no candidate group. Value may only be true , as false is the default behavior. None --with-candidate-groups / --not-with-candidate-groups boolean Only include tasks which have a candidate group. Value may only be true , as false is the default behavior. None --task-had-candidate-group text Restrict to tasks with a historic identity link to the given candidate group. None --task-had-candidate-user text Restrict to tasks with a historic identity link to the given candidate user. None --task-involved-group text Restrict to tasks with a historic identity link to the given group. None --task-involved-user text Restrict to tasks with a historic identity link to the given user. None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match the variable value provided in taskVariables and processVariables case- insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match the variable name provided in taskVariables and processVariables case- insensitively. If set to true variableName and variablename are treated as equal. None --process-variables text Only include tasks that belong to process instances that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: * eq - equal to; * neq - not equal to; * gt - greater than; * gteq - greater than or equal to; * lt - lower than; * lteq - lower than or equal to; * like ; * notLike . key and value may not contain underscore or comma characters. | None | | --task-variables | text | Only include tasks that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: * eq - equal to; * neq - not equal to; * gt - greater than; * gteq - greater than or equal to; * lt - lower than; * lteq - lower than or equal to; * like . key and value may not contain underscore or comma characters. | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include historic task instances that belong to no tenant. Value may only be true , as false is the default behavior. | None | | --tenant-id-in | text | Filter by a comma-separated list of tenant ids. A task instance must have one of the given tenant ids. | None | | --finished-after | text | Restrict to tasks that were finished after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --finished-before | text | Restrict to tasks that were finished before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --started-after | text | Restrict to tasks that were started after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --started-before | text | Restrict to tasks that were started before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-follow-up-date-after | text | Restrict to tasks that have a followUp date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-follow-up-date-before | text | Restrict to tasks that have a followUp date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-follow-up-date | text | Restrict to tasks that have a followUp date on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --without-task-due-date / --not-without-task-due-date | boolean | Only include tasks which have no due date. Value may only be true , as false is the default behavior. | None | | --task-due-date-after | text | Restrict to tasks that are due after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-due-date-before | text | Restrict to tasks that are due before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-due-date | text | Restrict to tasks that are due on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --process-unfinished / --not-process-unfinished | boolean | Only include tasks of unfinished processes. Value may only be true , as false is the default behavior. | None | | --process-finished / --not-process-finished | boolean | Only include tasks of finished processes. Value may only be true , as false is the default behavior. | None | | --unfinished / --not-unfinished | boolean | Only include unfinished tasks. Value may only be true , as false is the default behavior. | None | | --finished / --not-finished | boolean | Only include finished tasks. Value may only be true , as false is the default behavior. | None | | --unassigned / --not-unassigned | boolean | If set to true , restricts the query to all tasks that are unassigned. | None | | --assigned / --not-assigned | boolean | If set to true , restricts the query to all tasks that are assigned. | None | | --task-priority | text | Restrict to tasks that have the given priority. | None | | --task-owner-like | text | Restrict to tasks that are owned by users with the parameter value as a substring. | None | | --task-owner | text | Restrict to tasks that the given user owns. | None | | --task-assignee-like | text | Restrict to tasks that are assigned to users with the parameter value as a substring. | None | | --task-assignee | text | Restrict to tasks that the given user is assigned to. | None | | --task-delete-reason-like | text | Restrict to tasks that have a delete reason that has the parameter value as a substring. | None | | --task-delete-reason | text | Restrict to tasks that have the given delete reason. | None | | --task-definition-key-in | text | Restrict to tasks that have one of the passed comma-separated task definition keys. | None | | --task-definition-key | text | Restrict to tasks that have the given key. | None | | --task-description-like | text | Restrict to tasks that have a description that has the parameter value as a substring. | None | | --task-description | text | Restrict to tasks that have the given description. | None | | --task-name-like | text | Restrict to tasks that have a name with the given parameter value as substring. | None | | --task-name | text | Restrict to tasks that have the given name. | None | | --activity-instance-id-in | text | Only include tasks which belong to one of the passed comma-separated activity instance ids. | None | | --case-definition-name | text | Restrict to tasks that belong to a case definition with the given name. | None | | --case-definition-key | text | Restrict to tasks that belong to a case definition with the given key. | None | | --case-definition-id | text | Filter by case definition id. | None | | --case-execution-id | text | Filter by the id of the case execution that executed the task. | None | | --case-instance-id | text | Filter by case instance id. | None | | --process-definition-name | text | Restrict to tasks that belong to a process definition with the given name. | None | | --process-definition-key | text | Restrict to tasks that belong to a process definition with the given key. | None | | --process-definition-id | text | Filter by process definition id. | None | | --execution-id | text | Filter by the id of the execution that executed the task. | None | | --process-instance-business-key-like | text | Filter by process instance business key that has the parameter value as a substring. | None | | --process-instance-business-key-in | text | Filter by process instances with one of the give business keys. The keys need to be in a comma-separated list. | None | | --process-instance-business-key | text | Filter by process instance business key. | None | | --process-instance-id | text | Filter by process instance id. | None | | --task-parent-task-id | text | Filter by parent task id. | None | | --task-id | text | Filter by task id. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get historicVariableInstance \u00b6 Get Variable Instance Retrieves a historic variable by id. URL: /history/variable-instance/{id} Schema: - Usage: cctl&nbsp;get historicVariableInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get historicVariableInstanceBinary \u00b6 Get Variable Instance (Binary) Retrieves the content of a historic variable by id. Applicable for variables that are serialized as binary data. URL: /history/variable-instance/{id}/data Schema: - Usage: cctl&nbsp;get historicVariableInstanceBinary [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historicVariableInstances \u00b6 Get Variable Instances Queries for historic variable instances that fulfill the given parameters. The size of the result set can be retrieved by using the Get Variable Instance Count method. URL: /history/variable-instance Schema: - Usage: cctl&nbsp;get historicVariableInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --max-results | text | Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. | None | | --first-result | text | Pagination of results. Specifies the index of the first result to return. | None | | --sort-order | text | Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. | None | | --sort-by | text | Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include historic variable instances that belong to no tenant. Value may only be true , as false is the default behavior. | None | | --tenant-id-in | text | Only include historic variable instances which belong to one of the passed and comma- separated tenant ids. | None | | --activity-instance-id-in | text | Only include historic variable instances which belong to one of the passed and and comma-separated activity instance ids. | None | | --task-id-in | text | Only include historic variable instances which belong to one of the passed and and comma-separated task ids. | None | | --case-activity-id-in | text | Only include historic variable instances which belong to one of the passed and and comma-separated case activity ids. | None | | --case-execution-id-in | text | Only include historic variable instances which belong to one of the passed and and comma-separated case execution ids. | None | | --case-instance-id | text | Filter by the case instance the variable belongs to. | None | | --execution-id-in | text | Only include historic variable instances which belong to one of the passed and and comma-separated execution ids. | None | | --process-definition-key | text | Filter by a key of the process definition the variable belongs to. | None | | --process-definition-id | text | Filter by the process definition the variable belongs to. | None | | --process-instance-id-in | text | Only include historic variable instances which belong to one of the passed and comma-separated process instance ids. | None | | --process-instance-id | text | Filter by the process instance the variable belongs to. | None | | --include-deleted / --not-include-deleted | boolean | Include variables that has already been deleted during the execution. | None | | --variable-type-in | text | Only include historic variable instances which belong to one of the passed and comma- separated variable types. A list of all supported variable types can be found here . Note: All non-primitive variables are associated with the type 'serializable'. | None | | --variable-values-ignore-case / --not-variable-values-ignore-case | boolean | Match the variable value provided in variableValue case-insensitively. If set to true variableValue and variablevalue are treated as equal. | None | | --variable-names-ignore-case / --not-variable-names-ignore-case | boolean | Match the variable name provided in variableName and variableNameLike case- insensitively. If set to true variableName and variablename are treated as equal. | None | | --variable-value | text | Filter by variable value. Is treated as a String object on server side. | None | | --variable-name-like | text | Restrict to variables with a name like the parameter. | None | | --variable-name | text | Filter by variable name. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get historicVariableInstancesCount \u00b6 Get Variable Instance Count Queries for the number of historic variable instances that fulfill the given parameters. Takes the same parameters as the Get Variable Instances method. URL: /history/variable-instance/count Schema: - Usage: cctl&nbsp;get historicVariableInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --without-tenant-id / --not-without-tenant-id boolean Only include historic variable instances that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Only include historic variable instances which belong to one of the passed and comma- separated tenant ids. None --activity-instance-id-in text Only include historic variable instances which belong to one of the passed and and comma-separated activity instance ids. None --task-id-in text Only include historic variable instances which belong to one of the passed and and comma-separated task ids. None --case-activity-id-in text Only include historic variable instances which belong to one of the passed and and comma-separated case activity ids. None --case-execution-id-in text Only include historic variable instances which belong to one of the passed and and comma-separated case execution ids. None --case-instance-id text Filter by the case instance the variable belongs to. None --execution-id-in text Only include historic variable instances which belong to one of the passed and and comma-separated execution ids. None --process-definition-key text Filter by a key of the process definition the variable belongs to. None --process-definition-id text Filter by the process definition the variable belongs to. None --process-instance-id-in text Only include historic variable instances which belong to one of the passed and comma-separated process instance ids. None --process-instance-id text Filter by the process instance the variable belongs to. None --include-deleted / --not-include-deleted boolean Include variables that has already been deleted during the execution. None --variable-type-in text Only include historic variable instances which belong to one of the passed and comma- separated variable types. A list of all supported variable types can be found here . Note: All non-primitive variables are associated with the type 'serializable'. None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match the variable value provided in variableValue case-insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match the variable name provided in variableName and variableNameLike case- insensitively. If set to true variableName and variablename are treated as equal. None --variable-value text Filter by variable value. Is treated as a String object on server side. None --variable-name-like text Restrict to variables with a name like the parameter. None --variable-name text Filter by variable name. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get historyCleanupConfiguration \u00b6 Get History Cleanup Configuration Retrieves history cleanup batch window configuration (See History cleanup ). URL: /history/cleanup/configuration Schema: - Usage: cctl&nbsp;get historyCleanupConfiguration [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get identityLinks \u00b6 Get List Gets the identity links for a task by id, which are the users and groups that are in some relation to it (including assignee and owner). URL: /task/{id}/identity-links Schema: - Usage: cctl&nbsp;get identityLinks [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --type text Filter by the type of links to include. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get incident \u00b6 Get Incident Retrieves an incident by ID. URL: /incident/{id} Schema: - Usage: cctl&nbsp;get incident [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get incidents \u00b6 Get List Queries for incidents that fulfill given parameters. The size of the result set can be retrieved by using the Get Incident Count method. URL: /incident Schema: - Usage: cctl&nbsp;get incidents [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --job-definition-id-in text Restricts to incidents that have one of the given comma-separated job definition ids. None --tenant-id-in text Restricts to incidents that have one of the given comma-separated tenant ids. None --configuration text Restricts to incidents that have the given parameter set as configuration. None --root-cause-incident-id text Restricts to incidents that have the given incident id as root cause incident. None --cause-incident-id text Restricts to incidents that have the given incident id as cause incident. None --failed-activity-id text Restricts to incidents that were created due to the failure of an activity with the given id. None --activity-id text Restricts to incidents that belong to an activity with the given id. None --incident-timestamp-after text Restricts to incidents that have an incidentTimestamp date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --incident-timestamp-before text Restricts to incidents that have an incidentTimestamp date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --execution-id text Restricts to incidents that belong to an execution with the given id. None --process-instance-id text Restricts to incidents that belong to a process instance with the given id. None --process-definition-key-in text Restricts to incidents that belong to a process definition with the given keys. Must be a comma-separated list. None --process-definition-id text Restricts to incidents that belong to a process definition with the given id. None --incident-message-like text Restricts to incidents that incidents message is a substring of the given value. The string can include the wildcard character '%' to express like-strategy: starts with ( string% ), ends with ( %string ) or contains ( %string% ). None --incident-message text Restricts to incidents that have the given incident message. None --incident-type text Restricts to incidents that belong to the given incident type. See the User Guide for a list of incident types. None --incident-id text Restricts to incidents that have the given id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get incidentsCount \u00b6 Get List Count Queries for the number of incidents that fulfill given parameters. Takes the same parameters as the Get Incidents method. URL: /incident/count Schema: - Usage: cctl&nbsp;get incidentsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --job-definition-id-in text Restricts to incidents that have one of the given comma-separated job definition ids. None --tenant-id-in text Restricts to incidents that have one of the given comma-separated tenant ids. None --configuration text Restricts to incidents that have the given parameter set as configuration. None --root-cause-incident-id text Restricts to incidents that have the given incident id as root cause incident. None --cause-incident-id text Restricts to incidents that have the given incident id as cause incident. None --failed-activity-id text Restricts to incidents that were created due to the failure of an activity with the given id. None --activity-id text Restricts to incidents that belong to an activity with the given id. None --incident-timestamp-after text Restricts to incidents that have an incidentTimestamp date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --incident-timestamp-before text Restricts to incidents that have an incidentTimestamp date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --execution-id text Restricts to incidents that belong to an execution with the given id. None --process-instance-id text Restricts to incidents that belong to a process instance with the given id. None --process-definition-key-in text Restricts to incidents that belong to a process definition with the given keys. Must be a comma-separated list. None --process-definition-id text Restricts to incidents that belong to a process definition with the given id. None --incident-message-like text Restricts to incidents that incidents message is a substring of the given value. The string can include the wildcard character '%' to express like-strategy: starts with ( string% ), ends with ( %string ) or contains ( %string% ). None --incident-message text Restricts to incidents that have the given incident message. None --incident-type text Restricts to incidents that belong to the given incident type. See the User Guide for a list of incident types. None --incident-id text Restricts to incidents that have the given id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get interval \u00b6 Get Metrics in Interval Retrieves a list of metrics, aggregated for a given interval. URL: /metrics Schema: - Usage: cctl&nbsp;get interval [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --aggregate-by-reporter text Aggregate metrics by reporter. None --interval text The interval for which the metrics should be aggregated. Time unit is seconds. Default: The interval is set to 15 minutes (900 seconds). None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --end-date text The end date (exclusive). None --start-date text The start date (inclusive). None --reporter text The name of the reporter (host), on which the metrics was logged. This will have value provided by the hostname configuration property . None --name text The name of the metric. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get isUserAuthorized \u00b6 Perform an Authorization Check Performs an authorization check for the currently authenticated user. URL: /authorization/check Schema: - Usage: cctl&nbsp;get isUserAuthorized [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --user-id text The id of the user to check permissions for. The currently authenticated user must have a READ permission for the Authorization resource. If userId is blank, a check for the currently authenticated user is performed. None --resource-id text The id of the resource to check permissions for. If left blank, a check for global permissions on the resource is performed. None --resource-type text An integer representing the resource type to check permissions for. See the User Guide for a list of integer representations of resource types. None --resource-name text String value for the name of the resource to check permissions for. None --permission-name text String value representing the permission name to check for. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get job \u00b6 Get Job Retrieves a job by id, according to the Job interface in the engine. URL: /job/{id} Schema: - Usage: cctl&nbsp;get job [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get jobDefinition \u00b6 Get Job Definition Retrieves a job definition by id, according to the JobDefinition interface in the engine. URL: /job-definition/{id} Schema: - Usage: cctl&nbsp;get jobDefinition [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get jobDefinitions \u00b6 Get Job Definitions Queries for job definitions that fulfill given parameters. The size of the result set can be retrieved by using the Get Job Definition Count method. URL: /job-definition Schema: - Usage: cctl&nbsp;get jobDefinitions [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --include-job-definitions-without-tenant-id / --not-include-job-definitions-without-tenant-id boolean Include job definitions which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include job definitions which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Only include job definitions which belong to one of the passed and comma-separated tenant ids. None --with-overriding-job-priority / --not-with-overriding-job-priority boolean Only include job definitions that have an overriding job priority defined. The only effective value is true . If set to false , this filter is not applied. None --suspended / --not-suspended boolean Only include suspended job definitions. Value may only be true , as false is the default behavior. None --active / --not-active boolean Only include active job definitions. Value may only be true , as false is the default behavior. None --job-configuration text Only include job definitions which exist for the given job configuration. For example: for timer jobs it is the timer configuration. None --job-type text Only include job definitions which exist for the given job type. See the User Guide for more information about job types. None --process-definition-key text Only include job definitions which exist for the given process definition key. None --process-definition-id text Only include job definitions which exist for the given process definition id. None --activity-id-in text Only include job definitions which belong to one of the passed and comma-separated activity ids. None --job-definition-id text Filter by job definition id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get jobDefinitionsCount \u00b6 Get Job Definition Count Queries for the number of job definitions that fulfill given parameters. Takes the same parameters as the Get Job Definitions method. URL: /job-definition/count Schema: - Usage: cctl&nbsp;get jobDefinitionsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --include-job-definitions-without-tenant-id / --not-include-job-definitions-without-tenant-id boolean Include job definitions which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include job definitions which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Only include job definitions which belong to one of the passed and comma-separated tenant ids. None --with-overriding-job-priority / --not-with-overriding-job-priority boolean Only include job definitions that have an overriding job priority defined. The only effective value is true . If set to false , this filter is not applied. None --suspended / --not-suspended boolean Only include suspended job definitions. Value may only be true , as false is the default behavior. None --active / --not-active boolean Only include active job definitions. Value may only be true , as false is the default behavior. None --job-configuration text Only include job definitions which exist for the given job configuration. For example: for timer jobs it is the timer configuration. None --job-type text Only include job definitions which exist for the given job type. See the User Guide for more information about job types. None --process-definition-key text Only include job definitions which exist for the given process definition key. None --process-definition-id text Only include job definitions which exist for the given process definition id. None --activity-id-in text Only include job definitions which belong to one of the passed and comma-separated activity ids. None --job-definition-id text Filter by job definition id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get jobs \u00b6 Get Jobs Queries for jobs that fulfill given parameters. The size of the result set can be retrieved by using the Get Job Count method. URL: /job Schema: - Usage: cctl&nbsp;get jobs [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --include-jobs-without-tenant-id / --not-include-jobs-without-tenant-id boolean Include jobs which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include jobs which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Only include jobs which belong to one of the passed comma-separated tenant ids. None --priority-higher-than-or-equals text Only include jobs with a priority higher than or equal to the given value. Value must be a valid long value. None --priority-lower-than-or-equals text Only include jobs with a priority lower than or equal to the given value. Value must be a valid long value. None --suspended / --not-suspended boolean Only include suspended jobs. Value may only be true , as false is the default behavior. None --active / --not-active boolean Only include active jobs. Value may only be true , as false is the default behavior. None --no-retries-left / --not-no-retries-left boolean Only select jobs which have no retries left. Value may only be true , as false is the default behavior. None --failed-activity-id text Only select jobs that failed due to an exception at an activity with the given id. None --exception-message text Only select jobs that failed due to an exception with the given message. None --with-exception / --not-with-exception boolean Only select jobs that failed due to an exception. Value may only be true , as false is the default behavior. None --create-times text Only select jobs created before or after the given date. Create time expressions are comma-separated and are structured as follows: A valid condition value has the form operator_value . operator is the comparison operator to be used and value the date value as string. Valid operator values are: gt - greater than; lt - lower than. value may not contain underscore or comma characters. | None | | --due-dates | text | Only select jobs where the due date is lower or higher than the given date. Due date expressions are comma-separated and are structured as follows: A valid condition value has the form operator_value . operator is the comparison operator to be used and value the date value as string. Valid operator values are: gt - greater than; lt - lower than. value may not contain underscore or comma characters. | None | | --messages / --not-messages | boolean | Only select jobs that are messages. Cannot be used together with timers . Value may only be true , as false is the default behavior. | None | | --timers / --not-timers | boolean | Only select jobs that are timers. Cannot be used together with messages . Value may only be true , as false is the default behavior. | None | | --executable / --not-executable | boolean | Only select jobs which are executable, i.e., retries > 0 and due date is null or due date is in the past. Value may only be true , as false is the default behavior. | None | | --with-retries-left / --not-with-retries-left | boolean | Only select jobs which have retries left. Value may only be true , as false is the default behavior. | None | | --activity-id | text | Only select jobs which exist for an activity with the given id. | None | | --process-definition-key | text | Filter by the key of the process definition the jobs run on. | None | | --process-definition-id | text | Filter by the id of the process definition the jobs run on. | None | | --execution-id | text | Only select jobs which exist for the given execution. | None | | --process-instance-ids | text | Only select jobs which exist for the given comma-separated list of process instance ids. | None | | --process-instance-id | text | Only select jobs which exist for the given process instance. | None | | --job-definition-id | text | Only select jobs which exist for the given job definition. | None | | --job-ids | text | Filter by a comma-separated list of job ids. | None | | --job-id | text | Filter by job id. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get jobsCount \u00b6 Get Job Count Queries for the number of jobs that fulfill given parameters. Takes the same parameters as the Get Jobs method. URL: /job/count Schema: - Usage: cctl&nbsp;get jobsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --include-jobs-without-tenant-id / --not-include-jobs-without-tenant-id boolean Include jobs which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include jobs which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Only include jobs which belong to one of the passed comma-separated tenant ids. None --priority-higher-than-or-equals text Only include jobs with a priority higher than or equal to the given value. Value must be a valid long value. None --priority-lower-than-or-equals text Only include jobs with a priority lower than or equal to the given value. Value must be a valid long value. None --suspended / --not-suspended boolean Only include suspended jobs. Value may only be true , as false is the default behavior. None --active / --not-active boolean Only include active jobs. Value may only be true , as false is the default behavior. None --no-retries-left / --not-no-retries-left boolean Only select jobs which have no retries left. Value may only be true , as false is the default behavior. None --failed-activity-id text Only select jobs that failed due to an exception at an activity with the given id. None --exception-message text Only select jobs that failed due to an exception with the given message. None --with-exception / --not-with-exception boolean Only select jobs that failed due to an exception. Value may only be true , as false is the default behavior. None --create-times text Only select jobs created before or after the given date. Create time expressions are comma-separated and are structured as follows: A valid condition value has the form operator_value . operator is the comparison operator to be used and value the date value as string. Valid operator values are: gt - greater than; lt - lower than. value may not contain underscore or comma characters. | None | | --due-dates | text | Only select jobs where the due date is lower or higher than the given date. Due date expressions are comma-separated and are structured as follows: A valid condition value has the form operator_value . operator is the comparison operator to be used and value the date value as string. Valid operator values are: gt - greater than; lt - lower than. value may not contain underscore or comma characters. | None | | --messages / --not-messages | boolean | Only select jobs that are messages. Cannot be used together with timers . Value may only be true , as false is the default behavior. | None | | --timers / --not-timers | boolean | Only select jobs that are timers. Cannot be used together with messages . Value may only be true , as false is the default behavior. | None | | --executable / --not-executable | boolean | Only select jobs which are executable, i.e., retries > 0 and due date is null or due date is in the past. Value may only be true , as false is the default behavior. | None | | --with-retries-left / --not-with-retries-left | boolean | Only select jobs which have retries left. Value may only be true , as false is the default behavior. | None | | --activity-id | text | Only select jobs which exist for an activity with the given id. | None | | --process-definition-key | text | Filter by the key of the process definition the jobs run on. | None | | --process-definition-id | text | Filter by the id of the process definition the jobs run on. | None | | --execution-id | text | Only select jobs which exist for the given execution. | None | | --process-instance-ids | text | Only select jobs which exist for the given comma-separated list of process instance ids. | None | | --process-instance-id | text | Only select jobs which exist for the given process instance. | None | | --job-definition-id | text | Only select jobs which exist for the given job definition. | None | | --job-ids | text | Filter by a comma-separated list of job ids. | None | | --job-id | text | Filter by job id. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get latestProcessDefinitionByTenantId \u00b6 Get Retrieves the latest version of the process definition for tenant according to the ProcessDefinition interface in the engine. URL: /process-definition/key/{key}/tenant-id/{tenant-id} Schema: - Usage: cctl&nbsp;get latestProcessDefinitionByTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get localExecutionVariable \u00b6 Get Local Execution Variable Retrieves a variable from the context of a given execution by id. Does not traverse the parent execution hierarchy. URL: /execution/{id}/localVariables/{varName} Schema: - Usage: cctl&nbsp;get localExecutionVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-value / --not-deserialize-value boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get localExecutionVariableBinary \u00b6 Get Local Execution Variable (Binary) Retrieves a binary variable from the context of a given execution by id. Does not traverse the parent execution hierarchy. Applicable for byte array and file variables. URL: /execution/{id}/localVariables/{varName}/data Schema: - Usage: cctl&nbsp;get localExecutionVariableBinary [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get localExecutionVariables \u00b6 Get Local Execution Variables Retrieves all variables of a given execution by id. URL: /execution/{id}/localVariables Schema: - Usage: cctl&nbsp;get localExecutionVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get messageEventSubscription \u00b6 Get Message Event Subscription Retrieves a message event subscription for a given execution by id and a message name. URL: /execution/{id}/messageSubscriptions/{messageName} Schema: - Usage: cctl&nbsp;get messageEventSubscription [OPTIONS] MESSAGENAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get metrics \u00b6 Get Sum Retrieves the sum (count) for a given metric. URL: /metrics/{metrics-name}/sum Schema: - Usage: cctl&nbsp;get metrics [OPTIONS] METRICS_NAME Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --end-date text The end date (exclusive). None --start-date text The start date (inclusive). None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get passwordPolicy \u00b6 Get Password Policy A password policy consists of a list of rules that new passwords must follow to be policy compliant. This end point returns a JSON representation of the list of policy rules. More information on password policies in Camunda can be found in the password policy user guide and in the security instructions . URL: /identity/password-policy Schema: - Usage: cctl&nbsp;get passwordPolicy [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get processDefinition \u00b6 Get Retrieves a process definition according to the ProcessDefinition interface in the engine. URL: /process-definition/{id} Schema: - Usage: cctl&nbsp;get processDefinition [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get processDefinitionBpmn20Xml \u00b6 Get XML Retrieves the BPMN 2.0 XML of a process definition. URL: /process-definition/{id}/xml Schema: - Usage: cctl&nbsp;get processDefinitionBpmn20Xml [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get processDefinitionBpmn20XmlByKey \u00b6 Get XML Retrieves latest version the BPMN 2.0 XML of a process definition. URL: /process-definition/key/{key}/xml Schema: - Usage: cctl&nbsp;get processDefinitionBpmn20XmlByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get processDefinitionBpmn20XmlByKeyAndTenantId \u00b6 Get XML Retrieves latest version the BPMN 2.0 XML of a process definition. Returns the XML for the latest version of the process definition for tenant. URL: /process-definition/key/{key}/tenant-id/{tenant-id}/xml Schema: - Usage: cctl&nbsp;get processDefinitionBpmn20XmlByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get processDefinitionByKey \u00b6 Get Retrieves the latest version of the process definition which belongs to no tenant according to the ProcessDefinition interface in the engine. URL: /process-definition/key/{key} Schema: - Usage: cctl&nbsp;get processDefinitionByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get processDefinitionDiagram \u00b6 Get Diagram Retrieves the diagram of a process definition. If the process definition's deployment contains an image resource with the same file name as the process definition, the deployed image will be returned by the Get Diagram endpoint. Example: someProcess.bpmn and someProcess.png . Supported file extentions for the image are: svg , png , jpg , and gif . URL: /process-definition/{id}/diagram Schema: - Usage: cctl&nbsp;get processDefinitionDiagram [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get processDefinitionDiagramByKey \u00b6 Get Diagram Retrieves the diagram for the latest version of the process definition which belongs to no tenant. If the process definition's deployment contains an image resource with the same file name as the process definition, the deployed image will be returned by the Get Diagram endpoint. Example: someProcess.bpmn and someProcess.png . Supported file extentions for the image are: svg , png , jpg , and gif . URL: /process-definition/key/{key}/diagram Schema: - Usage: cctl&nbsp;get processDefinitionDiagramByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get processDefinitionDiagramByKeyAndTenantId \u00b6 Get Diagram Retrieves the diagram for the latest version of the process definition for tenant. If the process definition's deployment contains an image resource with the same file name as the process definition, the deployed image will be returned by the Get Diagram endpoint. Example: someProcess.bpmn and someProcess.png . Supported file extentions for the image are: svg , png , jpg , and gif . URL: /process-definition/key/{key}/tenant-id/{tenant-id}/diagram Schema: - Usage: cctl&nbsp;get processDefinitionDiagramByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get processDefinitionStatistics \u00b6 Get Process Instance Statistics Retrieves runtime statistics of the process engine, grouped by process definitions. These statistics include the number of running process instances, optionally the number of failed jobs and also optionally the number of incidents either grouped by incident types or for a specific incident type. Note : This does not include historic data. URL: /process-definition/statistics Schema: - Usage: cctl&nbsp;get processDefinitionStatistics [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --root-incidents / --not-root-incidents boolean Valid values for this property are true or false . If this property has been set to true the result will include the corresponding number of root incidents for each occurred incident type. If it is set to false , the incidents will not be included in the result. Cannot be used in combination with incidentsForType or incidents . None --incidents-for-type text If this property has been set with any incident type (i.e., a string value) the result will only include the number of incidents for the assigned incident type. Cannot be used in combination with incidents . See the User Guide for a list of incident types. None --incidents / --not-incidents boolean Valid values for this property are true or false . If this property has been set to true the result will include the corresponding number of incidents for each occurred incident type. If it is set to false , the incidents will not be included in the result. Cannot be used in combination with incidentsForType . None --failed-jobs / --not-failed-jobs boolean Whether to include the number of failed jobs in the result or not. Valid values are true or false . None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get processDefinitions \u00b6 Get List Queries for process definitions that fulfill given parameters. Parameters may be the properties of process definitions, such as the name, key or version. The size of the result set can be retrieved by using the Get Definition Count method. URL: /process-definition Schema: - Usage: cctl&nbsp;get processDefinitions [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --startable-permission-check / --not-startable-permission-check boolean Filter by process definitions which the user is allowed to start in Tasklist. If the user doesn't have these permissions the result will be empty list. The permissions are: * CREATE permission for all Process instances * CREATE_INSTANCE and READ permission on Process definition level None --not-startable-in-tasklist / --not-not-startable-in-tasklist boolean Filter by process definitions which are not startable in Tasklist. None --startable-in-tasklist / --not-startable-in-tasklist boolean Filter by process definitions which are startable in Tasklist.. None --without-version-tag / --not-without-version-tag boolean Only include process definitions without a versionTag . None --version-tag-like text Filter by the version tag that the parameter is a substring of. None --version-tag text Filter by the version tag. None --include-process-definitions-without-tenant-id / --not-include-process-definitions-without-tenant-id boolean Include process definitions which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include process definitions which belong to no tenant. Value may only be true, as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A process definition must have one of the given tenant ids. None --incident-message-like text Filter by the incident message that the parameter is a substring of. None --incident-message text Filter by the incident message. Exact match. None --incident-type text Filter by the incident type. See the User Guide for a list of incident types. None --incident-id text Filter by the incident id. None --suspended / --not-suspended boolean Only include suspended process definitions. Value may only be true , as false is the default behavior. None --active / --not-active boolean Only include active process definitions. Value may only be true , as false is the default behavior. None --startable-by text Filter by a user name who is allowed to start the process. None --resource-name-like text Filter by names of those process definition resources that the parameter is a substring of. None --resource-name text Filter by the name of the process definition resource. Exact match. None --latest-version / --not-latest-version boolean Only include those process definitions that are latest versions. Value may only be true , as false is the default behavior. None --version text Filter by process definition version. None --category-like text Filter by process definition categories that the parameter is a substring of. None --category text Filter by process definition category. Exact match. None --key-like text Filter by process definition keys that the parameter is a substring of. None --keys-in text Filter by a comma-separated list of process definition keys. None --key text Filter by process definition key, i.e., the id in the BPMN 2.0 XML. Exact match. None --deployed-at text Filter by the deploy time of the deployment the process definition belongs to. Only selects process definitions that have been deployed at a specific time (exact match). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.546+0200 . None --deployed-after text Filter by the deploy time of the deployment the process definition belongs to. Only selects process definitions that have been deployed after (exclusive) a specific time. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.546+0200 . None --deployment-id text Filter by the deployment the id belongs to. None --name-like text Filter by process definition names that the parameter is a substring of. None --name text Filter by process definition name. None --process-definition-id-in text Filter by a comma-separated list of process definition ids. None --process-definition-id text Filter by process definition id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get processDefinitionsCount \u00b6 Get List Count Requests the number of process definitions that fulfill the query criteria. Takes the same filtering parameters as the Get Definitions method. URL: /process-definition/count Schema: - Usage: cctl&nbsp;get processDefinitionsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --startable-permission-check / --not-startable-permission-check boolean Filter by process definitions which the user is allowed to start in Tasklist. If the user doesn't have these permissions the result will be empty list. The permissions are: * CREATE permission for all Process instances * CREATE_INSTANCE and READ permission on Process definition level None --not-startable-in-tasklist / --not-not-startable-in-tasklist boolean Filter by process definitions which are not startable in Tasklist. None --startable-in-tasklist / --not-startable-in-tasklist boolean Filter by process definitions which are startable in Tasklist.. None --without-version-tag / --not-without-version-tag boolean Only include process definitions without a versionTag . None --version-tag-like text Filter by the version tag that the parameter is a substring of. None --version-tag text Filter by the version tag. None --include-process-definitions-without-tenant-id / --not-include-process-definitions-without-tenant-id boolean Include process definitions which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include process definitions which belong to no tenant. Value may only be true, as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A process definition must have one of the given tenant ids. None --incident-message-like text Filter by the incident message that the parameter is a substring of. None --incident-message text Filter by the incident message. Exact match. None --incident-type text Filter by the incident type. See the User Guide for a list of incident types. None --incident-id text Filter by the incident id. None --suspended / --not-suspended boolean Only include suspended process definitions. Value may only be true , as false is the default behavior. None --active / --not-active boolean Only include active process definitions. Value may only be true , as false is the default behavior. None --startable-by text Filter by a user name who is allowed to start the process. None --resource-name-like text Filter by names of those process definition resources that the parameter is a substring of. None --resource-name text Filter by the name of the process definition resource. Exact match. None --latest-version / --not-latest-version boolean Only include those process definitions that are latest versions. Value may only be true , as false is the default behavior. None --version text Filter by process definition version. None --category-like text Filter by process definition categories that the parameter is a substring of. None --category text Filter by process definition category. Exact match. None --key-like text Filter by process definition keys that the parameter is a substring of. None --keys-in text Filter by a comma-separated list of process definition keys. None --key text Filter by process definition key, i.e., the id in the BPMN 2.0 XML. Exact match. None --deployed-at text Filter by the deploy time of the deployment the process definition belongs to. Only selects process definitions that have been deployed at a specific time (exact match). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.546+0200 . None --deployed-after text Filter by the deploy time of the deployment the process definition belongs to. Only selects process definitions that have been deployed after (exclusive) a specific time. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.546+0200 . None --deployment-id text Filter by the deployment the id belongs to. None --name-like text Filter by process definition names that the parameter is a substring of. None --name text Filter by process definition name. None --process-definition-id-in text Filter by a comma-separated list of process definition ids. None --process-definition-id text Filter by process definition id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get processEngineNames \u00b6 Get List Retrieves the names of all process engines available on your platform. Note : You cannot prepend /engine/{name} to this method. URL: /engine Schema: - Usage: cctl&nbsp;get processEngineNames [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get processInstance \u00b6 Get Process Instance Retrieves a process instance by id, according to the ProcessInstance interface in the engine. URL: /process-instance/{id} Schema: - Usage: cctl&nbsp;get processInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get processInstanceVariable \u00b6 Get Process Variable Retrieves a variable of a given process instance by id. URL: /process-instance/{id}/variables/{varName} Schema: - Usage: cctl&nbsp;get processInstanceVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-value / --not-deserialize-value boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true). If set to true, a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false, a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get processInstanceVariableBinary \u00b6 Get Process Variable (Binary) Retrieves the content of a Process Variable by the Process Instance id and the Process Variable name. Applicable for byte array or file Process Variables. URL: /process-instance/{id}/variables/{varName}/data Schema: - Usage: cctl&nbsp;get processInstanceVariableBinary [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get processInstanceVariables \u00b6 Get Process Variables Retrieves all variables of a given process instance by id. URL: /process-instance/{id}/variables Schema: - Usage: cctl&nbsp;get processInstanceVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true). If set to true, a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false, a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get processInstances \u00b6 Get List Queries for process instances that fulfill given parameters. Parameters may be static as well as dynamic runtime properties of process instances. The size of the result set can be retrieved by using the Get Instance Count method. URL: /process-instance Schema: - Usage: cctl&nbsp;get processInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match all variable values in this query case-insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match all variable names in this query case-insensitively. If set to true variableName and variablename are treated as equal. None --variables text Only include process instances that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note : Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --leaf-process-instances / --not-leaf-process-instances | boolean | Restrict the query to all process instances that are leaf instances. (i.e. don't have any sub instances). | None | | --root-process-instances / --not-root-process-instances | boolean | Restrict the query to all process instances that are top level process instances. | None | | --activity-id-in | text | Filter by a comma-separated list of activity ids. A process instance must currently wait in a leaf activity with one of the given activity ids. | None | | --process-definition-without-tenant-id / --not-process-definition-without-tenant-id | boolean | Only include process instances which process definition has no tenant id. | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include process instances which belong to no tenant. | None | | --tenant-id-in | text | Filter by a comma-separated list of tenant ids. A process instance must have one of the given tenant ids. | None | | --incident-message-like | text | Filter by the incident message that the parameter is a substring of. | None | | --incident-message | text | Filter by the incident message. Exact match. | None | | --incident-type | text | Filter by the incident type. See the User Guide for a list of incident types. | None | | --incident-id | text | Filter by the incident id. | None | | --with-incident / --not-with-incident | boolean | Filter by presence of incidents. Selects only process instances that have an incident. | None | | --suspended / --not-suspended | boolean | Only include suspended process instances. Value may only be true, as false is the default behavior. | None | | --active / --not-active | boolean | Only include active process instances. Value may only be true, as false is the default behavior. | None | | --sub-case-instance | text | Restrict query to all process instances that have the given case instance as a sub case instance. Takes a case instance id. | None | | --super-case-instance | text | Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id. | None | | --sub-process-instance | text | Restrict query to all process instances that have the given process instance as a sub process instance. Takes a process instance id. | None | | --super-process-instance | text | Restrict query to all process instances that are sub process instances of the given process instance. Takes a process instance id. | None | | --deployment-id | text | Filter by the deployment the id belongs to. | None | | --process-definition-key-not-in | text | Exclude instances by a comma-separated list of process definition keys. A process instance must not have one of the given process definition keys. | None | | --process-definition-key-in | text | Filter by a comma-separated list of process definition keys. A process instance must have one of the given process definition keys. | None | | --process-definition-key | text | Filter by the key of the process definition the instances run on. | None | | --process-definition-id | text | Filter by the deployment the id belongs to. | None | | --case-instance-id | text | Filter by case instance id. | None | | --business-key-like | text | Filter by process instance business key that the parameter is a substring of. | None | | --business-key | text | Filter by process instance business key. | None | | --process-instance-ids | text | Filter by a comma-separated list of process instance ids. | None | | --max-results | text | Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. | None | | --first-result | text | Pagination of results. Specifies the index of the first result to return. | None | | --sort-order | text | Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. | None | | --sort-by | text | Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get processInstancesCount \u00b6 Get List Count Queries for the number of process instances that fulfill given parameters. URL: /process-instance/count Schema: - Usage: cctl&nbsp;get processInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match all variable values in this query case-insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match all variable names in this query case-insensitively. If set to true variableName and variablename are treated as equal. None --variables text Only include process instances that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note : Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --leaf-process-instances / --not-leaf-process-instances | boolean | Restrict the query to all process instances that are leaf instances. (i.e. don't have any sub instances). | None | | --root-process-instances / --not-root-process-instances | boolean | Restrict the query to all process instances that are top level process instances. | None | | --activity-id-in | text | Filter by a comma-separated list of activity ids. A process instance must currently wait in a leaf activity with one of the given activity ids. | None | | --process-definition-without-tenant-id / --not-process-definition-without-tenant-id | boolean | Only include process instances which process definition has no tenant id. | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include process instances which belong to no tenant. | None | | --tenant-id-in | text | Filter by a comma-separated list of tenant ids. A process instance must have one of the given tenant ids. | None | | --incident-message-like | text | Filter by the incident message that the parameter is a substring of. | None | | --incident-message | text | Filter by the incident message. Exact match. | None | | --incident-type | text | Filter by the incident type. See the User Guide for a list of incident types. | None | | --incident-id | text | Filter by the incident id. | None | | --with-incident / --not-with-incident | boolean | Filter by presence of incidents. Selects only process instances that have an incident. | None | | --suspended / --not-suspended | boolean | Only include suspended process instances. Value may only be true, as false is the default behavior. | None | | --active / --not-active | boolean | Only include active process instances. Value may only be true, as false is the default behavior. | None | | --sub-case-instance | text | Restrict query to all process instances that have the given case instance as a sub case instance. Takes a case instance id. | None | | --super-case-instance | text | Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id. | None | | --sub-process-instance | text | Restrict query to all process instances that have the given process instance as a sub process instance. Takes a process instance id. | None | | --super-process-instance | text | Restrict query to all process instances that are sub process instances of the given process instance. Takes a process instance id. | None | | --deployment-id | text | Filter by the deployment the id belongs to. | None | | --process-definition-key-not-in | text | Exclude instances by a comma-separated list of process definition keys. A process instance must not have one of the given process definition keys. | None | | --process-definition-key-in | text | Filter by a comma-separated list of process definition keys. A process instance must have one of the given process definition keys. | None | | --process-definition-key | text | Filter by the key of the process definition the instances run on. | None | | --process-definition-id | text | Filter by the deployment the id belongs to. | None | | --case-instance-id | text | Filter by case instance id. | None | | --business-key-like | text | Filter by process instance business key that the parameter is a substring of. | None | | --business-key | text | Filter by process instance business key. | None | | --process-instance-ids | text | Filter by a comma-separated list of process instance ids. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get queryAuthorizations \u00b6 Get Authorizations Queries for a list of authorizations using a list of parameters. The size of the result set can be retrieved by using the Get Authorization Count method. URL: /authorization Schema: - Usage: cctl&nbsp;get queryAuthorizations [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --resource-id text Filter by resource id. None --resource-type text Filter by an integer representation of the resource type. See the User Guide for a list of integer representations of resource types. None --group-id-in text Filter by a comma-separated list of groupIds. None --user-id-in text Filter by a comma-separated list of userIds. None --type text Filter by authorization type. (0=global, 1=grant, 2=revoke). See the User Guide for more information about authorization types. None --id text Filter by the id of the authorization. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get queryGroups \u00b6 Get List Queries for a list of groups using a list of parameters. The size of the result set can be retrieved by using the Get Group Count method. URL: /group Schema: - Usage: cctl&nbsp;get queryGroups [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --member-of-tenant text Only retrieve groups which are members of the given tenant. None --member text Only retrieve groups where the given user id is a member of. None --type text Filter by the type of the group. None --name-like text Filter by the name that the parameter is a substring of. None --name text Filter by the name of the group. None --id-in text Filter by a comma seperated list of group ids. None --id text Filter by the id of the group. None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get queryTenants \u00b6 Get Tenants Query for a list of tenants using a list of parameters. The size of the result set can be retrieved by using the Get Tenant Count method. URL: /tenant Schema: - Usage: cctl&nbsp;get queryTenants [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --including-groups-of-user / --not-including-groups-of-user boolean Select only tenants where the user or one of his groups is a member of. Can only be used in combination with the userMember parameter. Value may only be true , as false is the default behavior. None --group-member text Select only tenants where the given group is a member of. None --user-member text Select only tenants where the given user is a member of. None --name-like text Filter by the name that the parameter is a substring of. None --name text Filter by the name of the tenant. None --id text Filter by the id of the tenant. None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get queryUserOperationCount \u00b6 Get User Operation Log Count Queries for the number of user operation log entries that fulfill the given parameters. Takes the same parameters as the Get User Operation Log (Historic) method. URL: /history/user-operation/count Schema: - Usage: cctl&nbsp;get queryUserOperationCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --before-timestamp text Restrict to entries that were created before the given timestamp. By default , the timestamp must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200. None --after-timestamp text Restrict to entries that were created after the given timestamp. By default , the timestamp must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200. None --property text Only include operations that changed this property, e.g., owner or assignee . None --category-in text Filter by a comma-separated list of categories that this operation is associated with, possible values are TaskWorker , Admin or Operator . None --category text Filter by the category that this operation is associated with, possible values are TaskWorker , Admin or Operator . None --entity-type-in text Filter by a comma-separated list of types of the entities that was affected by this operation, possible values are Task , Attachment or IdentityLink . None --entity-type text Filter by the type of the entity that was affected by this operation, possible values are Task , Attachment or IdentityLink . None --operation-type text Filter by the type of the operation like Claim or Delegate . See the Javadoc for a list of available operation types. None --operation-id text Filter by the id of the operation. This allows fetching of multiple entries which are part of a composite operation. None --user-id text Only include operations of this user. None --job-definition-id text Filter by job definition id. None --job-id text Filter by job id. None --batch-id text Only include operations on this batch. None --external-task-id text Only include operations on this external task. None --task-id text Only include operations on this task. None --case-execution-id text Filter by case execution id. None --case-instance-id text Filter by case instance id. None --case-definition-id text Filter by case definition id. None --execution-id text Filter by execution id. None --process-instance-id text Filter by process instance id. None --process-definition-key text Filter by process definition key. None --process-definition-id text Filter by process definition id. None --deployment-id text Filter by deployment id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get queryUserOperationEntries \u00b6 Get User Operation Log (Historic) Queries for user operation log entries that fulfill the given parameters. The size of the result set can be retrieved by using the Get User Operation Log Count method. Note that the properties of operation log entries are interpreted as restrictions on the entities they apply to. That means, if a single process instance is updated, the field processInstanceId is populated. If a single operation updates all process instances of the same process definition, the field processInstanceId is null (a null restriction is viewed as a wildcard, i.e., matches a process instance with any id) and the field processDefinitionId is populated. This way, which entities were changed by a user operation can easily be reconstructed. URL: /history/user-operation Schema: - Usage: cctl&nbsp;get queryUserOperationEntries [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --before-timestamp text Restrict to entries that were created before the given timestamp. By default , the timestamp must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200. None --after-timestamp text Restrict to entries that were created after the given timestamp. By default , the timestamp must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200. None --property text Only include operations that changed this property, e.g., owner or assignee . None --category-in text Filter by a comma-separated list of categories that this operation is associated with, possible values are TaskWorker , Admin or Operator . None --category text Filter by the category that this operation is associated with, possible values are TaskWorker , Admin or Operator . None --entity-type-in text Filter by a comma-separated list of types of the entities that was affected by this operation, possible values are Task , Attachment or IdentityLink . None --entity-type text Filter by the type of the entity that was affected by this operation, possible values are Task , Attachment or IdentityLink . None --operation-type text Filter by the type of the operation like Claim or Delegate . See the Javadoc for a list of available operation types. None --operation-id text Filter by the id of the operation. This allows fetching of multiple entries which are part of a composite operation. None --user-id text Only include operations of this user. None --job-definition-id text Filter by job definition id. None --job-id text Filter by job id. None --batch-id text Only include operations on this batch. None --external-task-id text Only include operations on this external task. None --task-id text Only include operations on this task. None --case-execution-id text Filter by case execution id. None --case-instance-id text Filter by case instance id. None --case-definition-id text Filter by case definition id. None --execution-id text Filter by execution id. None --process-instance-id text Filter by process instance id. None --process-definition-key text Filter by process definition key. None --process-definition-id text Filter by process definition id. None --deployment-id text Filter by deployment id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get renderedForm \u00b6 Get Rendered Form Retrieves the rendered form for a task. This method can be used to get the HTML rendering of a Generated Task Form . URL: /task/{id}/rendered-form Schema: - Usage: cctl&nbsp;get renderedForm [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get renderedStartForm \u00b6 Get Rendered Start Form Retrieves the rendered form for a process definition. This method can be used to get the HTML rendering of a Generated Task Form . URL: /process-definition/{id}/rendered-form Schema: - Usage: cctl&nbsp;get renderedStartForm [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get renderedStartFormByKey \u00b6 Get Rendered Start Form Retrieves the rendered form for the latest version of the process definition which belongs to no tenant. This method can be used to get the HTML rendering of a Generated Task Form . URL: /process-definition/key/{key}/rendered-form Schema: - Usage: cctl&nbsp;get renderedStartFormByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get renderedStartFormByKeyAndTenantId \u00b6 Get Rendered Start Form Retrieves the rendered form for the latest version of the process definition for a tenant. This method can be used to get the HTML rendering of a Generated Task Form . URL: /process-definition/key/{key}/tenant-id/{tenant-id}/rendered-form Schema: - Usage: cctl&nbsp;get renderedStartFormByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get restAPIVersion \u00b6 Get Rest API version Retrieves the version of the Rest API. URL: /version Schema: - Usage: cctl&nbsp;get restAPIVersion [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get schemaLog \u00b6 Get List Queries for schema log entries that fulfill given parameters. URL: /schema/log Schema: - Usage: cctl&nbsp;get schemaLog [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --version text Only return schema log entries with a specific version. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get singleFilter \u00b6 Get Single Filter Retrieves a single filter by id, according to the Filter interface in the engine. URL: /filter/{id} Schema: - Usage: cctl&nbsp;get singleFilter [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --item-count / --not-item-count boolean If set to true , each filter result will contain an itemCount property with the number of items matched by the filter itself. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get stacktrace \u00b6 Get Exception Stacktrace Retrieves the exception stacktrace corresponding to the passed job id. URL: /job/{id}/stacktrace Schema: - Usage: cctl&nbsp;get stacktrace [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get stacktraceHistoricJobLog \u00b6 Get Job Log Exception Stacktrace Retrieves the corresponding exception stacktrace to the passed historic job log by id. URL: /history/job-log/{id}/stacktrace Schema: - Usage: cctl&nbsp;get stacktraceHistoricJobLog [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get startForm \u00b6 Get Start Form Key Retrieves the key of the start form for a process definition. The form key corresponds to the FormData#formKey property in the engine. URL: /process-definition/{id}/startForm Schema: - Usage: cctl&nbsp;get startForm [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get startFormByKey \u00b6 Get Start Form Key Retrieves the key of the start form for the latest version of the process definition which belongs to no tenant. The form key corresponds to the FormData#formKey property in the engine. URL: /process-definition/key/{key}/startForm Schema: - Usage: cctl&nbsp;get startFormByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get startFormByKeyAndTenantId \u00b6 Get Start Form Key Retrieves the key of the start form for the latest version of the process definition for a tenant. The form key corresponds to the FormData#formKey property in the engine. URL: /process-definition/key/{key}/tenant-id/{tenant-id}/startForm Schema: - Usage: cctl&nbsp;get startFormByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get startFormVariables \u00b6 Get Start Form Variables Retrieves the start form variables for a process definition (only if they are defined via the Generated Task Form approach). The start form variables take form data specified on the start event into account. If form fields are defined, the variable types and default values of the form fields are taken into account. URL: /process-definition/{id}/form-variables Schema: - Usage: cctl&nbsp;get startFormVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true). If set to true, a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false, a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note : While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --variable-names | text | A comma-separated list of variable names. Allows restricting the list of requested variables to the variable names in the list. It is best practice to restrict the list of variables to the variables actually required by the form in order to minimize fetching of data. If the query parameter is ommitted all variables are fetched. If the query parameter contains non-existent variable names, the variable names are ignored. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get startFormVariablesByKey \u00b6 Get Start Form Variables Retrieves the start form variables for the latest process definition which belongs to no tenant (only if they are defined via the Generated Task Form approach). The start form variables take form data specified on the start event into account. If form fields are defined, the variable types and default values of the form fields are taken into account. URL: /process-definition/key/{key}/form-variables Schema: - Usage: cctl&nbsp;get startFormVariablesByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true). If set to true, a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false, a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note : While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --variable-names | text | A comma-separated list of variable names. Allows restricting the list of requested variables to the variable names in the list. It is best practice to restrict the list of variables to the variables actually required by the form in order to minimize fetching of data. If the query parameter is ommitted all variables are fetched. If the query parameter contains non-existent variable names, the variable names are ignored. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get startFormVariablesByKeyAndTenantId \u00b6 Get Start Form Variables Retrieves the start form variables for the latest process definition for a tenant (only if they are defined via the Generated Task Form approach). The start form variables take form data specified on the start event into account. If form fields are defined, the variable types and default values of the form fields are taken into account. URL: /process-definition/key/{key}/tenant-id/{tenant-id}/form-variables Schema: - Usage: cctl&nbsp;get startFormVariablesByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true). If set to true, a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false, a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note : While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --variable-names | text | A comma-separated list of variable names. Allows restricting the list of requested variables to the variable names in the list. It is best practice to restrict the list of variables to the variables actually required by the form in order to minimize fetching of data. If the query parameter is ommitted all variables are fetched. If the query parameter contains non-existent variable names, the variable names are ignored. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get staticCalledProcessDefinitions \u00b6 Get Static Called Process Definitions For the given process, returns a list of called process definitions corresponding to the CalledProcessDefinition interface in the engine. The list contains all process definitions that are referenced statically by call activities in the given process. This endpoint does not resolve process definitions that are referenced with expressions. Each called process definition contains a list of call activity ids, which specifies the call activities that are calling that process. This endpoint does not resolve references to case definitions. URL: /process-definition/{id}/static-called-process-definitions Schema: - Usage: cctl&nbsp;get staticCalledProcessDefinitions [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get task \u00b6 Get Retrieves a task by id. URL: /task/{id} Schema: - Usage: cctl&nbsp;get task [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get taskLocalVariable \u00b6 Get Local Task Variable Retrieves a variable from the context of a given task by id. URL: /task/{id}/localVariables/{varName} Schema: - Usage: cctl&nbsp;get taskLocalVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-value / --not-deserialize-value boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on the server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get taskLocalVariableBinary \u00b6 Get Local Task Variable (Binary) Retrieves a binary variable from the context of a given task by id. Applicable for byte array and file variables. URL: /task/{id}/localVariables/{varName}/data Schema: - Usage: cctl&nbsp;get taskLocalVariableBinary [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get taskLocalVariables \u00b6 Get Local Task Variables Retrieves all variables of a given task by id. URL: /task/{id}/localVariables Schema: - Usage: cctl&nbsp;get taskLocalVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on the server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get taskVariable \u00b6 Get Task Variable Retrieves a variable from the context of a given task. The variable must be visible from the task. It is visible from the task if it is a local task variable or declared in a parent scope of the task. See documentation on visiblity of variables . URL: /task/{id}/variables/{varName} Schema: - Usage: cctl&nbsp;get taskVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-value / --not-deserialize-value boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on the server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get taskVariableBinary \u00b6 Get Task Variable (Binary) Retrieves a binary variable from the context of a given task. Applicable for byte array and file variables. The variable must be visible from the task. It is visible from the task if it is a local task variable or declared in a parent scope of the task. See documentation on visiblity of variables . URL: /task/{id}/variables/{varName}/data Schema: - Usage: cctl&nbsp;get taskVariableBinary [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get taskVariables \u00b6 Get Task Variables Retrieves all variables visible from the task. A variable is visible from the task if it is a local task variable or declared in a parent scope of the task. See documentation on visiblity of variables . URL: /task/{id}/variables Schema: - Usage: cctl&nbsp;get taskVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on the server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get tasks \u00b6 Get List Queries for tasks that fulfill a given filter. The size of the result set can be retrieved by using the Get Task Count method. Security Consideration: There are several query parameters (such as assigneeExpression) for specifying an EL expression. These are disabled by default to prevent remote code execution. See the section on security considerations for custom code in the user guide for details. URL: /task Schema: - Usage: cctl&nbsp;get tasks [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --parent-task-id text Restrict query to all tasks that are sub tasks of the given task. Takes a task id. None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match all variable values in this query case-insensitively. If set variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match all variable names in this query case-insensitively. If set variableName and variablename are treated as equal. None --case-instance-variables text Only include tasks that belong to case instances that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note : Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --process-variables | text | Only include tasks that belong to process instances that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note : Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like ; notLike . key and value may not contain underscore or comma characters. | None | | --task-variables | text | Only include tasks that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note : Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --suspended / --not-suspended | boolean | Only include suspended tasks. Value may only be true , as false is the default behavior. | None | | --active / --not-active | boolean | Only include active tasks. Value may only be true , as false is the default behavior. | None | | --without-candidate-users / --not-without-candidate-users | boolean | Only include tasks which have no candidate users. Value may only be true , as false is the default behavior. | None | | --with-candidate-users / --not-with-candidate-users | boolean | Only include tasks which have a candidate user. Value may only be true , as false is the default behavior. | None | | --without-candidate-groups / --not-without-candidate-groups | boolean | Only include tasks which have no candidate group. Value may only be true , as false is the default behavior. | None | | --with-candidate-groups / --not-with-candidate-groups | boolean | Only include tasks which have a candidate group. Value may only be true , as false is the default behavior. | None | | --candidate-groups-expression | text | Restrict to tasks that are offered to any of the candidate groups described by the given expression. See the user guide for more information on available functions. The expression must evaluate to java.util.List of Strings. | None | | --candidate-groups | text | Restrict to tasks that are offered to any of the given candidate groups. Takes a comma-separated list of group names, so for example developers,support,sales . | None | | --delegation-state | text | Restrict to tasks that are in the given delegation state. Valid values are PENDING and RESOLVED . | None | | --created-before-expression | text | Restrict to tasks that were created before the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --created-before | text | Restrict to tasks that were created before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.332+0200 . | None | | --created-after-expression | text | Restrict to tasks that were created after the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --created-after | text | Restrict to tasks that were created after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.342+0200 . | None | | --created-on-expression | text | Restrict to tasks that were created on the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --created-on | text | Restrict to tasks that were created on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.324+0200 . | None | | --follow-up-before-or-not-existent-expression | text | Restrict to tasks that have no followUp date or a followUp date before the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --follow-up-before-or-not-existent | text | Restrict to tasks that have no followUp date or a followUp date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.432+0200 . The typical use case is to query all active tasks for a user for a given date. | None | | --follow-up-before-expression | text | Restrict to tasks that have a followUp date before the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --follow-up-before | text | Restrict to tasks that have a followUp date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.234+0200 . | None | | --follow-up-after-expression | text | Restrict to tasks that have a followUp date after the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --follow-up-after | text | Restrict to tasks that have a followUp date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.542+0200 . | None | | --follow-up-date-expression | text | Restrict to tasks that have a followUp date on the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --follow-up-date | text | Restrict to tasks that have a followUp date on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.342+0200 . | None | | --without-due-date / --not-without-due-date | boolean | Only include tasks which have no due date. Value may only be true , as false is the default behavior. | None | | --due-before-expression | text | Restrict to tasks that are due before the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --due-before | text | Restrict to tasks that are due before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.243+0200 . | None | | --due-after-expression | text | Restrict to tasks that are due after the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --due-after | text | Restrict to tasks that are due after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.435+0200 . | None | | --due-date-expression | text | Restrict to tasks that are due on the date described by the given expression. See the User Guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --due-date | text | Restrict to tasks that are due on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.546+0200 . | None | | --min-priority | text | Restrict to tasks that have a higher or equal priority. | None | | --max-priority | text | Restrict to tasks that have a lower or equal priority. | None | | --priority | text | Restrict to tasks that have the given priority. | None | | --description-like | text | Restrict to tasks that have a description that has the parameter value as a substring. | None | | --description | text | Restrict to tasks that have the given description. | None | | --name-not-like | text | Restrict to tasks that do not have a name with the given parameter value as substring. | None | | --name-like | text | Restrict to tasks that have a name with the given parameter value as substring. | None | | --name-not-equal | text | Restrict to tasks that do not have the given name. | None | | --name | text | Restrict to tasks that have the given name. | None | | --task-definition-key-like | text | Restrict to tasks that have a key that has the parameter value as a substring. | None | | --task-definition-key-in | text | Restrict to tasks that have one of the given keys. The keys need to be in a comma-separated list. | None | | --task-definition-key | text | Restrict to tasks that have the given key. | None | | --unassigned / --not-unassigned | boolean | If set to true , restricts the query to all tasks that are unassigned. | None | | --assigned / --not-assigned | boolean | If set to true , restricts the query to all tasks that are assigned. | None | | --involved-user-expression | text | Only include tasks that the user described by the given expression is involved in. A user is involved in a task if an identity link exists between task and user (e.g., the user is the assignee). See the user guide for more information on available functions. | None | | --involved-user | text | Only include tasks that the given user is involved in. A user is involved in a task if an identity link exists between task and user (e.g., the user is the assignee). | None | | --include-assigned-tasks / --not-include-assigned-tasks | boolean | Also include tasks that are assigned to users in candidate queries. Default is to only include tasks that are not assigned to any user if you query by candidate user or group(s). | None | | --candidate-user-expression | text | Only include tasks that are offered to the user described by the given expression. See the user guide for more information on available functions. | None | | --candidate-user | text | Only include tasks that are offered to the given user or to one of his groups. | None | | --candidate-group-expression | text | Only include tasks that are offered to the group described by the given expression. See the user guide for more information on available functions. | None | | --candidate-group | text | Only include tasks that are offered to the given group. | None | | --owner-expression | text | Restrict to tasks that the user described by the given expression owns. See the user guide for more information on available functions. | None | | --owner | text | Restrict to tasks that the given user owns. | None | | --assignee-not-in | text | Only include tasks which are not assigned to one of the passed and comma-separated user ids. | None | | --assignee-in | text | Only include tasks which are assigned to one of the passed and comma-separated user ids. | None | | --assignee-like-expression | text | Restrict to tasks that have an assignee that has the parameter value described by the given expression as a substring. See the user guide for more information on available functions. | None | | --assignee-like | text | Restrict to tasks that have an assignee that has the parameter value as a substring. | None | | --assignee-expression | text | Restrict to tasks that the user described by the given expression is assigned to. See the user guide for more information on available functions. | None | | --assignee | text | Restrict to tasks that the given user is assigned to. | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include tasks which belong to no tenant. Value may only be true , as false is the default behavior. | None | | --tenant-id-in | text | Only include tasks which belong to one of the passed and comma-separated tenant ids. | None | | --activity-instance-id-in | text | Only include tasks which belong to one of the passed and comma-separated activity instance ids. | None | | --case-execution-id | text | Restrict to tasks that belong to a case execution with the given id. | None | | --case-definition-name-like | text | Restrict to tasks that have a case definition name that has the parameter value as a substring. | None | | --case-definition-name | text | Restrict to tasks that belong to a case definition with the given name. | None | | --case-definition-key | text | Restrict to tasks that belong to a case definition with the given key. | None | | --case-definition-id | text | Restrict to tasks that belong to a case definition with the given id. | None | | --case-instance-business-key-like | text | Restrict to tasks that have a case instance business key that has the parameter value as a substring. | None | | --case-instance-business-key | text | Restrict to tasks that belong to case instances with the given business key. | None | | --case-instance-id | text | Restrict to tasks that belong to case instances with the given id. | None | | --execution-id | text | Restrict to tasks that belong to an execution with the given id. | None | | --process-definition-name-like | text | Restrict to tasks that have a process definition name that has the parameter value as a substring. | None | | --process-definition-name | text | Restrict to tasks that belong to a process definition with the given name. | None | | --process-definition-key-in | text | Restrict to tasks that belong to a process definition with one of the given keys. The keys need to be in a comma-separated list. | None | | --process-definition-key | text | Restrict to tasks that belong to a process definition with the given key. | None | | --process-definition-id | text | Restrict to tasks that belong to a process definition with the given id. | None | | --process-instance-business-key-like-expression | text | Restrict to tasks that have a process instance business key that has the parameter value as a substring and is described by an expression. See the user guide for more information on available functions. | None | | --process-instance-business-key-like | text | Restrict to tasks that have a process instance business key that has the parameter value as a substring. | None | | --process-instance-business-key-in | text | Restrict to tasks that belong to process instances with one of the give business keys. The keys need to be in a comma-separated list. | None | | --process-instance-business-key-expression | text | Restrict to tasks that belong to process instances with the given business key which is described by an expression. See the user guide for more information on available functions. | None | | --process-instance-business-key | text | Restrict to tasks that belong to process instances with the given business key. | None | | --process-instance-id-in | text | Restrict to tasks that belong to process instances with the given ids. | None | | --process-instance-id | text | Restrict to tasks that belong to process instances with the given id. | None | | --task-id-in | text | Restrict to tasks with any of the given ids. | None | | --task-id | text | Restrict to task with the given id. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get tasksCount \u00b6 Get List Count Retrieves the number of tasks that fulfill a provided filter. Corresponds to the size of the result set when using the Get Tasks method. Security Consideration: There are several query parameters (such as assigneeExpression) for specifying an EL expression. These are disabled by default to prevent remote code execution. See the section on security considerations for custom code in the user guide for details. URL: /task/count Schema: - Usage: cctl&nbsp;get tasksCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --parent-task-id text Restrict query to all tasks that are sub tasks of the given task. Takes a task id. None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match all variable values in this query case-insensitively. If set variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match all variable names in this query case-insensitively. If set variableName and variablename are treated as equal. None --case-instance-variables text Only include tasks that belong to case instances that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note : Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --process-variables | text | Only include tasks that belong to process instances that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note : Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like ; notLike . key and value may not contain underscore or comma characters. | None | | --task-variables | text | Only include tasks that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note : Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --suspended / --not-suspended | boolean | Only include suspended tasks. Value may only be true , as false is the default behavior. | None | | --active / --not-active | boolean | Only include active tasks. Value may only be true , as false is the default behavior. | None | | --without-candidate-users / --not-without-candidate-users | boolean | Only include tasks which have no candidate users. Value may only be true , as false is the default behavior. | None | | --with-candidate-users / --not-with-candidate-users | boolean | Only include tasks which have a candidate user. Value may only be true , as false is the default behavior. | None | | --without-candidate-groups / --not-without-candidate-groups | boolean | Only include tasks which have no candidate group. Value may only be true , as false is the default behavior. | None | | --with-candidate-groups / --not-with-candidate-groups | boolean | Only include tasks which have a candidate group. Value may only be true , as false is the default behavior. | None | | --candidate-groups-expression | text | Restrict to tasks that are offered to any of the candidate groups described by the given expression. See the user guide for more information on available functions. The expression must evaluate to java.util.List of Strings. | None | | --candidate-groups | text | Restrict to tasks that are offered to any of the given candidate groups. Takes a comma-separated list of group names, so for example developers,support,sales . | None | | --delegation-state | text | Restrict to tasks that are in the given delegation state. Valid values are PENDING and RESOLVED . | None | | --created-before-expression | text | Restrict to tasks that were created before the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --created-before | text | Restrict to tasks that were created before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.332+0200 . | None | | --created-after-expression | text | Restrict to tasks that were created after the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --created-after | text | Restrict to tasks that were created after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.342+0200 . | None | | --created-on-expression | text | Restrict to tasks that were created on the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --created-on | text | Restrict to tasks that were created on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.324+0200 . | None | | --follow-up-before-or-not-existent-expression | text | Restrict to tasks that have no followUp date or a followUp date before the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --follow-up-before-or-not-existent | text | Restrict to tasks that have no followUp date or a followUp date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.432+0200 . The typical use case is to query all active tasks for a user for a given date. | None | | --follow-up-before-expression | text | Restrict to tasks that have a followUp date before the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --follow-up-before | text | Restrict to tasks that have a followUp date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.234+0200 . | None | | --follow-up-after-expression | text | Restrict to tasks that have a followUp date after the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --follow-up-after | text | Restrict to tasks that have a followUp date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.542+0200 . | None | | --follow-up-date-expression | text | Restrict to tasks that have a followUp date on the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --follow-up-date | text | Restrict to tasks that have a followUp date on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.342+0200 . | None | | --without-due-date / --not-without-due-date | boolean | Only include tasks which have no due date. Value may only be true , as false is the default behavior. | None | | --due-before-expression | text | Restrict to tasks that are due before the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --due-before | text | Restrict to tasks that are due before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.243+0200 . | None | | --due-after-expression | text | Restrict to tasks that are due after the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --due-after | text | Restrict to tasks that are due after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.435+0200 . | None | | --due-date-expression | text | Restrict to tasks that are due on the date described by the given expression. See the User Guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --due-date | text | Restrict to tasks that are due on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.546+0200 . | None | | --min-priority | text | Restrict to tasks that have a higher or equal priority. | None | | --max-priority | text | Restrict to tasks that have a lower or equal priority. | None | | --priority | text | Restrict to tasks that have the given priority. | None | | --description-like | text | Restrict to tasks that have a description that has the parameter value as a substring. | None | | --description | text | Restrict to tasks that have the given description. | None | | --name-not-like | text | Restrict to tasks that do not have a name with the given parameter value as substring. | None | | --name-like | text | Restrict to tasks that have a name with the given parameter value as substring. | None | | --name-not-equal | text | Restrict to tasks that do not have the given name. | None | | --name | text | Restrict to tasks that have the given name. | None | | --task-definition-key-like | text | Restrict to tasks that have a key that has the parameter value as a substring. | None | | --task-definition-key-in | text | Restrict to tasks that have one of the given keys. The keys need to be in a comma-separated list. | None | | --task-definition-key | text | Restrict to tasks that have the given key. | None | | --unassigned / --not-unassigned | boolean | If set to true , restricts the query to all tasks that are unassigned. | None | | --assigned / --not-assigned | boolean | If set to true , restricts the query to all tasks that are assigned. | None | | --involved-user-expression | text | Only include tasks that the user described by the given expression is involved in. A user is involved in a task if an identity link exists between task and user (e.g., the user is the assignee). See the user guide for more information on available functions. | None | | --involved-user | text | Only include tasks that the given user is involved in. A user is involved in a task if an identity link exists between task and user (e.g., the user is the assignee). | None | | --include-assigned-tasks / --not-include-assigned-tasks | boolean | Also include tasks that are assigned to users in candidate queries. Default is to only include tasks that are not assigned to any user if you query by candidate user or group(s). | None | | --candidate-user-expression | text | Only include tasks that are offered to the user described by the given expression. See the user guide for more information on available functions. | None | | --candidate-user | text | Only include tasks that are offered to the given user or to one of his groups. | None | | --candidate-group-expression | text | Only include tasks that are offered to the group described by the given expression. See the user guide for more information on available functions. | None | | --candidate-group | text | Only include tasks that are offered to the given group. | None | | --owner-expression | text | Restrict to tasks that the user described by the given expression owns. See the user guide for more information on available functions. | None | | --owner | text | Restrict to tasks that the given user owns. | None | | --assignee-not-in | text | Only include tasks which are not assigned to one of the passed and comma-separated user ids. | None | | --assignee-in | text | Only include tasks which are assigned to one of the passed and comma-separated user ids. | None | | --assignee-like-expression | text | Restrict to tasks that have an assignee that has the parameter value described by the given expression as a substring. See the user guide for more information on available functions. | None | | --assignee-like | text | Restrict to tasks that have an assignee that has the parameter value as a substring. | None | | --assignee-expression | text | Restrict to tasks that the user described by the given expression is assigned to. See the user guide for more information on available functions. | None | | --assignee | text | Restrict to tasks that the given user is assigned to. | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include tasks which belong to no tenant. Value may only be true , as false is the default behavior. | None | | --tenant-id-in | text | Only include tasks which belong to one of the passed and comma-separated tenant ids. | None | | --activity-instance-id-in | text | Only include tasks which belong to one of the passed and comma-separated activity instance ids. | None | | --case-execution-id | text | Restrict to tasks that belong to a case execution with the given id. | None | | --case-definition-name-like | text | Restrict to tasks that have a case definition name that has the parameter value as a substring. | None | | --case-definition-name | text | Restrict to tasks that belong to a case definition with the given name. | None | | --case-definition-key | text | Restrict to tasks that belong to a case definition with the given key. | None | | --case-definition-id | text | Restrict to tasks that belong to a case definition with the given id. | None | | --case-instance-business-key-like | text | Restrict to tasks that have a case instance business key that has the parameter value as a substring. | None | | --case-instance-business-key | text | Restrict to tasks that belong to case instances with the given business key. | None | | --case-instance-id | text | Restrict to tasks that belong to case instances with the given id. | None | | --execution-id | text | Restrict to tasks that belong to an execution with the given id. | None | | --process-definition-name-like | text | Restrict to tasks that have a process definition name that has the parameter value as a substring. | None | | --process-definition-name | text | Restrict to tasks that belong to a process definition with the given name. | None | | --process-definition-key-in | text | Restrict to tasks that belong to a process definition with one of the given keys. The keys need to be in a comma-separated list. | None | | --process-definition-key | text | Restrict to tasks that belong to a process definition with the given key. | None | | --process-definition-id | text | Restrict to tasks that belong to a process definition with the given id. | None | | --process-instance-business-key-like-expression | text | Restrict to tasks that have a process instance business key that has the parameter value as a substring and is described by an expression. See the user guide for more information on available functions. | None | | --process-instance-business-key-like | text | Restrict to tasks that have a process instance business key that has the parameter value as a substring. | None | | --process-instance-business-key-in | text | Restrict to tasks that belong to process instances with one of the give business keys. The keys need to be in a comma-separated list. | None | | --process-instance-business-key-expression | text | Restrict to tasks that belong to process instances with the given business key which is described by an expression. See the user guide for more information on available functions. | None | | --process-instance-business-key | text | Restrict to tasks that belong to process instances with the given business key. | None | | --process-instance-id-in | text | Restrict to tasks that belong to process instances with the given ids. | None | | --process-instance-id | text | Restrict to tasks that belong to process instances with the given id. | None | | --task-id-in | text | Restrict to tasks with any of the given ids. | None | | --task-id | text | Restrict to task with the given id. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get telemetryConfiguration \u00b6 Fetch Telemetry Configuration Fetches Telemetry Configuration. URL: /telemetry/configuration Schema: - Usage: cctl&nbsp;get telemetryConfiguration [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get tenant \u00b6 Get Tenant Retrieves a tenant. URL: /tenant/{id} Schema: - Usage: cctl&nbsp;get tenant [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get tenantCount \u00b6 Get Tenant Count Query for tenants using a list of parameters and retrieves the count. URL: /tenant/count Schema: - Usage: cctl&nbsp;get tenantCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --including-groups-of-user / --not-including-groups-of-user boolean Select only tenants where the user or one of his groups is a member of. Can only be used in combination with the userMember parameter. Value may only be true , as false is the default behavior. None --group-member text Select only tenants where the given group is a member of. None --user-member text Select only tenants where the given user is a member of. None --name-like text Filter by the name that the parameter is a substring of. None --name text Filter by the name of the tenant. None --id text Filter by the id of the tenant. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get topicNames \u00b6 Get External Task Topic Names Queries for distinct topic names of external tasks that fulfill given parameters. Query can be restricted to only tasks with retries left, tasks that are locked, or tasks that are unlocked. The parameters withLockedTasks and withUnlockedTasks are exclusive. Setting them both to true will return an empty list. Providing no parameters will return a list of all distinct topic names with external tasks. URL: /external-task/topic-names Schema: - Usage: cctl&nbsp;get topicNames [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --with-retries-left / --not-with-retries-left boolean Only include external tasks that have a positive (> 0) number of retries (or null ). Value may only be true , as false matches any external task. None --with-unlocked-tasks / --not-with-unlocked-tasks boolean Only include external tasks that are currently not locked (i.e., they have no lock or it has expired). Value may only be true , as false matches any external task. None --with-locked-tasks / --not-with-locked-tasks boolean Only include external tasks that are currently locked (i.e., they have a lock time and it has not expired). Value may only be true , as false matches any external task. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get userCount \u00b6 Get List Count Queries for the number of deployments that fulfill given parameters. Takes the same parameters as the Get Users method. URL: /user/count Schema: - Usage: cctl&nbsp;get userCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --potential-starter text Only select Users that are potential starter for the given process definition. None --member-of-tenant text Filter for users which are members of the given tenant. None --member-of-group text Filter for users which are members of the given group. None --email-like text Filter by the email that the parameter is a substring of. None --email text Filter by the email of the user. Exact match. None --last-name-like text Filter by the last name that the parameter is a substring of. None --last-name text Filter by the last name of the user. Exact match. None --first-name-like text Filter by the first name that the parameter is a substring of. None --first-name text Filter by the first name of the user. Exact match. None --id-in text Filter by a comma-separated list of user ids. None --id text Filter by user id None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get userProfile \u00b6 Get Profile Retrieves a user's profile. URL: /user/{id}/profile Schema: - Usage: cctl&nbsp;get userProfile [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get users \u00b6 Get List Query for a list of users using a list of parameters. The size of the result set can be retrieved by using the Get User Count method. Get User Count method. URL: /user Schema: - Usage: cctl&nbsp;get users [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --potential-starter text Only select Users that are potential starter for the given process definition. None --member-of-tenant text Filter for users which are members of the given tenant. None --member-of-group text Filter for users which are members of the given group. None --email-like text Filter by the email that the parameter is a substring of. None --email text Filter by the email of the user. Exact match. None --last-name-like text Filter by the last name that the parameter is a substring of. None --last-name text Filter by the last name of the user. Exact match. None --first-name-like text Filter by the first name that the parameter is a substring of. None --first-name text Filter by the first name of the user. Exact match. None --id-in text Filter by a comma-separated list of user ids. None --id text Filter by user id None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get variableInstance \u00b6 Get Variable Instance Retrieves a variable by id. URL: /variable-instance/{id} Schema: - Usage: cctl&nbsp;get variableInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-value / --not-deserialize-value boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get variableInstanceBinary \u00b6 Get Variable Instance (Binary) Retrieves the content of a variable by id. Applicable for byte array and file variables. URL: /variable-instance/{id}/data Schema: - Usage: cctl&nbsp;get variableInstanceBinary [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False cctl get variableInstances \u00b6 Get Variable Instances Query for variable instances that fulfill given parameters. Parameters may be the properties of variable instances, such as the name or type. The size of the result set can be retrieved by using the Get Variable Instance Count method. URL: /variable-instance Schema: - Usage: cctl&nbsp;get variableInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --max-results | text | Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. | None | | --first-result | text | Pagination of results. Specifies the index of the first result to return. | None | | --sort-order | text | Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. | None | | --sort-by | text | Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. | None | | --variable-scope-id-in | text | Only include variable instances which belong to one of passed scope ids. | None | | --variable-values-ignore-case / --not-variable-values-ignore-case | boolean | Match all variable values provided in variableValues case-insensitively. If set to true variableValue and variablevalue are treated as equal. | None | | --variable-names-ignore-case / --not-variable-names-ignore-case | boolean | Match all variable names provided in variableValues case-insensitively. If set to true variableName and variablename are treated as equal. | None | | --variable-values | text | Only include variable instances that have the certain values. Value filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --tenant-id-in | text | Only include variable instances which belong to one of the passed and comma-separated tenant ids. | None | | --activity-instance-id-in | text | Only include variable instances which belong to one of the passed and comma-separated activity instance ids. | None | | --batch-id-in | text | Only include variable instances which belong to one of the passed and comma-separated batch ids. | None | | --task-id-in | text | Only include variable instances which belong to one of the passed and comma-separated task ids. | None | | --case-execution-id-in | text | Only include variable instances which belong to one of the passed and comma-separated case execution ids. | None | | --case-instance-id-in | text | Only include variable instances which belong to one of the passed and comma-separated case instance ids. | None | | --execution-id-in | text | Only include variable instances which belong to one of the passed and comma-separated execution ids. | None | | --process-instance-id-in | text | Only include variable instances which belong to one of the passed and comma-separated process instance ids. | None | | --variable-name-like | text | Filter by the variable instance name. The parameter can include the wildcard % to express like-strategy such as: starts with ( % name), ends with (name % ) or contains ( % name % ). | None | | --variable-name | text | Filter by variable instance name. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False | cctl get variableInstancesCount \u00b6 Get Variable Instance Count Query for the number of variable instances that fulfill given parameters. Takes the same parameters as the Get Variable Instances method. URL: /variable-instance/count Schema: - Usage: cctl&nbsp;get variableInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --variable-scope-id-in text Only include variable instances which belong to one of passed scope ids. None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match all variable values provided in variableValues case-insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match all variable names provided in variableValues case-insensitively. If set to true variableName and variablename are treated as equal. None --variable-values text Only include variable instances that have the certain values. Value filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --tenant-id-in | text | Only include variable instances which belong to one of the passed and comma-separated tenant ids. | None | | --activity-instance-id-in | text | Only include variable instances which belong to one of the passed and comma-separated activity instance ids. | None | | --batch-id-in | text | Only include variable instances which belong to one of the passed and comma-separated batch ids. | None | | --task-id-in | text | Only include variable instances which belong to one of the passed and comma-separated task ids. | None | | --case-execution-id-in | text | Only include variable instances which belong to one of the passed and comma-separated case execution ids. | None | | --case-instance-id-in | text | Only include variable instances which belong to one of the passed and comma-separated case instance ids. | None | | --execution-id-in | text | Only include variable instances which belong to one of the passed and comma-separated execution ids. | None | | --process-instance-id-in | text | Only include variable instances which belong to one of the passed and comma-separated process instance ids. | None | | --variable-name-like | text | Filter by the variable instance name. The parameter can include the wildcard % to express like-strategy such as: starts with ( % name), ends with (name % ) or contains ( % name % ). | None | | --variable-name | text | Filter by variable instance name. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"get Commands"},{"location":"commands/get/#cli-reference-get","text":"All get commands.","title":"CLI Reference (get)"},{"location":"commands/get/#cctlnbspget","text":"query resources of camunda engine Usage: cctl&nbsp;get [OPTIONS] COMMAND [ARGS]... Options: Name Type Description Default -e , --engine text N/A None --help boolean Show this message and exit. False","title":"cctl&nbsp;get"},{"location":"commands/get/#cctlnbspget-activityinstancetree","text":"Get Activity Instance Retrieves an Activity Instance (Tree) for a given process instance by id. URL: /process-instance/{id}/activity-instances Schema: - Usage: cctl&nbsp;get activityInstanceTree [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"activityInstanceTree"},{"location":"commands/get/#cctlnbspget-activitystatistics","text":"Get Activity Instance Statistics Retrieves runtime statistics of a given process definition, grouped by activities. These statistics include the number of running activity instances, optionally the number of failed jobs and also optionally the number of incidents either grouped by incident types or for a specific incident type. Note : This does not include historic data. URL: /process-definition/{id}/statistics Schema: - Usage: cctl&nbsp;get activityStatistics [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --incidents-for-type text If this property has been set with any incident type (i.e., a string value) the result will only include the number of incidents for the assigned incident type. Cannot be used in combination with incidents . See the User Guide for a list of incident types. None --incidents / --not-incidents boolean Valid values for this property are true or false . If this property has been set to true the result will include the corresponding number of incidents for each occurred incident type. If it is set to false , the incidents will not be included in the result. Cannot be used in combination with incidentsForType . None --failed-jobs / --not-failed-jobs boolean Whether to include the number of failed jobs in the result or not. Valid values are true or false . None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"activityStatistics"},{"location":"commands/get/#cctlnbspget-activitystatisticsbyprocessdefinitionkey","text":"Get Activity Instance Statistics Retrieves runtime statistics of the latest version of the given process definition which belongs to no tenant, grouped by activities. These statistics include the number of running activity instances, optionally the number of failed jobs and also optionally the number of incidents either grouped by incident types or for a specific incident type. Note : This does not include historic data. URL: /process-definition/key/{key}/statistics Schema: - Usage: cctl&nbsp;get activityStatisticsByProcessDefinitionKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --incidents-for-type text If this property has been set with any incident type (i.e., a string value) the result will only include the number of incidents for the assigned incident type. Cannot be used in combination with incidents . See the User Guide for a list of incident types. None --incidents / --not-incidents boolean Valid values for this property are true or false . If this property has been set to true the result will include the corresponding number of incidents for each occurred incident type. If it is set to false , the incidents will not be included in the result. Cannot be used in combination with incidentsForType . None --failed-jobs / --not-failed-jobs boolean Whether to include the number of failed jobs in the result or not. Valid values are true or false . None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"activityStatisticsByProcessDefinitionKey"},{"location":"commands/get/#cctlnbspget-activitystatisticsbyprocessdefinitionkeyandtenantid","text":"Get Activity Instance Statistics Retrieves runtime statistics of the latest version of the given process definition for a tenant, grouped by activities. These statistics include the number of running activity instances, optionally the number of failed jobs and also optionally the number of incidents either grouped by incident types or for a specific incident type. Note : This does not include historic data. URL: /process-definition/key/{key}/tenant-id/{tenant-id}/statistics Schema: - Usage: cctl&nbsp;get activityStatisticsByProcessDefinitionKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --incidents-for-type text If this property has been set with any incident type (i.e., a string value) the result will only include the number of incidents for the assigned incident type. Cannot be used in combination with incidents . See the User Guide for a list of incident types. None --incidents / --not-incidents boolean Valid values for this property are true or false . If this property has been set to true the result will include the corresponding number of incidents for each occurred incident type. If it is set to false , the incidents will not be included in the result. Cannot be used in combination with incidentsForType . None --failed-jobs / --not-failed-jobs boolean Whether to include the number of failed jobs in the result or not. Valid values are true or false . None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"activityStatisticsByProcessDefinitionKeyAndTenantId"},{"location":"commands/get/#cctlnbspget-attachment","text":"Get Retrieves a task attachment by task id and attachment id. URL: /task/{id}/attachment/{attachmentId} Schema: - Usage: cctl&nbsp;get attachment [OPTIONS] ATTACHMENTID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"attachment"},{"location":"commands/get/#cctlnbspget-attachmentdata","text":"Get (Binary) Retrieves the binary content of a task attachment by task id and attachment id. URL: /task/{id}/attachment/{attachmentId}/data Schema: - Usage: cctl&nbsp;get attachmentData [OPTIONS] ATTACHMENTID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"attachmentData"},{"location":"commands/get/#cctlnbspget-attachments","text":"Get List Gets the attachments for a task. URL: /task/{id}/attachment Schema: - Usage: cctl&nbsp;get attachments [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"attachments"},{"location":"commands/get/#cctlnbspget-authorization","text":"Get Authorization Retrieves an authorization by id. URL: /authorization/{id} Schema: - Usage: cctl&nbsp;get authorization [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"authorization"},{"location":"commands/get/#cctlnbspget-authorizationcount","text":"Get Authorization Count Queries for authorizations using a list of parameters and retrieves the count. URL: /authorization/count Schema: - Usage: cctl&nbsp;get authorizationCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --resource-id text Filter by resource id. None --resource-type text Filter by an integer representation of the resource type. See the User Guide for a list of integer representations of resource types. None --group-id-in text Filter by a comma-separated list of groupIds. None --user-id-in text Filter by a comma-separated list of userIds. None --type text Filter by authorization type. (0=global, 1=grant, 2=revoke). See the User Guide for more information about authorization types. None --id text Filter by the id of the authorization. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"authorizationCount"},{"location":"commands/get/#cctlnbspget-batch","text":"Get Retrieves a batch by id, according to the Batch interface in the engine. URL: /batch/{id} Schema: - Usage: cctl&nbsp;get batch [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"batch"},{"location":"commands/get/#cctlnbspget-batchstatistics","text":"Get Statistics Queries for batch statistics that fulfill given parameters. Parameters may be the properties of batches, such as the id or type. The size of the result set can be retrieved by using the Get Batch Statistics Count method. URL: /batch/statistics Schema: - Usage: cctl&nbsp;get batchStatistics [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --suspended / --not-suspended boolean A Boolean value which indicates whether only active or suspended batches should be included. When the value is set to true , only suspended batches will be returned and when the value is set to false , only active batches will be returned. None --without-tenant-id / --not-without-tenant-id boolean Only include batches which belong to no tenant. Value can effectively only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of Strings . A batch matches if it has one of the given tenant ids. None --type text Filter by batch type. See the User Guide for more information about batch types. None --batch-id text Filter by batch id. None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"batchStatistics"},{"location":"commands/get/#cctlnbspget-batchstatisticscount","text":"Get Statistics Count Requests the number of batch statistics that fulfill the query criteria. Takes the same filtering parameters as the Get Batch Statistics method. URL: /batch/statistics/count Schema: - Usage: cctl&nbsp;get batchStatisticsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --suspended / --not-suspended boolean A Boolean value which indicates whether only active or suspended batches should be included. When the value is set to true , only suspended batches will be returned and when the value is set to false , only active batches will be returned. None --without-tenant-id / --not-without-tenant-id boolean Only include batches which belong to no tenant. Value can effectively only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of Strings . A batch matches if it has one of the given tenant ids. None --type text Filter by batch type. See the User Guide for more information about batch types. None --batch-id text Filter by batch id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"batchStatisticsCount"},{"location":"commands/get/#cctlnbspget-batches","text":"Get List Queries for batches that fulfill given parameters. Parameters may be the properties of batches, such as the id or type. The size of the result set can be retrieved by using the Get Batch Count method. URL: /batch Schema: - Usage: cctl&nbsp;get batches [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --suspended / --not-suspended boolean A Boolean value which indicates whether only active or suspended batches should be included. When the value is set to true , only suspended batches will be returned and when the value is set to false , only active batches will be returned. None --without-tenant-id / --not-without-tenant-id boolean Only include batches which belong to no tenant. Value can effectively only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of Strings . A batch matches if it has one of the given tenant ids. None --type text Filter by batch type. See the User Guide for more information about batch types. None --batch-id text Filter by batch id. None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"batches"},{"location":"commands/get/#cctlnbspget-batchescount","text":"Get List Count Requests the number of batches that fulfill the query criteria. Takes the same filtering parameters as the Get Batches method. URL: /batch/count Schema: - Usage: cctl&nbsp;get batchesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --suspended / --not-suspended boolean A Boolean value which indicates whether only active or suspended batches should be included. When the value is set to true , only suspended batches will be returned and when the value is set to false , only active batches will be returned. None --without-tenant-id / --not-without-tenant-id boolean Only include batches which belong to no tenant. Value can effectively only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of Strings . A batch matches if it has one of the given tenant ids. None --type text Filter by batch type. See the User Guide for more information about batch types. None --batch-id text Filter by batch id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"batchesCount"},{"location":"commands/get/#cctlnbspget-cleanablehistoricbatchesreport","text":"Get Cleanable Batch Report Retrieves a report about a historic batch operations relevant to history cleanup (see History cleanup ) so that you can tune the history time to live. These reports include the count of the finished batches, cleanable batches and type of the batch. The size of the result set can be retrieved by using the Get Cleanable Batch Report Count method. Please note: The history time to live for batch operations does not support Multi-Tenancy . The report will return an information for all batch operations (for all tenants) if you have permissions to see the history. URL: /history/batch/cleanable-batch-report Schema: - Usage: cctl&nbsp;get cleanableHistoricBatchesReport [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"cleanableHistoricBatchesReport"},{"location":"commands/get/#cctlnbspget-cleanablehistoricbatchesreportcount","text":"Get Cleanable Batch Report Count Queries for the number of report results about a historic batch operations relevant to history cleanup (see History cleanup ). Takes the same parameters as the Get Cleanable Batch Report method. URL: /history/batch/cleanable-batch-report/count Schema: - Usage: cctl&nbsp;get cleanableHistoricBatchesReportCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"cleanableHistoricBatchesReportCount"},{"location":"commands/get/#cctlnbspget-cleanablehistoricdecisioninstancereport","text":"Get Cleanable Decision Instance Report Retrieves a report about a decision definition and finished decision instances relevant to history cleanup (see History cleanup ), so that you can tune the history time to live. These reports include the count of the finished historic decision instances, cleanable decision instances and basic decision definition data - id, key, name and version. The size of the result set can be retrieved by using the Get Cleanable Decision Instance Report Count method. URL: /history/decision-definition/cleanable-decision-instance-report Schema: - Usage: cctl&nbsp;get cleanableHistoricDecisionInstanceReport [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --compact / --not-compact boolean Only include decision instances which have more than zero finished instances. Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include decision definitions which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A decision definition must have one of the given tenant ids. None --decision-definition-key-in text Filter by decision definition keys. Must be a comma-separated list of decision definition keys. None --decision-definition-id-in text Filter by decision definition ids. Must be a comma-separated list of decision definition ids. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"cleanableHistoricDecisionInstanceReport"},{"location":"commands/get/#cctlnbspget-cleanablehistoricdecisioninstancereportcount","text":"Get Cleanable Decision Instance Report Count Queries for the number of report results about a decision definition and finished decision instances relevant to history cleanup (see History cleanup ). Takes the same parameters as the Get Cleanable Decision Instance Report method. URL: /history/decision-definition/cleanable-decision-instance-report/count Schema: - Usage: cctl&nbsp;get cleanableHistoricDecisionInstanceReportCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --compact / --not-compact boolean Only include decision instances which have more than zero finished instances. Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include decision definitions which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A decision definition must have one of the given tenant ids. None --decision-definition-key-in text Filter by decision definition keys. Must be a comma-separated list of decision definition keys. None --decision-definition-id-in text Filter by decision definition ids. Must be a comma-separated list of decision definition ids. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"cleanableHistoricDecisionInstanceReportCount"},{"location":"commands/get/#cctlnbspget-cleanablehistoricprocessinstancereport","text":"Get Cleanable Process Instance Report Retrieves a report about a process definition and finished process instances relevant to history cleanup (see History cleanup ) so that you can tune the history time to live. These reports include the count of the finished historic process instances, cleanable process instances and basic process definition data - id, key, name and version. The size of the result set can be retrieved by using the Get Cleanable Process Instance Report Count method. URL: /history/process-definition/cleanable-process-instance-report Schema: - Usage: cctl&nbsp;get cleanableHistoricProcessInstanceReport [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --compact / --not-compact boolean Only include process instances which have more than zero finished instances. Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include process definitions which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A process definition must have one of the given tenant ids. None --process-definition-key-in text Filter by process definition keys. Must be a comma-separated list of process definition keys. None --process-definition-id-in text Filter by process definition ids. Must be a comma-separated list of process definition ids. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"cleanableHistoricProcessInstanceReport"},{"location":"commands/get/#cctlnbspget-cleanablehistoricprocessinstancereportcount","text":"Get Cleanable Process Instance Report Count Queries for the number of report results about a process definition and finished process instances relevant to history cleanup (see History cleanup ). Takes the same parameters as the Get Cleanable Process Instance Report method. URL: /history/process-definition/cleanable-process-instance-report/count Schema: - Usage: cctl&nbsp;get cleanableHistoricProcessInstanceReportCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --compact / --not-compact boolean Only include process instances which have more than zero finished instances. Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include process definitions which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A process definition must have one of the given tenant ids. None --process-definition-key-in text Filter by process definition keys. Must be a comma-separated list of process definition keys. None --process-definition-id-in text Filter by process definition ids. Must be a comma-separated list of process definition ids. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"cleanableHistoricProcessInstanceReportCount"},{"location":"commands/get/#cctlnbspget-comment","text":"Get Retrieves a task comment by task id and comment id. URL: /task/{id}/comment/{commentId} Schema: - Usage: cctl&nbsp;get comment [OPTIONS] COMMENTID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"comment"},{"location":"commands/get/#cctlnbspget-comments","text":"Get List Gets the comments for a task by id. URL: /task/{id}/comment Schema: - Usage: cctl&nbsp;get comments [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"comments"},{"location":"commands/get/#cctlnbspget-decisiondefinitionbyid","text":"Get Decision Definition By Id Retrieves a decision definition by id, according to the DecisionDefinition interface in the engine. URL: /decision-definition/{id} Schema: - Usage: cctl&nbsp;get decisionDefinitionById [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionDefinitionById"},{"location":"commands/get/#cctlnbspget-decisiondefinitionbykey","text":"Get Decision Definition By Key Retrieves the latest version of the decision definition which belongs to no tenant. URL: /decision-definition/key/{key} Schema: - Usage: cctl&nbsp;get decisionDefinitionByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionDefinitionByKey"},{"location":"commands/get/#cctlnbspget-decisiondefinitionbykeyandtenantid","text":"Get Decision Definition By Key And Tenant Id Retrieves the latest version of the decision definition for tenant URL: /decision-definition/key/{key}/tenant-id/{tenant-id} Schema: - Usage: cctl&nbsp;get decisionDefinitionByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionDefinitionByKeyAndTenantId"},{"location":"commands/get/#cctlnbspget-decisiondefinitiondiagram","text":"Get Diagram Retrieves the diagram of a decision definition. URL: /decision-definition/{id}/diagram Schema: - Usage: cctl&nbsp;get decisionDefinitionDiagram [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionDefinitionDiagram"},{"location":"commands/get/#cctlnbspget-decisiondefinitiondiagrambykey","text":"Get Diagram By Key Returns the diagram for the latest version of the decision definition which belongs to no tenant URL: /decision-definition/key/{key}/diagram Schema: - Usage: cctl&nbsp;get decisionDefinitionDiagramByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionDefinitionDiagramByKey"},{"location":"commands/get/#cctlnbspget-decisiondefinitiondiagrambykeyandtenant","text":"Get Diagram By Key And Tenant Returns the XML of the latest version of the decision definition for tenant. URL: /decision-definition/key/{key}/tenant-id/{tenant-id}/diagram Schema: - Usage: cctl&nbsp;get decisionDefinitionDiagramByKeyAndTenant [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionDefinitionDiagramByKeyAndTenant"},{"location":"commands/get/#cctlnbspget-decisiondefinitiondmnxmlbyid","text":"Get XML By Id Retrieves the DMN XML of a decision definition. URL: /decision-definition/{id}/xml Schema: - Usage: cctl&nbsp;get decisionDefinitionDmnXmlById [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionDefinitionDmnXmlById"},{"location":"commands/get/#cctlnbspget-decisiondefinitiondmnxmlbykey","text":"Get XML By Key Retrieves the XML for the latest version of the decision definition which belongs to no tenant. URL: /decision-definition/key/{key}/xml Schema: - Usage: cctl&nbsp;get decisionDefinitionDmnXmlByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionDefinitionDmnXmlByKey"},{"location":"commands/get/#cctlnbspget-decisiondefinitiondmnxmlbykeyandtenant","text":"Get XML By Key and Tenant Retrieves the XML of the latest version of the decision definition for tenant URL: /decision-definition/key/{key}/tenant-id/{tenant-id}/xml Schema: - Usage: cctl&nbsp;get decisionDefinitionDmnXmlByKeyAndTenant [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionDefinitionDmnXmlByKeyAndTenant"},{"location":"commands/get/#cctlnbspget-decisiondefinitions","text":"Get List Queries for decision definitions that fulfill given parameters. Parameters may be the properties of decision definitions, such as the name, key or version. The size of the result set can be retrieved by using the Get Decision Definition Count method. URL: /decision-definition Schema: - Usage: cctl&nbsp;get decisionDefinitions [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --version-tag-like text Filter by the version tags of those decision definition resources that the parameter is a substring of. None --version-tag text Filter by the version tag. None --include-decision-definitions-without-tenant-id / --not-include-decision-definitions-without-tenant-id boolean Include decision definitions which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include decision definitions which belong to no tenant. Value can effectively only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of Strings . A decision definition must have one of the given tenant ids. None --without-decision-requirements-definition / --not-without-decision-requirements-definition boolean Only include decision definitions which does not belongs to any decision requirements definition. Value may only be true , as false is the default behavior. None --decision-requirements-definition-key text Filter by the key of the decision requirements definition this decision definition belongs to. None --decision-requirements-definition-id text Filter by the id of the decision requirements definition this decision definition belongs to. None --resource-name-like text Filter by names of those decision definition resources that the parameter is a substring of. None --resource-name text Filter by the name of the decision definition resource. Exact match. None --latest-version / --not-latest-version boolean Only include those decision definitions that are latest versions. Value may only be true , as false is the default behavior. None --version text Filter by decision definition version. None --category-like text Filter by decision definition categories that the parameter is a substring of. None --category text Filter by decision definition category. Exact match. None --key-like text Filter by decision definition keys that the parameter is a substring of. None --key text Filter by decision definition key, i.e., the id in the DMN 1.0 XML. Exact match. None --deployed-at text Filter by the deploy time of the deployment the decision definition belongs to. Only selects decision definitions that have been deployed at a specific time (exact match). None --deployed-after text Filter by the deploy time of the deployment the decision definition belongs to. Only selects decision definitions that have been deployed after (exclusive) a specific time. None --deployment-id text Filter by the deployment the id belongs to. None --name-like text Filter by decision definition names that the parameter is a substring of. None --name text Filter by decision definition name. None --decision-definition-id-in text Filter by decision definition ids. None --decision-definition-id text Filter by decision definition id. None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionDefinitions"},{"location":"commands/get/#cctlnbspget-decisiondefinitionscount","text":"Get List Count Requests the number of decision definitions that fulfill the query criteria. Takes the same filtering parameters as the Get Decision Definition method. URL: /decision-definition/count Schema: - Usage: cctl&nbsp;get decisionDefinitionsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --version-tag-like text Filter by the version tags of those decision definition resources that the parameter is a substring of. None --version-tag text Filter by the version tag. None --include-decision-definitions-without-tenant-id / --not-include-decision-definitions-without-tenant-id boolean Include decision definitions which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include decision definitions which belong to no tenant. Value can effectively only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of Strings . A decision definition must have one of the given tenant ids. None --without-decision-requirements-definition / --not-without-decision-requirements-definition boolean Only include decision definitions which does not belongs to any decision requirements definition. Value may only be true , as false is the default behavior. None --decision-requirements-definition-key text Filter by the key of the decision requirements definition this decision definition belongs to. None --decision-requirements-definition-id text Filter by the id of the decision requirements definition this decision definition belongs to. None --resource-name-like text Filter by names of those decision definition resources that the parameter is a substring of. None --resource-name text Filter by the name of the decision definition resource. Exact match. None --latest-version / --not-latest-version boolean Only include those decision definitions that are latest versions. Value may only be true , as false is the default behavior. None --version text Filter by decision definition version. None --category-like text Filter by decision definition categories that the parameter is a substring of. None --category text Filter by decision definition category. Exact match. None --key-like text Filter by decision definition keys that the parameter is a substring of. None --key text Filter by decision definition key, i.e., the id in the DMN 1.0 XML. Exact match. None --deployed-at text Filter by the deploy time of the deployment the decision definition belongs to. Only selects decision definitions that have been deployed at a specific time (exact match). None --deployed-after text Filter by the deploy time of the deployment the decision definition belongs to. Only selects decision definitions that have been deployed after (exclusive) a specific time. None --deployment-id text Filter by the deployment the id belongs to. None --name-like text Filter by decision definition names that the parameter is a substring of. None --name text Filter by decision definition name. None --decision-definition-id-in text Filter by decision definition ids. None --decision-definition-id text Filter by decision definition id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionDefinitionsCount"},{"location":"commands/get/#cctlnbspget-decisionrequirementsdefinitionbyid","text":"Get Decision Requirements Definition by ID Retrieves a decision requirements definition according to the DecisionRequirementsDefinition interface in the engine. URL: /decision-requirements-definition/{id} Schema: - Usage: cctl&nbsp;get decisionRequirementsDefinitionById [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionRequirementsDefinitionById"},{"location":"commands/get/#cctlnbspget-decisionrequirementsdefinitionbykey","text":"Get Decision Requirements Definition by Key Retrieves a decision requirements definition according to the DecisionRequirementsDefinition interface in the engine. Returns the latest version of the decision requirements definition which belongs to no tenant. URL: /decision-requirements-definition/key/{key} Schema: - Usage: cctl&nbsp;get decisionRequirementsDefinitionByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionRequirementsDefinitionByKey"},{"location":"commands/get/#cctlnbspget-decisionrequirementsdefinitionbykeyandtenantid","text":"Get Decision Requirements Definition by Key and Tenant ID Retrieves a decision requirements definition according to the DecisionRequirementsDefinition interface in the engine. Returns the latest version of the decision requirements definition for a tenant. URL: /decision-requirements-definition/key/{key}/tenant-id/{tenant-id} Schema: - Usage: cctl&nbsp;get decisionRequirementsDefinitionByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionRequirementsDefinitionByKeyAndTenantId"},{"location":"commands/get/#cctlnbspget-decisionrequirementsdefinitiondiagrambyid","text":"Get Decision Requirements Diagram by ID Retrieves the diagram of a decision requirements definition. URL: /decision-requirements-definition/{id}/diagram Schema: - Usage: cctl&nbsp;get decisionRequirementsDefinitionDiagramById [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionRequirementsDefinitionDiagramById"},{"location":"commands/get/#cctlnbspget-decisionrequirementsdefinitiondiagrambykey","text":"Get Decision Requirements Diagram by Key Retrieves the diagram of a decision requirements definition. Returns the diagram for the latest version of the decision requirements definition which belongs to no tenant. URL: /decision-requirements-definition/key/{key}/diagram Schema: - Usage: cctl&nbsp;get decisionRequirementsDefinitionDiagramByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionRequirementsDefinitionDiagramByKey"},{"location":"commands/get/#cctlnbspget-decisionrequirementsdefinitiondiagrambykeyandtenantid","text":"Get Decision Requirements Diagram by Key and Tenant ID Retrieves the diagram of a decision requirements definition. Returns the diagram of the latest version of the decision requirements definition for a tenant. URL: /decision-requirements-definition/key/{key}/tenant-id/{tenant-id}/diagram Schema: - Usage: cctl&nbsp;get decisionRequirementsDefinitionDiagramByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionRequirementsDefinitionDiagramByKeyAndTenantId"},{"location":"commands/get/#cctlnbspget-decisionrequirementsdefinitiondmnxmlbyid","text":"Get DMN XML by ID Retrieves the DMN XML of a decision requirements definition. URL: /decision-requirements-definition/{id}/xml Schema: - Usage: cctl&nbsp;get decisionRequirementsDefinitionDmnXmlById [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionRequirementsDefinitionDmnXmlById"},{"location":"commands/get/#cctlnbspget-decisionrequirementsdefinitiondmnxmlbykey","text":"Get DMN XML by Key Retrieves the DMN XML of a decision requirements definition. Returns the XML for the latest version of the decision requirements definition which belongs to no tenant. URL: /decision-requirements-definition/key/{key}/xml Schema: - Usage: cctl&nbsp;get decisionRequirementsDefinitionDmnXmlByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionRequirementsDefinitionDmnXmlByKey"},{"location":"commands/get/#cctlnbspget-decisionrequirementsdefinitiondmnxmlbykeyandtenantid","text":"Get DMN XML by Key and Tenant ID Retrieves the DMN XML of a decision requirements definition. Returns the XML of the latest version of the decision requirements definition for a tenant. URL: /decision-requirements-definition/key/{key}/tenant-id/{tenant-id}/xml Schema: - Usage: cctl&nbsp;get decisionRequirementsDefinitionDmnXmlByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionRequirementsDefinitionDmnXmlByKeyAndTenantId"},{"location":"commands/get/#cctlnbspget-decisionrequirementsdefinitions","text":"Get Decision Requirements Definitions Queries for decision requirements definitions that fulfill given parameters. Parameters may be the properties of decision requirements definitions, such as the name, key or version. The size of the result set can be retrieved by using the Get Decision Requirements Definition Count method. URL: /decision-requirements-definition Schema: - Usage: cctl&nbsp;get decisionRequirementsDefinitions [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --include-decision-requirements-definitions-without-tenant-id / --not-include-decision-requirements-definitions-without-tenant-id boolean Include decision requirements definitions which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include decision requirements definitions which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A decision requirements definition must have one of the given tenant ids. None --resource-name-like text Filter by names of those decision requirements definition resources that the parameter is a substring of. None --resource-name text Filter by the name of the decision requirements definition resource. Exact match. None --latest-version / --not-latest-version boolean Only include those decision requirements definitions that are latest versions. Value may only be true , as false is the default behavior. None --version text Filter by decision requirements definition version. None --category-like text Filter by decision requirements definition categories that the parameter is a substring of. None --category text Filter by decision requirements definition category. Exact match. None --key-like text Filter by decision requirements definition keys that the parameter is a substring of. None --key text Filter by decision requirements definition key, i.e., the id in the DMN 1.3 XML. Exact match. None --deployment-id text Filter by the id of the deployment a decision requirement definition belongs to. None --name-like text Filter by decision requirements definition names that the parameter is a substring of. None --name text Filter by decision requirements definition name. None --decision-requirements-definition-id-in text Filter by decision requirements definition ids. None --decision-requirements-definition-id text Filter by decision requirements definition id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionRequirementsDefinitions"},{"location":"commands/get/#cctlnbspget-decisionrequirementsdefinitionscount","text":"Get Decision Requirements Definition Count Requests the number of decision requirements definitions that fulfill the query criteria. Takes the same filtering parameters as the Get Decision Requirements Definitions method. URL: /decision-requirements-definition/count Schema: - Usage: cctl&nbsp;get decisionRequirementsDefinitionsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --include-decision-requirements-definitions-without-tenant-id / --not-include-decision-requirements-definitions-without-tenant-id boolean Include decision requirements definitions which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include decision requirements definitions which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A decision requirements definition must have one of the given tenant ids. None --resource-name-like text Filter by names of those decision requirements definition resources that the parameter is a substring of. None --resource-name text Filter by the name of the decision requirements definition resource. Exact match. None --latest-version / --not-latest-version boolean Only include those decision requirements definitions that are latest versions. Value may only be true , as false is the default behavior. None --version text Filter by decision requirements definition version. None --category-like text Filter by decision requirements definition categories that the parameter is a substring of. None --category text Filter by decision requirements definition category. Exact match. None --key-like text Filter by decision requirements definition keys that the parameter is a substring of. None --key text Filter by decision requirements definition key, i.e., the id in the DMN 1.3 XML. Exact match. None --deployment-id text Filter by the id of the deployment a decision requirement definition belongs to. None --name-like text Filter by decision requirements definition names that the parameter is a substring of. None --name text Filter by decision requirements definition name. None --decision-requirements-definition-id-in text Filter by decision requirements definition ids. None --decision-requirements-definition-id text Filter by decision requirements definition id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionRequirementsDefinitionsCount"},{"location":"commands/get/#cctlnbspget-decisionstatistics","text":"Get DRD Statistics Retrieves evaluation statistics of a given decision requirements definition. URL: /history/decision-requirements-definition/{id}/statistics Schema: - Usage: cctl&nbsp;get decisionStatistics [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --decision-instance-id text Restrict query results to be based only on specific evaluation instance of a given decision requirements definition. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"decisionStatistics"},{"location":"commands/get/#cctlnbspget-deployedform","text":"Get Deployed Form Retrieves the deployed form that is referenced from a given task. For further information please refer to the User Guide . URL: /task/{id}/deployed-form Schema: - Usage: cctl&nbsp;get deployedForm [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"deployedForm"},{"location":"commands/get/#cctlnbspget-deployedstartform","text":"Get Deployed Start Form Retrieves the deployed form that can be referenced from a start event. For further information please refer to User Guide . URL: /process-definition/{id}/deployed-start-form Schema: - Usage: cctl&nbsp;get deployedStartForm [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"deployedStartForm"},{"location":"commands/get/#cctlnbspget-deployedstartformbykey","text":"Get Deployed Start Form Retrieves the deployed form that can be referenced from a start event. For further information please refer to User Guide . URL: /process-definition/key/{key}/deployed-start-form Schema: - Usage: cctl&nbsp;get deployedStartFormByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"deployedStartFormByKey"},{"location":"commands/get/#cctlnbspget-deployedstartformbykeyandtenantid","text":"Get Deployed Start Form Retrieves the deployed form that can be referenced from a start event. For further information please refer to User Guide . URL: /process-definition/key/{key}/tenant-id/{tenant-id}/deployed-start-form Schema: - Usage: cctl&nbsp;get deployedStartFormByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"deployedStartFormByKeyAndTenantId"},{"location":"commands/get/#cctlnbspget-deployment","text":"Get Retrieves a deployment by id, according to the Deployment interface of the engine. URL: /deployment/{id} Schema: - Usage: cctl&nbsp;get deployment [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"deployment"},{"location":"commands/get/#cctlnbspget-deploymentresource","text":"Get Resource Retrieves a deployment resource by resource id for the given deployment. URL: /deployment/{id}/resources/{resourceId} Schema: - Usage: cctl&nbsp;get deploymentResource [OPTIONS] RESOURCEID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"deploymentResource"},{"location":"commands/get/#cctlnbspget-deploymentresourcedata","text":"Get Resource (Binary) Retrieves the binary content of a deployment resource for the given deployment by id. URL: /deployment/{id}/resources/{resourceId}/data Schema: - Usage: cctl&nbsp;get deploymentResourceData [OPTIONS] RESOURCEID ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"deploymentResourceData"},{"location":"commands/get/#cctlnbspget-deploymentresources","text":"Get Resources Retrieves all deployment resources of a given deployment. URL: /deployment/{id}/resources Schema: - Usage: cctl&nbsp;get deploymentResources [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"deploymentResources"},{"location":"commands/get/#cctlnbspget-deployments","text":"Get List Queries for deployments that fulfill given parameters. Parameters may be the properties of deployments, such as the id or name or a range of the deployment time. The size of the result set can be retrieved by using the Get Deployment count method. URL: /deployment Schema: - Usage: cctl&nbsp;get deployments [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --before text Restricts to all deployments before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --after text Restricts to all deployments after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --include-deployments-without-tenant-id / --not-include-deployments-without-tenant-id boolean Include deployments which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include deployments which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A deployment must have one of the given tenant ids. None --without-source / --not-without-source boolean Filter by the deployment source whereby source is equal to null . None --source text Filter by the deployment source. None --name-like text Filter by the deployment name that the parameter is a substring of. The parameter can include the wildcard % to express like-strategy such as: starts with ( % name), ends with (name % ) or contains ( % name % ). None --name text Filter by the deployment name. Exact match. None --id text Filter by deployment id None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"deployments"},{"location":"commands/get/#cctlnbspget-deploymentscount","text":"Get List Count Queries for the number of deployments that fulfill given parameters. Takes the same parameters as the Get Deployments method. URL: /deployment/count Schema: - Usage: cctl&nbsp;get deploymentsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --before text Restricts to all deployments before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --after text Restricts to all deployments after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --include-deployments-without-tenant-id / --not-include-deployments-without-tenant-id boolean Include deployments which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include deployments which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A deployment must have one of the given tenant ids. None --without-source / --not-without-source boolean Filter by the deployment source whereby source is equal to null . None --source text Filter by the deployment source. None --name-like text Filter by the deployment name that the parameter is a substring of. The parameter can include the wildcard % to express like-strategy such as: starts with ( % name), ends with (name % ) or contains ( % name % ). None --name text Filter by the deployment name. Exact match. None --id text Filter by deployment id None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"deploymentsCount"},{"location":"commands/get/#cctlnbspget-errordetailshistoricexternaltasklog","text":"Get External Task Log Error Details Retrieves the corresponding error details of the passed historic external task log by id. URL: /history/external-task-log/{id}/error-details Schema: - Usage: cctl&nbsp;get errorDetailsHistoricExternalTaskLog [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"errorDetailsHistoricExternalTaskLog"},{"location":"commands/get/#cctlnbspget-eventsubscriptions","text":"Get List Queries for event subscriptions that fulfill given parameters. The size of the result set can be retrieved by using the Get Event Subscriptions count method. URL: /event-subscription Schema: - Usage: cctl&nbsp;get eventSubscriptions [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --include-event-subscriptions-without-tenant-id / --not-include-event-subscriptions-without-tenant-id boolean Select event subscriptions which have no tenant id. Can be used in combination with tenantIdIn parameter. Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only select subscriptions which have no tenant id. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. Only select subscriptions that belong to one of the given tenant ids. None --activity-id text Only select subscriptions that belong to an activity with the given id. None --process-instance-id text Only select subscriptions that belong to a process instance with the given id. None --execution-id text Only select subscriptions that belong to an execution with the given id. None --event-type text Only select subscriptions for events with the given type. Valid values: message , signal , compensate and conditional . None --event-name text Only select subscriptions for events with the given name. None --event-subscription-id text Only select subscription with the given id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"eventSubscriptions"},{"location":"commands/get/#cctlnbspget-eventsubscriptionscount","text":"Get List Count Queries for the number of event subscriptions that fulfill given parameters. Takes the same parameters as the Get Event Subscriptions method. URL: /event-subscription/count Schema: - Usage: cctl&nbsp;get eventSubscriptionsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --include-event-subscriptions-without-tenant-id / --not-include-event-subscriptions-without-tenant-id boolean Select event subscriptions which have no tenant id. Can be used in combination with tenantIdIn parameter. Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only select subscriptions which have no tenant id. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. Only select subscriptions that belong to one of the given tenant ids. None --activity-id text Only select subscriptions that belong to an activity with the given id. None --process-instance-id text Only select subscriptions that belong to a process instance with the given id. None --execution-id text Only select subscriptions that belong to an execution with the given id. None --event-type text Only select subscriptions for events with the given type. Valid values: message , signal , compensate and conditional . None --event-name text Only select subscriptions for events with the given name. None --event-subscription-id text Only select subscription with the given id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"eventSubscriptionsCount"},{"location":"commands/get/#cctlnbspget-executefiltercount","text":"Execute Filter Count Executes the saved query of the filter by id and returns the count. URL: /filter/{id}/count Schema: - Usage: cctl&nbsp;get executeFilterCount [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"executeFilterCount"},{"location":"commands/get/#cctlnbspget-executefilterlist","text":"Execute Filter List Executes the saved query of the filter by id and returns the result list. URL: /filter/{id}/list Schema: - Usage: cctl&nbsp;get executeFilterList [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"executeFilterList"},{"location":"commands/get/#cctlnbspget-executefiltersingleresult","text":"Execute Filter Single Result Executes the saved query of the filter by id and returns the single result. URL: /filter/{id}/singleResult Schema: - Usage: cctl&nbsp;get executeFilterSingleResult [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"executeFilterSingleResult"},{"location":"commands/get/#cctlnbspget-execution","text":"Get Execution Retrieves an execution by id, according to the Execution interface in the engine. URL: /execution/{id} Schema: - Usage: cctl&nbsp;get execution [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"execution"},{"location":"commands/get/#cctlnbspget-executions","text":"Get Executions Queries for the executions that fulfill given parameters. Parameters may be static as well as dynamic runtime properties of executions. The size of the result set can be retrieved by using the Get Execution Count method. URL: /execution Schema: - Usage: cctl&nbsp;get executions [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match all variable values provided in variables and processVariables case- insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match all variable names provided in variables and processVariables case- insensitively. If set to true variableName and variablename are treated as equal. None --process-variables text Only include executions that belong to a process instance with variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to. key and value may not contain underscore or comma characters. | None | | --variables | text | Only include executions that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --tenant-id-in | text | Filter by a comma-separated list of tenant ids. An execution must have one of the given tenant ids. | None | | --incident-message-like | text | Filter by the incident message that the parameter is a substring of. | None | | --incident-message | text | Filter by the incident message. Exact match. | None | | --incident-type | text | Filter by the incident type. See the User Guide for a list of incident types. | None | | --incident-id | text | Filter by the incident id. | None | | --suspended / --not-suspended | boolean | Only include suspended executions. Value may only be true , as false is the default behavior. | None | | --active / --not-active | boolean | Only include active executions. Value may only be true , as false is the default behavior. | None | | --message-event-subscription-name | text | Select only those executions that expect a message of the given name. | None | | --signal-event-subscription-name | text | Select only those executions that expect a signal of the given name. | None | | --activity-id | text | Filter by the id of the activity the execution currently executes. | None | | --process-instance-id | text | Filter by the id of the process instance the execution belongs to. | None | | --process-definition-key | text | Filter by the key of the process definition the executions run on. | None | | --process-definition-id | text | Filter by the process definition the executions run on. | None | | --business-key | text | Filter by the business key of the process instances the executions belong to. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"executions"},{"location":"commands/get/#cctlnbspget-executionscount","text":"Get Execution Count Queries for the number of executions that fulfill given parameters. Takes the same parameters as the Get Executions method. URL: /execution/count Schema: - Usage: cctl&nbsp;get executionsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match all variable values provided in variables and processVariables case- insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match all variable names provided in variables and processVariables case- insensitively. If set to true variableName and variablename are treated as equal. None --process-variables text Only include executions that belong to a process instance with variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to. key and value may not contain underscore or comma characters. | None | | --variables | text | Only include executions that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --tenant-id-in | text | Filter by a comma-separated list of tenant ids. An execution must have one of the given tenant ids. | None | | --incident-message-like | text | Filter by the incident message that the parameter is a substring of. | None | | --incident-message | text | Filter by the incident message. Exact match. | None | | --incident-type | text | Filter by the incident type. See the User Guide for a list of incident types. | None | | --incident-id | text | Filter by the incident id. | None | | --suspended / --not-suspended | boolean | Only include suspended executions. Value may only be true , as false is the default behavior. | None | | --active / --not-active | boolean | Only include active executions. Value may only be true , as false is the default behavior. | None | | --message-event-subscription-name | text | Select only those executions that expect a message of the given name. | None | | --signal-event-subscription-name | text | Select only those executions that expect a signal of the given name. | None | | --activity-id | text | Filter by the id of the activity the execution currently executes. | None | | --process-instance-id | text | Filter by the id of the process instance the execution belongs to. | None | | --process-definition-key | text | Filter by the key of the process definition the executions run on. | None | | --process-definition-id | text | Filter by the process definition the executions run on. | None | | --business-key | text | Filter by the business key of the process instances the executions belong to. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"executionsCount"},{"location":"commands/get/#cctlnbspget-externaltask","text":"Get Retrieves an external task by id, corresponding to the ExternalTask interface in the engine. URL: /external-task/{id} Schema: - Usage: cctl&nbsp;get externalTask [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"externalTask"},{"location":"commands/get/#cctlnbspget-externaltaskerrordetails","text":"Get Error Details Retrieves the error details in the context of a running external task by id. URL: /external-task/{id}/errorDetails Schema: - Usage: cctl&nbsp;get externalTaskErrorDetails [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"externalTaskErrorDetails"},{"location":"commands/get/#cctlnbspget-externaltasks","text":"Get List Queries for the external tasks that fulfill given parameters. Parameters may be static as well as dynamic runtime properties of executions. The size of the result set can be retrieved by using the Get External Task Count method. URL: /external-task Schema: - Usage: cctl&nbsp;get externalTasks [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --priority-lower-than-or-equals text Only include jobs with a priority lower than or equal to the given value. Value must be a valid long value. None --priority-higher-than-or-equals text Only include jobs with a priority higher than or equal to the given value. Value must be a valid long value. None --suspended / --not-suspended boolean Only include suspended tasks. Value may only be true , as false matches any external task. None --active / --not-active boolean Only include active tasks. Value may only be true , as false matches any external task. None --tenant-id-in text Filter by a comma-separated list of tenant ids. An external task must have one of the given tenant ids. None --process-definition-id text Filter by the id of the process definition that an external task belongs to. None --process-instance-id-in text Filter by a comma-separated list of process instance ids that an external task may belong to. None --process-instance-id text Filter by the id of the process instance that an external task belongs to. None --execution-id text Filter by the id of the execution that an external task belongs to. None --activity-id-in text Filter by the comma-separated list of ids of the activities that an external task is created for. None --activity-id text Filter by the id of the activity that an external task is created for. None --lock-expiration-before text Restrict to external tasks that have a lock that expires before a given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --lock-expiration-after text Restrict to external tasks that have a lock that expires after a given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --no-retries-left / --not-no-retries-left boolean Only include external tasks that have 0 retries. Value may only be true , as false matches any external task. None --with-retries-left / --not-with-retries-left boolean Only include external tasks that have a positive (> 0) number of retries (or null ). Value may only be true , as false matches any external task. None --not-locked / --not-not-locked boolean Only include external tasks that are currently not locked (i.e., they have no lock or it has expired). Value may only be true , as false matches any external task. None --locked / --not-locked boolean Only include external tasks that are currently locked (i.e., they have a lock time and it has not expired). Value may only be true , as false matches any external task. None --worker-id text Filter by the id of the worker that the task was most recently locked by. None --topic-name text Filter by an external task topic. None --external-task-id-in text Filter by the comma-separated list of external task ids. None --external-task-id text Filter by an external task's id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"externalTasks"},{"location":"commands/get/#cctlnbspget-externaltaskscount","text":"Get List Count Queries for the number of external tasks that fulfill given parameters. Takes the same parameters as the Get External Tasks method. URL: /external-task/count Schema: - Usage: cctl&nbsp;get externalTasksCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --priority-lower-than-or-equals text Only include jobs with a priority lower than or equal to the given value. Value must be a valid long value. None --priority-higher-than-or-equals text Only include jobs with a priority higher than or equal to the given value. Value must be a valid long value. None --suspended / --not-suspended boolean Only include suspended tasks. Value may only be true , as false matches any external task. None --active / --not-active boolean Only include active tasks. Value may only be true , as false matches any external task. None --tenant-id-in text Filter by a comma-separated list of tenant ids. An external task must have one of the given tenant ids. None --process-definition-id text Filter by the id of the process definition that an external task belongs to. None --process-instance-id-in text Filter by a comma-separated list of process instance ids that an external task may belong to. None --process-instance-id text Filter by the id of the process instance that an external task belongs to. None --execution-id text Filter by the id of the execution that an external task belongs to. None --activity-id-in text Filter by the comma-separated list of ids of the activities that an external task is created for. None --activity-id text Filter by the id of the activity that an external task is created for. None --lock-expiration-before text Restrict to external tasks that have a lock that expires before a given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --lock-expiration-after text Restrict to external tasks that have a lock that expires after a given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --no-retries-left / --not-no-retries-left boolean Only include external tasks that have 0 retries. Value may only be true , as false matches any external task. None --with-retries-left / --not-with-retries-left boolean Only include external tasks that have a positive (> 0) number of retries (or null ). Value may only be true , as false matches any external task. None --not-locked / --not-not-locked boolean Only include external tasks that are currently not locked (i.e., they have no lock or it has expired). Value may only be true , as false matches any external task. None --locked / --not-locked boolean Only include external tasks that are currently locked (i.e., they have a lock time and it has not expired). Value may only be true , as false matches any external task. None --worker-id text Filter by the id of the worker that the task was most recently locked by. None --topic-name text Filter by an external task topic. None --external-task-id-in text Filter by the comma-separated list of external task ids. None --external-task-id text Filter by an external task's id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"externalTasksCount"},{"location":"commands/get/#cctlnbspget-filtercount","text":"Get Filter Count Retrieves the number of filters that fulfill a provided query. Corresponds to the size of the result set when using the Get Filters method. URL: /filter/count Schema: - Usage: cctl&nbsp;get filterCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --owner text Filter by the user id of the owner of the filter. None --name-like text Filter by the name that the parameter is a substring of. None --name text Filter by the name of the filter. None --resource-type text Filter by the resource type of the filter, e.g., Task . None --filter-id text Filter by the id of the filter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"filterCount"},{"location":"commands/get/#cctlnbspget-filterlist","text":"Get Filters Queries for a list of filters using a list of parameters. The size of the result set can be retrieved by using the Get Filter Count method. URL: /filter Schema: - Usage: cctl&nbsp;get filterList [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --item-count / --not-item-count boolean If set to true , each filter result will contain an itemCount property with the number of items matched by the filter itself. None --owner text Filter by the user id of the owner of the filter. None --name-like text Filter by the name that the parameter is a substring of. None --name text Filter by the name of the filter. None --resource-type text Filter by the resource type of the filter, e.g., Task . None --filter-id text Filter by the id of the filter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"filterList"},{"location":"commands/get/#cctlnbspget-findcleanupjob","text":"Find clean up history job (GET) Deprecated! Use GET /history/cleanup/jobs instead. Finds history cleanup job (See History cleanup ). URL: /history/cleanup/job Schema: - Usage: cctl&nbsp;get findCleanupJob [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"findCleanupJob"},{"location":"commands/get/#cctlnbspget-findcleanupjobs","text":"Find clean up history jobs (GET) Finds history cleanup jobs (See History cleanup ). URL: /history/cleanup/jobs Schema: - Usage: cctl&nbsp;get findCleanupJobs [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"findCleanupJobs"},{"location":"commands/get/#cctlnbspget-form","text":"Get Form Key Retrieves the form key for a task. The form key corresponds to the FormData#formKey property in the engine. This key can be used to do task-specific form rendering in client applications. Additionally, the context path of the containing process application is returned. URL: /task/{id}/form Schema: - Usage: cctl&nbsp;get form [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"form"},{"location":"commands/get/#cctlnbspget-formvariables","text":"Get Task Form Variables Retrieves the form variables for a task. The form variables take form data specified on the task into account. If form fields are defined, the variable types and default values of the form fields are taken into account. URL: /task/{id}/form-variables Schema: - Usage: cctl&nbsp;get formVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true). If set to true, a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false, a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --variable-names | text | A comma-separated list of variable names. Allows restricting the list of requested variables to the variable names in the list. It is best practice to restrict the list of variables to the variables actually required by the form in order to minimize fetching of data. If the query parameter is ommitted all variables are fetched. If the query parameter contains non-existent variable names, the variable names are ignored. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"formVariables"},{"location":"commands/get/#cctlnbspget-group","text":"Get Group Retrieves a group by id. URL: /group/{id} Schema: - Usage: cctl&nbsp;get group [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"group"},{"location":"commands/get/#cctlnbspget-groupcount","text":"Get List Count Queries for groups using a list of parameters and retrieves the count. URL: /group/count Schema: - Usage: cctl&nbsp;get groupCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --member-of-tenant text Only retrieve groups which are members of the given tenant. None --member text Only retrieve groups where the given user id is a member of. None --type text Filter by the type of the group. None --name-like text Filter by the name that the parameter is a substring of. None --name text Filter by the name of the group. None --id-in text Filter by a comma seperated list of group ids. None --id text Filter by the id of the group. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"groupCount"},{"location":"commands/get/#cctlnbspget-groupinfo","text":"Get a User's Groups Gets the groups of a user by id and includes all users that share a group with the given user. URL: /identity/groups Schema: - Usage: cctl&nbsp;get groupInfo [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --user-id text The id of the user to get the groups for. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"groupInfo"},{"location":"commands/get/#cctlnbspget-historicactivityinstance","text":"Get Retrieves a historic activity instance by id, according to the HistoricActivityInstance interface in the engine. URL: /history/activity-instance/{id} Schema: - Usage: cctl&nbsp;get historicActivityInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicActivityInstance"},{"location":"commands/get/#cctlnbspget-historicactivityinstances","text":"Get List Queries for historic activity instances that fulfill the given parameters. The size of the result set can be retrieved by using the Get Historic Activity Instance Count method. URL: /history/activity-instance Schema: - Usage: cctl&nbsp;get historicActivityInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --without-tenant-id / --not-without-tenant-id boolean Only include historic activity instances that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of ids. An activity instance must have one of the given tenant ids. None --finished-after text Restrict to instances that were finished after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --finished-before text Restrict to instances that were finished before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --started-after text Restrict to instances that were started after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --started-before text Restrict to instances that were started before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --complete-scope / --not-complete-scope boolean Only include activity instances which completed a scope. Value may only be true , as false behaves the same as when the property is not set. None --canceled / --not-canceled boolean Only include canceled activity instances. Value may only be true , as false behaves the same as when the property is not set. None --unfinished / --not-unfinished boolean Only include unfinished activity instances. Value may only be true , as false behaves the same as when the property is not set. None --finished / --not-finished boolean Only include finished activity instances. Value may only be true , as false behaves the same as when the property is not set. None --task-assignee text Only include activity instances that are user tasks and assigned to a given user. None --activity-type text Filter by activity type. None --activity-name text Filter by the activity name (according to BPMN 2.0 XML). None --activity-id text Filter by the activity id (according to BPMN 2.0 XML). None --execution-id text Filter by the id of the execution that executed the activity instance. None --process-definition-id text Filter by process definition id. None --process-instance-id text Filter by process instance id. None --activity-instance-id text Filter by activity instance id. None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicActivityInstances"},{"location":"commands/get/#cctlnbspget-historicactivityinstancescount","text":"Get List Count Queries for the number of historic activity instances that fulfill the given parameters. Takes the same parameters as the Get Historic Activity Instance method. URL: /history/activity-instance/count Schema: - Usage: cctl&nbsp;get historicActivityInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --without-tenant-id / --not-without-tenant-id boolean Only include historic activity instances that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of ids. An activity instance must have one of the given tenant ids. None --finished-after text Restrict to instances that were finished after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --finished-before text Restrict to instances that were finished before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --started-after text Restrict to instances that were started after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --started-before text Restrict to instances that were started before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --complete-scope / --not-complete-scope boolean Only include activity instances which completed a scope. Value may only be true , as false behaves the same as when the property is not set. None --canceled / --not-canceled boolean Only include canceled activity instances. Value may only be true , as false behaves the same as when the property is not set. None --unfinished / --not-unfinished boolean Only include unfinished activity instances. Value may only be true , as false behaves the same as when the property is not set. None --finished / --not-finished boolean Only include finished activity instances. Value may only be true , as false behaves the same as when the property is not set. None --task-assignee text Only include activity instances that are user tasks and assigned to a given user. None --activity-type text Filter by activity type. None --activity-name text Filter by the activity name (according to BPMN 2.0 XML). None --activity-id text Filter by the activity id (according to BPMN 2.0 XML). None --execution-id text Filter by the id of the execution that executed the activity instance. None --process-definition-id text Filter by process definition id. None --process-instance-id text Filter by process instance id. None --activity-instance-id text Filter by activity instance id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicActivityInstancesCount"},{"location":"commands/get/#cctlnbspget-historicactivitystatistics","text":"Get Historic Activity Statistics Retrieves historic statistics of a given process definition, grouped by activities. These statistics include the number of running activity instances and, optionally, the number of canceled activity instances, finished activity instances and activity instances which completed a scope (i.e., in BPMN 2.0 manner: a scope is completed by an activity instance when the activity instance consumed a token but did not emit a new token). Note: This only includes historic data. URL: /history/process-definition/{id}/statistics Schema: - Usage: cctl&nbsp;get historicActivityStatistics [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --process-instance-id-in text Restrict to process instances with the given IDs. The IDs must be provided as a comma- separated list. None --finished-after text Restrict to process instances that were finished after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --finished-before text Restrict to process instances that were finished before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --started-after text Restrict to process instances that were started after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --started-before text Restrict to process instances that were started before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --incidents / --not-incidents boolean Whether to include the number of incidents. Valid values are true or false . Default: false . None --complete-scope / --not-complete-scope boolean Whether to include the number of activity instances which completed a scope in the result or not. Valid values are true or false . Default: false . None --finished / --not-finished boolean Whether to include the number of finished activity instances in the result or not. Valid values are true or false . Default: false . None --canceled / --not-canceled boolean Whether to include the number of canceled activity instances in the result or not. Valid values are true or false . Default: false . None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicActivityStatistics"},{"location":"commands/get/#cctlnbspget-historicbatch","text":"Get Historic Batch Retrieves a historic batch by id, according to the HistoricBatch interface in the engine. URL: /history/batch/{id} Schema: - Usage: cctl&nbsp;get historicBatch [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicBatch"},{"location":"commands/get/#cctlnbspget-historicbatches","text":"Get Historic Batches Queries for historic batches that fulfill given parameters. Parameters may be the properties of batches, such as the id or type. The size of the result set can be retrieved by using the Get Historic Batch Count method. URL: /history/batch Schema: - Usage: cctl&nbsp;get historicBatches [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --without-tenant-id / --not-without-tenant-id boolean Only include batches which belong to no tenant. Value can effectively only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A batch matches if it has one of the given tenant ids. None --completed / --not-completed boolean Filter completed or not completed batches. If the value is true , only completed batches, i.e., end time is set, are returned. Otherwise, if the value is false , only running batches, i.e., end time is null, are returned. None --type text Filter by batch type. See the User Guide for more information about batch types. None --batch-id text Filter by batch id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicBatches"},{"location":"commands/get/#cctlnbspget-historicbatchescount","text":"Get Historic Batch Count Requests the number of historic batches that fulfill the query criteria. Takes the same filtering parameters as the Get Historic Batches method. URL: /history/batch/count Schema: - Usage: cctl&nbsp;get historicBatchesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --without-tenant-id / --not-without-tenant-id boolean Only include batches which belong to no tenant. Value can effectively only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A batch matches if it has one of the given tenant ids. None --completed / --not-completed boolean Filter completed or not completed batches. If the value is true , only completed batches, i.e., end time is set, are returned. Otherwise, if the value is false , only running batches, i.e., end time is null, are returned. None --type text Filter by batch type. See the User Guide for more information about batch types. None --batch-id text Filter by batch id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicBatchesCount"},{"location":"commands/get/#cctlnbspget-historicdecisioninstance","text":"Get Historic Decision Instance Retrieves a historic decision instance by id, according to the HistoricDecisionInstance interface in the engine. URL: /history/decision-instance/{id} Schema: - Usage: cctl&nbsp;get historicDecisionInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --disable-custom-object-deserialization / --not-disable-custom-object-deserialization boolean Disables deserialization of input and output values that are custom objects. Value may only be true , as false is the default behavior. None --disable-binary-fetching / --not-disable-binary-fetching boolean Disables fetching of byte array input and output values. Value may only be true , as false is the default behavior. None --include-outputs / --not-include-outputs boolean Include output values in the result. Value may only be true , as false is the default behavior. None --include-inputs / --not-include-inputs boolean Include input values in the result. Value may only be true , as false is the default behavior. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicDecisionInstance"},{"location":"commands/get/#cctlnbspget-historicdecisioninstances","text":"Get Historic Decision Instances Queries for historic decision instances that fulfill the given parameters. The size of the result set can be retrieved by using the Get Historic Decision Instance Count method. URL: /history/decision-instance Schema: - Usage: cctl&nbsp;get historicDecisionInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --disable-custom-object-deserialization / --not-disable-custom-object-deserialization boolean Disables deserialization of input and output values that are custom objects. Value may only be true , as false is the default behavior. None --disable-binary-fetching / --not-disable-binary-fetching boolean Disables fetching of byte array input and output values. Value may only be true , as false is the default behavior. None --include-outputs / --not-include-outputs boolean Include output values in the result. Value may only be true , as false is the default behavior. None --include-inputs / --not-include-inputs boolean Include input values in the result. Value may only be true , as false is the default behavior. None --decision-requirements-definition-key text Filter by the key of the decision requirements definition the instances belongs to. None --decision-requirements-definition-id text Filter by the decision requirements definition the instances belongs to. None --root-decision-instances-only / --not-root-decision-instances-only boolean Restrict to instances those are the root decision instance of an evaluation. Value may only be true , as false is the default behavior. None --root-decision-instance-id text Restrict to instances that have a given root decision instance id. This also includes the decision instance with the given id. None --user-id text Restrict to instances that were evaluated by the given user. None --evaluated-after text Restrict to instances that were evaluated after the given date. By default , the date must have the format `yyyy-MM- dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200`. None --evaluated-before text Restrict to instances that were evaluated before the given date. By default , the date must have the format `yyyy-MM- dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200`. None --without-tenant-id / --not-without-tenant-id boolean Only include historic decision instances that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A historic decision instance must have one of the given tenant ids. None --activity-instance-id-in text Filter by the activity instance ids the instances belongs to. Must be a comma-separated list of acitvity instance ids. None --activity-id-in text Filter by the activity ids the instances belongs to. Must be a comma-separated list of acitvity ids. None --case-instance-id text Filter by the case instance the instances belongs to. None --case-definition-key text Filter by the key of the case definition the instances belongs to. None --case-definition-id text Filter by the case definition the instances belongs to. None --process-instance-id text Filter by the process instance the instances belongs to. None --process-definition-key text Filter by the key of the process definition the instances belongs to. None --process-definition-id text Filter by the process definition the instances belongs to. None --decision-definition-name-like text Filter by the name of the decision definition the instances belongs to, that the parameter is a substring of. None --decision-definition-name text Filter by the name of the decision definition the instances belongs to. None --decision-definition-key-in text Filter by the keys of the decision definition the instances belongs to. Must be a comma- separated list of decision definition keys. None --decision-definition-key text Filter by the key of the decision definition the instances belongs to. None --decision-definition-id-in text Filter by the decision definitions the instances belongs to. Must be a comma-separated list of decision definition ids. None --decision-definition-id text Filter by the decision definition the instances belongs to. None --decision-instance-id-in text Filter by decision instance ids. Must be a comma-separated list of decision instance ids. None --decision-instance-id text Filter by decision instance id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicDecisionInstances"},{"location":"commands/get/#cctlnbspget-historicdecisioninstancescount","text":"Get Historic Decision Instance Count Queries for the number of historic decision instances that fulfill the given parameters. Takes the same parameters as the Get Historic Decision Instances method. URL: /history/decision-instance/count Schema: - Usage: cctl&nbsp;get historicDecisionInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --decision-requirements-definition-key text Filter by the key of the decision requirements definition the instances belongs to. None --decision-requirements-definition-id text Filter by the decision requirements definition the instances belongs to. None --root-decision-instances-only / --not-root-decision-instances-only boolean Restrict to instances those are the root decision instance of an evaluation. Value may only be true , as false is the default behavior. None --root-decision-instance-id text Restrict to instances that have a given root decision instance id. This also includes the decision instance with the given id. None --user-id text Restrict to instances that were evaluated by the given user. None --evaluated-after text Restrict to instances that were evaluated after the given date. By default , the date must have the format `yyyy-MM- dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200`. None --evaluated-before text Restrict to instances that were evaluated before the given date. By default , the date must have the format `yyyy-MM- dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200`. None --without-tenant-id / --not-without-tenant-id boolean Only include historic decision instances that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A historic decision instance must have one of the given tenant ids. None --activity-instance-id-in text Filter by the activity instance ids the instances belongs to. Must be a comma-separated list of acitvity instance ids. None --activity-id-in text Filter by the activity ids the instances belongs to. Must be a comma-separated list of acitvity ids. None --case-instance-id text Filter by the case instance the instances belongs to. None --case-definition-key text Filter by the key of the case definition the instances belongs to. None --case-definition-id text Filter by the case definition the instances belongs to. None --process-instance-id text Filter by the process instance the instances belongs to. None --process-definition-key text Filter by the key of the process definition the instances belongs to. None --process-definition-id text Filter by the process definition the instances belongs to. None --decision-definition-name-like text Filter by the name of the decision definition the instances belongs to, that the parameter is a substring of. None --decision-definition-name text Filter by the name of the decision definition the instances belongs to. None --decision-definition-key-in text Filter by the keys of the decision definition the instances belongs to. Must be a comma- separated list of decision definition keys. None --decision-definition-key text Filter by the key of the decision definition the instances belongs to. None --decision-definition-id-in text Filter by the decision definitions the instances belongs to. Must be a comma-separated list of decision definition ids. None --decision-definition-id text Filter by the decision definition the instances belongs to. None --decision-instance-id-in text Filter by decision instance ids. Must be a comma-separated list of decision instance ids. None --decision-instance-id text Filter by decision instance id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicDecisionInstancesCount"},{"location":"commands/get/#cctlnbspget-historicdetail","text":"Get Historic Detail Retrieves a historic detail by id. URL: /history/detail/{id} Schema: - Usage: cctl&nbsp;get historicDetail [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-value / --not-deserialize-value boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"historicDetail"},{"location":"commands/get/#cctlnbspget-historicdetailbinary","text":"Get Historic Detail (Binary) Retrieves the content of a historic variable update by id. Applicable for byte array and file variables. URL: /history/detail/{id}/data Schema: - Usage: cctl&nbsp;get historicDetailBinary [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicDetailBinary"},{"location":"commands/get/#cctlnbspget-historicdetails","text":"Get Historic Details Queries for historic details that fulfill the given parameters. The size of the result set can be retrieved by using the Get Historic Detail Count method. URL: /history/detail Schema: - Usage: cctl&nbsp;get historicDetails [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --max-results | text | Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. | None | | --first-result | text | Pagination of results. Specifies the index of the first result to return. | None | | --sort-order | text | Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. | None | | --sort-by | text | Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. | None | | --occurred-after | text | Restrict to historic details that occured after the given date (including the date). Default format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200. | None | | --occurred-before | text | Restrict to historic details that occured before the given date (including the date). Default format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200. | None | | --initial / --not-initial | boolean | Restrict to historic variable updates that contain only initial variable values. Value may only be true , as false is the default behavior. | None | | --exclude-task-details / --not-exclude-task-details | boolean | Excludes all task-related HistoricDetails , so only items which have no task id set will be selected. When this parameter is used together with taskId , this call is ignored and task details are not excluded. Value may only be true , as false is the default behavior. | None | | --variable-updates / --not-variable-updates | boolean | Only include HistoricVariableUpdates . Value may only be true , as false is the default behavior. | None | | --form-fields / --not-form-fields | boolean | Only include HistoricFormFields . Value may only be true , as false is the default behavior. | None | | --user-operation-id | text | Filter by a user operation id. | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include historic details that belong to no tenant. Value may only be true , as false is the default behavior. | None | | --tenant-id-in | text | Filter by a comma-separated list of tenant ids. | None | | --variable-type-in | text | Only include historic details where the variable updates belong to one of the passed comma-separated list of variable types. A list of all supported variable types can be found here . Note: All non-primitive variables are associated with the type serializable . | None | | --variable-instance-id | text | Filter by variable instance id. | None | | --case-execution-id | text | Filter by case execution id. | None | | --case-instance-id | text | Filter by case instance id. | None | | --activity-instance-id | text | Filter by activity instance id. | None | | --task-id | text | Filter by task id. | None | | --execution-id | text | Filter by execution id. | None | | --process-instance-id-in | text | Only include historic details which belong to one of the passed comma-separated process instance ids. | None | | --process-instance-id | text | Filter by process instance id. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"historicDetails"},{"location":"commands/get/#cctlnbspget-historicdetailscount","text":"Get Historic Detail Count Queries for the number of historic details that fulfill the given parameters. Takes the same parameters as the Get Historic Details method. URL: /history/detail/count Schema: - Usage: cctl&nbsp;get historicDetailsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --occurred-after text Restrict to historic details that occured after the given date (including the date). Default format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200. None --occurred-before text Restrict to historic details that occured before the given date (including the date). Default format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200. None --initial / --not-initial boolean Restrict to historic variable updates that contain only initial variable values. Value may only be true , as false is the default behavior. None --exclude-task-details / --not-exclude-task-details boolean Excludes all task-related HistoricDetails , so only items which have no task id set will be selected. When this parameter is used together with taskId , this call is ignored and task details are not excluded. Value may only be true , as false is the default behavior. None --variable-updates / --not-variable-updates boolean Only include HistoricVariableUpdates . Value may only be true , as false is the default behavior. None --form-fields / --not-form-fields boolean Only include HistoricFormFields . Value may only be true , as false is the default behavior. None --user-operation-id text Filter by a user operation id. None --without-tenant-id / --not-without-tenant-id boolean Only include historic details that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. None --variable-type-in text Only include historic details where the variable updates belong to one of the passed comma-separated list of variable types. A list of all supported variable types can be found here . Note: All non-primitive variables are associated with the type serializable . None --variable-instance-id text Filter by variable instance id. None --case-execution-id text Filter by case execution id. None --case-instance-id text Filter by case instance id. None --activity-instance-id text Filter by activity instance id. None --task-id text Filter by task id. None --execution-id text Filter by execution id. None --process-instance-id-in text Only include historic details which belong to one of the passed comma-separated process instance ids. None --process-instance-id text Filter by process instance id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicDetailsCount"},{"location":"commands/get/#cctlnbspget-historicexternaltasklog","text":"Get External Task Log Retrieves a historic external task log by id. URL: /history/external-task-log/{id} Schema: - Usage: cctl&nbsp;get historicExternalTaskLog [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicExternalTaskLog"},{"location":"commands/get/#cctlnbspget-historicexternaltasklogs","text":"Get External Task Logs Queries for historic external task logs that fulfill the given parameters. The size of the result set can be retrieved by using the Get External Task Log Count method. URL: /history/external-task-log Schema: - Usage: cctl&nbsp;get historicExternalTaskLogs [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --deletion-log / --not-deletion-log boolean Only include deletion logs. Value may only be true , as false is the default behavior. None --success-log / --not-success-log boolean Only include success logs. Value may only be true , as false is the default behavior. None --failure-log / --not-failure-log boolean Only include failure logs. Value may only be true , as false is the default behavior. None --creation-log / --not-creation-log boolean Only include creation logs. Value may only be true , as false is the default behavior. None --priority-higher-than-or-equals text Only include logs for which the associated external task had a priority higher than or equal to the given value. Value must be a valid long value. None --priority-lower-than-or-equals text Only include logs for which the associated external task had a priority lower than or equal to the given value. Value must be a valid long value. None --without-tenant-id / --not-without-tenant-id boolean Only include historic external task log entries that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Only include historic external task log entries which belong to one of the passed and comma-separated tenant ids. None --process-definition-key text Filter by process definition key. None --process-definition-id text Filter by process definition id. None --process-instance-id text Filter by process instance id. None --execution-id-in text Only include historic external task logs which belong to one of the passed execution ids. None --activity-instance-id-in text Only include historic external task logs which belong to one of the passed activity instance ids. None --activity-id-in text Only include historic external task logs which belong to one of the passed activity ids. None --error-message text Filter by external task exception message. None --worker-id text Filter by the id of the worker that the task was most recently locked by. None --topic-name text Filter by an external task topic. None --external-task-id text Filter by external task id. None --log-id text Filter by historic external task log id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicExternalTaskLogs"},{"location":"commands/get/#cctlnbspget-historicexternaltasklogscount","text":"Get External Task Log Count Queries for the number of historic external task logs that fulfill the given parameters. Takes the same parameters as the Get External Task Logs method. URL: /history/external-task-log/count Schema: - Usage: cctl&nbsp;get historicExternalTaskLogsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deletion-log / --not-deletion-log boolean Only include deletion logs. Value may only be true , as false is the default behavior. None --success-log / --not-success-log boolean Only include success logs. Value may only be true , as false is the default behavior. None --failure-log / --not-failure-log boolean Only include failure logs. Value may only be true , as false is the default behavior. None --creation-log / --not-creation-log boolean Only include creation logs. Value may only be true , as false is the default behavior. None --priority-higher-than-or-equals text Only include logs for which the associated external task had a priority higher than or equal to the given value. Value must be a valid long value. None --priority-lower-than-or-equals text Only include logs for which the associated external task had a priority lower than or equal to the given value. Value must be a valid long value. None --without-tenant-id / --not-without-tenant-id boolean Only include historic external task log entries that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Only include historic external task log entries which belong to one of the passed and comma-separated tenant ids. None --process-definition-key text Filter by process definition key. None --process-definition-id text Filter by process definition id. None --process-instance-id text Filter by process instance id. None --execution-id-in text Only include historic external task logs which belong to one of the passed execution ids. None --activity-instance-id-in text Only include historic external task logs which belong to one of the passed activity instance ids. None --activity-id-in text Only include historic external task logs which belong to one of the passed activity ids. None --error-message text Filter by external task exception message. None --worker-id text Filter by the id of the worker that the task was most recently locked by. None --topic-name text Filter by an external task topic. None --external-task-id text Filter by external task id. None --log-id text Filter by historic external task log id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicExternalTaskLogsCount"},{"location":"commands/get/#cctlnbspget-historicidentitylinks","text":"Get Identity Link Logs Queries for historic identity link logs that fulfill given parameters. The size of the result set can be retrieved by using the Get Identity-Link-Log Count method. URL: /history/identity-link-log Schema: - Usage: cctl&nbsp;get historicIdentityLinks [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --without-tenant-id / --not-without-tenant-id boolean Only include historic identity links that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. None --assigner-id text Restricts to identity links that have the given assigner id. None --operation-type text Restricts to identity links that have the given operationType (add/delete). None --process-definition-key text Restricts to identity links that have the given process definition key. None --process-definition-id text Restricts to identity links that have the given process definition id. None --task-id text Restricts to identity links that have the given task id. None --date-after text Restricts to identity links that have the time after the given time. None --date-before text Restricts to identity links that have the time before the given time. None --group-id text Restricts to identity links that have the given group id. None --user-id text Restricts to identity links that have the given user id. None --type text Restricts to identity links that have the given type (candidate/assignee/owner). None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicIdentityLinks"},{"location":"commands/get/#cctlnbspget-historicidentitylinkscount","text":"Get Identity Link Log Count Queries for the number of historic identity link logs that fulfill the given parameters. Takes the same parameters as the Get Identity-Link-Logs method. URL: /history/identity-link-log/count Schema: - Usage: cctl&nbsp;get historicIdentityLinksCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --without-tenant-id / --not-without-tenant-id boolean Only include historic identity links that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. None --assigner-id text Restricts to identity links that have the given assigner id. None --operation-type text Restricts to identity links that have the given operationType (add/delete). None --process-definition-key text Restricts to identity links that have the given process definition key. None --process-definition-id text Restricts to identity links that have the given process definition id. None --task-id text Restricts to identity links that have the given task id. None --date-after text Restricts to identity links that have the time after the given time. None --date-before text Restricts to identity links that have the time before the given time. None --group-id text Restricts to identity links that have the given group id. None --user-id text Restricts to identity links that have the given user id. None --type text Restricts to identity links that have the given type (candidate/assignee/owner). None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicIdentityLinksCount"},{"location":"commands/get/#cctlnbspget-historicincidents","text":"Get Incidents Queries for historic incidents that fulfill given parameters. The size of the result set can be retrieved by using the Get Incident Count method. URL: /history/incident Schema: - Usage: cctl&nbsp;get historicIncidents [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --job-definition-id-in text Restricts to incidents that have one of the given comma-separated job definition ids. None --without-tenant-id / --not-without-tenant-id boolean Only include historic incidents that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Restricts to incidents that have one of the given comma-separated tenant ids. None --deleted / --not-deleted boolean Restricts to incidents that are deleted. None --resolved / --not-resolved boolean Restricts to incidents that are resolved. None --open / --not-open boolean Restricts to incidents that are open. None --history-configuration text Restricts to incidents that have the given parameter set as history configuration. None --configuration text Restricts to incidents that have the given parameter set as configuration. None --root-cause-incident-id text Restricts to incidents that have the given incident id as root cause incident. None --cause-incident-id text Restricts to incidents that have the given incident id as cause incident. None --failed-activity-id text Restricts to incidents that were created due to the failure of an activity with the given id. None --activity-id text Restricts to incidents that belong to an activity with the given id. None --end-time-after text Restricts to incidents that have an endTimeAfter date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --end-time-before text Restricts to incidents that have an endTimeBefore date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --create-time-after text Restricts to incidents that have a createTime date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --create-time-before text Restricts to incidents that have a createTime date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --execution-id text Restricts to incidents that belong to an execution with the given id. None --process-instance-id text Restricts to incidents that belong to a process instance with the given id. None --process-definition-key-in text Restricts to incidents that have one of the given process definition keys. None --process-definition-key text Restricts to incidents that have the given processDefinitionKey. None --process-definition-id text Restricts to incidents that belong to a process definition with the given id. None --incident-message-like text Restricts to incidents that incidents message is a substring of the given value. The string can include the wildcard character '%' to express like-strategy: starts with (string%), ends with (%string) or contains (%string%). None --incident-message text Restricts to incidents that have the given incident message. None --incident-type text Restricts to incidents that belong to the given incident type. See the [User Guide](/manual/develop/user-guide/process-engine/incidents/#incident-types) for a list of incident types. None --incident-id text Restricts to incidents that have the given id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicIncidents"},{"location":"commands/get/#cctlnbspget-historicincidentscount","text":"Get Incident Count Queries for the number of historic incidents that fulfill the given parameters. Takes the same parameters as the Get Incidents method. URL: /history/incident/count Schema: - Usage: cctl&nbsp;get historicIncidentsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --job-definition-id-in text Restricts to incidents that have one of the given comma-separated job definition ids. None --without-tenant-id / --not-without-tenant-id boolean Only include historic incidents that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Restricts to incidents that have one of the given comma-separated tenant ids. None --deleted / --not-deleted boolean Restricts to incidents that are deleted. None --resolved / --not-resolved boolean Restricts to incidents that are resolved. None --open / --not-open boolean Restricts to incidents that are open. None --history-configuration text Restricts to incidents that have the given parameter set as history configuration. None --configuration text Restricts to incidents that have the given parameter set as configuration. None --root-cause-incident-id text Restricts to incidents that have the given incident id as root cause incident. None --cause-incident-id text Restricts to incidents that have the given incident id as cause incident. None --failed-activity-id text Restricts to incidents that were created due to the failure of an activity with the given id. None --activity-id text Restricts to incidents that belong to an activity with the given id. None --end-time-after text Restricts to incidents that have an endTimeAfter date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --end-time-before text Restricts to incidents that have an endTimeBefore date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --create-time-after text Restricts to incidents that have a createTime date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --create-time-before text Restricts to incidents that have a createTime date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --execution-id text Restricts to incidents that belong to an execution with the given id. None --process-instance-id text Restricts to incidents that belong to a process instance with the given id. None --process-definition-key-in text Restricts to incidents that have one of the given process definition keys. None --process-definition-key text Restricts to incidents that have the given processDefinitionKey. None --process-definition-id text Restricts to incidents that belong to a process definition with the given id. None --incident-message-like text Restricts to incidents that incidents message is a substring of the given value. The string can include the wildcard character '%' to express like-strategy: starts with (string%), ends with (%string) or contains (%string%). None --incident-message text Restricts to incidents that have the given incident message. None --incident-type text Restricts to incidents that belong to the given incident type. See the [User Guide](/manual/develop/user-guide/process-engine/incidents/#incident-types) for a list of incident types. None --incident-id text Restricts to incidents that have the given id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicIncidentsCount"},{"location":"commands/get/#cctlnbspget-historicjoblog","text":"Get Job Log Retrieves a historic job log by id. URL: /history/job-log/{id} Schema: - Usage: cctl&nbsp;get historicJobLog [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicJobLog"},{"location":"commands/get/#cctlnbspget-historicjoblogs","text":"Get Job Logs Queries for historic job logs that fulfill the given parameters. The size of the result set can be retrieved by using the Get Job Log Count method. URL: /history/job-log Schema: - Usage: cctl&nbsp;get historicJobLogs [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --deletion-log / --not-deletion-log boolean Only include deletion logs. Value may only be true , as false is the default behavior. None --success-log / --not-success-log boolean Only include success logs. Value may only be true , as false is the default behavior. None --failure-log / --not-failure-log boolean Only include failure logs. Value may only be true , as false is the default behavior. None --creation-log / --not-creation-log boolean Only include creation logs. Value may only be true , as false is the default behavior. None --job-priority-higher-than-or-equals text Only include logs for which the associated job had a priority higher than or equal to the given value. Value must be a valid long value. None --job-priority-lower-than-or-equals text Only include logs for which the associated job had a priority lower than or equal to the given value. Value must be a valid long value. None --hostname text Filter by hostname. None --without-tenant-id / --not-without-tenant-id boolean Only include historic job log entries that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Only include historic job log entries which belong to one of the passed and comma- separated tenant ids. None --deployment-id text Filter by deployment id. None --process-definition-key text Filter by process definition key. None --process-definition-id text Filter by process definition id. None --process-instance-id text Filter by process instance id. None --execution-id-in text Only include historic job logs which belong to one of the passed execution ids. None --failed-activity-id-in text Only include historic job logs which belong to failures of one of the passed activity ids. None --activity-id-in text Only include historic job logs which belong to one of the passed activity ids. None --job-definition-configuration text Filter by job definition configuration. None --job-definition-type text Filter by job definition type. See the User Guide for more information about job definition types. None --job-definition-id text Filter by job definition id. None --job-exception-message text Filter by job exception message. None --job-id text Filter by job id. None --log-id text Filter by historic job log id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicJobLogs"},{"location":"commands/get/#cctlnbspget-historicjoblogscount","text":"Get Job Log Count Queries for the number of historic job logs that fulfill the given parameters. Takes the same parameters as the Get Job Logs method. URL: /history/job-log/count Schema: - Usage: cctl&nbsp;get historicJobLogsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deletion-log / --not-deletion-log boolean Only include deletion logs. Value may only be true , as false is the default behavior. None --success-log / --not-success-log boolean Only include success logs. Value may only be true , as false is the default behavior. None --failure-log / --not-failure-log boolean Only include failure logs. Value may only be true , as false is the default behavior. None --creation-log / --not-creation-log boolean Only include creation logs. Value may only be true , as false is the default behavior. None --job-priority-higher-than-or-equals text Only include logs for which the associated job had a priority higher than or equal to the given value. Value must be a valid long value. None --job-priority-lower-than-or-equals text Only include logs for which the associated job had a priority lower than or equal to the given value. Value must be a valid long value. None --hostname text Filter by hostname. None --without-tenant-id / --not-without-tenant-id boolean Only include historic job log entries that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Only include historic job log entries which belong to one of the passed and comma- separated tenant ids. None --deployment-id text Filter by deployment id. None --process-definition-key text Filter by process definition key. None --process-definition-id text Filter by process definition id. None --process-instance-id text Filter by process instance id. None --execution-id-in text Only include historic job logs which belong to one of the passed execution ids. None --failed-activity-id-in text Only include historic job logs which belong to failures of one of the passed activity ids. None --activity-id-in text Only include historic job logs which belong to one of the passed activity ids. None --job-definition-configuration text Filter by job definition configuration. None --job-definition-type text Filter by job definition type. See the User Guide for more information about job definition types. None --job-definition-id text Filter by job definition id. None --job-exception-message text Filter by job exception message. None --job-id text Filter by job id. None --log-id text Filter by historic job log id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicJobLogsCount"},{"location":"commands/get/#cctlnbspget-historicprocessinstance","text":"Get Retrieves a historic process instance by id, according to the HistoricProcessInstance interface in the engine. URL: /history/process-instance/{id} Schema: - Usage: cctl&nbsp;get historicProcessInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicProcessInstance"},{"location":"commands/get/#cctlnbspget-historicprocessinstancedurationreport","text":"Get Duration Report Retrieves a report about the duration of completed process instances, grouped by a period. These reports include the maximum, minimum and average duration of all completed process instances which were started in a given period. Note: This only includes historic data. URL: /history/process-instance/report Schema: - Usage: cctl&nbsp;get historicProcessInstanceDurationReport [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --started-after text Restrict to instances that were started after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2016-01-23T14:42:45.000+0200 . None --started-before text Restrict to instances that were started before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2016-01-23T14:42:45.000+0200 . None --process-definition-key-in text Filter by process definition keys. Must be a comma-separated list of process definition keys. None --process-definition-id-in text Filter by process definition ids. Must be a comma-separated list of process definition ids. None --period-unit text Mandatory. Specifies the granularity of the report. Valid values are month and quarter . None --report-type text Mandatory. Specifies the type of the report to retrieve. To retrieve a report about the duration of process instances, the value must be set to duration . None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicProcessInstanceDurationReport"},{"location":"commands/get/#cctlnbspget-historicprocessinstances","text":"Get List Queries for historic process instances that fulfill the given parameters. The size of the result set can be retrieved by using the Get Process Instance Count method. URL: /history/process-instance Schema: - Usage: cctl&nbsp;get historicProcessInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match all variable values provided in variables case-insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match all variable names provided in variables case-insensitively. If set to true variableName and variablename are treated as equal. None --variables text Only include process instances that have/had variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . Key and value may not contain underscore or comma characters. | None | | --internally-terminated / --not-internally-terminated | boolean | Restrict to instances that are internallyTerminated. | None | | --externally-terminated / --not-externally-terminated | boolean | Restrict to instances that are externallyTerminated. | None | | --completed / --not-completed | boolean | Restrict to instances that are completed. | None | | --suspended / --not-suspended | boolean | Restrict to instances that are suspended. | None | | --active / --not-active | boolean | Restrict to instances that are active. | None | | --active-activity-id-in | text | Restrict to instances that have an active activity with one of given ids. Filter by a comma-separated list of Strings | None | | --executed-activity-id-in | text | Restrict to instances that executed an activity with one of given ids. Filter by a comma-separated list of Strings | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include historic process instances which belong to no tenant. Value may only be true , as false is the default behavior. | None | | --tenant-id-in | text | Filter by a list of tenant ids. A process instance must have one of the given tenant ids. Filter by a comma-separated list of Strings | None | | --case-instance-id | text | Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id. | None | | --sub-case-instance-id | text | Restrict query to one process instance that has a sub case instance with the given id. | None | | --super-case-instance-id | text | Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id. | None | | --sub-process-instance-id | text | Restrict query to one process instance that has a sub process instance with the given id. | None | | --super-process-instance-id | text | Restrict query to all process instances that are sub process instances of the given process instance. Takes a process instance id. | None | | --started-by | text | Only include process instances that were started by the given user. | None | | --executed-job-before | text | Restrict to instances that executed an job before the given date (inclusive). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --executed-job-after | text | Restrict to instances that executed an job after the given date (inclusive). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --executed-activity-before | text | Restrict to instances that executed an activity before the given date (inclusive). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --executed-activity-after | text | Restrict to instances that executed an activity after the given date (inclusive). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --finished-after | text | Restrict to instances that were finished after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --finished-before | text | Restrict to instances that were finished before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --started-after | text | Restrict to instances that were started after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --started-before | text | Restrict to instances that were started before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --incident-message-like | text | Filter by the incident message that the parameter is a substring of. | None | | --incident-message | text | Filter by the incident message. Exact match. | None | | --incident-status | text | Only include process instances which have an incident in status either open or resolved. To get all process instances, use the query parameter withIncidents. | None | | --incident-type | text | Filter by the incident type. See the User Guide for a list of incident types. | None | | --with-root-incidents / --not-with-root-incidents | boolean | Only include process instances which have a root incident. Value may only be true , as false is the default behavior. | None | | --with-incidents / --not-with-incidents | boolean | Only include process instances which have an incident. Value may only be true , as false is the default behavior. | None | | --unfinished / --not-unfinished | boolean | Only include unfinished process instances. Value may only be true , as false is the default behavior. | None | | --finished / --not-finished | boolean | Only include finished process instances. This flag includes all process instances that are completed or terminated. Value may only be true , as false is the default behavior. | None | | --root-process-instances / --not-root-process-instances | boolean | Restrict the query to all process instances that are top level process instances. | None | | --process-instance-business-key-like | text | Filter by process instance business key that the parameter is a substring of. | None | | --process-instance-business-key | text | Filter by process instance business key. | None | | --process-definition-key-not-in | text | Exclude instances that belong to a set of process definitions. Filter by a comma-separated list of Strings . | None | | --process-definition-name-like | text | Filter by process definition names that the parameter is a substring of. | None | | --process-definition-name | text | Filter by the name of the process definition the instances run on. | None | | --process-definition-key-in | text | Filter by a list of process definition keys. A process instance must have one of the given process definition keys. Filter by a comma-separated list of Strings . | None | | --process-definition-key | text | Filter by the key of the process definition the instances run on. | None | | --process-definition-id | text | Filter by the process definition the instances run on. | None | | --process-instance-ids | text | Filter by process instance ids. Filter by a comma-separated list of Strings . | None | | --process-instance-id | text | Filter by process instance id. | None | | --max-results | text | Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. | None | | --first-result | text | Pagination of results. Specifies the index of the first result to return. | None | | --sort-order | text | Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. | None | | --sort-by | text | Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"historicProcessInstances"},{"location":"commands/get/#cctlnbspget-historicprocessinstancescount","text":"Get List Count Queries for the number of historic process instances that fulfill the given parameters. Takes the same parameters as the Get Process Instances method. URL: /history/process-instance/count Schema: - Usage: cctl&nbsp;get historicProcessInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match all variable values provided in variables case-insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match all variable names provided in variables case-insensitively. If set to true variableName and variablename are treated as equal. None --variables text Only include process instances that have/had variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . Key and value may not contain underscore or comma characters. | None | | --internally-terminated / --not-internally-terminated | boolean | Restrict to instances that are internallyTerminated. | None | | --externally-terminated / --not-externally-terminated | boolean | Restrict to instances that are externallyTerminated. | None | | --completed / --not-completed | boolean | Restrict to instances that are completed. | None | | --suspended / --not-suspended | boolean | Restrict to instances that are suspended. | None | | --active / --not-active | boolean | Restrict to instances that are active. | None | | --active-activity-id-in | text | Restrict to instances that have an active activity with one of given ids. Filter by a comma-separated list of Strings | None | | --executed-activity-id-in | text | Restrict to instances that executed an activity with one of given ids. Filter by a comma-separated list of Strings | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include historic process instances which belong to no tenant. Value may only be true , as false is the default behavior. | None | | --tenant-id-in | text | Filter by a list of tenant ids. A process instance must have one of the given tenant ids. Filter by a comma-separated list of Strings | None | | --case-instance-id | text | Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id. | None | | --sub-case-instance-id | text | Restrict query to one process instance that has a sub case instance with the given id. | None | | --super-case-instance-id | text | Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id. | None | | --sub-process-instance-id | text | Restrict query to one process instance that has a sub process instance with the given id. | None | | --super-process-instance-id | text | Restrict query to all process instances that are sub process instances of the given process instance. Takes a process instance id. | None | | --started-by | text | Only include process instances that were started by the given user. | None | | --executed-job-before | text | Restrict to instances that executed an job before the given date (inclusive). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --executed-job-after | text | Restrict to instances that executed an job after the given date (inclusive). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --executed-activity-before | text | Restrict to instances that executed an activity before the given date (inclusive). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --executed-activity-after | text | Restrict to instances that executed an activity after the given date (inclusive). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --finished-after | text | Restrict to instances that were finished after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --finished-before | text | Restrict to instances that were finished before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --started-after | text | Restrict to instances that were started after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --started-before | text | Restrict to instances that were started before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --incident-message-like | text | Filter by the incident message that the parameter is a substring of. | None | | --incident-message | text | Filter by the incident message. Exact match. | None | | --incident-status | text | Only include process instances which have an incident in status either open or resolved. To get all process instances, use the query parameter withIncidents. | None | | --incident-type | text | Filter by the incident type. See the User Guide for a list of incident types. | None | | --with-root-incidents / --not-with-root-incidents | boolean | Only include process instances which have a root incident. Value may only be true , as false is the default behavior. | None | | --with-incidents / --not-with-incidents | boolean | Only include process instances which have an incident. Value may only be true , as false is the default behavior. | None | | --unfinished / --not-unfinished | boolean | Only include unfinished process instances. Value may only be true , as false is the default behavior. | None | | --finished / --not-finished | boolean | Only include finished process instances. This flag includes all process instances that are completed or terminated. Value may only be true , as false is the default behavior. | None | | --root-process-instances / --not-root-process-instances | boolean | Restrict the query to all process instances that are top level process instances. | None | | --process-instance-business-key-like | text | Filter by process instance business key that the parameter is a substring of. | None | | --process-instance-business-key | text | Filter by process instance business key. | None | | --process-definition-key-not-in | text | Exclude instances that belong to a set of process definitions. Filter by a comma-separated list of Strings . | None | | --process-definition-name-like | text | Filter by process definition names that the parameter is a substring of. | None | | --process-definition-name | text | Filter by the name of the process definition the instances run on. | None | | --process-definition-key-in | text | Filter by a list of process definition keys. A process instance must have one of the given process definition keys. Filter by a comma-separated list of Strings . | None | | --process-definition-key | text | Filter by the key of the process definition the instances run on. | None | | --process-definition-id | text | Filter by the process definition the instances run on. | None | | --process-instance-ids | text | Filter by process instance ids. Filter by a comma-separated list of Strings . | None | | --process-instance-id | text | Filter by process instance id. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"historicProcessInstancesCount"},{"location":"commands/get/#cctlnbspget-historictaskinstancereport","text":"Get Task Report (Historic) Retrieves a report of completed tasks. When the report type is set to count , the report contains a list of completed task counts where an entry contains the task name, the definition key of the task, the process definition id, the process definition key, the process definition name and the count of how many tasks were completed for the specified key in a given period. When the report type is set to duration , the report contains a minimum, maximum and average duration value of all completed task instances in a given period. URL: /history/task/report Schema: - Usage: cctl&nbsp;get historicTaskInstanceReport [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --group-by text When the report type is set to count , this parameter is mandatory . Groups the tasks report by a given criterion. Valid values are taskName and processDefinition . None --completed-after text Restrict to tasks that were completed after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --completed-before text Restrict to tasks that were completed before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --period-unit text When the report type is set to duration , this parameter is mandatory . Specifies the granularity of the report. Valid values are month and quarter . None --report-type text Mandatory. Specifies the kind of the report to execute. To retrieve a report about the duration of process instances the value must be set to duration . For a report of the completed tasks in a specific timespan the value must be set to count . None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicTaskInstanceReport"},{"location":"commands/get/#cctlnbspget-historictaskinstances","text":"Get Tasks (Historic) Queries for historic tasks that fulfill the given parameters. The size of the result set can be retrieved by using the Get Task Count method. URL: /history/task Schema: - Usage: cctl&nbsp;get historicTaskInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --without-candidate-groups / --not-without-candidate-groups boolean Only include tasks which have no candidate group. Value may only be true , as false is the default behavior. None --with-candidate-groups / --not-with-candidate-groups boolean Only include tasks which have a candidate group. Value may only be true , as false is the default behavior. None --task-had-candidate-group text Restrict to tasks with a historic identity link to the given candidate group. None --task-had-candidate-user text Restrict to tasks with a historic identity link to the given candidate user. None --task-involved-group text Restrict to tasks with a historic identity link to the given group. None --task-involved-user text Restrict to tasks with a historic identity link to the given user. None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match the variable value provided in taskVariables and processVariables case- insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match the variable name provided in taskVariables and processVariables case- insensitively. If set to true variableName and variablename are treated as equal. None --process-variables text Only include tasks that belong to process instances that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: * eq - equal to; * neq - not equal to; * gt - greater than; * gteq - greater than or equal to; * lt - lower than; * lteq - lower than or equal to; * like ; * notLike . key and value may not contain underscore or comma characters. | None | | --task-variables | text | Only include tasks that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: * eq - equal to; * neq - not equal to; * gt - greater than; * gteq - greater than or equal to; * lt - lower than; * lteq - lower than or equal to; * like . key and value may not contain underscore or comma characters. | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include historic task instances that belong to no tenant. Value may only be true , as false is the default behavior. | None | | --tenant-id-in | text | Filter by a comma-separated list of tenant ids. A task instance must have one of the given tenant ids. | None | | --finished-after | text | Restrict to tasks that were finished after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --finished-before | text | Restrict to tasks that were finished before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --started-after | text | Restrict to tasks that were started after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --started-before | text | Restrict to tasks that were started before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-follow-up-date-after | text | Restrict to tasks that have a followUp date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-follow-up-date-before | text | Restrict to tasks that have a followUp date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-follow-up-date | text | Restrict to tasks that have a followUp date on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --without-task-due-date / --not-without-task-due-date | boolean | Only include tasks which have no due date. Value may only be true , as false is the default behavior. | None | | --task-due-date-after | text | Restrict to tasks that are due after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-due-date-before | text | Restrict to tasks that are due before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-due-date | text | Restrict to tasks that are due on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --process-unfinished / --not-process-unfinished | boolean | Only include tasks of unfinished processes. Value may only be true , as false is the default behavior. | None | | --process-finished / --not-process-finished | boolean | Only include tasks of finished processes. Value may only be true , as false is the default behavior. | None | | --unfinished / --not-unfinished | boolean | Only include unfinished tasks. Value may only be true , as false is the default behavior. | None | | --finished / --not-finished | boolean | Only include finished tasks. Value may only be true , as false is the default behavior. | None | | --unassigned / --not-unassigned | boolean | If set to true , restricts the query to all tasks that are unassigned. | None | | --assigned / --not-assigned | boolean | If set to true , restricts the query to all tasks that are assigned. | None | | --task-priority | text | Restrict to tasks that have the given priority. | None | | --task-owner-like | text | Restrict to tasks that are owned by users with the parameter value as a substring. | None | | --task-owner | text | Restrict to tasks that the given user owns. | None | | --task-assignee-like | text | Restrict to tasks that are assigned to users with the parameter value as a substring. | None | | --task-assignee | text | Restrict to tasks that the given user is assigned to. | None | | --task-delete-reason-like | text | Restrict to tasks that have a delete reason that has the parameter value as a substring. | None | | --task-delete-reason | text | Restrict to tasks that have the given delete reason. | None | | --task-definition-key-in | text | Restrict to tasks that have one of the passed comma-separated task definition keys. | None | | --task-definition-key | text | Restrict to tasks that have the given key. | None | | --task-description-like | text | Restrict to tasks that have a description that has the parameter value as a substring. | None | | --task-description | text | Restrict to tasks that have the given description. | None | | --task-name-like | text | Restrict to tasks that have a name with the given parameter value as substring. | None | | --task-name | text | Restrict to tasks that have the given name. | None | | --activity-instance-id-in | text | Only include tasks which belong to one of the passed comma-separated activity instance ids. | None | | --case-definition-name | text | Restrict to tasks that belong to a case definition with the given name. | None | | --case-definition-key | text | Restrict to tasks that belong to a case definition with the given key. | None | | --case-definition-id | text | Filter by case definition id. | None | | --case-execution-id | text | Filter by the id of the case execution that executed the task. | None | | --case-instance-id | text | Filter by case instance id. | None | | --process-definition-name | text | Restrict to tasks that belong to a process definition with the given name. | None | | --process-definition-key | text | Restrict to tasks that belong to a process definition with the given key. | None | | --process-definition-id | text | Filter by process definition id. | None | | --execution-id | text | Filter by the id of the execution that executed the task. | None | | --process-instance-business-key-like | text | Filter by process instance business key that has the parameter value as a substring. | None | | --process-instance-business-key-in | text | Filter by process instances with one of the give business keys. The keys need to be in a comma-separated list. | None | | --process-instance-business-key | text | Filter by process instance business key. | None | | --process-instance-id | text | Filter by process instance id. | None | | --task-parent-task-id | text | Filter by parent task id. | None | | --task-id | text | Filter by task id. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"historicTaskInstances"},{"location":"commands/get/#cctlnbspget-historictaskinstancescount","text":"Get Task Count Queries for the number of historic tasks that fulfill the given parameters. Takes the same parameters as the Get Tasks (Historic) method. URL: /history/task/count Schema: - Usage: cctl&nbsp;get historicTaskInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --without-candidate-groups / --not-without-candidate-groups boolean Only include tasks which have no candidate group. Value may only be true , as false is the default behavior. None --with-candidate-groups / --not-with-candidate-groups boolean Only include tasks which have a candidate group. Value may only be true , as false is the default behavior. None --task-had-candidate-group text Restrict to tasks with a historic identity link to the given candidate group. None --task-had-candidate-user text Restrict to tasks with a historic identity link to the given candidate user. None --task-involved-group text Restrict to tasks with a historic identity link to the given group. None --task-involved-user text Restrict to tasks with a historic identity link to the given user. None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match the variable value provided in taskVariables and processVariables case- insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match the variable name provided in taskVariables and processVariables case- insensitively. If set to true variableName and variablename are treated as equal. None --process-variables text Only include tasks that belong to process instances that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: * eq - equal to; * neq - not equal to; * gt - greater than; * gteq - greater than or equal to; * lt - lower than; * lteq - lower than or equal to; * like ; * notLike . key and value may not contain underscore or comma characters. | None | | --task-variables | text | Only include tasks that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: * eq - equal to; * neq - not equal to; * gt - greater than; * gteq - greater than or equal to; * lt - lower than; * lteq - lower than or equal to; * like . key and value may not contain underscore or comma characters. | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include historic task instances that belong to no tenant. Value may only be true , as false is the default behavior. | None | | --tenant-id-in | text | Filter by a comma-separated list of tenant ids. A task instance must have one of the given tenant ids. | None | | --finished-after | text | Restrict to tasks that were finished after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --finished-before | text | Restrict to tasks that were finished before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --started-after | text | Restrict to tasks that were started after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --started-before | text | Restrict to tasks that were started before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-follow-up-date-after | text | Restrict to tasks that have a followUp date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-follow-up-date-before | text | Restrict to tasks that have a followUp date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-follow-up-date | text | Restrict to tasks that have a followUp date on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --without-task-due-date / --not-without-task-due-date | boolean | Only include tasks which have no due date. Value may only be true , as false is the default behavior. | None | | --task-due-date-after | text | Restrict to tasks that are due after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-due-date-before | text | Restrict to tasks that are due before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --task-due-date | text | Restrict to tasks that are due on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . | None | | --process-unfinished / --not-process-unfinished | boolean | Only include tasks of unfinished processes. Value may only be true , as false is the default behavior. | None | | --process-finished / --not-process-finished | boolean | Only include tasks of finished processes. Value may only be true , as false is the default behavior. | None | | --unfinished / --not-unfinished | boolean | Only include unfinished tasks. Value may only be true , as false is the default behavior. | None | | --finished / --not-finished | boolean | Only include finished tasks. Value may only be true , as false is the default behavior. | None | | --unassigned / --not-unassigned | boolean | If set to true , restricts the query to all tasks that are unassigned. | None | | --assigned / --not-assigned | boolean | If set to true , restricts the query to all tasks that are assigned. | None | | --task-priority | text | Restrict to tasks that have the given priority. | None | | --task-owner-like | text | Restrict to tasks that are owned by users with the parameter value as a substring. | None | | --task-owner | text | Restrict to tasks that the given user owns. | None | | --task-assignee-like | text | Restrict to tasks that are assigned to users with the parameter value as a substring. | None | | --task-assignee | text | Restrict to tasks that the given user is assigned to. | None | | --task-delete-reason-like | text | Restrict to tasks that have a delete reason that has the parameter value as a substring. | None | | --task-delete-reason | text | Restrict to tasks that have the given delete reason. | None | | --task-definition-key-in | text | Restrict to tasks that have one of the passed comma-separated task definition keys. | None | | --task-definition-key | text | Restrict to tasks that have the given key. | None | | --task-description-like | text | Restrict to tasks that have a description that has the parameter value as a substring. | None | | --task-description | text | Restrict to tasks that have the given description. | None | | --task-name-like | text | Restrict to tasks that have a name with the given parameter value as substring. | None | | --task-name | text | Restrict to tasks that have the given name. | None | | --activity-instance-id-in | text | Only include tasks which belong to one of the passed comma-separated activity instance ids. | None | | --case-definition-name | text | Restrict to tasks that belong to a case definition with the given name. | None | | --case-definition-key | text | Restrict to tasks that belong to a case definition with the given key. | None | | --case-definition-id | text | Filter by case definition id. | None | | --case-execution-id | text | Filter by the id of the case execution that executed the task. | None | | --case-instance-id | text | Filter by case instance id. | None | | --process-definition-name | text | Restrict to tasks that belong to a process definition with the given name. | None | | --process-definition-key | text | Restrict to tasks that belong to a process definition with the given key. | None | | --process-definition-id | text | Filter by process definition id. | None | | --execution-id | text | Filter by the id of the execution that executed the task. | None | | --process-instance-business-key-like | text | Filter by process instance business key that has the parameter value as a substring. | None | | --process-instance-business-key-in | text | Filter by process instances with one of the give business keys. The keys need to be in a comma-separated list. | None | | --process-instance-business-key | text | Filter by process instance business key. | None | | --process-instance-id | text | Filter by process instance id. | None | | --task-parent-task-id | text | Filter by parent task id. | None | | --task-id | text | Filter by task id. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"historicTaskInstancesCount"},{"location":"commands/get/#cctlnbspget-historicvariableinstance","text":"Get Variable Instance Retrieves a historic variable by id. URL: /history/variable-instance/{id} Schema: - Usage: cctl&nbsp;get historicVariableInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"historicVariableInstance"},{"location":"commands/get/#cctlnbspget-historicvariableinstancebinary","text":"Get Variable Instance (Binary) Retrieves the content of a historic variable by id. Applicable for variables that are serialized as binary data. URL: /history/variable-instance/{id}/data Schema: - Usage: cctl&nbsp;get historicVariableInstanceBinary [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicVariableInstanceBinary"},{"location":"commands/get/#cctlnbspget-historicvariableinstances","text":"Get Variable Instances Queries for historic variable instances that fulfill the given parameters. The size of the result set can be retrieved by using the Get Variable Instance Count method. URL: /history/variable-instance Schema: - Usage: cctl&nbsp;get historicVariableInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --max-results | text | Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. | None | | --first-result | text | Pagination of results. Specifies the index of the first result to return. | None | | --sort-order | text | Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. | None | | --sort-by | text | Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include historic variable instances that belong to no tenant. Value may only be true , as false is the default behavior. | None | | --tenant-id-in | text | Only include historic variable instances which belong to one of the passed and comma- separated tenant ids. | None | | --activity-instance-id-in | text | Only include historic variable instances which belong to one of the passed and and comma-separated activity instance ids. | None | | --task-id-in | text | Only include historic variable instances which belong to one of the passed and and comma-separated task ids. | None | | --case-activity-id-in | text | Only include historic variable instances which belong to one of the passed and and comma-separated case activity ids. | None | | --case-execution-id-in | text | Only include historic variable instances which belong to one of the passed and and comma-separated case execution ids. | None | | --case-instance-id | text | Filter by the case instance the variable belongs to. | None | | --execution-id-in | text | Only include historic variable instances which belong to one of the passed and and comma-separated execution ids. | None | | --process-definition-key | text | Filter by a key of the process definition the variable belongs to. | None | | --process-definition-id | text | Filter by the process definition the variable belongs to. | None | | --process-instance-id-in | text | Only include historic variable instances which belong to one of the passed and comma-separated process instance ids. | None | | --process-instance-id | text | Filter by the process instance the variable belongs to. | None | | --include-deleted / --not-include-deleted | boolean | Include variables that has already been deleted during the execution. | None | | --variable-type-in | text | Only include historic variable instances which belong to one of the passed and comma- separated variable types. A list of all supported variable types can be found here . Note: All non-primitive variables are associated with the type 'serializable'. | None | | --variable-values-ignore-case / --not-variable-values-ignore-case | boolean | Match the variable value provided in variableValue case-insensitively. If set to true variableValue and variablevalue are treated as equal. | None | | --variable-names-ignore-case / --not-variable-names-ignore-case | boolean | Match the variable name provided in variableName and variableNameLike case- insensitively. If set to true variableName and variablename are treated as equal. | None | | --variable-value | text | Filter by variable value. Is treated as a String object on server side. | None | | --variable-name-like | text | Restrict to variables with a name like the parameter. | None | | --variable-name | text | Filter by variable name. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"historicVariableInstances"},{"location":"commands/get/#cctlnbspget-historicvariableinstancescount","text":"Get Variable Instance Count Queries for the number of historic variable instances that fulfill the given parameters. Takes the same parameters as the Get Variable Instances method. URL: /history/variable-instance/count Schema: - Usage: cctl&nbsp;get historicVariableInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --without-tenant-id / --not-without-tenant-id boolean Only include historic variable instances that belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Only include historic variable instances which belong to one of the passed and comma- separated tenant ids. None --activity-instance-id-in text Only include historic variable instances which belong to one of the passed and and comma-separated activity instance ids. None --task-id-in text Only include historic variable instances which belong to one of the passed and and comma-separated task ids. None --case-activity-id-in text Only include historic variable instances which belong to one of the passed and and comma-separated case activity ids. None --case-execution-id-in text Only include historic variable instances which belong to one of the passed and and comma-separated case execution ids. None --case-instance-id text Filter by the case instance the variable belongs to. None --execution-id-in text Only include historic variable instances which belong to one of the passed and and comma-separated execution ids. None --process-definition-key text Filter by a key of the process definition the variable belongs to. None --process-definition-id text Filter by the process definition the variable belongs to. None --process-instance-id-in text Only include historic variable instances which belong to one of the passed and comma-separated process instance ids. None --process-instance-id text Filter by the process instance the variable belongs to. None --include-deleted / --not-include-deleted boolean Include variables that has already been deleted during the execution. None --variable-type-in text Only include historic variable instances which belong to one of the passed and comma- separated variable types. A list of all supported variable types can be found here . Note: All non-primitive variables are associated with the type 'serializable'. None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match the variable value provided in variableValue case-insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match the variable name provided in variableName and variableNameLike case- insensitively. If set to true variableName and variablename are treated as equal. None --variable-value text Filter by variable value. Is treated as a String object on server side. None --variable-name-like text Restrict to variables with a name like the parameter. None --variable-name text Filter by variable name. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historicVariableInstancesCount"},{"location":"commands/get/#cctlnbspget-historycleanupconfiguration","text":"Get History Cleanup Configuration Retrieves history cleanup batch window configuration (See History cleanup ). URL: /history/cleanup/configuration Schema: - Usage: cctl&nbsp;get historyCleanupConfiguration [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"historyCleanupConfiguration"},{"location":"commands/get/#cctlnbspget-identitylinks","text":"Get List Gets the identity links for a task by id, which are the users and groups that are in some relation to it (including assignee and owner). URL: /task/{id}/identity-links Schema: - Usage: cctl&nbsp;get identityLinks [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --type text Filter by the type of links to include. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"identityLinks"},{"location":"commands/get/#cctlnbspget-incident","text":"Get Incident Retrieves an incident by ID. URL: /incident/{id} Schema: - Usage: cctl&nbsp;get incident [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"incident"},{"location":"commands/get/#cctlnbspget-incidents","text":"Get List Queries for incidents that fulfill given parameters. The size of the result set can be retrieved by using the Get Incident Count method. URL: /incident Schema: - Usage: cctl&nbsp;get incidents [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --job-definition-id-in text Restricts to incidents that have one of the given comma-separated job definition ids. None --tenant-id-in text Restricts to incidents that have one of the given comma-separated tenant ids. None --configuration text Restricts to incidents that have the given parameter set as configuration. None --root-cause-incident-id text Restricts to incidents that have the given incident id as root cause incident. None --cause-incident-id text Restricts to incidents that have the given incident id as cause incident. None --failed-activity-id text Restricts to incidents that were created due to the failure of an activity with the given id. None --activity-id text Restricts to incidents that belong to an activity with the given id. None --incident-timestamp-after text Restricts to incidents that have an incidentTimestamp date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --incident-timestamp-before text Restricts to incidents that have an incidentTimestamp date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --execution-id text Restricts to incidents that belong to an execution with the given id. None --process-instance-id text Restricts to incidents that belong to a process instance with the given id. None --process-definition-key-in text Restricts to incidents that belong to a process definition with the given keys. Must be a comma-separated list. None --process-definition-id text Restricts to incidents that belong to a process definition with the given id. None --incident-message-like text Restricts to incidents that incidents message is a substring of the given value. The string can include the wildcard character '%' to express like-strategy: starts with ( string% ), ends with ( %string ) or contains ( %string% ). None --incident-message text Restricts to incidents that have the given incident message. None --incident-type text Restricts to incidents that belong to the given incident type. See the User Guide for a list of incident types. None --incident-id text Restricts to incidents that have the given id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"incidents"},{"location":"commands/get/#cctlnbspget-incidentscount","text":"Get List Count Queries for the number of incidents that fulfill given parameters. Takes the same parameters as the Get Incidents method. URL: /incident/count Schema: - Usage: cctl&nbsp;get incidentsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --job-definition-id-in text Restricts to incidents that have one of the given comma-separated job definition ids. None --tenant-id-in text Restricts to incidents that have one of the given comma-separated tenant ids. None --configuration text Restricts to incidents that have the given parameter set as configuration. None --root-cause-incident-id text Restricts to incidents that have the given incident id as root cause incident. None --cause-incident-id text Restricts to incidents that have the given incident id as cause incident. None --failed-activity-id text Restricts to incidents that were created due to the failure of an activity with the given id. None --activity-id text Restricts to incidents that belong to an activity with the given id. None --incident-timestamp-after text Restricts to incidents that have an incidentTimestamp date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --incident-timestamp-before text Restricts to incidents that have an incidentTimestamp date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200 . None --execution-id text Restricts to incidents that belong to an execution with the given id. None --process-instance-id text Restricts to incidents that belong to a process instance with the given id. None --process-definition-key-in text Restricts to incidents that belong to a process definition with the given keys. Must be a comma-separated list. None --process-definition-id text Restricts to incidents that belong to a process definition with the given id. None --incident-message-like text Restricts to incidents that incidents message is a substring of the given value. The string can include the wildcard character '%' to express like-strategy: starts with ( string% ), ends with ( %string ) or contains ( %string% ). None --incident-message text Restricts to incidents that have the given incident message. None --incident-type text Restricts to incidents that belong to the given incident type. See the User Guide for a list of incident types. None --incident-id text Restricts to incidents that have the given id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"incidentsCount"},{"location":"commands/get/#cctlnbspget-interval","text":"Get Metrics in Interval Retrieves a list of metrics, aggregated for a given interval. URL: /metrics Schema: - Usage: cctl&nbsp;get interval [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --aggregate-by-reporter text Aggregate metrics by reporter. None --interval text The interval for which the metrics should be aggregated. Time unit is seconds. Default: The interval is set to 15 minutes (900 seconds). None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --end-date text The end date (exclusive). None --start-date text The start date (inclusive). None --reporter text The name of the reporter (host), on which the metrics was logged. This will have value provided by the hostname configuration property . None --name text The name of the metric. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"interval"},{"location":"commands/get/#cctlnbspget-isuserauthorized","text":"Perform an Authorization Check Performs an authorization check for the currently authenticated user. URL: /authorization/check Schema: - Usage: cctl&nbsp;get isUserAuthorized [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --user-id text The id of the user to check permissions for. The currently authenticated user must have a READ permission for the Authorization resource. If userId is blank, a check for the currently authenticated user is performed. None --resource-id text The id of the resource to check permissions for. If left blank, a check for global permissions on the resource is performed. None --resource-type text An integer representing the resource type to check permissions for. See the User Guide for a list of integer representations of resource types. None --resource-name text String value for the name of the resource to check permissions for. None --permission-name text String value representing the permission name to check for. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"isUserAuthorized"},{"location":"commands/get/#cctlnbspget-job","text":"Get Job Retrieves a job by id, according to the Job interface in the engine. URL: /job/{id} Schema: - Usage: cctl&nbsp;get job [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"job"},{"location":"commands/get/#cctlnbspget-jobdefinition","text":"Get Job Definition Retrieves a job definition by id, according to the JobDefinition interface in the engine. URL: /job-definition/{id} Schema: - Usage: cctl&nbsp;get jobDefinition [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"jobDefinition"},{"location":"commands/get/#cctlnbspget-jobdefinitions","text":"Get Job Definitions Queries for job definitions that fulfill given parameters. The size of the result set can be retrieved by using the Get Job Definition Count method. URL: /job-definition Schema: - Usage: cctl&nbsp;get jobDefinitions [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --include-job-definitions-without-tenant-id / --not-include-job-definitions-without-tenant-id boolean Include job definitions which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include job definitions which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Only include job definitions which belong to one of the passed and comma-separated tenant ids. None --with-overriding-job-priority / --not-with-overriding-job-priority boolean Only include job definitions that have an overriding job priority defined. The only effective value is true . If set to false , this filter is not applied. None --suspended / --not-suspended boolean Only include suspended job definitions. Value may only be true , as false is the default behavior. None --active / --not-active boolean Only include active job definitions. Value may only be true , as false is the default behavior. None --job-configuration text Only include job definitions which exist for the given job configuration. For example: for timer jobs it is the timer configuration. None --job-type text Only include job definitions which exist for the given job type. See the User Guide for more information about job types. None --process-definition-key text Only include job definitions which exist for the given process definition key. None --process-definition-id text Only include job definitions which exist for the given process definition id. None --activity-id-in text Only include job definitions which belong to one of the passed and comma-separated activity ids. None --job-definition-id text Filter by job definition id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"jobDefinitions"},{"location":"commands/get/#cctlnbspget-jobdefinitionscount","text":"Get Job Definition Count Queries for the number of job definitions that fulfill given parameters. Takes the same parameters as the Get Job Definitions method. URL: /job-definition/count Schema: - Usage: cctl&nbsp;get jobDefinitionsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --include-job-definitions-without-tenant-id / --not-include-job-definitions-without-tenant-id boolean Include job definitions which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include job definitions which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Only include job definitions which belong to one of the passed and comma-separated tenant ids. None --with-overriding-job-priority / --not-with-overriding-job-priority boolean Only include job definitions that have an overriding job priority defined. The only effective value is true . If set to false , this filter is not applied. None --suspended / --not-suspended boolean Only include suspended job definitions. Value may only be true , as false is the default behavior. None --active / --not-active boolean Only include active job definitions. Value may only be true , as false is the default behavior. None --job-configuration text Only include job definitions which exist for the given job configuration. For example: for timer jobs it is the timer configuration. None --job-type text Only include job definitions which exist for the given job type. See the User Guide for more information about job types. None --process-definition-key text Only include job definitions which exist for the given process definition key. None --process-definition-id text Only include job definitions which exist for the given process definition id. None --activity-id-in text Only include job definitions which belong to one of the passed and comma-separated activity ids. None --job-definition-id text Filter by job definition id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"jobDefinitionsCount"},{"location":"commands/get/#cctlnbspget-jobs","text":"Get Jobs Queries for jobs that fulfill given parameters. The size of the result set can be retrieved by using the Get Job Count method. URL: /job Schema: - Usage: cctl&nbsp;get jobs [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --include-jobs-without-tenant-id / --not-include-jobs-without-tenant-id boolean Include jobs which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include jobs which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Only include jobs which belong to one of the passed comma-separated tenant ids. None --priority-higher-than-or-equals text Only include jobs with a priority higher than or equal to the given value. Value must be a valid long value. None --priority-lower-than-or-equals text Only include jobs with a priority lower than or equal to the given value. Value must be a valid long value. None --suspended / --not-suspended boolean Only include suspended jobs. Value may only be true , as false is the default behavior. None --active / --not-active boolean Only include active jobs. Value may only be true , as false is the default behavior. None --no-retries-left / --not-no-retries-left boolean Only select jobs which have no retries left. Value may only be true , as false is the default behavior. None --failed-activity-id text Only select jobs that failed due to an exception at an activity with the given id. None --exception-message text Only select jobs that failed due to an exception with the given message. None --with-exception / --not-with-exception boolean Only select jobs that failed due to an exception. Value may only be true , as false is the default behavior. None --create-times text Only select jobs created before or after the given date. Create time expressions are comma-separated and are structured as follows: A valid condition value has the form operator_value . operator is the comparison operator to be used and value the date value as string. Valid operator values are: gt - greater than; lt - lower than. value may not contain underscore or comma characters. | None | | --due-dates | text | Only select jobs where the due date is lower or higher than the given date. Due date expressions are comma-separated and are structured as follows: A valid condition value has the form operator_value . operator is the comparison operator to be used and value the date value as string. Valid operator values are: gt - greater than; lt - lower than. value may not contain underscore or comma characters. | None | | --messages / --not-messages | boolean | Only select jobs that are messages. Cannot be used together with timers . Value may only be true , as false is the default behavior. | None | | --timers / --not-timers | boolean | Only select jobs that are timers. Cannot be used together with messages . Value may only be true , as false is the default behavior. | None | | --executable / --not-executable | boolean | Only select jobs which are executable, i.e., retries > 0 and due date is null or due date is in the past. Value may only be true , as false is the default behavior. | None | | --with-retries-left / --not-with-retries-left | boolean | Only select jobs which have retries left. Value may only be true , as false is the default behavior. | None | | --activity-id | text | Only select jobs which exist for an activity with the given id. | None | | --process-definition-key | text | Filter by the key of the process definition the jobs run on. | None | | --process-definition-id | text | Filter by the id of the process definition the jobs run on. | None | | --execution-id | text | Only select jobs which exist for the given execution. | None | | --process-instance-ids | text | Only select jobs which exist for the given comma-separated list of process instance ids. | None | | --process-instance-id | text | Only select jobs which exist for the given process instance. | None | | --job-definition-id | text | Only select jobs which exist for the given job definition. | None | | --job-ids | text | Filter by a comma-separated list of job ids. | None | | --job-id | text | Filter by job id. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"jobs"},{"location":"commands/get/#cctlnbspget-jobscount","text":"Get Job Count Queries for the number of jobs that fulfill given parameters. Takes the same parameters as the Get Jobs method. URL: /job/count Schema: - Usage: cctl&nbsp;get jobsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --include-jobs-without-tenant-id / --not-include-jobs-without-tenant-id boolean Include jobs which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include jobs which belong to no tenant. Value may only be true , as false is the default behavior. None --tenant-id-in text Only include jobs which belong to one of the passed comma-separated tenant ids. None --priority-higher-than-or-equals text Only include jobs with a priority higher than or equal to the given value. Value must be a valid long value. None --priority-lower-than-or-equals text Only include jobs with a priority lower than or equal to the given value. Value must be a valid long value. None --suspended / --not-suspended boolean Only include suspended jobs. Value may only be true , as false is the default behavior. None --active / --not-active boolean Only include active jobs. Value may only be true , as false is the default behavior. None --no-retries-left / --not-no-retries-left boolean Only select jobs which have no retries left. Value may only be true , as false is the default behavior. None --failed-activity-id text Only select jobs that failed due to an exception at an activity with the given id. None --exception-message text Only select jobs that failed due to an exception with the given message. None --with-exception / --not-with-exception boolean Only select jobs that failed due to an exception. Value may only be true , as false is the default behavior. None --create-times text Only select jobs created before or after the given date. Create time expressions are comma-separated and are structured as follows: A valid condition value has the form operator_value . operator is the comparison operator to be used and value the date value as string. Valid operator values are: gt - greater than; lt - lower than. value may not contain underscore or comma characters. | None | | --due-dates | text | Only select jobs where the due date is lower or higher than the given date. Due date expressions are comma-separated and are structured as follows: A valid condition value has the form operator_value . operator is the comparison operator to be used and value the date value as string. Valid operator values are: gt - greater than; lt - lower than. value may not contain underscore or comma characters. | None | | --messages / --not-messages | boolean | Only select jobs that are messages. Cannot be used together with timers . Value may only be true , as false is the default behavior. | None | | --timers / --not-timers | boolean | Only select jobs that are timers. Cannot be used together with messages . Value may only be true , as false is the default behavior. | None | | --executable / --not-executable | boolean | Only select jobs which are executable, i.e., retries > 0 and due date is null or due date is in the past. Value may only be true , as false is the default behavior. | None | | --with-retries-left / --not-with-retries-left | boolean | Only select jobs which have retries left. Value may only be true , as false is the default behavior. | None | | --activity-id | text | Only select jobs which exist for an activity with the given id. | None | | --process-definition-key | text | Filter by the key of the process definition the jobs run on. | None | | --process-definition-id | text | Filter by the id of the process definition the jobs run on. | None | | --execution-id | text | Only select jobs which exist for the given execution. | None | | --process-instance-ids | text | Only select jobs which exist for the given comma-separated list of process instance ids. | None | | --process-instance-id | text | Only select jobs which exist for the given process instance. | None | | --job-definition-id | text | Only select jobs which exist for the given job definition. | None | | --job-ids | text | Filter by a comma-separated list of job ids. | None | | --job-id | text | Filter by job id. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"jobsCount"},{"location":"commands/get/#cctlnbspget-latestprocessdefinitionbytenantid","text":"Get Retrieves the latest version of the process definition for tenant according to the ProcessDefinition interface in the engine. URL: /process-definition/key/{key}/tenant-id/{tenant-id} Schema: - Usage: cctl&nbsp;get latestProcessDefinitionByTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"latestProcessDefinitionByTenantId"},{"location":"commands/get/#cctlnbspget-localexecutionvariable","text":"Get Local Execution Variable Retrieves a variable from the context of a given execution by id. Does not traverse the parent execution hierarchy. URL: /execution/{id}/localVariables/{varName} Schema: - Usage: cctl&nbsp;get localExecutionVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-value / --not-deserialize-value boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"localExecutionVariable"},{"location":"commands/get/#cctlnbspget-localexecutionvariablebinary","text":"Get Local Execution Variable (Binary) Retrieves a binary variable from the context of a given execution by id. Does not traverse the parent execution hierarchy. Applicable for byte array and file variables. URL: /execution/{id}/localVariables/{varName}/data Schema: - Usage: cctl&nbsp;get localExecutionVariableBinary [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"localExecutionVariableBinary"},{"location":"commands/get/#cctlnbspget-localexecutionvariables","text":"Get Local Execution Variables Retrieves all variables of a given execution by id. URL: /execution/{id}/localVariables Schema: - Usage: cctl&nbsp;get localExecutionVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"localExecutionVariables"},{"location":"commands/get/#cctlnbspget-messageeventsubscription","text":"Get Message Event Subscription Retrieves a message event subscription for a given execution by id and a message name. URL: /execution/{id}/messageSubscriptions/{messageName} Schema: - Usage: cctl&nbsp;get messageEventSubscription [OPTIONS] MESSAGENAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"messageEventSubscription"},{"location":"commands/get/#cctlnbspget-metrics","text":"Get Sum Retrieves the sum (count) for a given metric. URL: /metrics/{metrics-name}/sum Schema: - Usage: cctl&nbsp;get metrics [OPTIONS] METRICS_NAME Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --end-date text The end date (exclusive). None --start-date text The start date (inclusive). None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"metrics"},{"location":"commands/get/#cctlnbspget-passwordpolicy","text":"Get Password Policy A password policy consists of a list of rules that new passwords must follow to be policy compliant. This end point returns a JSON representation of the list of policy rules. More information on password policies in Camunda can be found in the password policy user guide and in the security instructions . URL: /identity/password-policy Schema: - Usage: cctl&nbsp;get passwordPolicy [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"passwordPolicy"},{"location":"commands/get/#cctlnbspget-processdefinition","text":"Get Retrieves a process definition according to the ProcessDefinition interface in the engine. URL: /process-definition/{id} Schema: - Usage: cctl&nbsp;get processDefinition [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"processDefinition"},{"location":"commands/get/#cctlnbspget-processdefinitionbpmn20xml","text":"Get XML Retrieves the BPMN 2.0 XML of a process definition. URL: /process-definition/{id}/xml Schema: - Usage: cctl&nbsp;get processDefinitionBpmn20Xml [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"processDefinitionBpmn20Xml"},{"location":"commands/get/#cctlnbspget-processdefinitionbpmn20xmlbykey","text":"Get XML Retrieves latest version the BPMN 2.0 XML of a process definition. URL: /process-definition/key/{key}/xml Schema: - Usage: cctl&nbsp;get processDefinitionBpmn20XmlByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"processDefinitionBpmn20XmlByKey"},{"location":"commands/get/#cctlnbspget-processdefinitionbpmn20xmlbykeyandtenantid","text":"Get XML Retrieves latest version the BPMN 2.0 XML of a process definition. Returns the XML for the latest version of the process definition for tenant. URL: /process-definition/key/{key}/tenant-id/{tenant-id}/xml Schema: - Usage: cctl&nbsp;get processDefinitionBpmn20XmlByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"processDefinitionBpmn20XmlByKeyAndTenantId"},{"location":"commands/get/#cctlnbspget-processdefinitionbykey","text":"Get Retrieves the latest version of the process definition which belongs to no tenant according to the ProcessDefinition interface in the engine. URL: /process-definition/key/{key} Schema: - Usage: cctl&nbsp;get processDefinitionByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"processDefinitionByKey"},{"location":"commands/get/#cctlnbspget-processdefinitiondiagram","text":"Get Diagram Retrieves the diagram of a process definition. If the process definition's deployment contains an image resource with the same file name as the process definition, the deployed image will be returned by the Get Diagram endpoint. Example: someProcess.bpmn and someProcess.png . Supported file extentions for the image are: svg , png , jpg , and gif . URL: /process-definition/{id}/diagram Schema: - Usage: cctl&nbsp;get processDefinitionDiagram [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"processDefinitionDiagram"},{"location":"commands/get/#cctlnbspget-processdefinitiondiagrambykey","text":"Get Diagram Retrieves the diagram for the latest version of the process definition which belongs to no tenant. If the process definition's deployment contains an image resource with the same file name as the process definition, the deployed image will be returned by the Get Diagram endpoint. Example: someProcess.bpmn and someProcess.png . Supported file extentions for the image are: svg , png , jpg , and gif . URL: /process-definition/key/{key}/diagram Schema: - Usage: cctl&nbsp;get processDefinitionDiagramByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"processDefinitionDiagramByKey"},{"location":"commands/get/#cctlnbspget-processdefinitiondiagrambykeyandtenantid","text":"Get Diagram Retrieves the diagram for the latest version of the process definition for tenant. If the process definition's deployment contains an image resource with the same file name as the process definition, the deployed image will be returned by the Get Diagram endpoint. Example: someProcess.bpmn and someProcess.png . Supported file extentions for the image are: svg , png , jpg , and gif . URL: /process-definition/key/{key}/tenant-id/{tenant-id}/diagram Schema: - Usage: cctl&nbsp;get processDefinitionDiagramByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"processDefinitionDiagramByKeyAndTenantId"},{"location":"commands/get/#cctlnbspget-processdefinitionstatistics","text":"Get Process Instance Statistics Retrieves runtime statistics of the process engine, grouped by process definitions. These statistics include the number of running process instances, optionally the number of failed jobs and also optionally the number of incidents either grouped by incident types or for a specific incident type. Note : This does not include historic data. URL: /process-definition/statistics Schema: - Usage: cctl&nbsp;get processDefinitionStatistics [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --root-incidents / --not-root-incidents boolean Valid values for this property are true or false . If this property has been set to true the result will include the corresponding number of root incidents for each occurred incident type. If it is set to false , the incidents will not be included in the result. Cannot be used in combination with incidentsForType or incidents . None --incidents-for-type text If this property has been set with any incident type (i.e., a string value) the result will only include the number of incidents for the assigned incident type. Cannot be used in combination with incidents . See the User Guide for a list of incident types. None --incidents / --not-incidents boolean Valid values for this property are true or false . If this property has been set to true the result will include the corresponding number of incidents for each occurred incident type. If it is set to false , the incidents will not be included in the result. Cannot be used in combination with incidentsForType . None --failed-jobs / --not-failed-jobs boolean Whether to include the number of failed jobs in the result or not. Valid values are true or false . None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"processDefinitionStatistics"},{"location":"commands/get/#cctlnbspget-processdefinitions","text":"Get List Queries for process definitions that fulfill given parameters. Parameters may be the properties of process definitions, such as the name, key or version. The size of the result set can be retrieved by using the Get Definition Count method. URL: /process-definition Schema: - Usage: cctl&nbsp;get processDefinitions [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --startable-permission-check / --not-startable-permission-check boolean Filter by process definitions which the user is allowed to start in Tasklist. If the user doesn't have these permissions the result will be empty list. The permissions are: * CREATE permission for all Process instances * CREATE_INSTANCE and READ permission on Process definition level None --not-startable-in-tasklist / --not-not-startable-in-tasklist boolean Filter by process definitions which are not startable in Tasklist. None --startable-in-tasklist / --not-startable-in-tasklist boolean Filter by process definitions which are startable in Tasklist.. None --without-version-tag / --not-without-version-tag boolean Only include process definitions without a versionTag . None --version-tag-like text Filter by the version tag that the parameter is a substring of. None --version-tag text Filter by the version tag. None --include-process-definitions-without-tenant-id / --not-include-process-definitions-without-tenant-id boolean Include process definitions which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include process definitions which belong to no tenant. Value may only be true, as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A process definition must have one of the given tenant ids. None --incident-message-like text Filter by the incident message that the parameter is a substring of. None --incident-message text Filter by the incident message. Exact match. None --incident-type text Filter by the incident type. See the User Guide for a list of incident types. None --incident-id text Filter by the incident id. None --suspended / --not-suspended boolean Only include suspended process definitions. Value may only be true , as false is the default behavior. None --active / --not-active boolean Only include active process definitions. Value may only be true , as false is the default behavior. None --startable-by text Filter by a user name who is allowed to start the process. None --resource-name-like text Filter by names of those process definition resources that the parameter is a substring of. None --resource-name text Filter by the name of the process definition resource. Exact match. None --latest-version / --not-latest-version boolean Only include those process definitions that are latest versions. Value may only be true , as false is the default behavior. None --version text Filter by process definition version. None --category-like text Filter by process definition categories that the parameter is a substring of. None --category text Filter by process definition category. Exact match. None --key-like text Filter by process definition keys that the parameter is a substring of. None --keys-in text Filter by a comma-separated list of process definition keys. None --key text Filter by process definition key, i.e., the id in the BPMN 2.0 XML. Exact match. None --deployed-at text Filter by the deploy time of the deployment the process definition belongs to. Only selects process definitions that have been deployed at a specific time (exact match). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.546+0200 . None --deployed-after text Filter by the deploy time of the deployment the process definition belongs to. Only selects process definitions that have been deployed after (exclusive) a specific time. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.546+0200 . None --deployment-id text Filter by the deployment the id belongs to. None --name-like text Filter by process definition names that the parameter is a substring of. None --name text Filter by process definition name. None --process-definition-id-in text Filter by a comma-separated list of process definition ids. None --process-definition-id text Filter by process definition id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"processDefinitions"},{"location":"commands/get/#cctlnbspget-processdefinitionscount","text":"Get List Count Requests the number of process definitions that fulfill the query criteria. Takes the same filtering parameters as the Get Definitions method. URL: /process-definition/count Schema: - Usage: cctl&nbsp;get processDefinitionsCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --startable-permission-check / --not-startable-permission-check boolean Filter by process definitions which the user is allowed to start in Tasklist. If the user doesn't have these permissions the result will be empty list. The permissions are: * CREATE permission for all Process instances * CREATE_INSTANCE and READ permission on Process definition level None --not-startable-in-tasklist / --not-not-startable-in-tasklist boolean Filter by process definitions which are not startable in Tasklist. None --startable-in-tasklist / --not-startable-in-tasklist boolean Filter by process definitions which are startable in Tasklist.. None --without-version-tag / --not-without-version-tag boolean Only include process definitions without a versionTag . None --version-tag-like text Filter by the version tag that the parameter is a substring of. None --version-tag text Filter by the version tag. None --include-process-definitions-without-tenant-id / --not-include-process-definitions-without-tenant-id boolean Include process definitions which belong to no tenant. Can be used in combination with tenantIdIn . Value may only be true , as false is the default behavior. None --without-tenant-id / --not-without-tenant-id boolean Only include process definitions which belong to no tenant. Value may only be true, as false is the default behavior. None --tenant-id-in text Filter by a comma-separated list of tenant ids. A process definition must have one of the given tenant ids. None --incident-message-like text Filter by the incident message that the parameter is a substring of. None --incident-message text Filter by the incident message. Exact match. None --incident-type text Filter by the incident type. See the User Guide for a list of incident types. None --incident-id text Filter by the incident id. None --suspended / --not-suspended boolean Only include suspended process definitions. Value may only be true , as false is the default behavior. None --active / --not-active boolean Only include active process definitions. Value may only be true , as false is the default behavior. None --startable-by text Filter by a user name who is allowed to start the process. None --resource-name-like text Filter by names of those process definition resources that the parameter is a substring of. None --resource-name text Filter by the name of the process definition resource. Exact match. None --latest-version / --not-latest-version boolean Only include those process definitions that are latest versions. Value may only be true , as false is the default behavior. None --version text Filter by process definition version. None --category-like text Filter by process definition categories that the parameter is a substring of. None --category text Filter by process definition category. Exact match. None --key-like text Filter by process definition keys that the parameter is a substring of. None --keys-in text Filter by a comma-separated list of process definition keys. None --key text Filter by process definition key, i.e., the id in the BPMN 2.0 XML. Exact match. None --deployed-at text Filter by the deploy time of the deployment the process definition belongs to. Only selects process definitions that have been deployed at a specific time (exact match). By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.546+0200 . None --deployed-after text Filter by the deploy time of the deployment the process definition belongs to. Only selects process definitions that have been deployed after (exclusive) a specific time. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.546+0200 . None --deployment-id text Filter by the deployment the id belongs to. None --name-like text Filter by process definition names that the parameter is a substring of. None --name text Filter by process definition name. None --process-definition-id-in text Filter by a comma-separated list of process definition ids. None --process-definition-id text Filter by process definition id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"processDefinitionsCount"},{"location":"commands/get/#cctlnbspget-processenginenames","text":"Get List Retrieves the names of all process engines available on your platform. Note : You cannot prepend /engine/{name} to this method. URL: /engine Schema: - Usage: cctl&nbsp;get processEngineNames [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"processEngineNames"},{"location":"commands/get/#cctlnbspget-processinstance","text":"Get Process Instance Retrieves a process instance by id, according to the ProcessInstance interface in the engine. URL: /process-instance/{id} Schema: - Usage: cctl&nbsp;get processInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"processInstance"},{"location":"commands/get/#cctlnbspget-processinstancevariable","text":"Get Process Variable Retrieves a variable of a given process instance by id. URL: /process-instance/{id}/variables/{varName} Schema: - Usage: cctl&nbsp;get processInstanceVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-value / --not-deserialize-value boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true). If set to true, a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false, a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"processInstanceVariable"},{"location":"commands/get/#cctlnbspget-processinstancevariablebinary","text":"Get Process Variable (Binary) Retrieves the content of a Process Variable by the Process Instance id and the Process Variable name. Applicable for byte array or file Process Variables. URL: /process-instance/{id}/variables/{varName}/data Schema: - Usage: cctl&nbsp;get processInstanceVariableBinary [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"processInstanceVariableBinary"},{"location":"commands/get/#cctlnbspget-processinstancevariables","text":"Get Process Variables Retrieves all variables of a given process instance by id. URL: /process-instance/{id}/variables Schema: - Usage: cctl&nbsp;get processInstanceVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true). If set to true, a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false, a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"processInstanceVariables"},{"location":"commands/get/#cctlnbspget-processinstances","text":"Get List Queries for process instances that fulfill given parameters. Parameters may be static as well as dynamic runtime properties of process instances. The size of the result set can be retrieved by using the Get Instance Count method. URL: /process-instance Schema: - Usage: cctl&nbsp;get processInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match all variable values in this query case-insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match all variable names in this query case-insensitively. If set to true variableName and variablename are treated as equal. None --variables text Only include process instances that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note : Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --leaf-process-instances / --not-leaf-process-instances | boolean | Restrict the query to all process instances that are leaf instances. (i.e. don't have any sub instances). | None | | --root-process-instances / --not-root-process-instances | boolean | Restrict the query to all process instances that are top level process instances. | None | | --activity-id-in | text | Filter by a comma-separated list of activity ids. A process instance must currently wait in a leaf activity with one of the given activity ids. | None | | --process-definition-without-tenant-id / --not-process-definition-without-tenant-id | boolean | Only include process instances which process definition has no tenant id. | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include process instances which belong to no tenant. | None | | --tenant-id-in | text | Filter by a comma-separated list of tenant ids. A process instance must have one of the given tenant ids. | None | | --incident-message-like | text | Filter by the incident message that the parameter is a substring of. | None | | --incident-message | text | Filter by the incident message. Exact match. | None | | --incident-type | text | Filter by the incident type. See the User Guide for a list of incident types. | None | | --incident-id | text | Filter by the incident id. | None | | --with-incident / --not-with-incident | boolean | Filter by presence of incidents. Selects only process instances that have an incident. | None | | --suspended / --not-suspended | boolean | Only include suspended process instances. Value may only be true, as false is the default behavior. | None | | --active / --not-active | boolean | Only include active process instances. Value may only be true, as false is the default behavior. | None | | --sub-case-instance | text | Restrict query to all process instances that have the given case instance as a sub case instance. Takes a case instance id. | None | | --super-case-instance | text | Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id. | None | | --sub-process-instance | text | Restrict query to all process instances that have the given process instance as a sub process instance. Takes a process instance id. | None | | --super-process-instance | text | Restrict query to all process instances that are sub process instances of the given process instance. Takes a process instance id. | None | | --deployment-id | text | Filter by the deployment the id belongs to. | None | | --process-definition-key-not-in | text | Exclude instances by a comma-separated list of process definition keys. A process instance must not have one of the given process definition keys. | None | | --process-definition-key-in | text | Filter by a comma-separated list of process definition keys. A process instance must have one of the given process definition keys. | None | | --process-definition-key | text | Filter by the key of the process definition the instances run on. | None | | --process-definition-id | text | Filter by the deployment the id belongs to. | None | | --case-instance-id | text | Filter by case instance id. | None | | --business-key-like | text | Filter by process instance business key that the parameter is a substring of. | None | | --business-key | text | Filter by process instance business key. | None | | --process-instance-ids | text | Filter by a comma-separated list of process instance ids. | None | | --max-results | text | Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. | None | | --first-result | text | Pagination of results. Specifies the index of the first result to return. | None | | --sort-order | text | Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. | None | | --sort-by | text | Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"processInstances"},{"location":"commands/get/#cctlnbspget-processinstancescount","text":"Get List Count Queries for the number of process instances that fulfill given parameters. URL: /process-instance/count Schema: - Usage: cctl&nbsp;get processInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match all variable values in this query case-insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match all variable names in this query case-insensitively. If set to true variableName and variablename are treated as equal. None --variables text Only include process instances that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note : Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --leaf-process-instances / --not-leaf-process-instances | boolean | Restrict the query to all process instances that are leaf instances. (i.e. don't have any sub instances). | None | | --root-process-instances / --not-root-process-instances | boolean | Restrict the query to all process instances that are top level process instances. | None | | --activity-id-in | text | Filter by a comma-separated list of activity ids. A process instance must currently wait in a leaf activity with one of the given activity ids. | None | | --process-definition-without-tenant-id / --not-process-definition-without-tenant-id | boolean | Only include process instances which process definition has no tenant id. | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include process instances which belong to no tenant. | None | | --tenant-id-in | text | Filter by a comma-separated list of tenant ids. A process instance must have one of the given tenant ids. | None | | --incident-message-like | text | Filter by the incident message that the parameter is a substring of. | None | | --incident-message | text | Filter by the incident message. Exact match. | None | | --incident-type | text | Filter by the incident type. See the User Guide for a list of incident types. | None | | --incident-id | text | Filter by the incident id. | None | | --with-incident / --not-with-incident | boolean | Filter by presence of incidents. Selects only process instances that have an incident. | None | | --suspended / --not-suspended | boolean | Only include suspended process instances. Value may only be true, as false is the default behavior. | None | | --active / --not-active | boolean | Only include active process instances. Value may only be true, as false is the default behavior. | None | | --sub-case-instance | text | Restrict query to all process instances that have the given case instance as a sub case instance. Takes a case instance id. | None | | --super-case-instance | text | Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id. | None | | --sub-process-instance | text | Restrict query to all process instances that have the given process instance as a sub process instance. Takes a process instance id. | None | | --super-process-instance | text | Restrict query to all process instances that are sub process instances of the given process instance. Takes a process instance id. | None | | --deployment-id | text | Filter by the deployment the id belongs to. | None | | --process-definition-key-not-in | text | Exclude instances by a comma-separated list of process definition keys. A process instance must not have one of the given process definition keys. | None | | --process-definition-key-in | text | Filter by a comma-separated list of process definition keys. A process instance must have one of the given process definition keys. | None | | --process-definition-key | text | Filter by the key of the process definition the instances run on. | None | | --process-definition-id | text | Filter by the deployment the id belongs to. | None | | --case-instance-id | text | Filter by case instance id. | None | | --business-key-like | text | Filter by process instance business key that the parameter is a substring of. | None | | --business-key | text | Filter by process instance business key. | None | | --process-instance-ids | text | Filter by a comma-separated list of process instance ids. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"processInstancesCount"},{"location":"commands/get/#cctlnbspget-queryauthorizations","text":"Get Authorizations Queries for a list of authorizations using a list of parameters. The size of the result set can be retrieved by using the Get Authorization Count method. URL: /authorization Schema: - Usage: cctl&nbsp;get queryAuthorizations [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --resource-id text Filter by resource id. None --resource-type text Filter by an integer representation of the resource type. See the User Guide for a list of integer representations of resource types. None --group-id-in text Filter by a comma-separated list of groupIds. None --user-id-in text Filter by a comma-separated list of userIds. None --type text Filter by authorization type. (0=global, 1=grant, 2=revoke). See the User Guide for more information about authorization types. None --id text Filter by the id of the authorization. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"queryAuthorizations"},{"location":"commands/get/#cctlnbspget-querygroups","text":"Get List Queries for a list of groups using a list of parameters. The size of the result set can be retrieved by using the Get Group Count method. URL: /group Schema: - Usage: cctl&nbsp;get queryGroups [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --member-of-tenant text Only retrieve groups which are members of the given tenant. None --member text Only retrieve groups where the given user id is a member of. None --type text Filter by the type of the group. None --name-like text Filter by the name that the parameter is a substring of. None --name text Filter by the name of the group. None --id-in text Filter by a comma seperated list of group ids. None --id text Filter by the id of the group. None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"queryGroups"},{"location":"commands/get/#cctlnbspget-querytenants","text":"Get Tenants Query for a list of tenants using a list of parameters. The size of the result set can be retrieved by using the Get Tenant Count method. URL: /tenant Schema: - Usage: cctl&nbsp;get queryTenants [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --including-groups-of-user / --not-including-groups-of-user boolean Select only tenants where the user or one of his groups is a member of. Can only be used in combination with the userMember parameter. Value may only be true , as false is the default behavior. None --group-member text Select only tenants where the given group is a member of. None --user-member text Select only tenants where the given user is a member of. None --name-like text Filter by the name that the parameter is a substring of. None --name text Filter by the name of the tenant. None --id text Filter by the id of the tenant. None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"queryTenants"},{"location":"commands/get/#cctlnbspget-queryuseroperationcount","text":"Get User Operation Log Count Queries for the number of user operation log entries that fulfill the given parameters. Takes the same parameters as the Get User Operation Log (Historic) method. URL: /history/user-operation/count Schema: - Usage: cctl&nbsp;get queryUserOperationCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --before-timestamp text Restrict to entries that were created before the given timestamp. By default , the timestamp must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200. None --after-timestamp text Restrict to entries that were created after the given timestamp. By default , the timestamp must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200. None --property text Only include operations that changed this property, e.g., owner or assignee . None --category-in text Filter by a comma-separated list of categories that this operation is associated with, possible values are TaskWorker , Admin or Operator . None --category text Filter by the category that this operation is associated with, possible values are TaskWorker , Admin or Operator . None --entity-type-in text Filter by a comma-separated list of types of the entities that was affected by this operation, possible values are Task , Attachment or IdentityLink . None --entity-type text Filter by the type of the entity that was affected by this operation, possible values are Task , Attachment or IdentityLink . None --operation-type text Filter by the type of the operation like Claim or Delegate . See the Javadoc for a list of available operation types. None --operation-id text Filter by the id of the operation. This allows fetching of multiple entries which are part of a composite operation. None --user-id text Only include operations of this user. None --job-definition-id text Filter by job definition id. None --job-id text Filter by job id. None --batch-id text Only include operations on this batch. None --external-task-id text Only include operations on this external task. None --task-id text Only include operations on this task. None --case-execution-id text Filter by case execution id. None --case-instance-id text Filter by case instance id. None --case-definition-id text Filter by case definition id. None --execution-id text Filter by execution id. None --process-instance-id text Filter by process instance id. None --process-definition-key text Filter by process definition key. None --process-definition-id text Filter by process definition id. None --deployment-id text Filter by deployment id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"queryUserOperationCount"},{"location":"commands/get/#cctlnbspget-queryuseroperationentries","text":"Get User Operation Log (Historic) Queries for user operation log entries that fulfill the given parameters. The size of the result set can be retrieved by using the Get User Operation Log Count method. Note that the properties of operation log entries are interpreted as restrictions on the entities they apply to. That means, if a single process instance is updated, the field processInstanceId is populated. If a single operation updates all process instances of the same process definition, the field processInstanceId is null (a null restriction is viewed as a wildcard, i.e., matches a process instance with any id) and the field processDefinitionId is populated. This way, which entities were changed by a user operation can easily be reconstructed. URL: /history/user-operation Schema: - Usage: cctl&nbsp;get queryUserOperationEntries [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --before-timestamp text Restrict to entries that were created before the given timestamp. By default , the timestamp must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200. None --after-timestamp text Restrict to entries that were created after the given timestamp. By default , the timestamp must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.000+0200. None --property text Only include operations that changed this property, e.g., owner or assignee . None --category-in text Filter by a comma-separated list of categories that this operation is associated with, possible values are TaskWorker , Admin or Operator . None --category text Filter by the category that this operation is associated with, possible values are TaskWorker , Admin or Operator . None --entity-type-in text Filter by a comma-separated list of types of the entities that was affected by this operation, possible values are Task , Attachment or IdentityLink . None --entity-type text Filter by the type of the entity that was affected by this operation, possible values are Task , Attachment or IdentityLink . None --operation-type text Filter by the type of the operation like Claim or Delegate . See the Javadoc for a list of available operation types. None --operation-id text Filter by the id of the operation. This allows fetching of multiple entries which are part of a composite operation. None --user-id text Only include operations of this user. None --job-definition-id text Filter by job definition id. None --job-id text Filter by job id. None --batch-id text Only include operations on this batch. None --external-task-id text Only include operations on this external task. None --task-id text Only include operations on this task. None --case-execution-id text Filter by case execution id. None --case-instance-id text Filter by case instance id. None --case-definition-id text Filter by case definition id. None --execution-id text Filter by execution id. None --process-instance-id text Filter by process instance id. None --process-definition-key text Filter by process definition key. None --process-definition-id text Filter by process definition id. None --deployment-id text Filter by deployment id. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"queryUserOperationEntries"},{"location":"commands/get/#cctlnbspget-renderedform","text":"Get Rendered Form Retrieves the rendered form for a task. This method can be used to get the HTML rendering of a Generated Task Form . URL: /task/{id}/rendered-form Schema: - Usage: cctl&nbsp;get renderedForm [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"renderedForm"},{"location":"commands/get/#cctlnbspget-renderedstartform","text":"Get Rendered Start Form Retrieves the rendered form for a process definition. This method can be used to get the HTML rendering of a Generated Task Form . URL: /process-definition/{id}/rendered-form Schema: - Usage: cctl&nbsp;get renderedStartForm [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"renderedStartForm"},{"location":"commands/get/#cctlnbspget-renderedstartformbykey","text":"Get Rendered Start Form Retrieves the rendered form for the latest version of the process definition which belongs to no tenant. This method can be used to get the HTML rendering of a Generated Task Form . URL: /process-definition/key/{key}/rendered-form Schema: - Usage: cctl&nbsp;get renderedStartFormByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"renderedStartFormByKey"},{"location":"commands/get/#cctlnbspget-renderedstartformbykeyandtenantid","text":"Get Rendered Start Form Retrieves the rendered form for the latest version of the process definition for a tenant. This method can be used to get the HTML rendering of a Generated Task Form . URL: /process-definition/key/{key}/tenant-id/{tenant-id}/rendered-form Schema: - Usage: cctl&nbsp;get renderedStartFormByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"renderedStartFormByKeyAndTenantId"},{"location":"commands/get/#cctlnbspget-restapiversion","text":"Get Rest API version Retrieves the version of the Rest API. URL: /version Schema: - Usage: cctl&nbsp;get restAPIVersion [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"restAPIVersion"},{"location":"commands/get/#cctlnbspget-schemalog","text":"Get List Queries for schema log entries that fulfill given parameters. URL: /schema/log Schema: - Usage: cctl&nbsp;get schemaLog [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --version text Only return schema log entries with a specific version. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"schemaLog"},{"location":"commands/get/#cctlnbspget-singlefilter","text":"Get Single Filter Retrieves a single filter by id, according to the Filter interface in the engine. URL: /filter/{id} Schema: - Usage: cctl&nbsp;get singleFilter [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --item-count / --not-item-count boolean If set to true , each filter result will contain an itemCount property with the number of items matched by the filter itself. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"singleFilter"},{"location":"commands/get/#cctlnbspget-stacktrace","text":"Get Exception Stacktrace Retrieves the exception stacktrace corresponding to the passed job id. URL: /job/{id}/stacktrace Schema: - Usage: cctl&nbsp;get stacktrace [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"stacktrace"},{"location":"commands/get/#cctlnbspget-stacktracehistoricjoblog","text":"Get Job Log Exception Stacktrace Retrieves the corresponding exception stacktrace to the passed historic job log by id. URL: /history/job-log/{id}/stacktrace Schema: - Usage: cctl&nbsp;get stacktraceHistoricJobLog [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"stacktraceHistoricJobLog"},{"location":"commands/get/#cctlnbspget-startform","text":"Get Start Form Key Retrieves the key of the start form for a process definition. The form key corresponds to the FormData#formKey property in the engine. URL: /process-definition/{id}/startForm Schema: - Usage: cctl&nbsp;get startForm [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"startForm"},{"location":"commands/get/#cctlnbspget-startformbykey","text":"Get Start Form Key Retrieves the key of the start form for the latest version of the process definition which belongs to no tenant. The form key corresponds to the FormData#formKey property in the engine. URL: /process-definition/key/{key}/startForm Schema: - Usage: cctl&nbsp;get startFormByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"startFormByKey"},{"location":"commands/get/#cctlnbspget-startformbykeyandtenantid","text":"Get Start Form Key Retrieves the key of the start form for the latest version of the process definition for a tenant. The form key corresponds to the FormData#formKey property in the engine. URL: /process-definition/key/{key}/tenant-id/{tenant-id}/startForm Schema: - Usage: cctl&nbsp;get startFormByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"startFormByKeyAndTenantId"},{"location":"commands/get/#cctlnbspget-startformvariables","text":"Get Start Form Variables Retrieves the start form variables for a process definition (only if they are defined via the Generated Task Form approach). The start form variables take form data specified on the start event into account. If form fields are defined, the variable types and default values of the form fields are taken into account. URL: /process-definition/{id}/form-variables Schema: - Usage: cctl&nbsp;get startFormVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true). If set to true, a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false, a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note : While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --variable-names | text | A comma-separated list of variable names. Allows restricting the list of requested variables to the variable names in the list. It is best practice to restrict the list of variables to the variables actually required by the form in order to minimize fetching of data. If the query parameter is ommitted all variables are fetched. If the query parameter contains non-existent variable names, the variable names are ignored. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"startFormVariables"},{"location":"commands/get/#cctlnbspget-startformvariablesbykey","text":"Get Start Form Variables Retrieves the start form variables for the latest process definition which belongs to no tenant (only if they are defined via the Generated Task Form approach). The start form variables take form data specified on the start event into account. If form fields are defined, the variable types and default values of the form fields are taken into account. URL: /process-definition/key/{key}/form-variables Schema: - Usage: cctl&nbsp;get startFormVariablesByKey [OPTIONS] KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true). If set to true, a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false, a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note : While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --variable-names | text | A comma-separated list of variable names. Allows restricting the list of requested variables to the variable names in the list. It is best practice to restrict the list of variables to the variables actually required by the form in order to minimize fetching of data. If the query parameter is ommitted all variables are fetched. If the query parameter contains non-existent variable names, the variable names are ignored. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"startFormVariablesByKey"},{"location":"commands/get/#cctlnbspget-startformvariablesbykeyandtenantid","text":"Get Start Form Variables Retrieves the start form variables for the latest process definition for a tenant (only if they are defined via the Generated Task Form approach). The start form variables take form data specified on the start event into account. If form fields are defined, the variable types and default values of the form fields are taken into account. URL: /process-definition/key/{key}/tenant-id/{tenant-id}/form-variables Schema: - Usage: cctl&nbsp;get startFormVariablesByKeyAndTenantId [OPTIONS] TENANT_ID KEY Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true). If set to true, a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false, a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note : While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --variable-names | text | A comma-separated list of variable names. Allows restricting the list of requested variables to the variable names in the list. It is best practice to restrict the list of variables to the variables actually required by the form in order to minimize fetching of data. If the query parameter is ommitted all variables are fetched. If the query parameter contains non-existent variable names, the variable names are ignored. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"startFormVariablesByKeyAndTenantId"},{"location":"commands/get/#cctlnbspget-staticcalledprocessdefinitions","text":"Get Static Called Process Definitions For the given process, returns a list of called process definitions corresponding to the CalledProcessDefinition interface in the engine. The list contains all process definitions that are referenced statically by call activities in the given process. This endpoint does not resolve process definitions that are referenced with expressions. Each called process definition contains a list of call activity ids, which specifies the call activities that are calling that process. This endpoint does not resolve references to case definitions. URL: /process-definition/{id}/static-called-process-definitions Schema: - Usage: cctl&nbsp;get staticCalledProcessDefinitions [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"staticCalledProcessDefinitions"},{"location":"commands/get/#cctlnbspget-task","text":"Get Retrieves a task by id. URL: /task/{id} Schema: - Usage: cctl&nbsp;get task [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"task"},{"location":"commands/get/#cctlnbspget-tasklocalvariable","text":"Get Local Task Variable Retrieves a variable from the context of a given task by id. URL: /task/{id}/localVariables/{varName} Schema: - Usage: cctl&nbsp;get taskLocalVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-value / --not-deserialize-value boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on the server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"taskLocalVariable"},{"location":"commands/get/#cctlnbspget-tasklocalvariablebinary","text":"Get Local Task Variable (Binary) Retrieves a binary variable from the context of a given task by id. Applicable for byte array and file variables. URL: /task/{id}/localVariables/{varName}/data Schema: - Usage: cctl&nbsp;get taskLocalVariableBinary [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"taskLocalVariableBinary"},{"location":"commands/get/#cctlnbspget-tasklocalvariables","text":"Get Local Task Variables Retrieves all variables of a given task by id. URL: /task/{id}/localVariables Schema: - Usage: cctl&nbsp;get taskLocalVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on the server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"taskLocalVariables"},{"location":"commands/get/#cctlnbspget-taskvariable","text":"Get Task Variable Retrieves a variable from the context of a given task. The variable must be visible from the task. It is visible from the task if it is a local task variable or declared in a parent scope of the task. See documentation on visiblity of variables . URL: /task/{id}/variables/{varName} Schema: - Usage: cctl&nbsp;get taskVariable [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-value / --not-deserialize-value boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on the server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"taskVariable"},{"location":"commands/get/#cctlnbspget-taskvariablebinary","text":"Get Task Variable (Binary) Retrieves a binary variable from the context of a given task. Applicable for byte array and file variables. The variable must be visible from the task. It is visible from the task if it is a local task variable or declared in a parent scope of the task. See documentation on visiblity of variables . URL: /task/{id}/variables/{varName}/data Schema: - Usage: cctl&nbsp;get taskVariableBinary [OPTIONS] VARNAME ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"taskVariableBinary"},{"location":"commands/get/#cctlnbspget-taskvariables","text":"Get Task Variables Retrieves all variables visible from the task. A variable is visible from the task if it is a local task variable or declared in a parent scope of the task. See documentation on visiblity of variables . URL: /task/{id}/variables Schema: - Usage: cctl&nbsp;get taskVariables [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on the server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"taskVariables"},{"location":"commands/get/#cctlnbspget-tasks","text":"Get List Queries for tasks that fulfill a given filter. The size of the result set can be retrieved by using the Get Task Count method. Security Consideration: There are several query parameters (such as assigneeExpression) for specifying an EL expression. These are disabled by default to prevent remote code execution. See the section on security considerations for custom code in the user guide for details. URL: /task Schema: - Usage: cctl&nbsp;get tasks [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --parent-task-id text Restrict query to all tasks that are sub tasks of the given task. Takes a task id. None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match all variable values in this query case-insensitively. If set variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match all variable names in this query case-insensitively. If set variableName and variablename are treated as equal. None --case-instance-variables text Only include tasks that belong to case instances that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note : Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --process-variables | text | Only include tasks that belong to process instances that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note : Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like ; notLike . key and value may not contain underscore or comma characters. | None | | --task-variables | text | Only include tasks that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note : Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --suspended / --not-suspended | boolean | Only include suspended tasks. Value may only be true , as false is the default behavior. | None | | --active / --not-active | boolean | Only include active tasks. Value may only be true , as false is the default behavior. | None | | --without-candidate-users / --not-without-candidate-users | boolean | Only include tasks which have no candidate users. Value may only be true , as false is the default behavior. | None | | --with-candidate-users / --not-with-candidate-users | boolean | Only include tasks which have a candidate user. Value may only be true , as false is the default behavior. | None | | --without-candidate-groups / --not-without-candidate-groups | boolean | Only include tasks which have no candidate group. Value may only be true , as false is the default behavior. | None | | --with-candidate-groups / --not-with-candidate-groups | boolean | Only include tasks which have a candidate group. Value may only be true , as false is the default behavior. | None | | --candidate-groups-expression | text | Restrict to tasks that are offered to any of the candidate groups described by the given expression. See the user guide for more information on available functions. The expression must evaluate to java.util.List of Strings. | None | | --candidate-groups | text | Restrict to tasks that are offered to any of the given candidate groups. Takes a comma-separated list of group names, so for example developers,support,sales . | None | | --delegation-state | text | Restrict to tasks that are in the given delegation state. Valid values are PENDING and RESOLVED . | None | | --created-before-expression | text | Restrict to tasks that were created before the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --created-before | text | Restrict to tasks that were created before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.332+0200 . | None | | --created-after-expression | text | Restrict to tasks that were created after the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --created-after | text | Restrict to tasks that were created after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.342+0200 . | None | | --created-on-expression | text | Restrict to tasks that were created on the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --created-on | text | Restrict to tasks that were created on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.324+0200 . | None | | --follow-up-before-or-not-existent-expression | text | Restrict to tasks that have no followUp date or a followUp date before the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --follow-up-before-or-not-existent | text | Restrict to tasks that have no followUp date or a followUp date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.432+0200 . The typical use case is to query all active tasks for a user for a given date. | None | | --follow-up-before-expression | text | Restrict to tasks that have a followUp date before the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --follow-up-before | text | Restrict to tasks that have a followUp date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.234+0200 . | None | | --follow-up-after-expression | text | Restrict to tasks that have a followUp date after the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --follow-up-after | text | Restrict to tasks that have a followUp date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.542+0200 . | None | | --follow-up-date-expression | text | Restrict to tasks that have a followUp date on the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --follow-up-date | text | Restrict to tasks that have a followUp date on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.342+0200 . | None | | --without-due-date / --not-without-due-date | boolean | Only include tasks which have no due date. Value may only be true , as false is the default behavior. | None | | --due-before-expression | text | Restrict to tasks that are due before the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --due-before | text | Restrict to tasks that are due before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.243+0200 . | None | | --due-after-expression | text | Restrict to tasks that are due after the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --due-after | text | Restrict to tasks that are due after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.435+0200 . | None | | --due-date-expression | text | Restrict to tasks that are due on the date described by the given expression. See the User Guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --due-date | text | Restrict to tasks that are due on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.546+0200 . | None | | --min-priority | text | Restrict to tasks that have a higher or equal priority. | None | | --max-priority | text | Restrict to tasks that have a lower or equal priority. | None | | --priority | text | Restrict to tasks that have the given priority. | None | | --description-like | text | Restrict to tasks that have a description that has the parameter value as a substring. | None | | --description | text | Restrict to tasks that have the given description. | None | | --name-not-like | text | Restrict to tasks that do not have a name with the given parameter value as substring. | None | | --name-like | text | Restrict to tasks that have a name with the given parameter value as substring. | None | | --name-not-equal | text | Restrict to tasks that do not have the given name. | None | | --name | text | Restrict to tasks that have the given name. | None | | --task-definition-key-like | text | Restrict to tasks that have a key that has the parameter value as a substring. | None | | --task-definition-key-in | text | Restrict to tasks that have one of the given keys. The keys need to be in a comma-separated list. | None | | --task-definition-key | text | Restrict to tasks that have the given key. | None | | --unassigned / --not-unassigned | boolean | If set to true , restricts the query to all tasks that are unassigned. | None | | --assigned / --not-assigned | boolean | If set to true , restricts the query to all tasks that are assigned. | None | | --involved-user-expression | text | Only include tasks that the user described by the given expression is involved in. A user is involved in a task if an identity link exists between task and user (e.g., the user is the assignee). See the user guide for more information on available functions. | None | | --involved-user | text | Only include tasks that the given user is involved in. A user is involved in a task if an identity link exists between task and user (e.g., the user is the assignee). | None | | --include-assigned-tasks / --not-include-assigned-tasks | boolean | Also include tasks that are assigned to users in candidate queries. Default is to only include tasks that are not assigned to any user if you query by candidate user or group(s). | None | | --candidate-user-expression | text | Only include tasks that are offered to the user described by the given expression. See the user guide for more information on available functions. | None | | --candidate-user | text | Only include tasks that are offered to the given user or to one of his groups. | None | | --candidate-group-expression | text | Only include tasks that are offered to the group described by the given expression. See the user guide for more information on available functions. | None | | --candidate-group | text | Only include tasks that are offered to the given group. | None | | --owner-expression | text | Restrict to tasks that the user described by the given expression owns. See the user guide for more information on available functions. | None | | --owner | text | Restrict to tasks that the given user owns. | None | | --assignee-not-in | text | Only include tasks which are not assigned to one of the passed and comma-separated user ids. | None | | --assignee-in | text | Only include tasks which are assigned to one of the passed and comma-separated user ids. | None | | --assignee-like-expression | text | Restrict to tasks that have an assignee that has the parameter value described by the given expression as a substring. See the user guide for more information on available functions. | None | | --assignee-like | text | Restrict to tasks that have an assignee that has the parameter value as a substring. | None | | --assignee-expression | text | Restrict to tasks that the user described by the given expression is assigned to. See the user guide for more information on available functions. | None | | --assignee | text | Restrict to tasks that the given user is assigned to. | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include tasks which belong to no tenant. Value may only be true , as false is the default behavior. | None | | --tenant-id-in | text | Only include tasks which belong to one of the passed and comma-separated tenant ids. | None | | --activity-instance-id-in | text | Only include tasks which belong to one of the passed and comma-separated activity instance ids. | None | | --case-execution-id | text | Restrict to tasks that belong to a case execution with the given id. | None | | --case-definition-name-like | text | Restrict to tasks that have a case definition name that has the parameter value as a substring. | None | | --case-definition-name | text | Restrict to tasks that belong to a case definition with the given name. | None | | --case-definition-key | text | Restrict to tasks that belong to a case definition with the given key. | None | | --case-definition-id | text | Restrict to tasks that belong to a case definition with the given id. | None | | --case-instance-business-key-like | text | Restrict to tasks that have a case instance business key that has the parameter value as a substring. | None | | --case-instance-business-key | text | Restrict to tasks that belong to case instances with the given business key. | None | | --case-instance-id | text | Restrict to tasks that belong to case instances with the given id. | None | | --execution-id | text | Restrict to tasks that belong to an execution with the given id. | None | | --process-definition-name-like | text | Restrict to tasks that have a process definition name that has the parameter value as a substring. | None | | --process-definition-name | text | Restrict to tasks that belong to a process definition with the given name. | None | | --process-definition-key-in | text | Restrict to tasks that belong to a process definition with one of the given keys. The keys need to be in a comma-separated list. | None | | --process-definition-key | text | Restrict to tasks that belong to a process definition with the given key. | None | | --process-definition-id | text | Restrict to tasks that belong to a process definition with the given id. | None | | --process-instance-business-key-like-expression | text | Restrict to tasks that have a process instance business key that has the parameter value as a substring and is described by an expression. See the user guide for more information on available functions. | None | | --process-instance-business-key-like | text | Restrict to tasks that have a process instance business key that has the parameter value as a substring. | None | | --process-instance-business-key-in | text | Restrict to tasks that belong to process instances with one of the give business keys. The keys need to be in a comma-separated list. | None | | --process-instance-business-key-expression | text | Restrict to tasks that belong to process instances with the given business key which is described by an expression. See the user guide for more information on available functions. | None | | --process-instance-business-key | text | Restrict to tasks that belong to process instances with the given business key. | None | | --process-instance-id-in | text | Restrict to tasks that belong to process instances with the given ids. | None | | --process-instance-id | text | Restrict to tasks that belong to process instances with the given id. | None | | --task-id-in | text | Restrict to tasks with any of the given ids. | None | | --task-id | text | Restrict to task with the given id. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"tasks"},{"location":"commands/get/#cctlnbspget-taskscount","text":"Get List Count Retrieves the number of tasks that fulfill a provided filter. Corresponds to the size of the result set when using the Get Tasks method. Security Consideration: There are several query parameters (such as assigneeExpression) for specifying an EL expression. These are disabled by default to prevent remote code execution. See the section on security considerations for custom code in the user guide for details. URL: /task/count Schema: - Usage: cctl&nbsp;get tasksCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --parent-task-id text Restrict query to all tasks that are sub tasks of the given task. Takes a task id. None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match all variable values in this query case-insensitively. If set variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match all variable names in this query case-insensitively. If set variableName and variablename are treated as equal. None --case-instance-variables text Only include tasks that belong to case instances that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note : Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --process-variables | text | Only include tasks that belong to process instances that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note : Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like ; notLike . key and value may not contain underscore or comma characters. | None | | --task-variables | text | Only include tasks that have variables with certain values. Variable filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note : Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --suspended / --not-suspended | boolean | Only include suspended tasks. Value may only be true , as false is the default behavior. | None | | --active / --not-active | boolean | Only include active tasks. Value may only be true , as false is the default behavior. | None | | --without-candidate-users / --not-without-candidate-users | boolean | Only include tasks which have no candidate users. Value may only be true , as false is the default behavior. | None | | --with-candidate-users / --not-with-candidate-users | boolean | Only include tasks which have a candidate user. Value may only be true , as false is the default behavior. | None | | --without-candidate-groups / --not-without-candidate-groups | boolean | Only include tasks which have no candidate group. Value may only be true , as false is the default behavior. | None | | --with-candidate-groups / --not-with-candidate-groups | boolean | Only include tasks which have a candidate group. Value may only be true , as false is the default behavior. | None | | --candidate-groups-expression | text | Restrict to tasks that are offered to any of the candidate groups described by the given expression. See the user guide for more information on available functions. The expression must evaluate to java.util.List of Strings. | None | | --candidate-groups | text | Restrict to tasks that are offered to any of the given candidate groups. Takes a comma-separated list of group names, so for example developers,support,sales . | None | | --delegation-state | text | Restrict to tasks that are in the given delegation state. Valid values are PENDING and RESOLVED . | None | | --created-before-expression | text | Restrict to tasks that were created before the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --created-before | text | Restrict to tasks that were created before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.332+0200 . | None | | --created-after-expression | text | Restrict to tasks that were created after the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --created-after | text | Restrict to tasks that were created after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.342+0200 . | None | | --created-on-expression | text | Restrict to tasks that were created on the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --created-on | text | Restrict to tasks that were created on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.324+0200 . | None | | --follow-up-before-or-not-existent-expression | text | Restrict to tasks that have no followUp date or a followUp date before the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --follow-up-before-or-not-existent | text | Restrict to tasks that have no followUp date or a followUp date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.432+0200 . The typical use case is to query all active tasks for a user for a given date. | None | | --follow-up-before-expression | text | Restrict to tasks that have a followUp date before the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --follow-up-before | text | Restrict to tasks that have a followUp date before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.234+0200 . | None | | --follow-up-after-expression | text | Restrict to tasks that have a followUp date after the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --follow-up-after | text | Restrict to tasks that have a followUp date after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.542+0200 . | None | | --follow-up-date-expression | text | Restrict to tasks that have a followUp date on the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --follow-up-date | text | Restrict to tasks that have a followUp date on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.342+0200 . | None | | --without-due-date / --not-without-due-date | boolean | Only include tasks which have no due date. Value may only be true , as false is the default behavior. | None | | --due-before-expression | text | Restrict to tasks that are due before the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --due-before | text | Restrict to tasks that are due before the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.243+0200 . | None | | --due-after-expression | text | Restrict to tasks that are due after the date described by the given expression. See the user guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --due-after | text | Restrict to tasks that are due after the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.435+0200 . | None | | --due-date-expression | text | Restrict to tasks that are due on the date described by the given expression. See the User Guide for more information on available functions. The expression must evaluate to a java.util.Date or org.joda.time.DateTime object. | None | | --due-date | text | Restrict to tasks that are due on the given date. By default , the date must have the format yyyy-MM-dd'T'HH:mm:ss.SSSZ , e.g., 2013-01-23T14:42:45.546+0200 . | None | | --min-priority | text | Restrict to tasks that have a higher or equal priority. | None | | --max-priority | text | Restrict to tasks that have a lower or equal priority. | None | | --priority | text | Restrict to tasks that have the given priority. | None | | --description-like | text | Restrict to tasks that have a description that has the parameter value as a substring. | None | | --description | text | Restrict to tasks that have the given description. | None | | --name-not-like | text | Restrict to tasks that do not have a name with the given parameter value as substring. | None | | --name-like | text | Restrict to tasks that have a name with the given parameter value as substring. | None | | --name-not-equal | text | Restrict to tasks that do not have the given name. | None | | --name | text | Restrict to tasks that have the given name. | None | | --task-definition-key-like | text | Restrict to tasks that have a key that has the parameter value as a substring. | None | | --task-definition-key-in | text | Restrict to tasks that have one of the given keys. The keys need to be in a comma-separated list. | None | | --task-definition-key | text | Restrict to tasks that have the given key. | None | | --unassigned / --not-unassigned | boolean | If set to true , restricts the query to all tasks that are unassigned. | None | | --assigned / --not-assigned | boolean | If set to true , restricts the query to all tasks that are assigned. | None | | --involved-user-expression | text | Only include tasks that the user described by the given expression is involved in. A user is involved in a task if an identity link exists between task and user (e.g., the user is the assignee). See the user guide for more information on available functions. | None | | --involved-user | text | Only include tasks that the given user is involved in. A user is involved in a task if an identity link exists between task and user (e.g., the user is the assignee). | None | | --include-assigned-tasks / --not-include-assigned-tasks | boolean | Also include tasks that are assigned to users in candidate queries. Default is to only include tasks that are not assigned to any user if you query by candidate user or group(s). | None | | --candidate-user-expression | text | Only include tasks that are offered to the user described by the given expression. See the user guide for more information on available functions. | None | | --candidate-user | text | Only include tasks that are offered to the given user or to one of his groups. | None | | --candidate-group-expression | text | Only include tasks that are offered to the group described by the given expression. See the user guide for more information on available functions. | None | | --candidate-group | text | Only include tasks that are offered to the given group. | None | | --owner-expression | text | Restrict to tasks that the user described by the given expression owns. See the user guide for more information on available functions. | None | | --owner | text | Restrict to tasks that the given user owns. | None | | --assignee-not-in | text | Only include tasks which are not assigned to one of the passed and comma-separated user ids. | None | | --assignee-in | text | Only include tasks which are assigned to one of the passed and comma-separated user ids. | None | | --assignee-like-expression | text | Restrict to tasks that have an assignee that has the parameter value described by the given expression as a substring. See the user guide for more information on available functions. | None | | --assignee-like | text | Restrict to tasks that have an assignee that has the parameter value as a substring. | None | | --assignee-expression | text | Restrict to tasks that the user described by the given expression is assigned to. See the user guide for more information on available functions. | None | | --assignee | text | Restrict to tasks that the given user is assigned to. | None | | --without-tenant-id / --not-without-tenant-id | boolean | Only include tasks which belong to no tenant. Value may only be true , as false is the default behavior. | None | | --tenant-id-in | text | Only include tasks which belong to one of the passed and comma-separated tenant ids. | None | | --activity-instance-id-in | text | Only include tasks which belong to one of the passed and comma-separated activity instance ids. | None | | --case-execution-id | text | Restrict to tasks that belong to a case execution with the given id. | None | | --case-definition-name-like | text | Restrict to tasks that have a case definition name that has the parameter value as a substring. | None | | --case-definition-name | text | Restrict to tasks that belong to a case definition with the given name. | None | | --case-definition-key | text | Restrict to tasks that belong to a case definition with the given key. | None | | --case-definition-id | text | Restrict to tasks that belong to a case definition with the given id. | None | | --case-instance-business-key-like | text | Restrict to tasks that have a case instance business key that has the parameter value as a substring. | None | | --case-instance-business-key | text | Restrict to tasks that belong to case instances with the given business key. | None | | --case-instance-id | text | Restrict to tasks that belong to case instances with the given id. | None | | --execution-id | text | Restrict to tasks that belong to an execution with the given id. | None | | --process-definition-name-like | text | Restrict to tasks that have a process definition name that has the parameter value as a substring. | None | | --process-definition-name | text | Restrict to tasks that belong to a process definition with the given name. | None | | --process-definition-key-in | text | Restrict to tasks that belong to a process definition with one of the given keys. The keys need to be in a comma-separated list. | None | | --process-definition-key | text | Restrict to tasks that belong to a process definition with the given key. | None | | --process-definition-id | text | Restrict to tasks that belong to a process definition with the given id. | None | | --process-instance-business-key-like-expression | text | Restrict to tasks that have a process instance business key that has the parameter value as a substring and is described by an expression. See the user guide for more information on available functions. | None | | --process-instance-business-key-like | text | Restrict to tasks that have a process instance business key that has the parameter value as a substring. | None | | --process-instance-business-key-in | text | Restrict to tasks that belong to process instances with one of the give business keys. The keys need to be in a comma-separated list. | None | | --process-instance-business-key-expression | text | Restrict to tasks that belong to process instances with the given business key which is described by an expression. See the user guide for more information on available functions. | None | | --process-instance-business-key | text | Restrict to tasks that belong to process instances with the given business key. | None | | --process-instance-id-in | text | Restrict to tasks that belong to process instances with the given ids. | None | | --process-instance-id | text | Restrict to tasks that belong to process instances with the given id. | None | | --task-id-in | text | Restrict to tasks with any of the given ids. | None | | --task-id | text | Restrict to task with the given id. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"tasksCount"},{"location":"commands/get/#cctlnbspget-telemetryconfiguration","text":"Fetch Telemetry Configuration Fetches Telemetry Configuration. URL: /telemetry/configuration Schema: - Usage: cctl&nbsp;get telemetryConfiguration [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"telemetryConfiguration"},{"location":"commands/get/#cctlnbspget-tenant","text":"Get Tenant Retrieves a tenant. URL: /tenant/{id} Schema: - Usage: cctl&nbsp;get tenant [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"tenant"},{"location":"commands/get/#cctlnbspget-tenantcount","text":"Get Tenant Count Query for tenants using a list of parameters and retrieves the count. URL: /tenant/count Schema: - Usage: cctl&nbsp;get tenantCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --including-groups-of-user / --not-including-groups-of-user boolean Select only tenants where the user or one of his groups is a member of. Can only be used in combination with the userMember parameter. Value may only be true , as false is the default behavior. None --group-member text Select only tenants where the given group is a member of. None --user-member text Select only tenants where the given user is a member of. None --name-like text Filter by the name that the parameter is a substring of. None --name text Filter by the name of the tenant. None --id text Filter by the id of the tenant. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"tenantCount"},{"location":"commands/get/#cctlnbspget-topicnames","text":"Get External Task Topic Names Queries for distinct topic names of external tasks that fulfill given parameters. Query can be restricted to only tasks with retries left, tasks that are locked, or tasks that are unlocked. The parameters withLockedTasks and withUnlockedTasks are exclusive. Setting them both to true will return an empty list. Providing no parameters will return a list of all distinct topic names with external tasks. URL: /external-task/topic-names Schema: - Usage: cctl&nbsp;get topicNames [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --with-retries-left / --not-with-retries-left boolean Only include external tasks that have a positive (> 0) number of retries (or null ). Value may only be true , as false matches any external task. None --with-unlocked-tasks / --not-with-unlocked-tasks boolean Only include external tasks that are currently not locked (i.e., they have no lock or it has expired). Value may only be true , as false matches any external task. None --with-locked-tasks / --not-with-locked-tasks boolean Only include external tasks that are currently locked (i.e., they have a lock time and it has not expired). Value may only be true , as false matches any external task. None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"topicNames"},{"location":"commands/get/#cctlnbspget-usercount","text":"Get List Count Queries for the number of deployments that fulfill given parameters. Takes the same parameters as the Get Users method. URL: /user/count Schema: - Usage: cctl&nbsp;get userCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --potential-starter text Only select Users that are potential starter for the given process definition. None --member-of-tenant text Filter for users which are members of the given tenant. None --member-of-group text Filter for users which are members of the given group. None --email-like text Filter by the email that the parameter is a substring of. None --email text Filter by the email of the user. Exact match. None --last-name-like text Filter by the last name that the parameter is a substring of. None --last-name text Filter by the last name of the user. Exact match. None --first-name-like text Filter by the first name that the parameter is a substring of. None --first-name text Filter by the first name of the user. Exact match. None --id-in text Filter by a comma-separated list of user ids. None --id text Filter by user id None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"userCount"},{"location":"commands/get/#cctlnbspget-userprofile","text":"Get Profile Retrieves a user's profile. URL: /user/{id}/profile Schema: - Usage: cctl&nbsp;get userProfile [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"userProfile"},{"location":"commands/get/#cctlnbspget-users","text":"Get List Query for a list of users using a list of parameters. The size of the result set can be retrieved by using the Get User Count method. Get User Count method. URL: /user Schema: - Usage: cctl&nbsp;get users [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --max-results text Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. None --first-result text Pagination of results. Specifies the index of the first result to return. None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --potential-starter text Only select Users that are potential starter for the given process definition. None --member-of-tenant text Filter for users which are members of the given tenant. None --member-of-group text Filter for users which are members of the given group. None --email-like text Filter by the email that the parameter is a substring of. None --email text Filter by the email of the user. Exact match. None --last-name-like text Filter by the last name that the parameter is a substring of. None --last-name text Filter by the last name of the user. Exact match. None --first-name-like text Filter by the first name that the parameter is a substring of. None --first-name text Filter by the first name of the user. Exact match. None --id-in text Filter by a comma-separated list of user ids. None --id text Filter by user id None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"users"},{"location":"commands/get/#cctlnbspget-variableinstance","text":"Get Variable Instance Retrieves a variable by id. URL: /variable-instance/{id} Schema: - Usage: cctl&nbsp;get variableInstance [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-value / --not-deserialize-value boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"variableInstance"},{"location":"commands/get/#cctlnbspget-variableinstancebinary","text":"Get Variable Instance (Binary) Retrieves the content of a variable by id. Applicable for byte array and file variables. URL: /variable-instance/{id}/data Schema: - Usage: cctl&nbsp;get variableInstanceBinary [OPTIONS] ID Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None -oF , --output-file filename output file None -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -oJ , --output-jsonpath text jsonpath template $ -oCL , --output-cell-limit integer limit cell value for table output (default=40) 40 -oH , --output-header text comma seperated list of headers None -o , --output choice ( table | json | jsonpath | template | raw ) N/A table --help boolean Show this message and exit. False","title":"variableInstanceBinary"},{"location":"commands/get/#cctlnbspget-variableinstances","text":"Get Variable Instances Query for variable instances that fulfill given parameters. Parameters may be the properties of variable instances, such as the name or type. The size of the result set can be retrieved by using the Get Variable Instance Count method. URL: /variable-instance Schema: - Usage: cctl&nbsp;get variableInstances [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --deserialize-values / --not-deserialize-values boolean Determines whether serializable variable values (typically variables that store custom Java objects) should be deserialized on server side (default true ). If set to true , a serializable variable will be deserialized on server side and transformed to JSON using Jackson's POJO/bean property introspection feature. Note that this requires the Java classes of the variable value to be on the REST API's classpath. If set to false , a serializable variable will be returned in its serialized format. For example, a variable that is serialized as XML will be returned as a JSON string containing XML. Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false when developing web applications that are independent of the Java process applications deployed to the engine. | None | | --max-results | text | Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. | None | | --first-result | text | Pagination of results. Specifies the index of the first result to return. | None | | --sort-order | text | Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. | None | | --sort-by | text | Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. | None | | --variable-scope-id-in | text | Only include variable instances which belong to one of passed scope ids. | None | | --variable-values-ignore-case / --not-variable-values-ignore-case | boolean | Match all variable values provided in variableValues case-insensitively. If set to true variableValue and variablevalue are treated as equal. | None | | --variable-names-ignore-case / --not-variable-names-ignore-case | boolean | Match all variable names provided in variableValues case-insensitively. If set to true variableName and variablename are treated as equal. | None | | --variable-values | text | Only include variable instances that have the certain values. Value filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --tenant-id-in | text | Only include variable instances which belong to one of the passed and comma-separated tenant ids. | None | | --activity-instance-id-in | text | Only include variable instances which belong to one of the passed and comma-separated activity instance ids. | None | | --batch-id-in | text | Only include variable instances which belong to one of the passed and comma-separated batch ids. | None | | --task-id-in | text | Only include variable instances which belong to one of the passed and comma-separated task ids. | None | | --case-execution-id-in | text | Only include variable instances which belong to one of the passed and comma-separated case execution ids. | None | | --case-instance-id-in | text | Only include variable instances which belong to one of the passed and comma-separated case instance ids. | None | | --execution-id-in | text | Only include variable instances which belong to one of the passed and comma-separated execution ids. | None | | --process-instance-id-in | text | Only include variable instances which belong to one of the passed and comma-separated process instance ids. | None | | --variable-name-like | text | Filter by the variable instance name. The parameter can include the wildcard % to express like-strategy such as: starts with ( % name), ends with (name % ) or contains ( % name % ). | None | | --variable-name | text | Filter by variable instance name. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"variableInstances"},{"location":"commands/get/#cctlnbspget-variableinstancescount","text":"Get Variable Instance Count Query for the number of variable instances that fulfill given parameters. Takes the same parameters as the Get Variable Instances method. URL: /variable-instance/count Schema: - Usage: cctl&nbsp;get variableInstancesCount [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --query-extra text extra query parameters, not listed in openapi (format: PARAM=VALUE) None --sort-order text Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. None --sort-by text Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. None --variable-scope-id-in text Only include variable instances which belong to one of passed scope ids. None --variable-values-ignore-case / --not-variable-values-ignore-case boolean Match all variable values provided in variableValues case-insensitively. If set to true variableValue and variablevalue are treated as equal. None --variable-names-ignore-case / --not-variable-names-ignore-case boolean Match all variable names provided in variableValues case-insensitively. If set to true variableName and variablename are treated as equal. None --variable-values text Only include variable instances that have the certain values. Value filtering expressions are comma-separated and are structured as follows: A valid parameter value has the form key_operator_value . key is the variable name, operator is the comparison operator to be used and value the variable value. Note: Values are always treated as String objects on server side. Valid operator values are: eq - equal to; neq - not equal to; gt - greater than; gteq - greater than or equal to; lt - lower than; lteq - lower than or equal to; like . key and value may not contain underscore or comma characters. | None | | --tenant-id-in | text | Only include variable instances which belong to one of the passed and comma-separated tenant ids. | None | | --activity-instance-id-in | text | Only include variable instances which belong to one of the passed and comma-separated activity instance ids. | None | | --batch-id-in | text | Only include variable instances which belong to one of the passed and comma-separated batch ids. | None | | --task-id-in | text | Only include variable instances which belong to one of the passed and comma-separated task ids. | None | | --case-execution-id-in | text | Only include variable instances which belong to one of the passed and comma-separated case execution ids. | None | | --case-instance-id-in | text | Only include variable instances which belong to one of the passed and comma-separated case instance ids. | None | | --execution-id-in | text | Only include variable instances which belong to one of the passed and comma-separated execution ids. | None | | --process-instance-id-in | text | Only include variable instances which belong to one of the passed and comma-separated process instance ids. | None | | --variable-name-like | text | Filter by the variable instance name. The parameter can include the wildcard % to express like-strategy such as: starts with ( % name), ends with (name % ) or contains ( % name % ). | None | | --variable-name | text | Filter by variable instance name. | None | | -oF , --output-file | filename | output file | None | | -oT , --output-template | text | provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. | None | | -oJ , --output-jsonpath | text | jsonpath template | $ | | -oCL , --output-cell-limit | integer | limit cell value for table output (default=40) | 40 | | -oH , --output-header | text | comma seperated list of headers | None | | -o , --output | choice ( table | json | jsonpath | template | raw ) | N/A | table | | --help | boolean | Show this message and exit. | False |","title":"variableInstancesCount"},{"location":"commands/others/","text":"CLI Reference for other commands \u00b6 Config \u00b6 cctl config \u00b6 change engines configuration Usage: cctl&nbsp;config [OPTIONS] COMMAND [ARGS]... Options: Name Type Description Default --help boolean Show this message and exit. False cctl config add-alias \u00b6 Usage: cctl&nbsp;config add-alias [OPTIONS] COMMAND ALIAS Options: Name Type Description Default --traceback boolean do not hide traceback on error False --help boolean Show this message and exit. False cctl config add-engine \u00b6 Usage: cctl&nbsp;config add-engine [OPTIONS] NAME URL Options: Name Type Description Default -u , --user text Username for Basic Auth None -p , --password text Password for Basic Auth None -s , --select boolean directly select this context False --no-verify boolean do not verify ssl False --traceback boolean do not hide traceback on error False --help boolean Show this message and exit. False cctl config edit \u00b6 Usage: cctl&nbsp;config edit [OPTIONS] Options: Name Type Description Default -e , --editor text Specify the editor you want to use None --traceback boolean do not hide traceback on error False --help boolean Show this message and exit. False cctl config get-alias \u00b6 Usage: cctl&nbsp;config get-alias [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --help boolean Show this message and exit. False cctl config get-engines \u00b6 Usage: cctl&nbsp;config get-engines [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --help boolean Show this message and exit. False cctl config remove-alias \u00b6 Usage: cctl&nbsp;config remove-alias [OPTIONS] ALIAS Options: Name Type Description Default --traceback boolean do not hide traceback on error False --help boolean Show this message and exit. False cctl config remove-engine \u00b6 Usage: cctl&nbsp;config remove-engine [OPTIONS] NAME Options: Name Type Description Default --traceback boolean do not hide traceback on error False --help boolean Show this message and exit. False cctl config use-engine \u00b6 Usage: cctl&nbsp;config use-engine [OPTIONS] NAME Options: Name Type Description Default --traceback boolean do not hide traceback on error False --help boolean Show this message and exit. False Schema \u00b6 cctl schema \u00b6 Usage: cctl&nbsp;schema [OPTIONS] SCHEMA_NAME Options: Name Type Description Default -f , --format choice ( json | yaml ) N/A yaml --traceback boolean do not hide traceback on error False --help boolean Show this message and exit. False Info \u00b6 cctl info \u00b6 Usage: cctl&nbsp;info [OPTIONS] Options: Name Type Description Default -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"Other Commands"},{"location":"commands/others/#cli-reference-for-other-commands","text":"","title":"CLI Reference for other commands"},{"location":"commands/others/#config","text":"","title":"Config"},{"location":"commands/others/#cctlnbspconfig","text":"change engines configuration Usage: cctl&nbsp;config [OPTIONS] COMMAND [ARGS]... Options: Name Type Description Default --help boolean Show this message and exit. False","title":"cctl&nbsp;config"},{"location":"commands/others/#cctlnbspconfig-add-alias","text":"Usage: cctl&nbsp;config add-alias [OPTIONS] COMMAND ALIAS Options: Name Type Description Default --traceback boolean do not hide traceback on error False --help boolean Show this message and exit. False","title":"add-alias"},{"location":"commands/others/#cctlnbspconfig-add-engine","text":"Usage: cctl&nbsp;config add-engine [OPTIONS] NAME URL Options: Name Type Description Default -u , --user text Username for Basic Auth None -p , --password text Password for Basic Auth None -s , --select boolean directly select this context False --no-verify boolean do not verify ssl False --traceback boolean do not hide traceback on error False --help boolean Show this message and exit. False","title":"add-engine"},{"location":"commands/others/#cctlnbspconfig-edit","text":"Usage: cctl&nbsp;config edit [OPTIONS] Options: Name Type Description Default -e , --editor text Specify the editor you want to use None --traceback boolean do not hide traceback on error False --help boolean Show this message and exit. False","title":"edit"},{"location":"commands/others/#cctlnbspconfig-get-alias","text":"Usage: cctl&nbsp;config get-alias [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --help boolean Show this message and exit. False","title":"get-alias"},{"location":"commands/others/#cctlnbspconfig-get-engines","text":"Usage: cctl&nbsp;config get-engines [OPTIONS] Options: Name Type Description Default --traceback boolean do not hide traceback on error False --help boolean Show this message and exit. False","title":"get-engines"},{"location":"commands/others/#cctlnbspconfig-remove-alias","text":"Usage: cctl&nbsp;config remove-alias [OPTIONS] ALIAS Options: Name Type Description Default --traceback boolean do not hide traceback on error False --help boolean Show this message and exit. False","title":"remove-alias"},{"location":"commands/others/#cctlnbspconfig-remove-engine","text":"Usage: cctl&nbsp;config remove-engine [OPTIONS] NAME Options: Name Type Description Default --traceback boolean do not hide traceback on error False --help boolean Show this message and exit. False","title":"remove-engine"},{"location":"commands/others/#cctlnbspconfig-use-engine","text":"Usage: cctl&nbsp;config use-engine [OPTIONS] NAME Options: Name Type Description Default --traceback boolean do not hide traceback on error False --help boolean Show this message and exit. False","title":"use-engine"},{"location":"commands/others/#schema","text":"","title":"Schema"},{"location":"commands/others/#cctlnbspschema","text":"Usage: cctl&nbsp;schema [OPTIONS] SCHEMA_NAME Options: Name Type Description Default -f , --format choice ( json | yaml ) N/A yaml --traceback boolean do not hide traceback on error False --help boolean Show this message and exit. False","title":"cctl&nbsp;schema"},{"location":"commands/others/#info","text":"","title":"Info"},{"location":"commands/others/#cctlnbspinfo","text":"Usage: cctl&nbsp;info [OPTIONS] Options: Name Type Description Default -oT , --output-template text provide a template name (one of default, result-length) or provide a jinja2 template string that will be used. None -o , --output choice ( template ) N/A template --help boolean Show this message and exit. False","title":"cctl&nbsp;info"}]}